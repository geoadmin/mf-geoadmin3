{"version":3,"sources":["webpack://ol/webpack/universalModuleDefinition","webpack://ol/webpack/bootstrap","webpack://ol/./node_modules/rbush/index.js","webpack://ol/./node_modules/pbf/index.js","webpack://ol/./node_modules/pixelworks/lib/index.js","webpack://ol/./node_modules/ieee754/index.js","webpack://ol/./node_modules/quickselect/quickselect.js","webpack://ol/./node_modules/pixelworks/lib/processor.js","webpack://ol/./node_modules/pixelworks/lib/util.js","webpack://ol/./build/ol/util.js","webpack://ol/./build/ol/AssertionError.js","webpack://ol/./build/ol/CollectionEventType.js","webpack://ol/./build/ol/ObjectEventType.js","webpack://ol/./build/ol/obj.js","webpack://ol/./build/ol/events.js","webpack://ol/./build/ol/Disposable.js","webpack://ol/./build/ol/functions.js","webpack://ol/./build/ol/events/Event.js","webpack://ol/./build/ol/events/Target.js","webpack://ol/./build/ol/events/EventType.js","webpack://ol/./build/ol/Observable.js","webpack://ol/./build/ol/Object.js","webpack://ol/./build/ol/Collection.js","webpack://ol/./build/ol/asserts.js","webpack://ol/./build/ol/Feature.js","webpack://ol/./build/ol/array.js","webpack://ol/./build/ol/extent/Corner.js","webpack://ol/./build/ol/extent/Relationship.js","webpack://ol/./build/ol/extent.js","webpack://ol/./build/ol/geom/GeometryLayout.js","webpack://ol/./build/ol/geom/GeometryType.js","webpack://ol/./build/ol/geom/flat/transform.js","webpack://ol/./build/ol/math.js","webpack://ol/./build/ol/sphere.js","webpack://ol/./build/ol/proj/Units.js","webpack://ol/./build/ol/proj/Projection.js","webpack://ol/./build/ol/proj/epsg3857.js","webpack://ol/./build/ol/proj/epsg4326.js","webpack://ol/./build/ol/proj/projections.js","webpack://ol/./build/ol/proj/transforms.js","webpack://ol/./build/ol/proj.js","webpack://ol/./build/ol/transform.js","webpack://ol/./build/ol/geom/Geometry.js","webpack://ol/./build/ol/geom/SimpleGeometry.js","webpack://ol/./build/ol/geom/flat/area.js","webpack://ol/./build/ol/geom/flat/closest.js","webpack://ol/./build/ol/geom/flat/deflate.js","webpack://ol/./build/ol/geom/flat/inflate.js","webpack://ol/./build/ol/geom/flat/simplify.js","webpack://ol/./build/ol/geom/LinearRing.js","webpack://ol/./build/ol/geom/Point.js","webpack://ol/./build/ol/geom/flat/contains.js","webpack://ol/./build/ol/geom/flat/interiorpoint.js","webpack://ol/./build/ol/geom/flat/segments.js","webpack://ol/./build/ol/geom/flat/intersectsextent.js","webpack://ol/./build/ol/geom/flat/reverse.js","webpack://ol/./build/ol/geom/flat/orient.js","webpack://ol/./build/ol/geom/Polygon.js","webpack://ol/./build/ol/has.js","webpack://ol/./build/ol/Geolocation.js","webpack://ol/./build/ol/Kinetic.js","webpack://ol/./build/ol/MapEvent.js","webpack://ol/./build/ol/MapBrowserEvent.js","webpack://ol/./build/ol/MapBrowserEventType.js","webpack://ol/./build/ol/MapBrowserPointerEvent.js","webpack://ol/./build/ol/pointer/EventType.js","webpack://ol/./build/ol/pointer/EventSource.js","webpack://ol/./build/ol/pointer/MouseSource.js","webpack://ol/./build/ol/pointer/MsSource.js","webpack://ol/./build/ol/pointer/NativeSource.js","webpack://ol/./build/ol/pointer/PointerEvent.js","webpack://ol/./build/ol/pointer/TouchSource.js","webpack://ol/./build/ol/pointer/PointerEventHandler.js","webpack://ol/./build/ol/MapBrowserEventHandler.js","webpack://ol/./build/ol/MapEventType.js","webpack://ol/./build/ol/MapProperty.js","webpack://ol/./build/ol/render/EventType.js","webpack://ol/./build/ol/TileState.js","webpack://ol/./build/ol/structs/PriorityQueue.js","webpack://ol/./build/ol/TileQueue.js","webpack://ol/./build/ol/tilegrid/common.js","webpack://ol/./build/ol/centerconstraint.js","webpack://ol/./build/ol/resolutionconstraint.js","webpack://ol/./build/ol/rotationconstraint.js","webpack://ol/./build/ol/ViewHint.js","webpack://ol/./build/ol/ViewProperty.js","webpack://ol/./build/ol/string.js","webpack://ol/./build/ol/coordinate.js","webpack://ol/./build/ol/easing.js","webpack://ol/./build/ol/View.js","webpack://ol/./build/ol/dom.js","webpack://ol/./build/ol/layer/Property.js","webpack://ol/./build/ol/layer/Base.js","webpack://ol/./build/ol/source/State.js","webpack://ol/./build/ol/layer/Group.js","webpack://ol/./build/ol/size.js","webpack://ol/./build/ol/PluggableMap.js","webpack://ol/./build/ol/control/Control.js","webpack://ol/./build/ol/css.js","webpack://ol/./build/ol/layer/Layer.js","webpack://ol/./build/ol/control/Attribution.js","webpack://ol/./build/ol/control/Rotate.js","webpack://ol/./build/ol/control/Zoom.js","webpack://ol/./build/ol/control/util.js","webpack://ol/./build/ol/interaction/Property.js","webpack://ol/./build/ol/interaction/Interaction.js","webpack://ol/./build/ol/interaction/DoubleClickZoom.js","webpack://ol/./build/ol/events/condition.js","webpack://ol/./build/ol/interaction/Pointer.js","webpack://ol/./build/ol/interaction/DragPan.js","webpack://ol/./build/ol/interaction/DragRotate.js","webpack://ol/./build/ol/render/Box.js","webpack://ol/./build/ol/interaction/DragBox.js","webpack://ol/./build/ol/interaction/DragZoom.js","webpack://ol/./build/ol/events/KeyCode.js","webpack://ol/./build/ol/interaction/KeyboardPan.js","webpack://ol/./build/ol/interaction/KeyboardZoom.js","webpack://ol/./build/ol/interaction/MouseWheelZoom.js","webpack://ol/./build/ol/interaction/PinchRotate.js","webpack://ol/./build/ol/interaction/PinchZoom.js","webpack://ol/./build/ol/interaction.js","webpack://ol/./build/ol/render/Event.js","webpack://ol/./build/ol/color.js","webpack://ol/./build/ol/style/IconImageCache.js","webpack://ol/./build/ol/colorlike.js","webpack://ol/./build/ol/render/VectorContext.js","webpack://ol/./build/ol/structs/LRUCache.js","webpack://ol/./build/ol/render/canvas/LabelCache.js","webpack://ol/./build/ol/render/canvas.js","webpack://ol/./build/ol/render/canvas/Immediate.js","webpack://ol/./build/ol/render.js","webpack://ol/./build/ol/renderer/Map.js","webpack://ol/./build/ol/renderer/Composite.js","webpack://ol/./build/ol/Map.js","webpack://ol/./build/ol/OverlayPositioning.js","webpack://ol/./build/ol/Overlay.js","webpack://ol/./build/ol/format/FormatType.js","webpack://ol/./build/ol/featureloader.js","webpack://ol/./build/ol/loadingstrategy.js","webpack://ol/./build/ol/TileRange.js","webpack://ol/./build/ol/tilecoord.js","webpack://ol/./build/ol/tilegrid/TileGrid.js","webpack://ol/./build/ol/tilegrid.js","webpack://ol/./build/ol/webgl.js","webpack://ol/./build/ol/xml.js","webpack://ol/./build/ol/webgl/Buffer.js","webpack://ol/./build/ol/webgl/ContextEventType.js","webpack://ol/./build/ol/vec/mat4.js","webpack://ol/./build/ol/webgl/PostProcessingPass.js","webpack://ol/./build/ol/webgl/Helper.js","webpack://ol/./build/ol/tilegrid/WMTS.js","webpack://ol/./build/ol/ImageState.js","webpack://ol/./build/ol/style/Image.js","webpack://ol/./build/ol/style/RegularShape.js","webpack://ol/./build/ol/style/Circle.js","webpack://ol/./build/ol/style/Fill.js","webpack://ol/./build/ol/style/IconAnchorUnits.js","webpack://ol/./build/ol/style/IconImage.js","webpack://ol/./build/ol/style/IconOrigin.js","webpack://ol/./build/ol/style/Icon.js","webpack://ol/./build/ol/style/Stroke.js","webpack://ol/./build/ol/style/Style.js","webpack://ol/./build/ol/style/TextPlacement.js","webpack://ol/./build/ol/style/Text.js","webpack://ol/./build/ol/tileurlfunction.js","webpack://ol/./build/ol/net.js","webpack://ol/./build/ol/reproj/common.js","webpack://ol/./build/ol/Tile.js","webpack://ol/./build/ol/ImageTile.js","webpack://ol/./build/ol/TileCache.js","webpack://ol/./build/ol/reproj.js","webpack://ol/./build/ol/reproj/Triangulation.js","webpack://ol/./build/ol/reproj/Tile.js","webpack://ol/./build/ol/source/Source.js","webpack://ol/./build/ol/source/Tile.js","webpack://ol/./build/ol/source/TileEventType.js","webpack://ol/./build/ol/source/UrlTile.js","webpack://ol/./build/ol/source/TileImage.js","webpack://ol/./build/ol/source/BingMaps.js","webpack://ol/./build/ol/source/XYZ.js","webpack://ol/./build/ol/source/CartoDB.js","webpack://ol/./build/ol/source/VectorEventType.js","webpack://ol/./build/ol/structs/RBush.js","webpack://ol/./build/ol/source/Vector.js","webpack://ol/./build/ol/source/Cluster.js","webpack://ol/./build/ol/source/Zoomify.js","webpack://ol/./build/ol/format/IIIFInfo.js","webpack://ol/./build/ol/source/IIIF.js","webpack://ol/./build/ol/ImageBase.js","webpack://ol/./build/ol/reproj/Image.js","webpack://ol/./build/ol/source/Image.js","webpack://ol/./build/ol/Image.js","webpack://ol/./build/ol/uri.js","webpack://ol/./build/ol/source/ImageArcGISRest.js","webpack://ol/./build/ol/ImageCanvas.js","webpack://ol/./build/ol/source/ImageCanvas.js","webpack://ol/./build/ol/source/ImageMapGuide.js","webpack://ol/./build/ol/source/ImageStatic.js","webpack://ol/./build/ol/source/common.js","webpack://ol/./build/ol/source/WMSServerType.js","webpack://ol/./build/ol/source/ImageWMS.js","webpack://ol/./build/ol/source/OSM.js","webpack://ol/./build/ol/layer/BaseImage.js","webpack://ol/./build/ol/renderer/Layer.js","webpack://ol/./build/ol/renderer/canvas/Layer.js","webpack://ol/./build/ol/renderer/canvas/ImageLayer.js","webpack://ol/./build/ol/layer/Image.js","webpack://ol/./build/ol/layer/TileProperty.js","webpack://ol/./build/ol/layer/BaseTile.js","webpack://ol/./build/ol/renderer/canvas/TileLayer.js","webpack://ol/./build/ol/layer/Tile.js","webpack://ol/./build/ol/source/Raster.js","webpack://ol/./build/ol/source/Stamen.js","webpack://ol/./build/ol/source/TileArcGISRest.js","webpack://ol/./build/ol/source/TileDebug.js","webpack://ol/./build/ol/source/TileJSON.js","webpack://ol/./build/ol/source/TileWMS.js","webpack://ol/./build/ol/source/UTFGrid.js","webpack://ol/./build/ol/VectorRenderTile.js","webpack://ol/./build/ol/VectorTile.js","webpack://ol/./build/ol/source/VectorTile.js","webpack://ol/./build/ol/source/WMTSRequestEncoding.js","webpack://ol/./build/ol/source/WMTS.js","webpack://ol/./build/ol/renderer/webgl/PointsLayer.js","webpack://ol/./build/ol/render/canvas/Instruction.js","webpack://ol/./build/ol/render/canvas/Builder.js","webpack://ol/./build/ol/render/canvas/ImageBuilder.js","webpack://ol/./build/ol/render/canvas/LineStringBuilder.js","webpack://ol/./build/ol/render/canvas/PolygonBuilder.js","webpack://ol/./build/ol/geom/flat/straightchunk.js","webpack://ol/./build/ol/render/canvas/TextBuilder.js","webpack://ol/./build/ol/render/canvas/BuilderGroup.js","webpack://ol/./build/ol/render/canvas/BuilderType.js","webpack://ol/./build/ol/geom/flat/length.js","webpack://ol/./build/ol/geom/flat/textpath.js","webpack://ol/./build/ol/render/canvas/Executor.js","webpack://ol/./build/ol/render/canvas/ExecutorGroup.js","webpack://ol/./build/ol/renderer/vector.js","webpack://ol/./build/ol/renderer/canvas/VectorLayer.js","webpack://ol/./build/ol/layer/VectorTileRenderType.js","webpack://ol/./build/ol/renderer/canvas/VectorTileLayer.js","webpack://ol/./build/ol/layer/BaseVector.js","webpack://ol/./build/ol/layer/Vector.js","webpack://ol/./build/ol/geom/flat/interpolate.js","webpack://ol/./build/ol/geom/LineString.js","webpack://ol/./build/ol/geom/flat/geodesic.js","webpack://ol/./build/ol/layer/Graticule.js","webpack://ol/./build/ol/layer/Heatmap.js","webpack://ol/./build/ol/renderer/canvas/VectorImageLayer.js","webpack://ol/./build/ol/layer/VectorImage.js","webpack://ol/./build/ol/layer/VectorTile.js","webpack://ol/./build/ol/interaction/DragAndDrop.js","webpack://ol/./build/ol/interaction/DragRotateAndZoom.js","webpack://ol/./build/ol/geom/Circle.js","webpack://ol/./build/ol/geom/MultiLineString.js","webpack://ol/./build/ol/geom/MultiPoint.js","webpack://ol/./build/ol/geom/flat/center.js","webpack://ol/./build/ol/geom/MultiPolygon.js","webpack://ol/./build/ol/interaction/Draw.js","webpack://ol/./build/ol/interaction/Extent.js","webpack://ol/./build/ol/interaction/Modify.js","webpack://ol/./build/ol/interaction/Select.js","webpack://ol/./build/ol/interaction/Snap.js","webpack://ol/./build/ol/interaction/Translate.js","webpack://ol/./build/ol/geom/GeometryCollection.js","webpack://ol/./build/ol/format/Feature.js","webpack://ol/./build/ol/format/JSONFeature.js","webpack://ol/./build/ol/format/EsriJSON.js","webpack://ol/./build/ol/format/XMLFeature.js","webpack://ol/./build/ol/format/GMLBase.js","webpack://ol/./build/ol/format/xsd.js","webpack://ol/./build/ol/format/GML3.js","webpack://ol/./build/ol/format/GML.js","webpack://ol/./build/ol/format/GML2.js","webpack://ol/./build/ol/format/GML32.js","webpack://ol/./build/ol/format/GPX.js","webpack://ol/./build/ol/format/GeoJSON.js","webpack://ol/./build/ol/format/TextFeature.js","webpack://ol/./build/ol/format/KML.js","webpack://ol/./build/ol/format/IGC.js","webpack://ol/./build/ol/render/Feature.js","webpack://ol/./build/ol/format/MVT.js","webpack://ol/./build/ol/format/OSMXML.js","webpack://ol/./build/ol/geom/flat/flip.js","webpack://ol/./build/ol/format/Polyline.js","webpack://ol/./build/ol/format/TopoJSON.js","webpack://ol/./build/ol/format/filter/Filter.js","webpack://ol/./build/ol/format/filter/LogicalNary.js","webpack://ol/./build/ol/format/filter/And.js","webpack://ol/./build/ol/format/filter/Bbox.js","webpack://ol/./build/ol/format/filter/Spatial.js","webpack://ol/./build/ol/format/filter/Contains.js","webpack://ol/./build/ol/format/filter/Comparison.js","webpack://ol/./build/ol/format/filter/During.js","webpack://ol/./build/ol/format/filter/ComparisonBinary.js","webpack://ol/./build/ol/format/filter/EqualTo.js","webpack://ol/./build/ol/format/filter/GreaterThan.js","webpack://ol/./build/ol/format/filter/GreaterThanOrEqualTo.js","webpack://ol/./build/ol/format/filter/Intersects.js","webpack://ol/./build/ol/format/filter/IsBetween.js","webpack://ol/./build/ol/format/filter/IsLike.js","webpack://ol/./build/ol/format/filter/IsNull.js","webpack://ol/./build/ol/format/filter/LessThan.js","webpack://ol/./build/ol/format/filter/LessThanOrEqualTo.js","webpack://ol/./build/ol/format/filter/Not.js","webpack://ol/./build/ol/format/filter/NotEqualTo.js","webpack://ol/./build/ol/format/filter/Or.js","webpack://ol/./build/ol/format/filter/Within.js","webpack://ol/./build/ol/format/filter.js","webpack://ol/./build/ol/format/WFS.js","webpack://ol/./build/ol/format/WKT.js","webpack://ol/./build/ol/format/XLink.js","webpack://ol/./build/ol/format/XML.js","webpack://ol/./build/ol/format/WMSCapabilities.js","webpack://ol/./build/ol/format/WMSGetFeatureInfo.js","webpack://ol/./build/ol/format/OWS.js","webpack://ol/./build/ol/format/WMTSCapabilities.js","webpack://ol/./build/ol/control/FullScreen.js","webpack://ol/./build/ol/control/MousePosition.js","webpack://ol/./build/ol/control/OverviewMap.js","webpack://ol/./build/ol/control/ScaleLine.js","webpack://ol/./build/ol/control/ZoomSlider.js","webpack://ol/./build/ol/control/ZoomToExtent.js","webpack://ol/./build/index.js","webpack://ol/./build/ol/proj/proj4.js"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","rbush","default","quickselect","maxEntries","format","this","_maxEntries","Math","max","_minEntries","ceil","_initFormat","clear","findItem","item","items","equalsFn","indexOf","length","calcBBox","node","toBBox","distBBox","children","k","destNode","createNode","minX","Infinity","minY","maxX","maxY","child","extend","leaf","a","b","min","compareNodeMinX","compareNodeMinY","bboxArea","bboxMargin","contains","intersects","height","multiSelect","arr","left","right","compare","mid","stack","pop","push","all","_all","data","search","bbox","result","len","childBBox","nodesToSearch","collides","load","insert","_build","slice","_splitRoot","tmpNode","_insert","remove","parent","index","goingUp","path","indexes","splice","_condense","compareMinX","compareMinY","toJSON","fromJSON","apply","N","M","log","pow","j","right2","right3","N2","N1","sqrt","_chooseSubtree","level","targetNode","area","enlargement","minArea","minEnlargement","isNode","insertPath","_split","_adjustParentBBoxes","_chooseSplitAxis","splitIndex","_chooseSplitIndex","newNode","bbox1","bbox2","overlap","minOverlap","_allDistMargin","sort","leftBBox","rightBBox","margin","siblings","compareArr","Function","join","Pbf","ieee754","buf","ArrayBuffer","isView","Uint8Array","pos","type","Varint","Fixed64","Bytes","Fixed32","readPackedEnd","pbf","readVarint","toNum","low","high","isSigned","makeRoomForExtraLength","startPos","extraLen","floor","LN2","realloc","writePackedVarint","writeVarint","writePackedSVarint","writeSVarint","writePackedFloat","writeFloat","writePackedDouble","writeDouble","writePackedBoolean","writeBoolean","writePackedFixed32","writeFixed32","writePackedSFixed32","writeSFixed32","writePackedFixed64","writeFixed64","writePackedSFixed64","writeSFixed64","readUInt32","writeInt32","val","readInt32","destroy","readFields","readField","end","tag","skip","readMessage","readFixed32","readSFixed32","readFixed64","readSFixed64","readFloat","read","readDouble","h","Error","readVarintRemainder","readVarint64","readSVarint","num","readBoolean","Boolean","readString","str","b1","b2","b3","b0","bytesPerSequence","String","fromCharCode","readUtf8","readBytes","buffer","subarray","readPackedVarint","readPackedSVarint","readPackedBoolean","readPackedFloat","readPackedDouble","readPackedFixed32","readPackedSFixed32","readPackedFixed64","readPackedSFixed64","writeTag","set","finish","writeBigVarintLow","lsb","writeBigVarintHigh","writeBigVarint","writeString","lead","charCodeAt","writeUtf8","write","writeBytes","writeRawMessage","fn","obj","writeMessage","writeBytesField","writeFixed32Field","writeSFixed32Field","writeFixed64Field","writeSFixed64Field","writeVarintField","writeSVarintField","writeStringField","writeFloatField","writeDoubleField","writeBooleanField","Processor","offset","isLE","mLen","nBytes","e","eLen","eMax","eBias","nBits","NaN","rt","abs","isNaN","swap","tmp","defaultCompare","quickselectStep","z","exp","sd","newLeft","newRight","newImageData","createMinion","operation","workerHasImageData","ImageData","_","newWorkerImageData","width","output","buffers","meta","imageOps","numBuffers","numBytes","byteLength","images","Array","Uint8ClampedArray","arrays","pixels","array","pixel","createWorker","config","onMessage","lines","keys","lib","map","toString","concat","blob","Blob","source","URL","createObjectURL","worker","Worker","addEventListener","threads","_imageOps","workers","_onWorkerMessage","minion","postMessage","setTimeout","createFauxWorker","_workers","_queue","_maxQueueLength","queue","_running","_dataLookup","_job","process","inputs","callback","_enqueue","_dispatch","_destroyed","job","shift","input","segmentLength","slices","jj","event","_resolveJob","hasImageData","context","document","createElement","getContext","imageData","createImageData","util_abstract","uidCounter_","getUid","ol_uid","extendStatics","VERSION","__extends","setPrototypeOf","__proto__","__","constructor","ol_AssertionError","_super","AssertionError","code","_this","message","split","CollectionEventType","ADD","REMOVE","ObjectEventType","obj_assign","assign","target","var_sources","TypeError","ii","arguments","getValues","values","isEmpty","findListener","listeners","listener","opt_this","opt_setDeleteIndex","listenerObj","bindTo","deleteIndex","getListeners","listenerMap","getListenerMap","undefined","opt_create","ol_lm","removeListeners","removeEventListener","boundListener","removeListenerMap","listen","opt_once","callOnce","evt","unlistenByKey","bindListener","listenOnce","unlisten","unlistenAll","ol_Disposable","Disposable","disposed_","dispose","disposeInternal","TRUE","FALSE","VOID","stopPropagation","events_Event","Event","propagationStopped","preventDefault","Target_extends","events_Target","Target","pendingRemovals_","dispatching_","listeners_","dispatchEvent","propagate","pendingRemovals","hasListener","opt_type","EventType","CHANGE","CLEAR","CONTEXTMENU","CLICK","DBLCLICK","DRAGENTER","DRAGOVER","DROP","ERROR","KEYDOWN","KEYPRESS","LOAD","MOUSEDOWN","MOUSEMOVE","MOUSEOUT","MOUSEUP","MOUSEWHEEL","MSPOINTERDOWN","RESIZE","TOUCHSTART","TOUCHMOVE","TOUCHEND","WHEEL","Observable_extends","ol_Observable","Observable","revision_","changed","getRevision","on","isArray","once","un","Object_extends","ObjectEvent","oldValue","Object_BaseObject","BaseObject","opt_values","values_","setProperties","getKeys","getProperties","notify","eventType","getChangeEventType","opt_silent","unset","changeEventTypeCache","ol_Object","Collection_extends","Property","CollectionEvent","opt_element","opt_index","element","ol_Collection","Collection","opt_array","opt_options","options","unique_","unique","array_","assertUnique_","updateLength_","getLength","forEach","f","getArray","insertAt","elem","removeAt","prev","setAt","opt_except","assert","assertion","errorCode","Feature_extends","ol_Feature","Feature","opt_geometryOrProperties","id_","geometryName_","style_","styleFunction_","geometryChangeKey_","handleGeometryChanged_","getSimplifiedGeometry","geometry","setGeometry","properties","clone","setGeometryName","getGeometryName","getGeometry","style","getStyle","setStyle","getId","getStyleFunction","handleGeometryChange_","styles_1","getZIndex","createStyleFunction","setId","id","numberSafeCompareFunction","includes","linearFindNearest","direction","reverseSubArray","begin","extension","find","func","equals","arr1","arr2","len1","findIndex","every","el","idx","Corner","BOTTOM_LEFT","BOTTOM_RIGHT","TOP_LEFT","TOP_RIGHT","Relationship","UNKNOWN","INTERSECTING","ABOVE","RIGHT","BELOW","LEFT","boundingExtent","coordinates","extent","createEmpty","extendCoordinate","extent_buffer","opt_extent","closestSquaredDistanceXY","x","y","dx","dy","containsCoordinate","coordinate","containsXY","containsExtent","extent1","extent2","coordinateRelationship","relationship","createOrUpdate","createOrUpdateEmpty","createOrUpdateFromCoordinate","createOrUpdateFromFlatCoordinates","flatCoordinates","stride","extendFlatCoordinates","extent_equals","extent_extend","extendCoordinates","extendXY","forEachCorner","getBottomLeft","getBottomRight","getTopRight","getTopLeft","getArea","extent_isEmpty","getWidth","getHeight","getCenter","getCorner","corner","getForViewAndSize","center","resolution","rotation","size","cosRotation","cos","sinRotation","sin","xCos","xSin","yCos","ySin","x0","x1","x2","x3","y0","y1","y2","y3","getIntersection","intersection","extent_intersects","scaleFromCenter","deltaX","deltaY","applyTransform","transformFn","xs","ys","_boundingExtentXYs","GeometryLayout","XY","XYZ","XYM","XYZM","GeometryType","POINT","LINE_STRING","LINEAR_RING","POLYGON","MULTI_POINT","MULTI_LINE_STRING","MULTI_POLYGON","GEOMETRY_COLLECTION","CIRCLE","transform2D","transform","opt_dest","dest","rotate","angle","anchor","anchorX","anchorY","transform_translate","clamp","cosh","squaredSegmentDistance","math_squaredDistance","toDegrees","angleInRadians","PI","toRadians","angleInDegrees","modulo","lerp","DEFAULT_RADIUS","getDistance","c1","c2","opt_radius","radius","lat1","lat2","deltaLatBy2","deltaLonBy2","atan2","getLengthInternal","getAreaInternal","sphere_offset","distance","bearing","lon1","dByR","lat","asin","Units","DEGREES","FEET","METERS","PIXELS","TILE_PIXELS","USFEET","METERS_PER_UNIT","proj_Units","proj_Projection","Projection","code_","units_","extent_","worldExtent_","worldExtent","axisOrientation_","axisOrientation","global_","global","canWrapX_","getPointResolutionFunc_","getPointResolution","defaultTileGrid_","metersPerUnit_","metersPerUnit","canWrapX","getCode","getExtent","getUnits","getMetersPerUnit","getWorldExtent","getAxisOrientation","isGlobal","setGlobal","getDefaultTileGrid","setDefaultTileGrid","tileGrid","setExtent","setWorldExtent","setGetPointResolution","getPointResolutionFunc","epsg3857_extends","RADIUS","HALF_SIZE","EXTENT","WORLD_EXTENT","epsg3857_EPSG3857Projection","EPSG3857Projection","units","point","PROJECTIONS","fromEPSG4326","opt_output","opt_dimension","dimension","halfSize","tan","toEPSG4326","atan","epsg4326_extends","epsg4326_EXTENT","epsg4326_METERS_PER_UNIT","epsg4326_EPSG4326Projection","EPSG4326Projection","opt_axisOrientation","epsg4326_PROJECTIONS","projections_cache","projections2","forwardTransform","inverseTransform","transforms","transforms_add","destination","sourceCode","destinationCode","transforms_get","cloneTransform","identityTransform","addProjection","projection","projections_add","proj_get","projectionLike","opt_units","pointResolution","toEPSG4326_1","getTransformFromProjections","vertices","addEquivalentProjections","projections","addProjections","createProjection","defaultCode","createTransformFromCoordinateTransform","coordTransform","addCoordinateTransforms","forward","inverse","sourceProj","destProj","equivalent","projection1","projection2","equalUnits","sourceProjection","destinationProjection","transformFunc","getTransform","proj_transform","transformExtent","tmp_","transform_reset","transform_set","multiply","transform1","transform2","a1","d1","e1","f1","a2","d2","e2","f2","transform_rotate","ol_transform_scale","makeScale","ol_transform_translate","compose","dx1","dy1","sx","sy","dx2","dy2","makeInverse","mat","det","transform_toString","Geometry_extends","tmpTransform","geom_Geometry","Geometry","extentRevision_","simplifiedGeometryCache","simplifiedGeometryMaxMinSquaredTolerance","simplifiedGeometryRevision","closestPointXY","closestPoint","minSquaredDistance","coord","getClosestPoint","opt_closestPoint","intersectsCoordinate","computeExtent","returnOrUpdate","scale","opt_sy","opt_anchor","simplify","tolerance","squaredTolerance","getType","intersectsExtent","translate","inCoordinates","outCoordinates","pixelExtent","projectedExtent","SimpleGeometry_extends","getStrideForLayout","layout","geom_SimpleGeometry","SimpleGeometry","getCoordinates","getFirstCoordinate","getFlatCoordinates","getLastCoordinate","getLayout","simplifiedGeometry","getSimplifiedGeometryInternal","getStride","setFlatCoordinates","setCoordinates","opt_layout","setLayout","nesting","getLayoutForStride","transform_scale","area_linearRing","twiceArea","area_linearRings","ends","assignClosest","offset1","offset2","maxSquaredDelta","squaredDelta","arrayMaxSquaredDelta","assignClosestPoint","maxDelta","isRing","opt_tmpPoint","squaredDistance","tmpPoint","assignClosestArrayPoint","deflateCoordinate","deflateCoordinates","deflateCoordinatesArray","coordinatess","opt_ends","inflateCoordinates","opt_coordinates","inflateCoordinatesArray","opt_coordinatess","inflateMultiCoordinatesArray","endss","opt_coordinatesss","coordinatesss","douglasPeucker","simplifiedFlatCoordinates","simplifiedOffset","markers","last","first","maxSquaredDistance","squaredDistance_1","douglasPeuckerArray","simplifiedEnds","snap","round","quantize","quantizeArray","LinearRing_extends","geom_LinearRing","LinearRing","maxDelta_","maxDeltaRevision_","Point_extends","geom_Point","Point","linearRingContainsExtent","linearRingContainsXY","wn","linearRingsContainsXY","getInteriorPointOfArray","flatCenters","flatCentersOffset","intersections","rr","pointX","maxSegmentLength","getInteriorPointsOfMultiArray","interiorPoints","ret","point1","point2","intersectsLineString","coordinatesExtent","start","startRel","endRel","startX","startY","endX","endY","slope","intersectsSegment","intersectsLinearRingArray","intersectsLinearRing","reverse_coordinates","linearRingIsClockwise","edge","linearRingsAreOriented","opt_right","isClockwise","orientLinearRings","orientLinearRingsArray","Polygon_extends","Polygon_Polygon","Polygon","ends_","flatInteriorPointRevision_","flatInteriorPoint_","orientedRevision_","orientedFlatCoordinates_","appendLinearRing","linearRing","getOrientedFlatCoordinates","getEnds","getFlatInteriorPoint","flatCenter","getInteriorPoint","getLinearRingCount","getLinearRing","getLinearRings","linearRings","geom_Polygon","circular","opt_n","opt_sphereRadius","fromExtent","fromCircle","circle","opt_sides","opt_angle","sides","arrayLength","polygon","makeRegular","getRadius","startAngle","ua","navigator","userAgent","toLowerCase","FIREFOX","SAFARI","WEBKIT","MAC","DEVICE_PIXEL_RATIO","devicePixelRatio","GEOLOCATION","TOUCH","POINTER","MSPOINTER","Geolocation_extends","Geolocation_Property","ACCURACY","ACCURACY_GEOMETRY","ALTITUDE","ALTITUDE_ACCURACY","HEADING","POSITION","PROJECTION","SPEED","TRACKING","TRACKING_OPTIONS","Geolocation_GeolocationError","GeolocationError","error","ol_Geolocation","Geolocation","position_","transform_","watchId_","handleProjectionChanged_","handleTrackingChanged_","setProjection","trackingOptions","setTrackingOptions","setTracking","tracking","getProjection","getTracking","geolocation","watchPosition","positionChange_","positionError_","getTrackingOptions","clearWatch","position","coords","accuracy","altitude","altitudeAccuracy","heading","longitude","latitude","projectedPosition","speed","getAccuracy","getAccuracyGeometry","getAltitude","getAltitudeAccuracy","getHeading","getPosition","getSpeed","ol_Kinetic","Kinetic","decay","minVelocity","delay","decay_","minVelocity_","delay_","points_","angle_","initialVelocity_","update","Date","now","lastIndex","firstIndex","duration","getAngle","MapEvent_extends","ol_MapEvent","MapEvent","opt_frameState","frameState","MapBrowserEvent_extends","ol_MapBrowserEvent","MapBrowserEvent","browserEvent","opt_dragging","originalEvent","getEventPixel","getCoordinateFromPixel","dragging","MapBrowserEventType","SINGLECLICK","POINTERDRAG","POINTERMOVE","POINTERDOWN","POINTERUP","POINTEROVER","POINTEROUT","POINTERENTER","POINTERLEAVE","POINTERCANCEL","MapBrowserPointerEvent_extends","ol_MapBrowserPointerEvent","MapBrowserPointerEvent","pointerEvent","pointer_EventType","pointer_EventSource","EventSource","dispatcher","mapping","mapping_","getEvents","getHandlerForEvent","MouseSource_extends","POINTER_ID","POINTER_TYPE","mousedown","inEvent","isEventSimulatedFromTouch_","pointerMap","cancel","prepareEvent","down","mousemove","move","mouseup","button","up","cleanupMouse","mouseover","enterOver","mouseout","leaveOut","cloneEvent","pd","pointerId","isPrimary","pointerType","pointer_MouseSource","MouseSource","lastTouches","lts","clientX","clientY","MsSource_extends","POINTER_TYPES","msPointerDown","prepareEvent_","msPointerMove","msPointerUp","cleanup","msPointerOut","msPointerOver","msPointerCancel","msLostPointerCapture","makeEvent","msGotPointerCapture","pointer_MsSource","MsSource","MSPointerDown","MSPointerMove","MSPointerUp","MSPointerOut","MSPointerOver","MSPointerCancel","MSGotPointerCapture","MSLostPointerCapture","NativeSource_extends","pointerDown","fireNativeEvent","pointerMove","pointerUp","pointerOut","pointerOver","pointerCancel","lostPointerCapture","gotPointerCapture","pointer_NativeSource","NativeSource","pointerdown","pointermove","pointerup","pointerout","pointerover","pointercancel","gotpointercapture","lostpointercapture","PointerEvent_extends","HAS_BUTTONS","PointerEvent","opt_eventDict","eventDict","buttons","which","getButtons","pressure","getPressure","bubbles","cancelable","view","detail","screenX","screenY","ctrlKey","altKey","shiftKey","metaKey","relatedTarget","tiltX","tiltY","hwTimestamp","ev","MouseEvent","pointer_PointerEvent","TouchSource_extends","touchstart","vacuumTouches_","setPrimaryTouch_","changedTouches","dedupSynthMouse_","clickCount_","processTouches_","overDown_","touchmove","moveOverOut_","touchend","upOut_","touchcancel","cancelOut_","pointer_TouchSource","TouchSource","mouseSource","firstTouchId_","resetId_","dedupTimeout_","isPrimaryTouch_","inTouch","identifier","count","cancelResetClickCount_","removePrimaryPointer_","inPointer","resetClickCount_","resetClickCountHandler_","clearTimeout","touchToPointer_","radiusX","radiusY","force","inFunction","touches","pointer","findTouch_","touchList","searchId","Number","out","outTarget","over","enter","outEvent","leave","cleanUpPointer_","lt_1","PointerEventHandler_extends","CLONE_PROPS","pointer_PointerEventHandler","PointerEventHandler","element_","eventMap_","eventSourceList_","registerSources","registerSource","register_","newEvents","handler","eventSource","addEvents_","unregister_","removeEvents_","eventHandler_","events","eventName","eventCopy","fireEvent","contains_","container","contained","inType","wrapMouseEvent","MapBrowserEventHandler_extends","ol_MapBrowserEventHandler","MapBrowserEventHandler","moveTolerance","map_","clickTimeoutId_","dragging_","dragListenerKeys_","moveTolerance_","down_","getViewport","activePointers_","trackedTouches_","pointerEventHandler_","documentPointerEventHandler_","pointerdownListenerKey_","handlePointerDown_","relayedListenerKey_","relayEvent_","emulateClick_","newEvent","updateActivePointers_","handlePointerUp_","isMouseActionButton_","handlePointerMove_","isMoving_","MapEventType","MapProperty","LAYERGROUP","SIZE","TARGET","VIEW","render_EventType","TileState","IDLE","LOADING","LOADED","EMPTY","ABORT","structs_PriorityQueue","PriorityQueue","priorityFunction","keyFunction","priorityFunction_","keyFunction_","elements_","priorities_","queuedElements_","dequeue","elements","priorities","siftUp_","elementKey","enqueue","priority","siftDown_","getCount","getLeftChildIndex_","getRightChildIndex_","getParentIndex_","heapify_","isKeyQueued","isQueued","startIndex","lIndex","rIndex","smallerChildIndex","parentIndex","reprioritize","TileQueue_extends","ol_TileQueue","TileQueue","tilePriorityFunction","tileChangeCallback","getKey","tileChangeCallback_","tilesLoading_","tilesLoadingKeys_","added","handleTileChange","getTilesLoading","tile","state","getState","hifi","tileKey","loadMoreTiles","maxTotalLoading","maxNewLoads","newLoads","abortedTiles","DEFAULT_MAX_ZOOM","DEFAULT_TILE_SIZE","none","getViewportClampedResolution","maxExtent","viewportSize","xResolution","yResolution","getSmoothClampedResolution","maxResolution","minResolution","createMinMaxResolution","opt_smooth","opt_maxExtent","opt_isMoving","cappedMaxRes","disable","rotationconstraint_none","ViewHint","ViewProperty","padNumber","number","opt_precision","numberString","toFixed","decimal","compareVersions","v1","v2","s1","s2","n1","parseInt","n2","coordinate_add","delta","closestOnSegment","segment","along","degreesToStringHDMS","hemispheres","degrees","opt_fractionDigits","normalizedDegrees","dflPrecision","precision","deg","sec","charAt","coordinate_format","template","replace","coordinate_equals","coordinate1","coordinate2","coordinate_rotate","cosAngle","sinAngle","coordinate_scale","coordinate_squaredDistance","coord1","coord2","coordinate_distance","squaredDistanceToSegment","toStringXY","easeIn","easeOut","inAndOut","linear","View_extends","DEFAULT_MIN_ZOOM","animationCallback","returnValue","isNoopAnimation","animation","sourceCenter","targetCenter","sourceResolution","targetResolution","sourceRotation","targetRotation","ol_View","View","hints_","animations_","updateAnimationKey_","projection_","targetCenter_","targetResolution_","targetRotation_","applyOptions_","resolutionConstraintInfo","resolutionConstraint","minZoom","maxZoom","zoomFactor","multiWorld","smooth","smoothResolutionConstraint","resolutions","constrainResolution","capped","createSnapToResolutions","constrainOnlyCenter","defaultMaxResolution","defaultMinResolution","power","opt_minResolution","zoomLevel","createSnapToPower","extent_1","constraint","createResolutionConstraint","maxResolution_","minResolution_","zoomFactor_","resolutions_","minZoom_","centerConstraint","onlyCenter","smoothExtentConstraint","viewWidth","viewHeight","ratio","createCenterConstraint","rotationConstraint","enableRotation","constrainRotation","opt_tolerance","theta","createRotationConstraint","constraints_","setRotation","setCenter","setResolution","zoom","setZoom","resolveConstraints","options_","getUpdatedOptions_","newOptions","getResolution","getZoom","getRotation","animate","var_args","isDef","getAnimating","animate_","animationCount","series","complete","easing","getResolutionForZoom","setHint","updateAnimations_","getInteracting","cancelAnimations","cancelAnimationFrame","more","seriesComplete","elapsed","fraction","progress","getSizeFromViewport_","constrainedResolution","calculateCenterZoom","applyTargetState_","constrainedRotation","calculateCenterRotate","filter","requestAnimationFrame","currentCenter","currentResolution","opt_rotation","selector","querySelector","metrics","getComputedStyle","w","getConstraints","getHints","opt_hints","calculateExtent","opt_size","getMaxResolution","getMinResolution","getMaxZoom","getZoomForResolution","setMaxZoom","getMinZoom","setMinZoom","setConstrainResolution","enabled","getResolutions","getResolutionForExtent","getResolutionForValueFunction","opt_power","getValueForResolutionFunction","pixelRatio","nearest","baseLevel","fit","geometryOrExtent","padding","minRotX","minRotY","maxRotX","maxRotY","rotX","rotY","getConstrainedResolution","centerRotX","centerRotY","getConstrainedCenter","centerOn","centerX","centerY","adjustCenter","deltaCoordinates","adjustResolution","isMoving","newResolution","adjustZoom","adjustRotation","newRotation","hint","opt_doNotCancelAnims","opt_forceMoving","newCenter","opt_duration","opt_resolutionDirection","beginInteraction","endInteraction","opt_targetResolution","getConstrainedZoom","targetZoom","opt_direction","targetRes","createCanvasContext2D","opt_width","opt_height","canvas","dom_outerWidth","offsetWidth","marginLeft","marginRight","dom_outerHeight","offsetHeight","marginTop","marginBottom","replaceNode","oldNode","parentNode","replaceChild","removeNode","removeChild","removeChildren","lastChild","layer_Property","OPACITY","VISIBLE","Z_INDEX","MAX_RESOLUTION","MIN_RESOLUTION","SOURCE","Base_extends","Base","BaseLayer","opacity","visible","zIndex","className_","className","state_","getClassName","getLayerState","opt_managed","layer","managed","getOpacity","sourceState","getSourceState","getVisible","getLayersArray","getLayerStatesArray","opt_states","setMaxResolution","setMinResolution","setOpacity","setVisible","setZIndex","zindex","State","UNDEFINED","READY","Group_extends","Group_Property","LAYERS","Group","LayerGroup","baseOptions","layers","layersListenerKeys_","listenerKeys_","handleLayersChanged_","setLayers","handleLayerChange_","getLayers","handleLayersAdd_","handleLayersRemove_","layersArray","collectionEvent","states","ownLayerState","layerState","size_buffer","size_scale","toSize","PluggableMap_extends","ol_PluggableMap","PluggableMap","optionsInternal","keyboardEventTarget","getElementById","controls","interactions","overlays","layerGroup","createOptionsInternal","maxTilesLoading_","maxTilesLoading","pixelRatio_","animationDelayKey_","animationDelay_","renderFrame_","coordinateToPixelTransform_","pixelToCoordinateTransform_","frameIndex_","frameState_","previousExtent_","viewPropertyListenerKey_","viewChangeListenerKey_","layerGroupPropertyListenerKeys_","viewport_","overflow","msTouchAction","touchAction","overlayContainer_","appendChild","overlayContainerStopEvent_","mapBrowserEventHandler_","handleMapBrowserEvent","keyboardEventTarget_","keyHandlerKeys_","handleBrowserEvent","overlays_","overlayIdIndex_","renderer_","createRenderer","handleResize_","focus_","postRenderFunctions_","tileQueue_","getTilePriority","handleTileChange_","skippedFeatureUids_","handleLayerGroupChanged_","handleViewChanged_","handleSizeChanged_","handleTargetChanged_","control","setMap","interaction","addOverlayInternal_","addControl","getControls","addInteraction","getInteractions","addLayer","getLayerGroup","addOverlay","overlay","getOverlays","setTarget","forEachFeatureAtPixel","hitTolerance","layerFilter","forEachFeatureAtCoordinate","getFeaturesAtPixel","features","feature","forEachLayerAtPixel","hasFeatureAtPixel","hasFeatureAtCoordinate","getEventCoordinate","viewportPosition","getBoundingClientRect","eventPosition","top","getTarget","getTargetElement","pixelToCoordinateTransform","getOverlayById","getPixelFromCoordinate","coordinateToPixelTransform","getRenderer","getSize","getView","getOverlayContainer","getOverlayContainerStopEvent","tileSourceKey","tileCenter","tileResolution","wantedTiles","focus","mapBrowserEvent","HTMLElement","parentElement","interactionsArray","getActive","handleEvent","handlePostRender","tileQueue","hints","viewHints","lowOnFrameBudget","time","getLoading","getSource","loading","dispatchRenderEvent","postRenderFunctions","render","targetElement","updateSize","removeLayerRenderers","handleViewPropertyChanged_","setAttribute","isRendered","renderSync","removeControl","removeInteraction","removeLayer","removeOverlay","viewState","previousFrameState","hasArea","declutterItems","layerStatesArray","skippedFeatureUids","usedTiles","renderFrame","setLayerGroup","setSize","setView","skipFeature","computedStyle","parseFloat","unskipFeature","cache","Control_extends","control_Control","Control","target_","listenerKeys","getMap","CLASS_HIDDEN","CLASS_SELECTABLE","CLASS_UNSELECTABLE","CLASS_UNSUPPORTED","CLASS_CONTROL","CLASS_COLLAPSED","getFontFamilies","font","family","fontFamily","Layer_extends","visibleAtResolution","layer_Layer","Layer","mapPrecomposeKey_","mapRenderKey_","sourceChangeKey_","handleSourcePropertyChange_","setSource","handleSourceChange_","layerRenderer","prepareFrame","Attribution_extends","Attribution_render","mapEvent","updateElement_","control_Attribution","Attribution","ulElement_","collapsed_","collapsed","overrideCollapsible_","collapsible","collapsible_","tipLabel","collapseLabel","collapseLabel_","textContent","label","label_","activeLabel","title","handleClick_","cssClasses","renderedAttributions_","renderedVisible_","collectSourceAttributions_","lookup","visibleAttributions","attributionGetter","getAttributions","attributions","getAttributionsCollapsible","setCollapsible","display","innerHTML","handleToggle_","classList","toggle","getCollapsible","setCollapsed","getCollapsed","Rotate_extends","Rotate_render","rotation_","autoHide_","add","control_Rotate","Rotate","callResetNorth_","resetNorth","duration_","autoHide","resetNorth_","Zoom_extends","control_Zoom","Zoom","zoomInLabel","zoomOutLabel","zoomInTipLabel","zoomOutTipLabel","inElement","createTextNode","outElement","zoomByDelta_","currentZoom","newZoom","defaults","zoomOptions","rotateOptions","attribution","attributionOptions","interaction_Property","ACTIVE","Interaction_extends","zoomByDelta","interaction_Interaction","Interaction","setActive","active","DoubleClickZoom_extends","stopEvent","delta_","interaction_DoubleClickZoom","DoubleClickZoom","altKeyOnly","altShiftKeysOnly","condition_focus","activeElement","always","mouseActionButton","never","condition_pointerMove","singleClick","noModifierKeys","shiftKeyOnly","targetNotEditable","tagName","mouseOnly","primaryAction","Pointer_extends","Pointer_centroid","pointerEvents","Pointer","PointerInteraction","handleDownEvent","handleDragEvent","handleMoveEvent","handleUpEvent","stopDown","handlingDownUpSequence","trackedPointers_","targetPointers","updateTrackedPointers_","handledUp","handled","isPointerDraggingEvent","event_1","DragPan_extends","interaction_DragPan","DragPan","kinetic_","kinetic","lastCentroid","lastPointersCount_","panning_","condition_","condition","noKinetic_","centroid","centerpx","DragRotate_extends","interaction_DragRotate","DragRotate","lastAngle_","Box_extends","Box","RenderBox","geometry_","startPixel_","endPixel_","render_","startPixel","endPixel","setPixels","createOrUpdateGeometry","DragBox_extends","DragBoxEventType","DragBoxEvent","interaction_DragBox","DragBox","box_","minArea_","onBoxEnd_","onBoxEnd","boxEndCondition_","boxEndCondition","defaultBoxEndCondition","DragZoom_extends","out_","mapExtent","boxPixelExtent","interaction_DragZoom","DragZoom","KeyCode","UP","DOWN","KeyboardPan_extends","KeyboardPan_handleEvent","keyCode","mapUnitsDelta","pixelDelta_","pan","interaction_KeyboardPan","KeyboardPan","defaultCondition_","pixelDelta","KeyboardZoom_extends","KeyboardZoom_handleEvent","charCode","interaction_KeyboardZoom","KeyboardZoom","MouseWheelZoom_extends","Mode","interaction_MouseWheelZoom","MouseWheelZoom","totalDelta_","lastDelta_","timeout_","timeout","useAnchor_","useAnchor","lastAnchor_","startTime_","timeoutId_","mode_","trackpadEventGap_","trackpadTimeoutId_","trackpadDeltaPerZoom_","endInteraction_","sign","wheelEvent","deltaMode","WheelEvent","DOM_DELTA_PIXEL","DOM_DELTA_LINE","wheelDeltaY","timeLeft","handleWheelZoom_","setMouseAnchor","PinchRotate_extends","interaction_PinchRotate","PinchRotate","pointerOptions","anchor_","rotating_","rotationDelta_","threshold_","threshold","rotationDelta","touch0","touch1","PinchZoom_extends","interaction_PinchZoom","PinchZoom","lastDistance_","lastScaleDelta_","scaleDelta","interaction_defaults","altShiftDragRotate","doubleClickZoom","zoomDelta","zoomDuration","dragPan","onFocusOnly","pinchRotate","pinchZoom","keyboard","mouseWheelZoom","shiftDragZoom","Event_extends","render_Event","RenderEvent","opt_inversePixelTransform","opt_context","opt_glContext","inversePixelTransform","glContext","HEX_COLOR_RE_","NAMED_COLOR_RE_","asString","color","color_toString","fromString","cacheSize","g","exec","body","rgb","fromNamed","hasAlpha","substr","normalize","fromStringInternal_","asArray","IconImageCache","cache_","cacheSize_","maxCacheSize_","canExpireCache","expire","iconImage","src","crossOrigin","maxCacheSize","shared","asColorLike","render_VectorContext","VectorContext","drawCustom","renderer","drawGeometry","drawCircle","circleGeometry","drawFeature","drawGeometryCollection","geometryCollectionGeometry","drawLineString","lineStringGeometry","drawMultiLineString","multiLineStringGeometry","drawMultiPoint","multiPointGeometry","drawMultiPolygon","multiPolygonGeometry","drawPoint","pointGeometry","drawPolygon","polygonGeometry","drawText","setFillStrokeStyle","fillStyle","strokeStyle","setImageStyle","imageStyle","opt_declutterGroup","setTextStyle","textStyle","LRUCache_extends","structs_LRUCache","LRUCache","opt_highWaterMark","highWaterMark","count_","entries_","oldest_","newest_","containsKey","entry","value_","key_","newer","older","peekLast","peekLastKey","peekFirstKey","LabelCache_extends","LabelCache_LabelCache","LabelCache","consumers","consumer","consumerId","prune","outer","release","defaultLineDash","defaultPadding","labelCache","checkedFonts","measureContext","textHeights","checkFont","interval","referenceWidth","retries","checked","referenceFonts","text","isAvailable","getMeasureContext","weight","fontWeight","available","referenceFont","measureText","check","done","clearInterval","fontSpec","fontFamilies","setInterval","div","heights","measureTextHeight","measureTextWidth","canvas_measureAndCacheTextWidth","rotateAtOffset","offsetX","offsetY","resetTransform","drawImage","image","originX","originY","alpha","globalAlpha","setTransform","Immediate_extends","Immediate","CanvasImmediateRenderer","viewRotation","context_","viewRotation_","contextFillState_","contextStrokeState_","contextTextState_","fillState_","strokeState_","image_","imageAnchorX_","imageAnchorY_","imageHeight_","imageOpacity_","imageOriginX_","imageOriginY_","imageRotateWithView_","imageRotation_","imageScale_","imageWidth_","text_","textOffsetX_","textOffsetY_","textRotateWithView_","textRotation_","textScale_","textFillState_","textStrokeState_","textState_","pixelCoordinates_","tmpLocalTransform_","drawImages_","pixelCoordinates","localTransform","drawText_","setContextFillState_","setContextStrokeState_","setContextTextState_","strokeText","fillText","moveToLineTo_","close","moveTo","lineTo","closePath","drawRings_","simpleGeometry","transformGeom2D","beginPath","arc","fill","stroke","getFill","getStroke","getImage","getText","getGeometryFunction","geometries","getGeometriesArray","flatMidpoint","getFlatMidpoint","geometryExtent","flatMidpoints","getFlatMidpoints","flatInteriorPoint","getEndss","flatInteriorPoints","getFlatInteriorPoints","fillState","contextFillState","strokeState","contextStrokeState","lineCap","setLineDash","lineDash","lineDashOffset","lineJoin","lineWidth","miterLimit","textState","contextTextState","textAlign","textBaseline","fillStyleColor","getColor","strokeStyleColor","strokeStyleLineCap","getLineCap","strokeStyleLineDash","getLineDash","strokeStyleLineDashOffset","getLineDashOffset","strokeStyleLineJoin","getLineJoin","strokeStyleWidth","strokeStyleMiterLimit","getMiterLimit","imageAnchor","getAnchor","imageImage","imageOrigin","getOrigin","imageSize","getRotateWithView","getScale","textFillStyle","textFillStyleColor","textStrokeStyle","textStrokeStyleColor","textStrokeStyleLineCap","textStrokeStyleLineDash","textStrokeStyleLineDashOffset","textStrokeStyleLineJoin","textStrokeStyleWidth","textStrokeStyleMiterLimit","textFont","getFont","textOffsetX","getOffsetX","textOffsetY","getOffsetY","textRotateWithView","textRotation","textScale","textText","textTextAlign","getTextAlign","textTextBaseline","getTextBaseline","renderDeclutterItems","declutterTree","zIndexItems","renderDeclutter","Map_extends","expireIconCache","renderer_Map","MapRenderer","declutterTree_","layerRenderers_","layerRendererListeners_","calculateMatrices2D","removeLayerRendererByKey_","thisArg","thisArg2","viewResolution","translatedCoordinate","projectionExtent","worldWidth","declutteredFeatures","layerStates","numLayers","getLayerRenderer","callback_1","getWrapX","layerKey","handleLayerRendererChange_","getLayerRenderers","scheduleExpireIconCache","scheduleRemoveUnusedLayerRenderers","layerStatesMap","reduce","acc","_loop_1","this_1","Composite_extends","Composite","CompositeMapRenderer","insertBefore","firstChild","children_","MAX_SAFE_INTEGER","oldChildren","childNodes","oldChild","newChild","replaceChildren","getDataAtPixel","ol_Map_extends","ol_Map","Map","OverlayPositioning","BOTTOM_CENTER","CENTER_LEFT","CENTER_CENTER","CENTER_RIGHT","TOP_CENTER","Overlay_extends","Overlay_Property","ELEMENT","MAP","OFFSET","POSITIONING","ol_Overlay","Overlay","insertFirst","autoPan","autoPanAnimation","autoPanMargin","rendered","bottom_","left_","right_","top_","mapPostrenderListenerKey","handleElementChanged","handleMapChanged","handleOffsetChanged","handlePositionChanged","handlePositioningChanged","setElement","setOffset","setPositioning","positioning","setPosition","getElement","getOffset","getPositioning","updatePixelPosition","panIntoView","mapRect","getRect","overlayRect","offsetLeft","offsetRight","offsetTop","offsetBottom","centerPx","newCenterPx","box","pageXOffset","pageYOffset","mapSize","updateRenderedPosition","bottom","top_1","getOptions","FormatType","ARRAY_BUFFER","JSON","TEXT","XML","loadFeaturesXhr","url","success","failure","xhr","XMLHttpRequest","open","responseType","onload","status","responseText","responseXML","DOMParser","parseFromString","readFeatures","featureProjection","readProjection","onerror","send","featureloader_xhr","dataProjection","addFeatures","loadingstrategy_all","loadingstrategy_bbox","TileRange","tileCoord","containsTileRange","tileRange","TileRange_createOrUpdate","ol_TileRange","tilecoord_createOrUpdate","opt_tileCoord","getKeyZXY","tilecoord_getKey","hash","tmpTileCoord","tilegrid_TileGrid","TileGrid","opt_strict","currentVal","res","origins","origin_","origin","origins_","tileSizes_","tileSizes","tileSize_","tileSize","fullTileRanges_","tmpSize_","sizes","calculateTileRanges_","forEachTileCoord","getTileRangeForExtentAndZ","forEachTileCoordParentTileRange","opt_tileRange","tileCoordExtent","getTileCoordExtent","getTileCoordChildTileRange","getTileRangeExtent","getTileSize","getTileCoordForXYAndZ_","getTileCoordCenter","getTileCoordForCoordAndResolution","getTileCoordForXYAndResolution_","reverseIntersectionPolicy","getZForResolution","adjustX","adjustY","xFromOrigin","yFromOrigin","tileCoordX","tileCoordY","getTileCoordForCoordAndZ","getTileCoordResolution","getFullTileRange","fullTileRanges","getForProjection","createForProjection","createXYZ","xyzOptions","gridOptions","resolutionsFromExtent","opt_maxZoom","opt_tileSize","opt_corner","createForExtent","extentFromProjection","half","DYNAMIC_DRAW","CONTEXT_IDS","opt_attributes","EXTENSIONS","webgl_gl","getParameter","MAX_TEXTURE_SIZE","getSupportedExtensions","DOCUMENT","implementation","createDocument","XML_SCHEMA_INSTANCE_URI","createElementNS","namespaceURI","qualifiedName","getAllTextContent","normalizeWhitespace","getAllTextContent_","accumulator","nodeType","Node","CDATA_SECTION_NODE","TEXT_NODE","nodeValue","nextSibling","isDocument","parse","xml","makeArrayExtender","valueReader","objectStack","makeArrayPusher","makeReplacer","makeObjectPropertyPusher","opt_property","localName","makeObjectPropertySetter","makeChildAppender","nodeWriter","makeArraySerializer","serializersNS","nodeFactory","serializers","makeSimpleNodeFactory","serialize","opt_nodeName","opt_namespaceURI","fixedNodeName","nodeName","OBJECT_PROPERTY_NODE_FACTORY","makeSequence","orderedKeys","sequence","makeStructureNS","namespaceURIs","structure","opt_structureNS","structureNS","parseNode","parsersNS","firstElementChild","nextElementSibling","parsers","parser","pushParseAndPop","opt_keys","pushSerializeAndPop","BufferUsage","STATIC_DRAW","STREAM_DRAW","Buffer","WebGLArrayBuffer","opt_arr","opt_usage","arr_","usage_","getUsage","ContextEventType","LOST","RESTORED","fromTransform","mat4","DEFAULT_VERTEX_SHADER","DEFAULT_FRAGMENT_SHADER","PostProcessingPass","WebGLPostProcessingPass","gl_","webGlContext","gl","scaleRatio_","scaleRatio","renderTargetTexture_","createTexture","renderTargetTextureSize_","frameBuffer_","createFramebuffer","vertexShader","createShader","VERTEX_SHADER","shaderSource","compileShader","fragmentShader","FRAGMENT_SHADER","renderTargetProgram_","createProgram","attachShader","linkProgram","renderTargetVerticesBuffer_","createBuffer","bindBuffer","bufferData","Float32Array","renderTargetAttribLocation_","getAttribLocation","renderTargetUniformLocation_","getUniformLocation","renderTargetTextureLocation_","uniforms_","uniforms","location","getGL","init","bindFramebuffer","FRAMEBUFFER","getFrameBuffer","viewport","internalFormat","RGBA","UNSIGNED_BYTE","bindTexture","TEXTURE_2D","texImage2D","texParameteri","TEXTURE_MIN_FILTER","LINEAR","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","framebufferTexture2D","COLOR_ATTACHMENT0","nextPass","activeTexture","TEXTURE0","clearColor","COLOR_BUFFER_BIT","enable","BLEND","blendFunc","ONE","ONE_MINUS_SRC_ALPHA","useProgram","enableVertexAttribArray","vertexAttribPointer","FLOAT","uniform2f","uniform1i","applyUniforms","drawArrays","TRIANGLES","textureSlot","uniform","HTMLCanvasElement","texture","uniform3f","uniform4f","uniform1f","Helper_extends","DefaultUniform","DefaultAttrib","Helper","WebGLHelper","canvas_","bufferCache_","shaderCache_","programCache_","currentProgram_","hasOESElementIndexUint","getExtension","handleWebGLContextLost","handleWebGLContextRestored","projectionMatrix_","offsetRotateMatrix_","offsetScaleMatrix_","tmpMat4_","uniformLocations_","attribLocations_","name_1","postProcessPasses_","postProcesses","shaderCompileErrors_","bufferKey","bufferCache","webGlBuffer","flushBufferData","arrayBuffer","Uint32Array","Uint16Array","deleteBuffer","bufferCacheEntry","isContextLost","deleteProgram","deleteShader","prepareDraw","getCanvas","applyFrameState","drawElements","elementType","UNSIGNED_INT","UNSIGNED_SHORT","numItems","offsetInBytes","finalizeDraw","projectionMatrix","offsetScaleMatrix","offsetRotateMatrix","setUniformMatrixValue","HTMLImageElement","program","shader","getProgram","fragmentShaderSource","vertexShaderSource","getShaderInfoLog","getShaderCompileErrors","getAttributeLocation","setUniformFloatValue","uniformMatrix4fv","enableAttributeArray","attribName","createTextureInternal","opt_wrapS","opt_wrapT","TEXTURE_MAG_FILTER","createEmptyTexture","WMTS_extends","WMTSTileGrid","matrixIds_","matrixIds","getMatrixId","getMatrixIds","tilegrid_WMTS","createFromCapabilitiesMatrixSet","matrixSet","opt_matrixLimits","matrixLimits","switchOriginXY","elt","elt_ml","tileWidth","tileHeight","ImageState","style_Image","ImageStyle","opacity_","rotateWithView_","rotateWithView","scale_","getHitDetectionImage","getImageState","getImageSize","getHitDetectionImageSize","setRotateWithView","setScale","listenImageChange","unlistenImageChange","RegularShape_extends","style_RegularShape","RegularShape","hitDetectionCanvas_","fill_","points","radius_","radius1","radius2_","radius2","stroke_","size_","imageSize_","hitDetectionImageSize_","getPoints","getRadius2","strokeWidth","renderOptions","draw_","createHitDetectionCanvas_","angle0","radiusC","drawHitDetectionCanvas_","Circle_extends","style_Circle","CircleStyle","setRadius","style_Fill","Fill","color_","setColor","IconAnchorUnits","FRACTION","IconImage_extends","IconImage_IconImage","IconImage","imageState","hitDetectionImage_","Image","imageListenerKeys_","imageState_","src_","tainted_","isTainted_","getImageData","dispatchChangeEvent_","handleImageError_","unlistenImage_","handleImageLoad_","replaceColor_","fillRect","getSrc","ctx","imgData","putImageData","IconOrigin","Icon_extends","style_Icon","Icon","normalizedAnchor_","anchorOrigin_","anchorOrigin","anchorXUnits_","anchorXUnits","anchorYUnits_","anchorYUnits","crossOrigin_","img","imgSize","iconImage_","IconImage_get","offset_","offsetOrigin_","offsetOrigin","setAnchor","iconImageSize","style_Stroke","Stroke","lineCap_","lineDash_","lineDashOffset_","lineJoin_","miterLimit_","width_","setLineCap","setLineDashOffset","setLineJoin","setMiterLimit","setWidth","Style","geometryFunction_","defaultGeometryFunction","zIndex_","setRenderer","setFill","setImage","setStroke","setText","defaultStyles","createDefaultStyle","createEditingStyle","styles","white","blue","style_Style","TextPlacement","LINE","DEFAULT_FILL_COLOR","style_Text","Text","font_","textAlign_","textBaseline_","maxAngle_","maxAngle","placement_","placement","overflow_","offsetX_","offsetY_","backgroundFill_","backgroundFill","backgroundStroke_","backgroundStroke","padding_","getPlacement","getMaxAngle","getOverflow","getBackgroundFill","getBackgroundStroke","getPadding","setOverflow","setFont","setMaxAngle","setOffsetX","setOffsetY","setPlacement","setTextAlign","setTextBaseline","setBackgroundFill","setBackgroundStroke","setPadding","tileurlfunction_createFromTemplate","zRegEx","xRegEx","yRegEx","dashYRegEx","range","createFromTemplates","templates","tileUrlFunctions","createFromTileUrlFunctions","nullTileUrlFunction","expandUrl","urls","match","startCharCode","stopCharCode","stop_1","jsonp","opt_errback","opt_callbackParam","script","async","timer","getElementsByTagName","ERROR_THRESHOLD","Tile_extends","ol_Tile","Tile","interimTile","transition_","transition","transitionStarts_","getInterimTile","refreshInterimChain","getTileCoord","setState","getAlpha","inTransition","endTransition","ImageTile_extends","getBlankImage","ol_ImageTile","ImageTile","tileLoadFunction","tileLoadFunction_","naturalWidth","naturalHeight","TileCache_extends","ol_TileCache","TileCache","expireCache","pruneExceptNewestZ","fromKey","calculateSourceResolution","targetProj","targetMetersPerUnit","sourceMetersPerUnit","sourceExtent","compensationFactor","isFinite","enlargeClipPoint","centroidX","centroidY","dX","dY","reproj_render","targetExtent","triangulation","sources","gutter","opt_renderEdges","sourceDataExtent","canvasWidthInUnits","canvasHeightInUnits","stitchContext","stitchScale","xPos","yPos","srcWidth","srcHeight","targetTopLeft","getTriangles","triangle","u0","v0","u1","u2","sourceNumericalShiftX","sourceNumericalShiftY","affineCoefs","maxRow","maxEl","absValue","coef","solveLinearSystem","save","p0","p1","p2","clip","restore","MAX_SUBDIVISION","reproj_Triangulation","Triangulation","maxSourceExtent","errorThreshold","sourceProj_","targetProj_","transformInvCache","transformInv","transformInv_","maxSourceExtent_","errorThresholdSquared_","triangles_","wrapsXInSource_","canWrapXInSource_","sourceWorldWidth_","targetWorldWidth_","destinationTopLeft","destinationTopRight","destinationBottomRight","destinationBottomLeft","sourceTopLeft","sourceTopRight","sourceBottomRight","sourceBottomLeft","addQuad_","leftBound_1","newTriangle","addTriangle_","aSrc","bSrc","cSrc","dSrc","maxSubdivision","sourceQuadExtent","sourceCoverageX","sourceWorldWidth","wrapsX","needsSubdivision","centerSrc","bc","bcSrc","da","daSrc","ab","abSrc","cd","cdSrc","calculateSourceExtent","reproj_Tile_extends","reproj_Tile","ReprojTile","sourceTileGrid","targetTileGrid","wrappedTileCoord","getTileFunction","opt_errorThreshold","renderEdges_","gutter_","sourceTileGrid_","targetTileGrid_","wrappedTileCoord_","sourceTiles_","sourcesListenerKeys_","sourceZ_","maxTargetExtent","limitedTargetExtent","sourceProjExtent","errorThresholdInPixels","triangulation_","sourceRange","srcX","srcY","unlistenSources_","reproject_","leftToLoad_1","sourceListenKey_1","Source_extends","adaptAttributions","attributionLike","source_Source","Source","attributions_","attributionsCollapsible_","attributionsCollapsible","wrapX_","wrapX","refresh","setAttributions","source_Tile_extends","Tile_TileSource","TileSource","opaque_","opaque","tilePixelRatio_","tilePixelRatio","canUseScreen","self","screen","availWidth","availHeight","tileCache","tmpSize","tileOptions","zDirection","getTileCacheForProjection","forEachLoadedTile","tileCoordKey","loaded","covered","getGutterForProjection","setKey","getOpaque","getTile","getTileGrid","getTileGridForProjection","thisProj","getTilePixelRatio","getTilePixelSize","getTileCoordForTileUrlFunction","opt_projection","worldsAway","tilegrid_wrapX","withinExtentAndZ","useTile","TileSourceEvent","source_Tile","TileEventType","UrlTile_extends","source_UrlTile","UrlTile","generateTileUrlFunction_","tileUrlFunction","setUrls","setUrl","tileLoadingKeys_","getTileLoadFunction","getTileUrlFunction","getUrls","uid","tileState","setTileLoadFunction","setTileUrlFunction","TileImage_extends","defaultTileLoadFunction","imageTile","source_TileImage","TileImage","tileClass","tileCacheForProjection","tileGridForProjection","reprojectionErrorThreshold_","reprojectionErrorThreshold","renderReprojectionEdges_","usedTileCache","getGutter","projKey","createTile_","urlTileCoord","tileUrl","newTile","getTileInternal","setRenderReprojectionEdges","setTileGridForProjection","tilegrid","proj","BingMaps_extends","source_BingMaps","BingMaps","hidpi","hidpi_","culture_","culture","maxZoom_","apiKey_","imagerySet_","imagerySet","handleImageryMetadataResponse","getApiKey","getImagerySet","response","statusCode","statusDescription","authenticationResultCode","resourceSets","resources","resource","zoomMax","imageWidth","imageHeight","zoomMin","imageUrlSubdomains","subdomain","quadKeyTileCoord","imageUrl","digits","mask","quadKey","imageryProviders","transform_1","imageryProvider","intersecting","coverageAreas","coverageArea","XYZ_extends","source_XYZ","CartoDB_extends","source_CartoDB","CartoDB","account_","account","mapId_","config_","templateCache_","initializeMap_","getConfig","updateConfig","setConfig","paramHash","stringify","applyTemplate_","mapUrl","client","handleInitResponse_","handleInitError_","setRequestHeader","err","tilesUrl","cdn_url","https","layergroupid","VectorEventType","ADDFEATURE","CHANGEFEATURE","REMOVEFEATURE","structs_RBush","RBush","opt_maxEntries","rbush_","rbush_default","items_","extents","getAll","getInExtent","forEach_","forEachInExtent","Vector_extends","VectorSourceEvent","opt_feature","Vector","VectorSource","loader_","format_","overlaps_","overlaps","url_","loader","strategy_","strategy","collection","useSpatialIndex","featuresRtree_","loadedExtentsRtree_","nullGeometryFeatures_","idIndex_","undefIdIndex_","featureChangeKeys_","featuresCollection_","addFeaturesInternal","bindFeaturesCollection_","addFeature","addFeatureInternal","featureKey","addToIndex_","setupChangeEvents_","handleFeatureChange_","valid","newFeatures","geometryFeatures","length_1","length_2","length_3","modifyingCollection","removeFeature","opt_fast","featureId","removeFeatureInternal","clearEvent","forEachFeature","forEachFeatureAtCoordinateDirect","forEachFeatureInExtent","forEachFeatureIntersectingExtent","getFeaturesCollection","getFeatures","getFeaturesAtCoordinate","getFeaturesInExtent","getClosestFeatureToCoordinate","opt_filter","closestFeature","previousMinSquaredDistance","minDistance","getFeatureById","getFormat","getOverlaps","getUrl","sid","removeFromIdIndex_","hasFeature","loadFeatures","loadedExtentsRtree","extentsToLoad","extentToLoad","removeLoadedExtent","removed","setLoader","Cluster_extends","source_Cluster","Cluster","geometryFunction","cluster","setDistance","mapDistance","clustered","neighbors","neighbor","createCluster","Zoomify_extends","TierSizeCalculation","DEFAULT","TRUNCATED","Zoomify_CustomTile","CustomTile","zoomifyImage_","source_Zoomify","Zoomify","tierSizeCalculation","tierSizeInTiles","tileSizeForTierSizeCalculation","reverse","tileCountUpToTier","tileCoordZ","tileIndex","tileSize_1","localContext_1","TileGroup","ZoomifyTileClass","Versions","VERSION1","VERSION2","VERSION3","IIIF_PROFILE_VALUES","level0","supports","formats","qualities","level1","level2","COMPLIANCE_VERSION1","RegExp","COMPLIANCE_VERSION2","COMPLIANCE_VERSION3","versionFunctions","iiifInfo","levelProfile","getComplianceLevelSupportedFeatures","imageInfo","scale_factors","tile_width","tile_height","additionalProfile","profile","profileSupports","profileFormats","profileQualities","tiles","scaleFactors","extraFeatures","extraFormats","extraQualities","maxWidth","maxHeight","maxArea","format_IIIFInfo","IIIFInfo","setImageInfo","getImageApiVersion","getComplianceLevelEntryFromProfile","version","test","getComplianceLevelFromProfile","complianceLevel","getTileSourceOptions","opt_preferredOptions","imageOptions","quality","IIIF_extends","formatPercentage","percentage","toLocaleString","maximumFractionDigits","source_IIIF","IIIF","baseUrl","lastIndexOf","supportsListedSizes","supportsListedTiles","isInteger","supportsArbitraryTiling","maxScaleFactor","ignoredSizesIndex","IiifTileClass","regionParam","sizeParam","tileX","tileY","regionX","regionY","regionW","regionH","sizeW","sizeH","regionWidth","regionHeight","ImageBase_extends","ol_ImageBase","ImageBase","getPixelRatio","Image_extends","reproj_Image","ReprojImage","getImageFunction","sourceImage","sourcePixelRatio","targetExtent_","sourceImage_","sourcePixelRatio_","sourceListenerKey_","unlistenSource_","source_Image_extends","ImageSourceEventType","ImageSourceEvent","defaultImageLoadFunction","source_Image","ImageSource","reprojectedImage_","reprojectedRevision_","findNearestResolution","getImageInternal","handleImageChange","ol_Image_extends","ol_Image","ImageWrapper","imageLoadFunction","imageLoadFunction_","appendParams","uri","params","keyParams","encodeURIComponent","qs","ImageArcGISRest_extends","source_ImageArcGISRest","ImageArcGISRest","params_","renderedRevision_","ratio_","getParams","F","FORMAT","TRANSPARENT","halfWidth","halfHeight","imageResolution","getRequestUrl_","getImageLoadFunction","srid","modifiedUrl","setImageLoadFunction","updateParams","ImageCanvas_extends","ol_ImageCanvas","ImageCanvas","opt_loader","error_","getError","handleLoad_","source_ImageCanvas_extends","source_ImageCanvas","ImageCanvasSource","canvasFunction_","canvasFunction","canvasElement","ImageMapGuide_extends","source_ImageMapGuide","ImageMapGuide","displayDpi_","displayDpi","useOverlay_","useOverlay","dpi","mcsW","mcsH","devW","devH","mpp","baseParams","OPERATION","LOCALE","CLIENTAGENT","CLIP","SETDISPLAYDPI","SETDISPLAYWIDTH","SETDISPLAYHEIGHT","SETVIEWSCALE","SETVIEWCENTERX","SETVIEWCENTERY","ImageStatic_extends","ImageStatic","Static","imageExtent_","imageExtent","getImageExtent","targetWidth","DEFAULT_WMS_VERSION","WMSServerType","ImageWMS_extends","GETFEATUREINFO_IMAGE_SIZE","source_ImageWMS","ImageWMS","v13_","updateV13_","serverType_","getGetFeatureInfoUrl","projectionObj","sourceProjectionObj","SERVICE","REQUEST","QUERY_LAYERS","viewExtent","requestExtent","OSM_extends","ATTRIBUTION","source_OSM","OSM","BaseImage_extends","BaseImage","BaseImageLayer","renderer_Layer_extends","renderer_Layer","LayerRenderer","layer_","loadedTileCallback","createLoadedTileFinder","getLayer","handleImageChange_","renderIfReadyAndVisible","loadImage","canvas_Layer_extends","canvas_Layer","CanvasLayerRenderer","renderedResolution","tempTransform_","pixelTransform_","inversePixelTransform_","transformOrigin","topLeft","topRight","bottomRight","bottomLeft","clipUnrotated","inverted","dispatchRenderEvent_","preRender","postRender","getRenderTransform","renderPixel","ImageLayer_extends","canvas_ImageLayer","CanvasImageLayerRenderer","imageLayer","imageSource","renderedExtent","imagePixelRatio","viewCenter","clearRect","clipped","dw","dh","canvasTransform","layer_Image_extends","layer_Image","ImageLayer","TileProperty","BaseTile_extends","BaseTile","BaseTileLayer","preload","useInterimTilesOnError","setPreload","setUseInterimTilesOnError","getPreload","getUseInterimTilesOnError","TileLayer_extends","TileLayer_CanvasTileLayerRenderer","CanvasTileLayerRenderer","tileLayer","extentChanged","renderedExtent_","renderedRevision","renderedTiles","newTiles_","tmpExtent","tmpTileRange_","isDrawableTile","tileSource","sourceRevision","canvasExtent","tilesToDrawByZ","findLoadedTiles","tmpTileRange","childTileRange","canvasScale","zs","currentZ","currentTilePixelSize","currentScale","dx_1","dy_1","originTileCoord","originTileExtent","origin_1","tileGutter","tilesToDraw","floatX","nextX","floatY","nextY","drawTileImage","updateUsedTiles","manageTilePyramid","updateCacheSize_","scheduleExpireCache","getTileImage","alphaChanged","postRenderFunction","opt_tileCallback","canvas_TileLayer","layer_Tile_extends","layer_Tile","TileLayer","Raster_extends","RasterEventType","RasterOperationType","PIXEL","IMAGE","RasterSourceEvent","Raster_RasterSource","RasterSource","worker_","operationType_","operationType","threads_","layers_","createLayer","createLayers","requestedFrameState_","renderedImageCanvas_","iMax","sourceOrLayer","sourceAttribution","setOperation","opt_lib","updateFrameState_","allSourcesReady_","ready","processSources_","imageDatas","onWorkerComplete_","sharedContext","layerOrSource","Raster","Stamen_extends","ATTRIBUTIONS","LayerConfig","terrain","terrain-background","terrain-labels","terrain-lines","toner-background","toner","toner-hybrid","toner-labels","toner-lines","toner-lite","watercolor","ProviderConfig","source_Stamen","Stamen","provider","providerConfig","layerConfig","TileArcGISRest_extends","TileArcGISRest_tileUrlFunction","tileExtent","tmpExtent_","source_TileArcGISRest","TileArcGISRest","getKeyForParams_","TileDebug_extends","TileDebug_LabeledTile","LabeledTile","strokeRect","source_TileDebug","TileDebug","textTileCoord","TileJSON_extends","source_TileJSON","TileJSON","tileJSON_","handleTileJSONResponse","handleTileJSONError","onXHRLoad_","onXHRError_","tileJSON","getTileJSON","epsg4326Projection","attributionExtent_1","TileWMS_extends","TileWMS_tileUrlFunction","source_TileWMS","TileWMS","transparent","UTFGrid_extends","UTFGrid_CustomTile","preemptive","preemptive_","grid_","keys_","data_","jsonp_","getData","xRelative","yRelative","row","forDataAtCoordinate","opt_request","loadInternal_","handleError_","json","source_UTFGrid","UTFGrid","tileUrlFunction_","template_","getTemplate","forDataAtCoordinateAndResolution","grids","VectorRenderTile_extends","ol_VectorRenderTile","VectorRenderTile","getSourceTiles","removeSourceTiles","executorGroups","loadingSourceTiles","errorSourceTileKeys","replayState_","wantedResolution","getSourceTiles_","removeSourceTiles_","sourceZ","hasContext","getReplayState","dirty","renderedRenderOrder","renderedTileResolution","renderedTileRevision","renderedZ","renderedTileZ","VectorTile_extends","ol_VectorTile","VectorTile","features_","onLoad","setFeatures","onError","source_VectorTile_extends","source_VectorTile","defaultLoadFunction","loadingTiles_","sourceTilesByTileKey_","tileGrids_","sourceTiles","sourceTileGrid_1","covered_1","empty_1","sourceZ_1","loadedZ_1","sourceTileCoord","sourceTile","key_1","sourceTileKey","previousSourceTiles","addSourceTiles","WMTSRequestEncoding","KVP","REST","source_WMTS_extends","source_WMTS","WMTS","requestEncoding","version_","dimensions_","dimensions","matrixSet_","requestEncoding_","getKeyForDimensions_","createFromWMTSTemplate","getDimensions","getMatrixSet","getRequestEncoding","getVersion","updateDimensions","tilematrixset","Service","Request","Version","Format","TileMatrix","TileCol","TileRow","PointsLayer_extends","PointsLayer_VERTEX_SHADER","PointsLayer_FRAGMENT_SHADER","PointsLayer","WebGLPointsLayerRenderer","vectorLayer","u_texture","getDefaultTexture","helper_","sourceRevision_","verticesBuffer_","indicesBuffer_","program_","sizeCallback_","sizeCallback","coordCallback_","coordCallback","opacityCallback_","opacityCallback","texCoordCallback_","texCoordCallback","colorArray_","colorCallback_","colorCallback","rotateWithViewCallback_","rotateWithViewCallback","vectorSource","red","green","baseIndex","bytesPerFloat","BYTES_PER_ELEMENT","Instruction","BEGIN_GEOMETRY","BEGIN_PATH","CLOSE_PATH","CUSTOM","DRAW_CHARS","DRAW_IMAGE","END_GEOMETRY","FILL","MOVE_TO_LINE_TO","SET_FILL_STYLE","SET_STROKE_STYLE","STROKE","Instruction_fillInstruction","Instruction_strokeInstruction","beginPathInstruction","closePathInstruction","canvas_Instruction","Builder_extends","Builder","CanvasBuilder","maxLineWidth","beginGeometryInstruction1_","beginGeometryInstruction2_","bufferedMaxExtent_","instructions","tmpCoordinate_","hitDetectionInstructions","applyPixelRatio","dashArray","dash","appendFlatCoordinates","closed","skipFirst","myEnd","getBufferedMaxExtent","lastRel","nextRel","lastXCoord","lastYCoord","nextCoord","skipped","drawCustomCoordinates_","builderEnds","builderEnd","beginGeometry","builderEndss","builderBegin","myEnds","endGeometry","reverseHitDetectionInstructions","instruction","createFill","fillInstruction","applyStroke","createStroke","updateFillStyle","currentFillStyle","updateStrokeStyle","currentStrokeStyle","currentLineCap","currentLineDash","currentLineDashOffset","currentLineJoin","currentLineWidth","currentMiterLimit","endGeometryInstruction","ImageBuilder_extends","ImageBuilder","CanvasImageBuilder","declutterGroup_","anchorX_","anchorY_","height_","originX_","originY_","drawCoordinates_","myBegin","declutterGroup","hitDetectionImage","LineStringBuilder_extends","LineStringBuilder","CanvasLineStringBuilder","drawFlatCoordinates_","moveToLineToInstruction","lastStroke","PolygonBuilder_extends","PolygonBuilder","CanvasPolygonBuilder","drawFlatCoordinatess_","numEnds","setFillStrokeStyles_","circleInstruction","matchingChunk","m12","m23","x12","y12","x23","y23","chunkStart","chunkEnd","chunkM","acos","TextBuilder_extends","TEXT_ALIGN","middle","hanging","alphabetic","ideographic","BATCH_CONSTRUCTORS","Circle","Default","LineString","CanvasTextBuilder","labels_","fillStates","strokeStates","textStates","textKey_","fillKey_","strokeKey_","geometryType","flatOffset","flatEnd","oo","drawChars_","geometryWidths","saveTextStates_","pixelRatio_1","strokeKey","textKey","fillKey","baseline","canvas_BuilderGroup","BuilderGroup","declutter","declutter_","tolerance_","maxExtent_","resolution_","buildersByZIndex_","addDeclutter","group","builderInstructions","zKey","builders","builderKey","builderInstruction","getBuilder","builderType","zIndexKey","replays","replay","Constructor","BuilderType","lineStringLength","drawTextOnPath","startM","measureAndCacheTextWidth","previousAngle","numChars","segmentM","chunk","chunkLength","char","charLength","charM","segmentPos","interpolate","unshift","Executor_extends","Executor_tmpExtent","Executor_tmpTransform","Executor_p1","Executor_p2","p3","p4","canvas_Executor","Executor","alignFill_","coordinateCache_","renderedTransform_","widths_","getTextImage","align","numLines","widths","currentWidth","measureTextWidths","lineHeight","renderWidth","leftRight","replayTextBackground_","strokeInstruction","setStrokeStyle_","replayImage_","snapToPixel","fillStroke","boxW","boxH","boxX","boxY","strokePadding","declutterArgs","repeatSize","groupCount","declutterData","drawTextImageWithPointPlacement_","execute_","skippedFeaturesHash","featureCallback","opt_hitExtent","dd","prevX","prevY","roundX","roundY","skipFeatures","pendingFill","pendingStroke","lastFillInstruction","lastStrokeInstruction","coordinateCache","batchSize","labelWithAnchor","widthIndex","measurePixelRatio","pixelRatioScale","cachedWidths","pathLength","textLength","parts","cc","chars","part","execute","executeHitDetection","opt_featureCallback","ExecutorGroup_extends","ORDER","ExecutorGroup_ExecutorGroup","ExecutorGroup","allInstructions","opt_renderBuffer","renderBuffer_","executorsByZIndex_","hitDetectionContext_","hitDetectionTransform_","createExecutors_","flatClipCoords","getClipCoords","executors","instructionByZindex","hasExecutors","candidates","hitExtent","contextSize","circleArrayCache","arraySize","fillCircleArrayRowToMiddle","getCircleArray","i_1","j_1","result_1","executor","opt_builderTypes","opt_declutterReplays","builderTypes","0","replayDeclutter","declutterReplays","zz","executorData","currentExecutor","canvas_ExecutorGroup","SIMPLIFY_TOLERANCE","GEOMETRY_RENDERERS","builderGroup","imageReplay","textReplay","lineStringReplay","polygonReplay","MultiPoint","MultiLineString","MultiPolygon","GeometryCollection","replayGroup","geometryRenderer","circleReplay","defaultOrder","feature1","feature2","getSquaredTolerance","getTolerance","renderFeature","renderGeometry","getGeometries","renderFeatureInternal","VectorLayer_extends","canvas_VectorLayer","CanvasVectorLayerRenderer","dirty_","renderedResolution_","renderedRenderOrder_","replayGroup_","replayGroupChanged","handleFontsChanged_","clipExtent","getDeclutter","world","transform_2","viewHints_1","layer_1","features_1","handleStyleImageChange_","animating","interacting","updateWhileAnimating","getUpdateWhileAnimating","updateWhileInteracting","getUpdateWhileInteracting","frameStateExtent","vectorLayerRevision","vectorLayerRenderBuffer","getRenderBuffer","vectorLayerRenderOrder","getRenderOrder","styleFunction","features_2","replayGroupInstructions","executorGroup","VectorTileRenderType","HYBRID","VectorTileLayer_extends","IMAGE_REPLAYS","hybrid","VECTOR_REPLAYS","canvas_VectorTileLayer","CanvasVectorTileLayerRenderer","baseCanvas","overlayContext_","overlayCanvas","container_","overlayPixelTransform_","inverseOverlayPixelTransform_","renderedLayerRevision_","renderTileImageQueue_","tileListenerKeys_","tmpTransform_","prepareTile","tileUid","updateExecutorGroup_","tileImageNeedsRender_","listenerKey","layerRevision","revision","renderOrder","builderState","layerUid","tt","sourceTileExtent","sharedExtent","bufferedExtent","executorGroupInstructions","replayExtent","renderingReplayGroup","found","getReplayTransform_","renderResolution","renderMode","getRenderMode","renderTileImages_","replayTypes","clips","worldOffset","currentClip","renderPixelRatio","renderTileImage_","replayState","renderScale","pixelScale","BaseVector_extends","BaseVector_Property","BaseVector","BaseVectorLayer","renderBuffer","updateWhileAnimating_","updateWhileInteracting_","setRenderOrder","toFunction","layer_Vector_extends","layer_Vector","VectorLayer","interpolatePoint","pointY","cumulativeLengths","haystack","needle","opt_comparator","cmp","comparator","binarySearch","lineStringCoordinateAtM","extrapolate","lo","hi","m0","LineString_extends","geom_LineString","flatMidpoint_","flatMidpointRevision_","appendCoordinate","forEachSegment","getCoordinateAtM","opt_extrapolate","getCoordinateAt","geodesic_line","geoM","fracA","fracB","fracM","geoA","geoB","geoStack","fractionStack","fractions","maxIterations","Graticule_extends","DEFAULT_STROKE_STYLE","INTERVALS","layer_Graticule","Graticule","maxLines","targetSize","showLabels","lonLabelFormatter","latLabelFormatter","lonLabelPosition","latLabelPosition","lonLabelStyle","latLabelStyle","intervals","maxLat_","maxLon_","minLat_","minLon_","maxLatP_","maxLonP_","minLatP_","minLonP_","targetSize_","maxLines_","meridians_","parallels_","strokeStyle_","fromLonLatTransform_","toLonLatTransform_","projectionCenterLonLat_","meridiansLabels_","parallelsLabels_","lonLabelFormatter_","latLabelFormatter_","lonLabelPosition_","latLabelPosition_","lonLabelStyleCache_","lonLabelStyle_","latLabelStyleCache_","latLabelStyle_","intervals_","loaderFunction","featurePool_","lineStyle_","renderExtent","updateProjectionInfo_","createGraticule_","featureCount","featuresColl","labelData","poolIndex","geom","addMeridian_","lon","minLat","maxLat","lineString","getMeridian_","textPoint","getMeridianPoint_","addParallel_","minLon","maxLon","getParallel_","getParallelPoint_","getInterval_","cnt","centerLonLat","centerLon","centerLat","validExtent","frac","meridian","clampedBottom","clampedTop","getMeridians","lon2","parallel","clampedLeft","clampedRight","getParallels","worldExtentP","Heatmap_extends","Heatmap_Property","BLUR","GRADIENT","DEFAULT_GRADIENT","layer_Heatmap","Heatmap","gradient","blur","gradient_","handleGradientChanged_","setGradient","setBlur","weightFunction_","getBlur","getGradient","colors","createLinearGradient","step","addColorStop","createGradient","u_size","u_blurSlope","u_resolution","u_gradientTexture","VectorImageLayer_extends","canvas_VectorImageLayer","CanvasVectorImageLayerRenderer","skippedFeatures_","vectorRenderer_","layerImageRatio_","getImageRatio","vectorRenderer","skippedFeatures_1","imageFrameState_1","newSkippedFeatures_1","image_1","VectorImage_extends","VectorImage","VectorImageLayer","imageRatio","imageRatio_","layer_VectorTile_extends","layer_VectorTile","VectorTileLayer","renderMode_","DragAndDrop_extends","DragAndDropEventType","DragAndDropEvent","file","opt_features","handleDrop","files","dataTransfer","reader","FileReader","handleResult_","readAsText","handleStop","dropEffect","interaction_DragAndDrop","DragAndDrop","formatConstructors_","formatConstructors","dropListenKeys_","source_","tryReadFeatures_","registerListeners_","dropArea","unregisterListeners_","DragRotateAndZoom_extends","interaction_DragRotateAndZoom","DragRotateAndZoom","lastMagnitude_","magnitude","angleDelta","geom_Circle_extends","Circle_Circle","setCenterAndRadius","getRadiusSquared_","geom_Circle","MultiLineString_extends","geom_MultiLineString","lineStrings","appendLineString","opt_interpolate","lineStringsCoordinateAtM","getLineString","getLineStrings","midpoints","intersectsLineStringArray","MultiPoint_extends","geom_MultiPoint","appendPoint","getPoint","center_linearRingss","MultiPolygon_extends","geom_MultiPolygon","opt_endss","endss_","flatInteriorPointsRevision_","flatInteriorPoints_","polygons","appendPolygon","newEndss","multiArrayMaxSquaredDelta","assignClosestMultiArrayPoint","linearRingssContainsXY","linearRingss","getInteriorPoints","linearRingssAreOriented","simplifiedEndss","quantizeMultiArray","getPolygon","prevEnds","getPolygons","intersectsLinearRingMultiArray","deflateMultiCoordinatesArray","lastEnds","Draw_extends","Draw_Mode","DrawEventType","DrawEvent","interaction_Draw","Draw","shouldHandle_","downPx_","downTimeout_","lastDragTime_","freehand_","snapTolerance_","snapTolerance","type_","getMode","stopClick_","stopClick","minPoints_","minPoints","maxPoints_","maxPoints","finishCondition_","finishCondition","opt_geometry","squaredLength","Constructor_1","mode_1","dragVertexDelay_","dragVertexDelay","finishCoordinate_","sketchFeature_","sketchPoint_","sketchCoords_","sketchLine_","sketchLineCoords_","squaredClickTolerance_","clickTolerance","overlay_","geometryName","freehandCondition_","freehand","freehandCondition","updateState_","getOverlay","pass","addToDrawing_","startDrawing_","circleMode","finishDrawing","atFinish_","abortDrawing_","downPx","clickPx","modifyDrawing_","createOrUpdateSketchPoint_","at","potentiallyDone","potentiallyFinishCoordinates","sketchCoords","finishCoordinate","finishPixel","updateSketchFeatures_","sketchLineGeom","ring","removeLastPoint","sketchFeature","sketchFeatures","overlaySource","Extent_extends","ExtentEventType","EXTENTCHANGED","ExtentEvent","getDefaultPointerStyleFunction","getPointHandler","fixedPoint","getEdgeHandler","fixedP1","fixedP2","interaction_Extent","Extent","pointerHandler_","pixelTolerance_","pixelTolerance","snappedToVertex_","extentFeature_","vertexFeature_","extentOverlay_","boxStyle","vertexOverlay_","pointerStyle","snapToVertex_","pixelCoordinate","segments","getSegments","closestSegment","vertex","vertexPixel","pixel1","pixel2","squaredDist1","squaredDist2","dist","createOrUpdatePointerFeature_","createOrUpdateExtentFeature_","extentFeature","vertexFeature","getOpposingPoint","x_","y_","Modify_extends","CIRCLE_CIRCUMFERENCE_INDEX","ModifyEventType","ModifyEvent","mapBrowserPointerEvent","compareIndexes","pointDistanceToSegmentDataSquared","pointCoordinates","segmentData","distanceToCenterSquared","distanceToCircumference","closestOnSegmentData","interaction_Modify","Modify","defaultDeleteCondition_","deleteCondition_","deleteCondition","insertVertexCondition_","insertVertexCondition","vertexSegments_","lastPixel_","ignoreNextSingleClick_","modified_","rBush_","changingFeature_","dragSegments_","SEGMENT_WRITERS_","writePointGeometry_","writeLineStringGeometry_","writePolygonGeometry_","writeMultiPointGeometry_","writeMultiLineStringGeometry_","writeMultiPolygonGeometry_","writeCircleGeometry_","writeGeometryCollectionGeometry_","handleSourceAdd_","handleSourceRemove_","addFeature_","handleFeatureAdd_","handleFeatureRemove_","lastPointerEvent_","handlePointerAtPixel_","willModifyFeatures_","removeFeature_","removeFeatureSegmentData_","rBush","nodesToRemove","nodeToRemove","depth","rings","kk","centerSegmentData","circumferenceSegmentData","featureSegments","createOrUpdateVertexFeature_","removePoint","dragSegment","setGeometryCoordinates_","insertVertices","vertexExtent","segmentDataMatches","componentSegments","segmentDataMatch","insertVertex_","nodes","vertexSegments","rTree","updateSegmentIndices_","newSegmentData","newSegmentData2","removeVertex_","component","newIndex","dragSegments","segmentsByFeature","deleted","Select_extends","SelectEventType","SELECT","SelectEvent","selected","deselected","Select_handleEvent","addCondition_","removeCondition_","toggleCondition_","featureLayerAssociation_","filter_","addFeatureLayerAssociation_","multi_","layerFilter_","hitTolerance_","removeFeatureLayerAssociation_","Select_getDefaultStyleFunction","interaction_Select","Select","addCondition","removeCondition","toggleCondition","multi","featureOverlay","featureOverlay_","layers_1","getHitTolerance","setHitTolerance","currentMap","selectedFeatures","Snap_extends","getFeatureFromEvent","interaction_Snap","Snap","vertex_","edge_","featuresListenerKeys_","featureChangeListenerKeys_","indexedFeaturesExtents_","pendingFeatures_","pixelCoordinate_","sortByDistance_","deltaA","deltaB","opt_listen","register","feature_uid","segmentWriter","forEachFeatureAdd_","forEachFeatureRemove_","getFeatures_","snapTo","snapped","updateFeature_","featuresToUpdate","opt_unlisten","unregister","nodesToRemove_1","isCircle","closestOnCircle","Translate_extends","TranslateEventType","TranslateEvent","interaction_Translate","Translate","lastCoordinate_","lastFeature_","handleActiveChanged_","featuresAtPixel_","newCoordinate","deltaX_1","deltaY_1","oldMap","GeometryCollection_extends","cloneGeometries","clonedGeometries","geom_GeometryCollection","opt_geometries","geometries_","listenGeometriesChange_","unlistenGeometriesChange_","geometryCollection","setGeometries","simplifiedGeometries","simplified","simplifiedGeometryCollection","setGeometriesArray","format_Feature","FeatureFormat","defaultFeatureProjection","getReadOptions","adaptOptions","readFeature","readGeometry","writeFeature","writeFeatures","writeGeometry","transformGeometryWithOptions","transformed","decimals","power_1","transformExtentWithOptions","JSONFeature_extends","getObject","format_JSONFeature","JSONFeature","readFeatureFromObject","readFeaturesFromObject","readGeometryFromObject","readProjectionFromObject","writeFeatureObject","writeFeaturesObject","writeGeometryObject","EsriJSON_extends","GEOMETRY_READERS","getGeometryLayout","paths","GEOMETRY_WRITERS","esriJSONPolygon","flatRing","outerRings","holes","clockwise","hole","matched","outerRing","containsHole","convertRings","geometryReader","hasZ","hasM","getHasZM","geometryWriter","esriJSON","hasZM","multiPoint","multiLineString","format_EsriJSON","EsriJSON","esriJSONFeature","idField","attributes","esriJSONFeatures","objectIdFieldName","wkid","objects","XMLFeature_extends","format_XMLFeature","XMLFeature","xmlSerializer_","XMLSerializer","doc","readFeatureFromDocument","readFeatureFromNode","readFeaturesFromDocument","readFeaturesFromNode","ELEMENT_NODE","readGeometryFromDocument","readGeometryFromNode","readProjectionFromDocument","readProjectionFromNode","writeFeatureNode","serializeToString","writeFeaturesNode","writeGeometryNode","GMLBase_extends","GMLNS","ONLY_WHITESPACE_RE","GMLBase_GMLBase","GMLBase","featureType","featureNS","srsName","schemaLocation","FEATURE_COLLECTION_PARSERS","namespace","featureMember","readFeaturesInternal","featureMembers","ft","candidate","featureTypes","readFeatureElement","readGeometryElement","getAttribute","GEOMETRY_PARSERS","readFeatureElementInternal","asFeature","_content_","attName","fid","getAttributeNS","readPoint","readFlatCoordinatesFromNode_","readMultiPoint","MULTIPOINT_PARSERS_","readMultiLineString","MULTILINESTRING_PARSERS_","readMultiPolygon","MULTIPOLYGON_PARSERS_","pointMemberParser_","POINTMEMBER_PARSERS_","lineStringMemberParser_","LINESTRINGMEMBER_PARSERS_","polygonMemberParser_","POLYGONMEMBER_PARSERS_","readLineString","readFlatLinearRing_","GEOMETRY_FLAT_COORDINATES_PARSERS","readLinearRing","readPolygon","flatLinearRings","FLAT_LINEAR_RINGS_PARSERS","http://www.opengis.net/gml","pointMember","pointMembers","lineStringMember","lineStringMembers","polygonMember","polygonMembers","RING_PARSERS","format_GMLBase","readBooleanString","string","readDateTime","dateTime","readDecimal","readDecimalString","readNonNegativeInteger","readNonNegativeIntegerString","trim","writeBooleanTextNode","bool","writeStringTextNode","writeDecimalTextNode","toPrecision","writeNonNegativeIntegerTextNode","nonNegativeInteger","GML3_extends","GML3_schemaLocation","MULTIGEOMETRY_TO_MEMBER_NODENAME","MultiCurve","MultiSurface","GML3_GML3","GML3","surface_","surface","curve_","curve","multiCurve_","multiCurve","multiSurface_","multiSurface","readMultiCurve_","MULTICURVE_PARSERS_","readMultiSurface_","MULTISURFACE_PARSERS_","curveMemberParser_","CURVEMEMBER_PARSERS_","surfaceMemberParser_","SURFACEMEMBER_PARSERS_","readPatch_","PATCHES_PARSERS_","readSegment_","SEGMENTS_PARSERS_","readPolygonPatch_","readLineStringSegment_","interiorParser_","flatLinearRing","exteriorParser_","readSurface_","SURFACE_PARSERS_","readCurve_","CURVE_PARSERS_","readEnvelope_","ENVELOPE_PARSERS_","readFlatPos_","re","containerSrs","readFlatPosList_","contextDimension","dim","writePos_","srsDimension","getCoords_","opt_srsName","opt_hasZ","writePosList_","writePoint_","writeEnvelope","ENVELOPE_SERIALIZERS_","writeLinearRing_","posList","RING_NODE_FACTORY_","exteriorWritten","writeSurfaceOrPolygon_","RING_SERIALIZERS_","patches","writeSurfacePatches_","writeCurveOrLineString_","writeCurveSegments_","writeMultiSurfaceOrPolygon_","SURFACEORPOLYGONMEMBER_SERIALIZERS_","MULTIGEOMETRY_MEMBER_NODE_FACTORY_","writeMultiPoint_","POINTMEMBER_SERIALIZERS_","writeMultiCurveOrLineString_","LINESTRINGORCURVEMEMBER_SERIALIZERS_","writeRing_","writeSurfaceOrPolygonMember_","GEOMETRY_NODE_FACTORY_","writePointMember_","writeLineStringOrCurveMember_","line","writeGeometryElement","GEOMETRY_SERIALIZERS_","writeFeatureElement","writeFeatureMembers_","setAttributeNS","interior","exterior","Surface","Curve","Envelope","curveMember","curveMembers","surfaceMember","surfaceMembers","lowerCorner","upperCorner","PolygonPatch","LineStringSegment","format_GML3","GML","format_GML","GML2_extends","GML2_schemaLocation","GML2_MULTIGEOMETRY_TO_MEMBER_NODENAME","GML2_GML2","GML2","readFlatCoordinates_","coordsGroups","readBox_","BOX_PARSERS_","innerBoundaryIsParser_","outerBoundaryIsParser_","createCoordinatesNode_","writeCoordinates_","innerBoundaryIs","outerBoundaryIs","format_GML2","GML32_extends","GML32","http://www.opengis.net/gml/3.2","format_GML32","GPX_extends","NAMESPACE_URIS","FEATURE_READER","rte","readRte","trk","readTrk","wpt","readWpt","GPX_PARSERS","LINK_PARSERS","GPX_SERIALIZERS","RTE_SEQUENCE","RTE_SERIALIZERS","TRK_SEQUENCE","TRK_SERIALIZERS","writeWptType","GPX_GPX","GPX","readExtensions_","readExtensions","handleReadExtensions_","extensionsNode","featureReader","gpx","GPX_NODE_FACTORY","RTE_PARSERS","cmt","desc","link","parseLink","extensions","parseExtensions","rtept","RTEPT_PARSERS","rteValues","layoutOptions","ele","TRK_PARSERS","trkseg","TRKSEG_PARSERS","trkpt","TRKPT_PARSERS","trkValues","WPT_PARSERS","magvar","geoidheight","sym","fix","sat","hdop","vdop","pdop","ageofdgpsdata","dgpsid","LINK_SEQUENCE","LINK_SERIALIZERS","writeLink","RTEPT_TYPE_SEQUENCE","TRKSEG_SERIALIZERS","TRKSEG_NODE_FACTORY","WPT_TYPE_SEQUENCE","WPT_TYPE_SERIALIZERS","date","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","GEOMETRY_TYPE_TO_NODENAME","applyLayoutOptions","href","format_GPX","GeoJSON_extends","GeoJSON_readGeometry","GeoJSON_readPointGeometry","GeoJSON_readLineStringGeometry","GeoJSON_readPolygonGeometry","GeoJSON_readMultiPointGeometry","GeoJSON_readMultiLineStringGeometry","GeoJSON_readMultiPolygonGeometry","readGeometryCollectionGeometry","GeoJSON_writeGeometry","geoJSON","GeoJSON_writePointGeometry","GeoJSON_writeLineStringGeometry","rightHanded","GeoJSON_writePolygonGeometry","GeoJSON_writeMultiPointGeometry","GeoJSON_writeMultiLineStringGeometry","GeoJSON_writeMultiPolygonGeometry","writeGeometryCollectionGeometry","format_GeoJSON","GeoJSON","extractGeometryName_","extractGeometryName","geoJSONFeature","geoJSONFeatures","crs","TextFeature_extends","DEFAULT_COLOR","DEFAULT_IMAGE_STYLE_ANCHOR","DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS","DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS","DEFAULT_IMAGE_STYLE_SIZE","DEFAULT_IMAGE_STYLE_SRC","DEFAULT_IMAGE_SCALE_MULTIPLIER","format_TextFeature","TextFeature","readFeatureFromText","readFeaturesFromText","readGeometryFromText","readProjectionFromText","writeFeatureText","writeFeaturesText","writeGeometryText","IGC_extends","IGCZ","BAROMETRIC","GPS","NONE","B_RECORD_RE","H_RECORD_RE","HFDTE_RECORD_RE","NEWLINE_RE","format_IGC","IGC","altitudeMode_","altitudeMode","year","month","day","lastDateTime","hour","minute","second","UTC","KML_extends","GX_NAMESPACE_URIS","KML_NAMESPACE_URIS","ICON_ANCHOR_UNITS_MAP","insetPixels","PLACEMARK_PARSERS","ExtendedData","extendedDataParser","Region","regionParser","MultiGeometry","readMultiGeometry","readStyle","StyleMap","styleMapValue","readStyleMapValue","placemarkObject","address","description","phoneNumber","styleUrl","readURI","visibility","MultiTrack","GX_MULTITRACK_GEOMETRY_PARSERS","Track","readGxTrack","NETWORK_LINK_PARSERS","Link","KML_LINK_PARSERS","REGION_PARSERS","LatLonAltBox","LAT_LON_ALT_BOX_PARSERS","regionObject","Lod","LOD_PARSERS","lodObject","KML_SEQUENCE","KML_SERIALIZERS","Document","DOCUMENT_SERIALIZERS","DOCUMENT_NODE_FACTORY","Placemark","writePlacemark","DEFAULT_FILL_STYLE","DEFAULT_NO_IMAGE_STYLE","DEFAULT_IMAGE_STYLE","DEFAULT_TEXT_STROKE_STYLE","KML_DEFAULT_STROKE_STYLE","DEFAULT_TEXT_STYLE","DEFAULT_STYLE","DEFAULT_STYLE_ARRAY","KML_KML","KML","defaultStyle_","defaultStyle","extractStyles_","extractStyles","writeStyles_","writeStyles","sharedStyles_","showPointNames_","showPointNames","readDocumentOrFolder_","Folder","readPlacemark_","readSharedStyle_","readSharedStyleMap_","sharedStyles","nameStyle","drawName","createNameStyleFunction","foundStyle","findStyle","styleValue","createFeatureStyleFunction","styleUri","baseURI","fs","readName","readNameFromDocument","readNameFromNode","name_2","readNetworkLinks","networkLinks","readNetworkLinksFromDocument","readNetworkLinksFromNode","readRegion","regions","readRegionFromDocument","readRegionFromNode","kml","xmlnsUri","textOffset","imageScale","foundText","readColor","hexColor","readFlatCoordinates","readScale","STYLE_MAP_PARSERS","Pair","pairObject","PAIR_PARSERS","ICON_STYLE_PARSERS","iconObject","ICON_PARSERS","hotSpot","xunits","yunits","LABEL_STYLE_PARSERS","LINE_STYLE_PARSERS","POLY_STYLE_PARSERS","outline","FLAT_LINEAR_RING_PARSERS","readFlatLinearRing","GX_TRACK_PARSERS","when","whens","gxTrackObject","readFlatCoordinatesFromNode","EXTRUDE_AND_ALTITUDE_MODE_PARSERS","extrude","tessellate","MULTI_GEOMETRY_PARSERS","multiGeometry","homogeneous","setCommonGeometryProperties","INNER_BOUNDARY_IS_PARSERS","OUTER_BOUNDARY_IS_PARSERS","STYLE_PARSERS","IconStyle","styleObject","IconObject","drawIcon","LabelStyle","LineStyle","PolyStyle","hasExtrude","hasTessellate","hasAltitudeMode","extrudes","tessellates","altitudeModes","DATA_PARSERS","displayName","EXTENDED_DATA_PARSERS","Data","featureObject","SchemaData","SCHEMA_DATA_PARSERS","SimpleData","minAltitude","maxAltitude","north","south","east","west","minLodPixels","maxLodPixels","minFadeExtent","maxFadeExtent","writeColorTextNode","rgba","abgr","hex","EXTENDEDDATA_NODE_SERIALIZERS","pair","createCDATASection","writeCDATASection","DATA_NODE_FACTORY","ICON_SEQUENCE","ICON_SERIALIZERS","GX_NODE_FACTORY","ICON_STYLE_SEQUENCE","ICON_STYLE_SERIALIZERS","icon","vec2","writeScaleTextNode","LABEL_STYLE_SEQUENCE","LABEL_STYLE_SERIALIZERS","LINE_STYLE_SEQUENCE","LINE_STYLE_SERIALIZERS","KML_GEOMETRY_TYPE_TO_NODENAME","GEOMETRY_NODE_FACTORY","POINT_NODE_FACTORY","LINE_STRING_NODE_FACTORY","LINEAR_RING_NODE_FACTORY","POLYGON_NODE_FACTORY","MULTI_GEOMETRY_SERIALIZERS","writePrimitiveGeometry","writePolygon","writeMultiGeometry","BOUNDARY_IS_SERIALIZERS","writeBoundaryIs","PLACEMARK_SERIALIZERS","namesAndValues","names","STYLE_SEQUENCE","STYLE_SERIALIZERS","PLACEMARK_SEQUENCE","EXTENDEDDATA_NODE_FACTORY","v","PRIMITIVE_GEOMETRY_SEQUENCE","PRIMITIVE_GEOMETRY_SERIALIZERS","POLYGON_SERIALIZERS","INNER_BOUNDARY_NODE_FACTORY","OUTER_BOUNDARY_NODE_FACTORY","POLY_STYLE_SERIALIZERS","COLOR_NODE_FACTORY","iconProperties","format_KML","Feature_tmpTransform","Feature_RenderFeature","RenderFeature","flatCoordinates_","flatMidpoints_","properties_","midpoint","render_Feature","MVT_extends","layersPBFReader","layerPBFReader","featurePBFReader","readRawFeature","format_MVT","MVT","featureClass_","featureClass","layerName_","layerName","readRawGeometry_","cmd","coordsLen","currentEnd","cmdLen","createFeature_","rawFeature","getGeometryType","prevEndIndex","ctor","pbf_default","pbfLayers","pbfLayer","OSMXML_extends","OSMXML_NAMESPACE_URIS","WAY_PARSERS","nd","ndrefs","readTag","PARSERS","tags","NODE_PARSERS","way","ways","OSMXML_OSMXML","OSMXML","format_OSMXML","flipXY","opt_destOffset","destOffset","Polyline_extends","encodeDeltas","numbers","opt_factor","factor","lastNumbers","encodeFloats","decodeDeltas","encoded","decodeFloats","encodeUnsignedInteger","encodeUnsignedIntegers","encodeSignedIntegers","current","decodeUnsignedIntegers","decodeSignedIntegers","format_Polyline","Polyline","factor_","geometryLayout_","geometryLayout","TopoJSON_extends","TopoJSON_TopoJSON","TopoJSON","topoJSONTopology","arcs","transformArc","transformArcs","topoJSONFeatures","objectName","readFeaturesFromGeometryCollection","readFeatureFromGeometry","TopoJSON_GEOMETRY_READERS","transformVertex","concatenateArcs","polyArray","ringCoords","indices","format_TopoJSON","filter_Filter","Filter","tagName_","getTagName","LogicalNary_extends","filter_LogicalNary","LogicalNary","conditions","And_extends","filter_And","And","Bbox_extends","filter_Bbox","Bbox","Spatial_extends","filter_Spatial","Spatial","Contains_extends","filter_Contains","Contains","Comparison_extends","filter_Comparison","Comparison","propertyName","During_extends","filter_During","During","ComparisonBinary_extends","filter_ComparisonBinary","ComparisonBinary","expression","opt_matchCase","matchCase","EqualTo_extends","filter_EqualTo","EqualTo","GreaterThan_extends","filter_GreaterThan","GreaterThan","GreaterThanOrEqualTo_extends","filter_GreaterThanOrEqualTo","GreaterThanOrEqualTo","Intersects_extends","filter_Intersects","Intersects","IsBetween_extends","filter_IsBetween","IsBetween","lowerBoundary","upperBoundary","IsLike_extends","filter_IsLike","IsLike","pattern","opt_wildCard","opt_singleChar","opt_escapeChar","wildCard","singleChar","escapeChar","IsNull_extends","filter_IsNull","IsNull","LessThan_extends","filter_LessThan","LessThan","LessThanOrEqualTo_extends","filter_LessThanOrEqualTo","LessThanOrEqualTo","Not_extends","filter_Not","Not","NotEqualTo_extends","filter_NotEqualTo","NotEqualTo","Or_extends","filter_Or","Or","Within_extends","filter_Within","Within","and","filter_bbox","WFS_extends","boundedBy","TRANSACTION_SUMMARY_PARSERS","http://www.opengis.net/wfs","totalInserted","totalUpdated","totalDeleted","TRANSACTION_RESPONSE_PARSERS","TransactionSummary","InsertResults","INSERT_RESULTS_PARSERS","QUERY_SERIALIZERS","PropertyName","TRANSACTION_SERIALIZERS","Insert","gmlVersion","Update","featurePrefix","typeName","getTypeName","XMLNS","writeOgcFidFilter","Delete","WFSNS","Native","nativeElement","vendorId","safeToIgnore","FEATURE_PREFIX","OGCNS","FESNS","SCHEMA_LOCATIONS","1.1.0","1.0.0","DEFAULT_VERSION","WFS_WFS","WFS","featureType_","featureNS_","gmlFormat_","gmlFormat","schemaLocation_","getFeatureType","setFeatureType","readTransactionResponse","readTransactionResponseFromDocument","readTransactionResponseFromNode","readFeatureCollectionMetadata","readFeatureCollectionMetadataFromDocument","readFeatureCollectionMetadataFromNode","writeGetFeature","handle","outputFormat","maxFeatures","resultType","viewParams","propertyNames","GETFEATURE_SERIALIZERS","writeTransaction","inserts","updates","deletes","baseObj","gmlOptions","nativeElements","OGC_FID_PARSERS","http://www.opengis.net/ogc","FeatureId","prefix","Query","writeFilterCondition","valueReference","timePeriod","writeTimeInstant","writeLogicalFilter","BBOX","writeOgcPropertyName","PropertyIsEqualTo","writeComparisonFilter","PropertyIsNotEqualTo","PropertyIsLessThan","PropertyIsLessThanOrEqualTo","PropertyIsGreaterThan","PropertyIsGreaterThanOrEqualTo","PropertyIsNull","PropertyIsBetween","writeOgcLiteral","PropertyIsLike","writeOgcExpression","timeInstant","timePosition","format_WFS","WKT_extends","GeometryConstructor","LINESTRING","MULTIPOINT","MULTILINESTRING","MULTIPOLYGON","Z","TokenType","WKTGeometryType","WKT_type","toUpperCase","Lexer","wkt","index_","isAlpha_","isNumeric_","opt_decimal","isWhiteSpace_","nextChar_","nextToken","readNumber_","readText_","scientificNotation","substring","WKT_Parser","Parser","lexer","lexer_","token_","layout_","consume_","isTokenType","isMatch","parseGeometry_","parseGeometryLayout_","dimToken","dimInfo","parseGeometryCollectionText_","isEmptyGeometry_","formatErrorMessage_","parsePointText_","parsePoint_","parseLineStringText_","parsePointList_","parsePolygonText_","parseLineStringTextList_","parseMultiPointText_","parsePointTextList_","parseMultiLineStringText_","parseMultiPolygonText_","parsePolygonTextList_","token","geomType","WKT_WKT","WKT","splitCollection_","splitCollection","parse_","encode","encodePointGeometry","encodeLineStringGeometry","encodePolygonGeometry","GeometryEncoder","components","geoms","enc","geometryEncoder","encodeGeometryLayout","format_WKT","NAMESPACE_URI","readHref","format_XML","readFromDocument","readFromNode","WMSCapabilities_extends","WMSCapabilities_NAMESPACE_URIS","WMSCapabilities_PARSERS","SERVICE_PARSERS","Capability","CAPABILITY_PARSERS","REQUEST_PARSERS","Exception","EXCEPTION_PARSERS","LAYER_PARSERS","WMSCapabilities_WMSCapabilities","WMSCapabilities","wmsCapabilityObject","Name","Title","Abstract","KeywordList","readKeywordList","OnlineResource","ContactInformation","CONTACT_INFORMATION_PARSERS","Fees","AccessConstraints","LayerLimit","MaxWidth","MaxHeight","ContactPersonPrimary","CONTACT_PERSON_PARSERS","ContactPosition","ContactAddress","CONTACT_ADDRESS_PARSERS","ContactVoiceTelephone","ContactFacsimileTelephone","ContactElectronicMailAddress","ContactPerson","ContactOrganization","AddressType","Address","City","StateOrProvince","PostCode","Country","CRS","EX_GeographicBoundingBox","geographicBoundingBox","EX_GEOGRAPHIC_BOUNDING_BOX_PARSERS","westBoundLongitude","southBoundLatitude","eastBoundLongitude","northBoundLatitude","BoundingBox","Dimension","unitSymbol","multipleValues","nearestValue","ATTRIBUTION_PARSERS","AuthorityURL","authorityObject","readFormatOnlineresource","Identifier","MetadataURL","metadataObject","DataURL","FeatureListURL","WMSCapabilities_STYLE_PARSERS","MinScaleDenominator","MaxScaleDenominator","parentLayerObject","layerObject","queryable","cascaded","noSubsets","fixedWidth","fixedHeight","childValue","parentValue","LogoURL","readSizedFormatOnlineresource","GetCapabilities","readOperationType","GetMap","GetFeatureInfo","OPERATIONTYPE_PARSERS","DCPType","DCPTYPE_PARSERS","HTTP","HTTP_PARSERS","Get","Post","LegendURL","StyleSheetURL","StyleURL","FORMAT_ONLINERESOURCE_PARSERS","KEYWORDLIST_PARSERS","Keyword","formatOnlineresource","format_WMSCapabilities","WMSGetFeatureInfo_extends","format_WMSGetFeatureInfo","WMSGetFeatureInfo","readFeatures_","layerElement","layerFeatures","gmlFeatures","OWS_extends","OWS_NAMESPACE_URIS","OWS_PARSERS","ServiceIdentification","SERVICE_IDENTIFICATION_PARSERS","ServiceProvider","SERVICE_PROVIDER_PARSERS","OperationsMetadata","OPERATIONS_METADATA_PARSERS","OWS_OWS","OWS","owsObject","ADDRESS_PARSERS","DeliveryPoint","AdministrativeArea","PostalCode","ElectronicMailAddress","ALLOWED_VALUES_PARSERS","Value","CONSTRAINT_PARSERS","AllowedValues","CONTACT_INFO_PARSERS","Phone","PHONE_PARSERS","DCP_PARSERS","OWS_HTTP_PARSERS","REQUEST_METHOD_PARSERS","OPERATION_PARSERS","DCP","Operation","Voice","Facsimile","Constraint","SERVICE_CONTACT_PARSERS","IndividualName","PositionName","ContactInfo","ServiceTypeVersion","ServiceType","ProviderName","ProviderSite","ServiceContact","format_OWS","WMTSCapabilities_extends","WMTSCapabilities_NAMESPACE_URIS","WMTSCapabilities_OWS_NAMESPACE_URIS","WMTSCapabilities_PARSERS","Contents","CONTENTS_PARSERS","WMTSCapabilities_WMTSCapabilities","WMTSCapabilities","owsParser_","WMTSCapabilityObject","WMTSCapabilities_LAYER_PARSERS","TileMatrixSet","TMS_PARSERS","WMTSCapabilities_STYLE_PARSERS","isDefault","TileMatrixSetLink","TMS_LINKS_PARSERS","DIMENSION_PARSERS","ResourceURL","resourceType","WGS84BoundingBox","WGS84_BBOX_READERS","legend","TileMatrixSetLimits","TMS_LIMITS_LIST_PARSERS","TileMatrixLimits","TMS_LIMITS_PARSERS","MinTileRow","MaxTileRow","MinTileCol","MaxTileCol","LowerCorner","readCoordinates","UpperCorner","WellKnownScaleSet","TM_PARSERS","SupportedCRS","TopLeftCorner","ScaleDenominator","TileWidth","TileHeight","MatrixWidth","MatrixHeight","format_WMTSCapabilities","FullScreen_extends","FullScreen_events","isFullScreenSupported","webkitRequestFullscreen","msRequestFullscreen","msFullscreenEnabled","requestFullscreen","fullscreenEnabled","isFullScreen","webkitIsFullScreen","msFullscreenElement","fullscreenElement","requestFullScreen","control_FullScreen","FullScreen","cssClassName_","labelNode_","labelActive","labelActiveNode_","button_","setClassName_","handleFullScreen_","exitFullscreen","msExitFullscreen","webkitExitFullscreen","requestFullScreenWithKeys","handleFullScreenChange_","fullscreen","activeClassName","inactiveClassName","nextClassName","MousePosition_extends","MousePosition_render","mapProjection_","control_MousePosition","MousePosition","coordinateFormat","setCoordinateFormat","undefinedHTML_","undefinedHTML","renderOnMouseOut_","renderedHTML_","lastMouseMovePixel_","getCoordinateFormat","handleMouseMove","updateHTML_","handleMouseOut","html","OverviewMap_extends","OverviewMap_render","validateExtent_","updateBox_","control_OverviewMap","OverviewMap","ovmapDiv_","ovmap_","ovmap","boxSizing","boxOverlay_","scope","overlayBox","mousePosition","endMoving","oldView","unbindView_","handleMapPropertyChange_","bindView_","resetExtent_","newView","handleRotationChanged_","ovmapSize","ovextent","topLeftPixel","bottomRightPixel","boxWidth","boxHeight","ovmapWidth","ovmapHeight","recenter_","ovview","steps","MAX_RATIO","ovresolution","rotateBottomLeft","calculateCoordinateRotate_","coordinateRotate","getOverviewMap","ScaleLine_extends","UNITS_PROP","ScaleLine_Units","IMPERIAL","NAUTICAL","METRIC","US","LEADING_DIGITS","ScaleLine_render","viewState_","control_ScaleLine","ScaleLine","bar","innerElement_","minWidth_","minWidth","renderedWidth_","handleUnitsChanged_","setUnits","scaleBar_","scaleBarSteps_","scaleBarText_","pointResolutionUnits","nominalCount","suffix","metersPerDegree","decimalCount","createScaleBar","mapScale","getScaleForResolution","scaleSteps","stepWidth","backgroundColor","createMarker","createStepText","isLast","lengthString","mpu","ZoomSlider_extends","Direction","VERTICAL","HORIZONTAL","ZoomSlider_render","sliderInitialized_","initSlider_","currentResolution_","setThumbPosition_","control_ZoomSlider","ZoomSlider","direction_","heightLimit_","widthLimit_","startX_","startY_","thumbSize_","thumbElement","containerElement","dragger_","handleDraggerStart_","handleDraggerDrag_","handleDraggerEnd_","handleContainerClick_","containerSize","thumb","thumbWidth","thumbHeight","relativePosition","getRelativePosition_","getResolutionForPosition_","drag","getPositionForResolution_","ZoomToExtent_extends","control_ZoomToExtent","ZoomToExtent","handleZoomToExtent","ol","colorlike","featureloader","has","loadingstrategy","proj4","webgl","sphere","unByKey","stableSort","compareFnc","createStringXY","toStringHDMS","upAndDown","click","doubleClick","penOnly","pointerEvt","platformModifierKeyOnly","touchOnly","writeFilter","between","during","equalTo","greaterThan","greaterThanOrEqualTo","isNull","lessThan","lessThanOrEqualTo","like","not","notEqualTo","or","within","createBox","boxCoordinates","createRegularPolygon","fromLonLat","projCodes","defs","def","axis","to_meter","code1","proj1","code2","proj2","toLonLat","lonLat","getRenderPixel","getVectorContext","toContext","optionsFromCapabilities","wmtsCap","tileMatrixSets","supportedCRS","matrixSetObj","projConfig","wgs84BoundingBox","wgs84ProjectionExtent","gets","encodings","sphere_getArea","ELEMENT_ARRAY_BUFFER","__webpack_exports__"],"mappings":"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","file":"ol.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ol\"] = factory();\n\telse\n\t\troot[\"ol\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 7);\n","'use strict';\n\nmodule.exports = rbush;\nmodule.exports.default = rbush;\n\nvar quickselect = require('quickselect');\n\nfunction rbush(maxEntries, format) {\n    if (!(this instanceof rbush)) return new rbush(maxEntries, format);\n\n    // max entries in a node is 9 by default; min node fill is 40% for best performance\n    this._maxEntries = Math.max(4, maxEntries || 9);\n    this._minEntries = Math.max(2, Math.ceil(this._maxEntries * 0.4));\n\n    if (format) {\n        this._initFormat(format);\n    }\n\n    this.clear();\n}\n\nrbush.prototype = {\n\n    all: function () {\n        return this._all(this.data, []);\n    },\n\n    search: function (bbox) {\n\n        var node = this.data,\n            result = [],\n            toBBox = this.toBBox;\n\n        if (!intersects(bbox, node)) return result;\n\n        var nodesToSearch = [],\n            i, len, child, childBBox;\n\n        while (node) {\n            for (i = 0, len = node.children.length; i < len; i++) {\n\n                child = node.children[i];\n                childBBox = node.leaf ? toBBox(child) : child;\n\n                if (intersects(bbox, childBBox)) {\n                    if (node.leaf) result.push(child);\n                    else if (contains(bbox, childBBox)) this._all(child, result);\n                    else nodesToSearch.push(child);\n                }\n            }\n            node = nodesToSearch.pop();\n        }\n\n        return result;\n    },\n\n    collides: function (bbox) {\n\n        var node = this.data,\n            toBBox = this.toBBox;\n\n        if (!intersects(bbox, node)) return false;\n\n        var nodesToSearch = [],\n            i, len, child, childBBox;\n\n        while (node) {\n            for (i = 0, len = node.children.length; i < len; i++) {\n\n                child = node.children[i];\n                childBBox = node.leaf ? toBBox(child) : child;\n\n                if (intersects(bbox, childBBox)) {\n                    if (node.leaf || contains(bbox, childBBox)) return true;\n                    nodesToSearch.push(child);\n                }\n            }\n            node = nodesToSearch.pop();\n        }\n\n        return false;\n    },\n\n    load: function (data) {\n        if (!(data && data.length)) return this;\n\n        if (data.length < this._minEntries) {\n            for (var i = 0, len = data.length; i < len; i++) {\n                this.insert(data[i]);\n            }\n            return this;\n        }\n\n        // recursively build the tree with the given data from scratch using OMT algorithm\n        var node = this._build(data.slice(), 0, data.length - 1, 0);\n\n        if (!this.data.children.length) {\n            // save as is if tree is empty\n            this.data = node;\n\n        } else if (this.data.height === node.height) {\n            // split root if trees have the same height\n            this._splitRoot(this.data, node);\n\n        } else {\n            if (this.data.height < node.height) {\n                // swap trees if inserted one is bigger\n                var tmpNode = this.data;\n                this.data = node;\n                node = tmpNode;\n            }\n\n            // insert the small tree into the large tree at appropriate level\n            this._insert(node, this.data.height - node.height - 1, true);\n        }\n\n        return this;\n    },\n\n    insert: function (item) {\n        if (item) this._insert(item, this.data.height - 1);\n        return this;\n    },\n\n    clear: function () {\n        this.data = createNode([]);\n        return this;\n    },\n\n    remove: function (item, equalsFn) {\n        if (!item) return this;\n\n        var node = this.data,\n            bbox = this.toBBox(item),\n            path = [],\n            indexes = [],\n            i, parent, index, goingUp;\n\n        // depth-first iterative tree traversal\n        while (node || path.length) {\n\n            if (!node) { // go up\n                node = path.pop();\n                parent = path[path.length - 1];\n                i = indexes.pop();\n                goingUp = true;\n            }\n\n            if (node.leaf) { // check current node\n                index = findItem(item, node.children, equalsFn);\n\n                if (index !== -1) {\n                    // item found, remove the item and condense tree upwards\n                    node.children.splice(index, 1);\n                    path.push(node);\n                    this._condense(path);\n                    return this;\n                }\n            }\n\n            if (!goingUp && !node.leaf && contains(node, bbox)) { // go down\n                path.push(node);\n                indexes.push(i);\n                i = 0;\n                parent = node;\n                node = node.children[0];\n\n            } else if (parent) { // go right\n                i++;\n                node = parent.children[i];\n                goingUp = false;\n\n            } else node = null; // nothing found\n        }\n\n        return this;\n    },\n\n    toBBox: function (item) { return item; },\n\n    compareMinX: compareNodeMinX,\n    compareMinY: compareNodeMinY,\n\n    toJSON: function () { return this.data; },\n\n    fromJSON: function (data) {\n        this.data = data;\n        return this;\n    },\n\n    _all: function (node, result) {\n        var nodesToSearch = [];\n        while (node) {\n            if (node.leaf) result.push.apply(result, node.children);\n            else nodesToSearch.push.apply(nodesToSearch, node.children);\n\n            node = nodesToSearch.pop();\n        }\n        return result;\n    },\n\n    _build: function (items, left, right, height) {\n\n        var N = right - left + 1,\n            M = this._maxEntries,\n            node;\n\n        if (N <= M) {\n            // reached leaf level; return leaf\n            node = createNode(items.slice(left, right + 1));\n            calcBBox(node, this.toBBox);\n            return node;\n        }\n\n        if (!height) {\n            // target height of the bulk-loaded tree\n            height = Math.ceil(Math.log(N) / Math.log(M));\n\n            // target number of root entries to maximize storage utilization\n            M = Math.ceil(N / Math.pow(M, height - 1));\n        }\n\n        node = createNode([]);\n        node.leaf = false;\n        node.height = height;\n\n        // split the items into M mostly square tiles\n\n        var N2 = Math.ceil(N / M),\n            N1 = N2 * Math.ceil(Math.sqrt(M)),\n            i, j, right2, right3;\n\n        multiSelect(items, left, right, N1, this.compareMinX);\n\n        for (i = left; i <= right; i += N1) {\n\n            right2 = Math.min(i + N1 - 1, right);\n\n            multiSelect(items, i, right2, N2, this.compareMinY);\n\n            for (j = i; j <= right2; j += N2) {\n\n                right3 = Math.min(j + N2 - 1, right2);\n\n                // pack each entry recursively\n                node.children.push(this._build(items, j, right3, height - 1));\n            }\n        }\n\n        calcBBox(node, this.toBBox);\n\n        return node;\n    },\n\n    _chooseSubtree: function (bbox, node, level, path) {\n\n        var i, len, child, targetNode, area, enlargement, minArea, minEnlargement;\n\n        while (true) {\n            path.push(node);\n\n            if (node.leaf || path.length - 1 === level) break;\n\n            minArea = minEnlargement = Infinity;\n\n            for (i = 0, len = node.children.length; i < len; i++) {\n                child = node.children[i];\n                area = bboxArea(child);\n                enlargement = enlargedArea(bbox, child) - area;\n\n                // choose entry with the least area enlargement\n                if (enlargement < minEnlargement) {\n                    minEnlargement = enlargement;\n                    minArea = area < minArea ? area : minArea;\n                    targetNode = child;\n\n                } else if (enlargement === minEnlargement) {\n                    // otherwise choose one with the smallest area\n                    if (area < minArea) {\n                        minArea = area;\n                        targetNode = child;\n                    }\n                }\n            }\n\n            node = targetNode || node.children[0];\n        }\n\n        return node;\n    },\n\n    _insert: function (item, level, isNode) {\n\n        var toBBox = this.toBBox,\n            bbox = isNode ? item : toBBox(item),\n            insertPath = [];\n\n        // find the best node for accommodating the item, saving all nodes along the path too\n        var node = this._chooseSubtree(bbox, this.data, level, insertPath);\n\n        // put the item into the node\n        node.children.push(item);\n        extend(node, bbox);\n\n        // split on node overflow; propagate upwards if necessary\n        while (level >= 0) {\n            if (insertPath[level].children.length > this._maxEntries) {\n                this._split(insertPath, level);\n                level--;\n            } else break;\n        }\n\n        // adjust bboxes along the insertion path\n        this._adjustParentBBoxes(bbox, insertPath, level);\n    },\n\n    // split overflowed node into two\n    _split: function (insertPath, level) {\n\n        var node = insertPath[level],\n            M = node.children.length,\n            m = this._minEntries;\n\n        this._chooseSplitAxis(node, m, M);\n\n        var splitIndex = this._chooseSplitIndex(node, m, M);\n\n        var newNode = createNode(node.children.splice(splitIndex, node.children.length - splitIndex));\n        newNode.height = node.height;\n        newNode.leaf = node.leaf;\n\n        calcBBox(node, this.toBBox);\n        calcBBox(newNode, this.toBBox);\n\n        if (level) insertPath[level - 1].children.push(newNode);\n        else this._splitRoot(node, newNode);\n    },\n\n    _splitRoot: function (node, newNode) {\n        // split root node\n        this.data = createNode([node, newNode]);\n        this.data.height = node.height + 1;\n        this.data.leaf = false;\n        calcBBox(this.data, this.toBBox);\n    },\n\n    _chooseSplitIndex: function (node, m, M) {\n\n        var i, bbox1, bbox2, overlap, area, minOverlap, minArea, index;\n\n        minOverlap = minArea = Infinity;\n\n        for (i = m; i <= M - m; i++) {\n            bbox1 = distBBox(node, 0, i, this.toBBox);\n            bbox2 = distBBox(node, i, M, this.toBBox);\n\n            overlap = intersectionArea(bbox1, bbox2);\n            area = bboxArea(bbox1) + bboxArea(bbox2);\n\n            // choose distribution with minimum overlap\n            if (overlap < minOverlap) {\n                minOverlap = overlap;\n                index = i;\n\n                minArea = area < minArea ? area : minArea;\n\n            } else if (overlap === minOverlap) {\n                // otherwise choose distribution with minimum area\n                if (area < minArea) {\n                    minArea = area;\n                    index = i;\n                }\n            }\n        }\n\n        return index;\n    },\n\n    // sorts node children by the best axis for split\n    _chooseSplitAxis: function (node, m, M) {\n\n        var compareMinX = node.leaf ? this.compareMinX : compareNodeMinX,\n            compareMinY = node.leaf ? this.compareMinY : compareNodeMinY,\n            xMargin = this._allDistMargin(node, m, M, compareMinX),\n            yMargin = this._allDistMargin(node, m, M, compareMinY);\n\n        // if total distributions margin value is minimal for x, sort by minX,\n        // otherwise it's already sorted by minY\n        if (xMargin < yMargin) node.children.sort(compareMinX);\n    },\n\n    // total margin of all possible split distributions where each node is at least m full\n    _allDistMargin: function (node, m, M, compare) {\n\n        node.children.sort(compare);\n\n        var toBBox = this.toBBox,\n            leftBBox = distBBox(node, 0, m, toBBox),\n            rightBBox = distBBox(node, M - m, M, toBBox),\n            margin = bboxMargin(leftBBox) + bboxMargin(rightBBox),\n            i, child;\n\n        for (i = m; i < M - m; i++) {\n            child = node.children[i];\n            extend(leftBBox, node.leaf ? toBBox(child) : child);\n            margin += bboxMargin(leftBBox);\n        }\n\n        for (i = M - m - 1; i >= m; i--) {\n            child = node.children[i];\n            extend(rightBBox, node.leaf ? toBBox(child) : child);\n            margin += bboxMargin(rightBBox);\n        }\n\n        return margin;\n    },\n\n    _adjustParentBBoxes: function (bbox, path, level) {\n        // adjust bboxes along the given tree path\n        for (var i = level; i >= 0; i--) {\n            extend(path[i], bbox);\n        }\n    },\n\n    _condense: function (path) {\n        // go through the path, removing empty nodes and updating bboxes\n        for (var i = path.length - 1, siblings; i >= 0; i--) {\n            if (path[i].children.length === 0) {\n                if (i > 0) {\n                    siblings = path[i - 1].children;\n                    siblings.splice(siblings.indexOf(path[i]), 1);\n\n                } else this.clear();\n\n            } else calcBBox(path[i], this.toBBox);\n        }\n    },\n\n    _initFormat: function (format) {\n        // data format (minX, minY, maxX, maxY accessors)\n\n        // uses eval-type function compilation instead of just accepting a toBBox function\n        // because the algorithms are very sensitive to sorting functions performance,\n        // so they should be dead simple and without inner calls\n\n        var compareArr = ['return a', ' - b', ';'];\n\n        this.compareMinX = new Function('a', 'b', compareArr.join(format[0]));\n        this.compareMinY = new Function('a', 'b', compareArr.join(format[1]));\n\n        this.toBBox = new Function('a',\n            'return {minX: a' + format[0] +\n            ', minY: a' + format[1] +\n            ', maxX: a' + format[2] +\n            ', maxY: a' + format[3] + '};');\n    }\n};\n\nfunction findItem(item, items, equalsFn) {\n    if (!equalsFn) return items.indexOf(item);\n\n    for (var i = 0; i < items.length; i++) {\n        if (equalsFn(item, items[i])) return i;\n    }\n    return -1;\n}\n\n// calculate node's bbox from bboxes of its children\nfunction calcBBox(node, toBBox) {\n    distBBox(node, 0, node.children.length, toBBox, node);\n}\n\n// min bounding rectangle of node children from k to p-1\nfunction distBBox(node, k, p, toBBox, destNode) {\n    if (!destNode) destNode = createNode(null);\n    destNode.minX = Infinity;\n    destNode.minY = Infinity;\n    destNode.maxX = -Infinity;\n    destNode.maxY = -Infinity;\n\n    for (var i = k, child; i < p; i++) {\n        child = node.children[i];\n        extend(destNode, node.leaf ? toBBox(child) : child);\n    }\n\n    return destNode;\n}\n\nfunction extend(a, b) {\n    a.minX = Math.min(a.minX, b.minX);\n    a.minY = Math.min(a.minY, b.minY);\n    a.maxX = Math.max(a.maxX, b.maxX);\n    a.maxY = Math.max(a.maxY, b.maxY);\n    return a;\n}\n\nfunction compareNodeMinX(a, b) { return a.minX - b.minX; }\nfunction compareNodeMinY(a, b) { return a.minY - b.minY; }\n\nfunction bboxArea(a)   { return (a.maxX - a.minX) * (a.maxY - a.minY); }\nfunction bboxMargin(a) { return (a.maxX - a.minX) + (a.maxY - a.minY); }\n\nfunction enlargedArea(a, b) {\n    return (Math.max(b.maxX, a.maxX) - Math.min(b.minX, a.minX)) *\n           (Math.max(b.maxY, a.maxY) - Math.min(b.minY, a.minY));\n}\n\nfunction intersectionArea(a, b) {\n    var minX = Math.max(a.minX, b.minX),\n        minY = Math.max(a.minY, b.minY),\n        maxX = Math.min(a.maxX, b.maxX),\n        maxY = Math.min(a.maxY, b.maxY);\n\n    return Math.max(0, maxX - minX) *\n           Math.max(0, maxY - minY);\n}\n\nfunction contains(a, b) {\n    return a.minX <= b.minX &&\n           a.minY <= b.minY &&\n           b.maxX <= a.maxX &&\n           b.maxY <= a.maxY;\n}\n\nfunction intersects(a, b) {\n    return b.minX <= a.maxX &&\n           b.minY <= a.maxY &&\n           b.maxX >= a.minX &&\n           b.maxY >= a.minY;\n}\n\nfunction createNode(children) {\n    return {\n        children: children,\n        height: 1,\n        leaf: true,\n        minX: Infinity,\n        minY: Infinity,\n        maxX: -Infinity,\n        maxY: -Infinity\n    };\n}\n\n// sort an array so that items come in groups of n unsorted items, with groups sorted between each other;\n// combines selection algorithm with binary divide & conquer approach\n\nfunction multiSelect(arr, left, right, n, compare) {\n    var stack = [left, right],\n        mid;\n\n    while (stack.length) {\n        right = stack.pop();\n        left = stack.pop();\n\n        if (right - left <= n) continue;\n\n        mid = left + Math.ceil((right - left) / n / 2) * n;\n        quickselect(arr, mid, left, right, compare);\n\n        stack.push(left, mid, mid, right);\n    }\n}\n","'use strict';\n\nmodule.exports = Pbf;\n\nvar ieee754 = require('ieee754');\n\nfunction Pbf(buf) {\n    this.buf = ArrayBuffer.isView && ArrayBuffer.isView(buf) ? buf : new Uint8Array(buf || 0);\n    this.pos = 0;\n    this.type = 0;\n    this.length = this.buf.length;\n}\n\nPbf.Varint  = 0; // varint: int32, int64, uint32, uint64, sint32, sint64, bool, enum\nPbf.Fixed64 = 1; // 64-bit: double, fixed64, sfixed64\nPbf.Bytes   = 2; // length-delimited: string, bytes, embedded messages, packed repeated fields\nPbf.Fixed32 = 5; // 32-bit: float, fixed32, sfixed32\n\nvar SHIFT_LEFT_32 = (1 << 16) * (1 << 16),\n    SHIFT_RIGHT_32 = 1 / SHIFT_LEFT_32;\n\nPbf.prototype = {\n\n    destroy: function() {\n        this.buf = null;\n    },\n\n    // === READING =================================================================\n\n    readFields: function(readField, result, end) {\n        end = end || this.length;\n\n        while (this.pos < end) {\n            var val = this.readVarint(),\n                tag = val >> 3,\n                startPos = this.pos;\n\n            this.type = val & 0x7;\n            readField(tag, result, this);\n\n            if (this.pos === startPos) this.skip(val);\n        }\n        return result;\n    },\n\n    readMessage: function(readField, result) {\n        return this.readFields(readField, result, this.readVarint() + this.pos);\n    },\n\n    readFixed32: function() {\n        var val = readUInt32(this.buf, this.pos);\n        this.pos += 4;\n        return val;\n    },\n\n    readSFixed32: function() {\n        var val = readInt32(this.buf, this.pos);\n        this.pos += 4;\n        return val;\n    },\n\n    // 64-bit int handling is based on github.com/dpw/node-buffer-more-ints (MIT-licensed)\n\n    readFixed64: function() {\n        var val = readUInt32(this.buf, this.pos) + readUInt32(this.buf, this.pos + 4) * SHIFT_LEFT_32;\n        this.pos += 8;\n        return val;\n    },\n\n    readSFixed64: function() {\n        var val = readUInt32(this.buf, this.pos) + readInt32(this.buf, this.pos + 4) * SHIFT_LEFT_32;\n        this.pos += 8;\n        return val;\n    },\n\n    readFloat: function() {\n        var val = ieee754.read(this.buf, this.pos, true, 23, 4);\n        this.pos += 4;\n        return val;\n    },\n\n    readDouble: function() {\n        var val = ieee754.read(this.buf, this.pos, true, 52, 8);\n        this.pos += 8;\n        return val;\n    },\n\n    readVarint: function(isSigned) {\n        var buf = this.buf,\n            val, b;\n\n        b = buf[this.pos++]; val  =  b & 0x7f;        if (b < 0x80) return val;\n        b = buf[this.pos++]; val |= (b & 0x7f) << 7;  if (b < 0x80) return val;\n        b = buf[this.pos++]; val |= (b & 0x7f) << 14; if (b < 0x80) return val;\n        b = buf[this.pos++]; val |= (b & 0x7f) << 21; if (b < 0x80) return val;\n        b = buf[this.pos];   val |= (b & 0x0f) << 28;\n\n        return readVarintRemainder(val, isSigned, this);\n    },\n\n    readVarint64: function() { // for compatibility with v2.0.1\n        return this.readVarint(true);\n    },\n\n    readSVarint: function() {\n        var num = this.readVarint();\n        return num % 2 === 1 ? (num + 1) / -2 : num / 2; // zigzag encoding\n    },\n\n    readBoolean: function() {\n        return Boolean(this.readVarint());\n    },\n\n    readString: function() {\n        var end = this.readVarint() + this.pos,\n            str = readUtf8(this.buf, this.pos, end);\n        this.pos = end;\n        return str;\n    },\n\n    readBytes: function() {\n        var end = this.readVarint() + this.pos,\n            buffer = this.buf.subarray(this.pos, end);\n        this.pos = end;\n        return buffer;\n    },\n\n    // verbose for performance reasons; doesn't affect gzipped size\n\n    readPackedVarint: function(arr, isSigned) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readVarint(isSigned));\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readVarint(isSigned));\n        return arr;\n    },\n    readPackedSVarint: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readSVarint());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readSVarint());\n        return arr;\n    },\n    readPackedBoolean: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readBoolean());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readBoolean());\n        return arr;\n    },\n    readPackedFloat: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readFloat());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readFloat());\n        return arr;\n    },\n    readPackedDouble: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readDouble());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readDouble());\n        return arr;\n    },\n    readPackedFixed32: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readFixed32());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readFixed32());\n        return arr;\n    },\n    readPackedSFixed32: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readSFixed32());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readSFixed32());\n        return arr;\n    },\n    readPackedFixed64: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readFixed64());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readFixed64());\n        return arr;\n    },\n    readPackedSFixed64: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readSFixed64());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readSFixed64());\n        return arr;\n    },\n\n    skip: function(val) {\n        var type = val & 0x7;\n        if (type === Pbf.Varint) while (this.buf[this.pos++] > 0x7f) {}\n        else if (type === Pbf.Bytes) this.pos = this.readVarint() + this.pos;\n        else if (type === Pbf.Fixed32) this.pos += 4;\n        else if (type === Pbf.Fixed64) this.pos += 8;\n        else throw new Error('Unimplemented type: ' + type);\n    },\n\n    // === WRITING =================================================================\n\n    writeTag: function(tag, type) {\n        this.writeVarint((tag << 3) | type);\n    },\n\n    realloc: function(min) {\n        var length = this.length || 16;\n\n        while (length < this.pos + min) length *= 2;\n\n        if (length !== this.length) {\n            var buf = new Uint8Array(length);\n            buf.set(this.buf);\n            this.buf = buf;\n            this.length = length;\n        }\n    },\n\n    finish: function() {\n        this.length = this.pos;\n        this.pos = 0;\n        return this.buf.subarray(0, this.length);\n    },\n\n    writeFixed32: function(val) {\n        this.realloc(4);\n        writeInt32(this.buf, val, this.pos);\n        this.pos += 4;\n    },\n\n    writeSFixed32: function(val) {\n        this.realloc(4);\n        writeInt32(this.buf, val, this.pos);\n        this.pos += 4;\n    },\n\n    writeFixed64: function(val) {\n        this.realloc(8);\n        writeInt32(this.buf, val & -1, this.pos);\n        writeInt32(this.buf, Math.floor(val * SHIFT_RIGHT_32), this.pos + 4);\n        this.pos += 8;\n    },\n\n    writeSFixed64: function(val) {\n        this.realloc(8);\n        writeInt32(this.buf, val & -1, this.pos);\n        writeInt32(this.buf, Math.floor(val * SHIFT_RIGHT_32), this.pos + 4);\n        this.pos += 8;\n    },\n\n    writeVarint: function(val) {\n        val = +val || 0;\n\n        if (val > 0xfffffff || val < 0) {\n            writeBigVarint(val, this);\n            return;\n        }\n\n        this.realloc(4);\n\n        this.buf[this.pos++] =           val & 0x7f  | (val > 0x7f ? 0x80 : 0); if (val <= 0x7f) return;\n        this.buf[this.pos++] = ((val >>>= 7) & 0x7f) | (val > 0x7f ? 0x80 : 0); if (val <= 0x7f) return;\n        this.buf[this.pos++] = ((val >>>= 7) & 0x7f) | (val > 0x7f ? 0x80 : 0); if (val <= 0x7f) return;\n        this.buf[this.pos++] =   (val >>> 7) & 0x7f;\n    },\n\n    writeSVarint: function(val) {\n        this.writeVarint(val < 0 ? -val * 2 - 1 : val * 2);\n    },\n\n    writeBoolean: function(val) {\n        this.writeVarint(Boolean(val));\n    },\n\n    writeString: function(str) {\n        str = String(str);\n        this.realloc(str.length * 4);\n\n        this.pos++; // reserve 1 byte for short string length\n\n        var startPos = this.pos;\n        // write the string directly to the buffer and see how much was written\n        this.pos = writeUtf8(this.buf, str, this.pos);\n        var len = this.pos - startPos;\n\n        if (len >= 0x80) makeRoomForExtraLength(startPos, len, this);\n\n        // finally, write the message length in the reserved place and restore the position\n        this.pos = startPos - 1;\n        this.writeVarint(len);\n        this.pos += len;\n    },\n\n    writeFloat: function(val) {\n        this.realloc(4);\n        ieee754.write(this.buf, val, this.pos, true, 23, 4);\n        this.pos += 4;\n    },\n\n    writeDouble: function(val) {\n        this.realloc(8);\n        ieee754.write(this.buf, val, this.pos, true, 52, 8);\n        this.pos += 8;\n    },\n\n    writeBytes: function(buffer) {\n        var len = buffer.length;\n        this.writeVarint(len);\n        this.realloc(len);\n        for (var i = 0; i < len; i++) this.buf[this.pos++] = buffer[i];\n    },\n\n    writeRawMessage: function(fn, obj) {\n        this.pos++; // reserve 1 byte for short message length\n\n        // write the message directly to the buffer and see how much was written\n        var startPos = this.pos;\n        fn(obj, this);\n        var len = this.pos - startPos;\n\n        if (len >= 0x80) makeRoomForExtraLength(startPos, len, this);\n\n        // finally, write the message length in the reserved place and restore the position\n        this.pos = startPos - 1;\n        this.writeVarint(len);\n        this.pos += len;\n    },\n\n    writeMessage: function(tag, fn, obj) {\n        this.writeTag(tag, Pbf.Bytes);\n        this.writeRawMessage(fn, obj);\n    },\n\n    writePackedVarint:   function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedVarint, arr);   },\n    writePackedSVarint:  function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedSVarint, arr);  },\n    writePackedBoolean:  function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedBoolean, arr);  },\n    writePackedFloat:    function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedFloat, arr);    },\n    writePackedDouble:   function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedDouble, arr);   },\n    writePackedFixed32:  function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedFixed32, arr);  },\n    writePackedSFixed32: function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedSFixed32, arr); },\n    writePackedFixed64:  function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedFixed64, arr);  },\n    writePackedSFixed64: function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedSFixed64, arr); },\n\n    writeBytesField: function(tag, buffer) {\n        this.writeTag(tag, Pbf.Bytes);\n        this.writeBytes(buffer);\n    },\n    writeFixed32Field: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed32);\n        this.writeFixed32(val);\n    },\n    writeSFixed32Field: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed32);\n        this.writeSFixed32(val);\n    },\n    writeFixed64Field: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed64);\n        this.writeFixed64(val);\n    },\n    writeSFixed64Field: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed64);\n        this.writeSFixed64(val);\n    },\n    writeVarintField: function(tag, val) {\n        this.writeTag(tag, Pbf.Varint);\n        this.writeVarint(val);\n    },\n    writeSVarintField: function(tag, val) {\n        this.writeTag(tag, Pbf.Varint);\n        this.writeSVarint(val);\n    },\n    writeStringField: function(tag, str) {\n        this.writeTag(tag, Pbf.Bytes);\n        this.writeString(str);\n    },\n    writeFloatField: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed32);\n        this.writeFloat(val);\n    },\n    writeDoubleField: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed64);\n        this.writeDouble(val);\n    },\n    writeBooleanField: function(tag, val) {\n        this.writeVarintField(tag, Boolean(val));\n    }\n};\n\nfunction readVarintRemainder(l, s, p) {\n    var buf = p.buf,\n        h, b;\n\n    b = buf[p.pos++]; h  = (b & 0x70) >> 4;  if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 3;  if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 10; if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 17; if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 24; if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x01) << 31; if (b < 0x80) return toNum(l, h, s);\n\n    throw new Error('Expected varint not more than 10 bytes');\n}\n\nfunction readPackedEnd(pbf) {\n    return pbf.type === Pbf.Bytes ?\n        pbf.readVarint() + pbf.pos : pbf.pos + 1;\n}\n\nfunction toNum(low, high, isSigned) {\n    if (isSigned) {\n        return high * 0x100000000 + (low >>> 0);\n    }\n\n    return ((high >>> 0) * 0x100000000) + (low >>> 0);\n}\n\nfunction writeBigVarint(val, pbf) {\n    var low, high;\n\n    if (val >= 0) {\n        low  = (val % 0x100000000) | 0;\n        high = (val / 0x100000000) | 0;\n    } else {\n        low  = ~(-val % 0x100000000);\n        high = ~(-val / 0x100000000);\n\n        if (low ^ 0xffffffff) {\n            low = (low + 1) | 0;\n        } else {\n            low = 0;\n            high = (high + 1) | 0;\n        }\n    }\n\n    if (val >= 0x10000000000000000 || val < -0x10000000000000000) {\n        throw new Error('Given varint doesn\\'t fit into 10 bytes');\n    }\n\n    pbf.realloc(10);\n\n    writeBigVarintLow(low, high, pbf);\n    writeBigVarintHigh(high, pbf);\n}\n\nfunction writeBigVarintLow(low, high, pbf) {\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos]   = low & 0x7f;\n}\n\nfunction writeBigVarintHigh(high, pbf) {\n    var lsb = (high & 0x07) << 4;\n\n    pbf.buf[pbf.pos++] |= lsb         | ((high >>>= 3) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f;\n}\n\nfunction makeRoomForExtraLength(startPos, len, pbf) {\n    var extraLen =\n        len <= 0x3fff ? 1 :\n        len <= 0x1fffff ? 2 :\n        len <= 0xfffffff ? 3 : Math.floor(Math.log(len) / (Math.LN2 * 7));\n\n    // if 1 byte isn't enough for encoding message length, shift the data to the right\n    pbf.realloc(extraLen);\n    for (var i = pbf.pos - 1; i >= startPos; i--) pbf.buf[i + extraLen] = pbf.buf[i];\n}\n\nfunction writePackedVarint(arr, pbf)   { for (var i = 0; i < arr.length; i++) pbf.writeVarint(arr[i]);   }\nfunction writePackedSVarint(arr, pbf)  { for (var i = 0; i < arr.length; i++) pbf.writeSVarint(arr[i]);  }\nfunction writePackedFloat(arr, pbf)    { for (var i = 0; i < arr.length; i++) pbf.writeFloat(arr[i]);    }\nfunction writePackedDouble(arr, pbf)   { for (var i = 0; i < arr.length; i++) pbf.writeDouble(arr[i]);   }\nfunction writePackedBoolean(arr, pbf)  { for (var i = 0; i < arr.length; i++) pbf.writeBoolean(arr[i]);  }\nfunction writePackedFixed32(arr, pbf)  { for (var i = 0; i < arr.length; i++) pbf.writeFixed32(arr[i]);  }\nfunction writePackedSFixed32(arr, pbf) { for (var i = 0; i < arr.length; i++) pbf.writeSFixed32(arr[i]); }\nfunction writePackedFixed64(arr, pbf)  { for (var i = 0; i < arr.length; i++) pbf.writeFixed64(arr[i]);  }\nfunction writePackedSFixed64(arr, pbf) { for (var i = 0; i < arr.length; i++) pbf.writeSFixed64(arr[i]); }\n\n// Buffer code below from https://github.com/feross/buffer, MIT-licensed\n\nfunction readUInt32(buf, pos) {\n    return ((buf[pos]) |\n        (buf[pos + 1] << 8) |\n        (buf[pos + 2] << 16)) +\n        (buf[pos + 3] * 0x1000000);\n}\n\nfunction writeInt32(buf, val, pos) {\n    buf[pos] = val;\n    buf[pos + 1] = (val >>> 8);\n    buf[pos + 2] = (val >>> 16);\n    buf[pos + 3] = (val >>> 24);\n}\n\nfunction readInt32(buf, pos) {\n    return ((buf[pos]) |\n        (buf[pos + 1] << 8) |\n        (buf[pos + 2] << 16)) +\n        (buf[pos + 3] << 24);\n}\n\nfunction readUtf8(buf, pos, end) {\n    var str = '';\n    var i = pos;\n\n    while (i < end) {\n        var b0 = buf[i];\n        var c = null; // codepoint\n        var bytesPerSequence =\n            b0 > 0xEF ? 4 :\n            b0 > 0xDF ? 3 :\n            b0 > 0xBF ? 2 : 1;\n\n        if (i + bytesPerSequence > end) break;\n\n        var b1, b2, b3;\n\n        if (bytesPerSequence === 1) {\n            if (b0 < 0x80) {\n                c = b0;\n            }\n        } else if (bytesPerSequence === 2) {\n            b1 = buf[i + 1];\n            if ((b1 & 0xC0) === 0x80) {\n                c = (b0 & 0x1F) << 0x6 | (b1 & 0x3F);\n                if (c <= 0x7F) {\n                    c = null;\n                }\n            }\n        } else if (bytesPerSequence === 3) {\n            b1 = buf[i + 1];\n            b2 = buf[i + 2];\n            if ((b1 & 0xC0) === 0x80 && (b2 & 0xC0) === 0x80) {\n                c = (b0 & 0xF) << 0xC | (b1 & 0x3F) << 0x6 | (b2 & 0x3F);\n                if (c <= 0x7FF || (c >= 0xD800 && c <= 0xDFFF)) {\n                    c = null;\n                }\n            }\n        } else if (bytesPerSequence === 4) {\n            b1 = buf[i + 1];\n            b2 = buf[i + 2];\n            b3 = buf[i + 3];\n            if ((b1 & 0xC0) === 0x80 && (b2 & 0xC0) === 0x80 && (b3 & 0xC0) === 0x80) {\n                c = (b0 & 0xF) << 0x12 | (b1 & 0x3F) << 0xC | (b2 & 0x3F) << 0x6 | (b3 & 0x3F);\n                if (c <= 0xFFFF || c >= 0x110000) {\n                    c = null;\n                }\n            }\n        }\n\n        if (c === null) {\n            c = 0xFFFD;\n            bytesPerSequence = 1;\n\n        } else if (c > 0xFFFF) {\n            c -= 0x10000;\n            str += String.fromCharCode(c >>> 10 & 0x3FF | 0xD800);\n            c = 0xDC00 | c & 0x3FF;\n        }\n\n        str += String.fromCharCode(c);\n        i += bytesPerSequence;\n    }\n\n    return str;\n}\n\nfunction writeUtf8(buf, str, pos) {\n    for (var i = 0, c, lead; i < str.length; i++) {\n        c = str.charCodeAt(i); // code point\n\n        if (c > 0xD7FF && c < 0xE000) {\n            if (lead) {\n                if (c < 0xDC00) {\n                    buf[pos++] = 0xEF;\n                    buf[pos++] = 0xBF;\n                    buf[pos++] = 0xBD;\n                    lead = c;\n                    continue;\n                } else {\n                    c = lead - 0xD800 << 10 | c - 0xDC00 | 0x10000;\n                    lead = null;\n                }\n            } else {\n                if (c > 0xDBFF || (i + 1 === str.length)) {\n                    buf[pos++] = 0xEF;\n                    buf[pos++] = 0xBF;\n                    buf[pos++] = 0xBD;\n                } else {\n                    lead = c;\n                }\n                continue;\n            }\n        } else if (lead) {\n            buf[pos++] = 0xEF;\n            buf[pos++] = 0xBF;\n            buf[pos++] = 0xBD;\n            lead = null;\n        }\n\n        if (c < 0x80) {\n            buf[pos++] = c;\n        } else {\n            if (c < 0x800) {\n                buf[pos++] = c >> 0x6 | 0xC0;\n            } else {\n                if (c < 0x10000) {\n                    buf[pos++] = c >> 0xC | 0xE0;\n                } else {\n                    buf[pos++] = c >> 0x12 | 0xF0;\n                    buf[pos++] = c >> 0xC & 0x3F | 0x80;\n                }\n                buf[pos++] = c >> 0x6 & 0x3F | 0x80;\n            }\n            buf[pos++] = c & 0x3F | 0x80;\n        }\n    }\n    return pos;\n}\n","var Processor = require('./processor');\n\nexports.Processor = Processor;\n","exports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n\ttypeof define === 'function' && define.amd ? define(factory) :\n\t(global.quickselect = factory());\n}(this, (function () { 'use strict';\n\nfunction quickselect(arr, k, left, right, compare) {\n    quickselectStep(arr, k, left || 0, right || (arr.length - 1), compare || defaultCompare);\n}\n\nfunction quickselectStep(arr, k, left, right, compare) {\n\n    while (right > left) {\n        if (right - left > 600) {\n            var n = right - left + 1;\n            var m = k - left + 1;\n            var z = Math.log(n);\n            var s = 0.5 * Math.exp(2 * z / 3);\n            var sd = 0.5 * Math.sqrt(z * s * (n - s) / n) * (m - n / 2 < 0 ? -1 : 1);\n            var newLeft = Math.max(left, Math.floor(k - m * s / n + sd));\n            var newRight = Math.min(right, Math.floor(k + (n - m) * s / n + sd));\n            quickselectStep(arr, k, newLeft, newRight, compare);\n        }\n\n        var t = arr[k];\n        var i = left;\n        var j = right;\n\n        swap(arr, left, k);\n        if (compare(arr[right], t) > 0) swap(arr, left, right);\n\n        while (i < j) {\n            swap(arr, i, j);\n            i++;\n            j--;\n            while (compare(arr[i], t) < 0) i++;\n            while (compare(arr[j], t) > 0) j--;\n        }\n\n        if (compare(arr[left], t) === 0) swap(arr, left, j);\n        else {\n            j++;\n            swap(arr, j, right);\n        }\n\n        if (j <= k) left = j + 1;\n        if (k <= j) right = j - 1;\n    }\n}\n\nfunction swap(arr, i, j) {\n    var tmp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = tmp;\n}\n\nfunction defaultCompare(a, b) {\n    return a < b ? -1 : a > b ? 1 : 0;\n}\n\nreturn quickselect;\n\n})));\n","var newImageData = require('./util').newImageData;\n\n/**\n * Create a function for running operations.  This function is serialized for\n * use in a worker.\n * @param {function(Array, Object):*} operation The operation.\n * @return {function(Object):ArrayBuffer} A function that takes an object with\n * buffers, meta, imageOps, width, and height properties and returns an array\n * buffer.\n */\nfunction createMinion(operation) {\n  var workerHasImageData = true;\n  try {\n    new ImageData(10, 10);\n  } catch (_) {\n    workerHasImageData = false;\n  }\n\n  function newWorkerImageData(data, width, height) {\n    if (workerHasImageData) {\n      return new ImageData(data, width, height);\n    } else {\n      return {data: data, width: width, height: height};\n    }\n  }\n\n  return function(data) {\n    // bracket notation for minification support\n    var buffers = data['buffers'];\n    var meta = data['meta'];\n    var imageOps = data['imageOps'];\n    var width = data['width'];\n    var height = data['height'];\n\n    var numBuffers = buffers.length;\n    var numBytes = buffers[0].byteLength;\n    var output, b;\n\n    if (imageOps) {\n      var images = new Array(numBuffers);\n      for (b = 0; b < numBuffers; ++b) {\n        images[b] = newWorkerImageData(\n            new Uint8ClampedArray(buffers[b]), width, height);\n      }\n      output = operation(images, meta).data;\n    } else {\n      output = new Uint8ClampedArray(numBytes);\n      var arrays = new Array(numBuffers);\n      var pixels = new Array(numBuffers);\n      for (b = 0; b < numBuffers; ++b) {\n        arrays[b] = new Uint8ClampedArray(buffers[b]);\n        pixels[b] = [0, 0, 0, 0];\n      }\n      for (var i = 0; i < numBytes; i += 4) {\n        for (var j = 0; j < numBuffers; ++j) {\n          var array = arrays[j];\n          pixels[j][0] = array[i];\n          pixels[j][1] = array[i + 1];\n          pixels[j][2] = array[i + 2];\n          pixels[j][3] = array[i + 3];\n        }\n        var pixel = operation(pixels, meta);\n        output[i] = pixel[0];\n        output[i + 1] = pixel[1];\n        output[i + 2] = pixel[2];\n        output[i + 3] = pixel[3];\n      }\n    }\n    return output.buffer;\n  };\n}\n\n/**\n * Create a worker for running operations.\n * @param {Object} config Configuration.\n * @param {function(MessageEvent)} onMessage Called with a message event.\n * @return {Worker} The worker.\n */\nfunction createWorker(config, onMessage) {\n  var lib = Object.keys(config.lib || {}).map(function(name) {\n    return 'var ' + name + ' = ' + config.lib[name].toString() + ';';\n  });\n\n  var lines = lib.concat([\n    'var __minion__ = (' + createMinion.toString() + ')(', config.operation.toString(), ');',\n    'self.addEventListener(\"message\", function(event) {',\n    '  var buffer = __minion__(event.data);',\n    '  self.postMessage({buffer: buffer, meta: event.data.meta}, [buffer]);',\n    '});'\n  ]);\n\n  var blob = new Blob(lines, {type: 'text/javascript'});\n  var source = URL.createObjectURL(blob);\n  var worker = new Worker(source);\n  worker.addEventListener('message', onMessage);\n  return worker;\n}\n\n/**\n * Create a faux worker for running operations.\n * @param {Object} config Configuration.\n * @param {function(MessageEvent)} onMessage Called with a message event.\n * @return {Object} The faux worker.\n */\nfunction createFauxWorker(config, onMessage) {\n  var minion = createMinion(config.operation);\n  return {\n    postMessage: function(data) {\n      setTimeout(function() {\n        onMessage({'data': {'buffer': minion(data), 'meta': data['meta']}});\n      }, 0);\n    }\n  };\n}\n\n/**\n * A processor runs pixel or image operations in workers.\n * @param {Object} config Configuration.\n */\nfunction Processor(config) {\n  this._imageOps = !!config.imageOps;\n  var threads;\n  if (config.threads === 0) {\n    threads = 0;\n  } else if (this._imageOps) {\n    threads = 1;\n  } else {\n    threads = config.threads || 1;\n  }\n  var workers = [];\n  if (threads) {\n    for (var i = 0; i < threads; ++i) {\n      workers[i] = createWorker(config, this._onWorkerMessage.bind(this, i));\n    }\n  } else {\n    workers[0] = createFauxWorker(config, this._onWorkerMessage.bind(this, 0));\n  }\n  this._workers = workers;\n  this._queue = [];\n  this._maxQueueLength = config.queue || Infinity;\n  this._running = 0;\n  this._dataLookup = {};\n  this._job = null;\n}\n\n/**\n * Run operation on input data.\n * @param {Array.<Array|ImageData>} inputs Array of pixels or image data\n *     (depending on the operation type).\n * @param {Object} meta A user data object.  This is passed to all operations\n *     and must be serializable.\n * @param {function(Error, ImageData, Object)} callback Called when work\n *     completes.  The first argument is any error.  The second is the ImageData\n *     generated by operations.  The third is the user data object.\n */\nProcessor.prototype.process = function(inputs, meta, callback) {\n  this._enqueue({\n    inputs: inputs,\n    meta: meta,\n    callback: callback\n  });\n  this._dispatch();\n};\n\n/**\n * Stop responding to any completed work and destroy the processor.\n */\nProcessor.prototype.destroy = function() {\n  for (var key in this) {\n    this[key] = null;\n  }\n  this._destroyed = true;\n};\n\n/**\n * Add a job to the queue.\n * @param {Object} job The job.\n */\nProcessor.prototype._enqueue = function(job) {\n  this._queue.push(job);\n  while (this._queue.length > this._maxQueueLength) {\n    this._queue.shift().callback(null, null);\n  }\n};\n\n/**\n * Dispatch a job.\n */\nProcessor.prototype._dispatch = function() {\n  if (this._running === 0 && this._queue.length > 0) {\n    var job = this._job = this._queue.shift();\n    var width = job.inputs[0].width;\n    var height = job.inputs[0].height;\n    var buffers = job.inputs.map(function(input) {\n      return input.data.buffer;\n    });\n    var threads = this._workers.length;\n    this._running = threads;\n    if (threads === 1) {\n      this._workers[0].postMessage({\n        'buffers': buffers,\n        'meta': job.meta,\n        'imageOps': this._imageOps,\n        'width': width,\n        'height': height\n      }, buffers);\n    } else {\n      var length = job.inputs[0].data.length;\n      var segmentLength = 4 * Math.ceil(length / 4 / threads);\n      for (var i = 0; i < threads; ++i) {\n        var offset = i * segmentLength;\n        var slices = [];\n        for (var j = 0, jj = buffers.length; j < jj; ++j) {\n          slices.push(buffers[i].slice(offset, offset + segmentLength));\n        }\n        this._workers[i].postMessage({\n          'buffers': slices,\n          'meta': job.meta,\n          'imageOps': this._imageOps,\n          'width': width,\n          'height': height\n        }, slices);\n      }\n    }\n  }\n};\n\n/**\n * Handle messages from the worker.\n * @param {number} index The worker index.\n * @param {MessageEvent} event The message event.\n */\nProcessor.prototype._onWorkerMessage = function(index, event) {\n  if (this._destroyed) {\n    return;\n  }\n  this._dataLookup[index] = event.data;\n  --this._running;\n  if (this._running === 0) {\n    this._resolveJob();\n  }\n};\n\n/**\n * Resolve a job.  If there are no more worker threads, the processor callback\n * will be called.\n */\nProcessor.prototype._resolveJob = function() {\n  var job = this._job;\n  var threads = this._workers.length;\n  var data, meta;\n  if (threads === 1) {\n    data = new Uint8ClampedArray(this._dataLookup[0]['buffer']);\n    meta = this._dataLookup[0]['meta'];\n  } else {\n    var length = job.inputs[0].data.length;\n    data = new Uint8ClampedArray(length);\n    meta = new Array(length);\n    var segmentLength = 4 * Math.ceil(length / 4 / threads);\n    for (var i = 0; i < threads; ++i) {\n      var buffer = this._dataLookup[i]['buffer'];\n      var offset = i * segmentLength;\n      data.set(new Uint8ClampedArray(buffer), offset);\n      meta[i] = this._dataLookup[i]['meta'];\n    }\n  }\n  this._job = null;\n  this._dataLookup = {};\n  job.callback(null,\n      newImageData(data, job.inputs[0].width, job.inputs[0].height), meta);\n  this._dispatch();\n};\n\nmodule.exports = Processor;\n","var hasImageData = true;\ntry {\n  new ImageData(10, 10);\n} catch (_) {\n  hasImageData = false;\n}\n\nvar context = document.createElement('canvas').getContext('2d');\n\nfunction newImageData(data, width, height) {\n  if (hasImageData) {\n    return new ImageData(data, width, height);\n  } else {\n    var imageData = context.createImageData(width, height);\n    imageData.data.set(data);\n    return imageData;\n  }\n}\n\nexports.newImageData = newImageData;\n","/**\n * @module ol/util\n */\n/**\n * @return {?} Any return.\n */\nexport function abstract() {\n    return /** @type {?} */ ((function () {\n        throw new Error('Unimplemented abstract method.');\n    })());\n}\n/**\n * Counter for getUid.\n * @type {number}\n * @private\n */\nvar uidCounter_ = 0;\n/**\n * Gets a unique ID for an object. This mutates the object so that further calls\n * with the same object as a parameter returns the same value. Unique IDs are generated\n * as a strictly increasing sequence. Adapted from goog.getUid.\n *\n * @param {Object} obj The object to get the unique ID for.\n * @return {string} The unique ID for the object.\n * @function module:ol.getUid\n * @api\n */\nexport function getUid(obj) {\n    return obj.ol_uid || (obj.ol_uid = String(++uidCounter_));\n}\n/**\n * OpenLayers version.\n * @type {string}\n */\nexport var VERSION = '6.0.0-beta.7';\n//# sourceMappingURL=util.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/AssertionError\n */\nimport { VERSION } from './util.js';\n/**\n * Error object thrown when an assertion failed. This is an ECMA-262 Error,\n * extended with a `code` property.\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error.\n */\nvar AssertionError = /** @class */ (function (_super) {\n    __extends(AssertionError, _super);\n    /**\n     * @param {number} code Error code.\n     */\n    function AssertionError(code) {\n        var _this = this;\n        var path = VERSION === 'latest' ? VERSION : 'v' + VERSION.split('-')[0];\n        var message = 'Assertion failed. See https://openlayers.org/en/' + path +\n            '/doc/errors/#' + code + ' for details.';\n        _this = _super.call(this, message) || this;\n        /**\n         * Error code. The meaning of the code can be found on\n         * https://openlayers.org/en/latest/doc/errors/ (replace `latest` with\n         * the version found in the OpenLayers script's header comment if a version\n         * other than the latest is used).\n         * @type {number}\n         * @api\n         */\n        _this.code = code;\n        /**\n         * @type {string}\n         */\n        _this.name = 'AssertionError';\n        // Re-assign message, see https://github.com/Rich-Harris/buble/issues/40\n        _this.message = message;\n        return _this;\n    }\n    return AssertionError;\n}(Error));\nexport default AssertionError;\n//# sourceMappingURL=AssertionError.js.map","/**\n * @module ol/CollectionEventType\n */\n/**\n * @enum {string}\n */\nexport default {\n    /**\n     * Triggered when an item is added to the collection.\n     * @event module:ol/Collection.CollectionEvent#add\n     * @api\n     */\n    ADD: 'add',\n    /**\n     * Triggered when an item is removed from the collection.\n     * @event module:ol/Collection.CollectionEvent#remove\n     * @api\n     */\n    REMOVE: 'remove'\n};\n//# sourceMappingURL=CollectionEventType.js.map","/**\n * @module ol/ObjectEventType\n */\n/**\n * @enum {string}\n */\nexport default {\n    /**\n     * Triggered when a property is changed.\n     * @event module:ol/Object.ObjectEvent#propertychange\n     * @api\n     */\n    PROPERTYCHANGE: 'propertychange'\n};\n//# sourceMappingURL=ObjectEventType.js.map","/**\n * @module ol/obj\n */\n/**\n * Polyfill for Object.assign().  Assigns enumerable and own properties from\n * one or more source objects to a target object.\n * See https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/assign.\n *\n * @param {!Object} target The target object.\n * @param {...Object} var_sources The source object(s).\n * @return {!Object} The modified target object.\n */\nexport var assign = (typeof Object.assign === 'function') ? Object.assign : function (target, var_sources) {\n    if (target === undefined || target === null) {\n        throw new TypeError('Cannot convert undefined or null to object');\n    }\n    var output = Object(target);\n    for (var i = 1, ii = arguments.length; i < ii; ++i) {\n        var source = arguments[i];\n        if (source !== undefined && source !== null) {\n            for (var key in source) {\n                if (source.hasOwnProperty(key)) {\n                    output[key] = source[key];\n                }\n            }\n        }\n    }\n    return output;\n};\n/**\n * Removes all properties from an object.\n * @param {Object} object The object to clear.\n */\nexport function clear(object) {\n    for (var property in object) {\n        delete object[property];\n    }\n}\n/**\n * Polyfill for Object.values().  Get an array of property values from an object.\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/values\n *\n * @param {!Object<K,V>} object The object from which to get the values.\n * @return {!Array<V>} The property values.\n * @template K,V\n */\nexport var getValues = (typeof Object.values === 'function') ? Object.values : function (object) {\n    var values = [];\n    for (var property in object) {\n        values.push(object[property]);\n    }\n    return values;\n};\n/**\n * Determine if an object has any properties.\n * @param {Object} object The object to check.\n * @return {boolean} The object is empty.\n */\nexport function isEmpty(object) {\n    var property;\n    for (property in object) {\n        return false;\n    }\n    return !property;\n}\n//# sourceMappingURL=obj.js.map","/**\n * @module ol/events\n */\nimport { clear } from './obj.js';\n/**\n * Key to use with {@link module:ol/Observable~Observable#unByKey}.\n * @typedef {Object} EventsKey\n * @property {Object} [bindTo]\n * @property {ListenerFunction} [boundListener]\n * @property {boolean} callOnce\n * @property {number} [deleteIndex]\n * @property {ListenerFunction} listener\n * @property {import(\"./events/Target.js\").EventTargetLike} target\n * @property {string} type\n * @api\n */\n/**\n * Listener function. This function is called with an event object as argument.\n * When the function returns `false`, event propagation will stop.\n *\n * @typedef {function((Event|import(\"./events/Event.js\").default)): (void|boolean)} ListenerFunction\n * @api\n */\n/**\n * @param {EventsKey} listenerObj Listener object.\n * @return {ListenerFunction} Bound listener.\n */\nexport function bindListener(listenerObj) {\n    var boundListener = function (evt) {\n        var listener = listenerObj.listener;\n        var bindTo = listenerObj.bindTo || listenerObj.target;\n        if (listenerObj.callOnce) {\n            unlistenByKey(listenerObj);\n        }\n        return listener.call(bindTo, evt);\n    };\n    listenerObj.boundListener = boundListener;\n    return boundListener;\n}\n/**\n * Finds the matching {@link module:ol/events~EventsKey} in the given listener\n * array.\n *\n * @param {!Array<!EventsKey>} listeners Array of listeners.\n * @param {!Function} listener The listener function.\n * @param {Object=} opt_this The `this` value inside the listener.\n * @param {boolean=} opt_setDeleteIndex Set the deleteIndex on the matching\n *     listener, for {@link module:ol/events~unlistenByKey}.\n * @return {EventsKey|undefined} The matching listener object.\n */\nexport function findListener(listeners, listener, opt_this, opt_setDeleteIndex) {\n    var listenerObj;\n    for (var i = 0, ii = listeners.length; i < ii; ++i) {\n        listenerObj = listeners[i];\n        if (listenerObj.listener === listener &&\n            listenerObj.bindTo === opt_this) {\n            if (opt_setDeleteIndex) {\n                listenerObj.deleteIndex = i;\n            }\n            return listenerObj;\n        }\n    }\n    return undefined;\n}\n/**\n * @param {import(\"./events/Target.js\").EventTargetLike} target Target.\n * @param {string} type Type.\n * @return {Array<EventsKey>|undefined} Listeners.\n */\nexport function getListeners(target, type) {\n    var listenerMap = getListenerMap(target);\n    return listenerMap ? listenerMap[type] : undefined;\n}\n/**\n * Get the lookup of listeners.\n * @param {Object} target Target.\n * @param {boolean=} opt_create If a map should be created if it doesn't exist.\n * @return {!Object<string, Array<EventsKey>>} Map of\n *     listeners by event type.\n */\nfunction getListenerMap(target, opt_create) {\n    var listenerMap = target.ol_lm;\n    if (!listenerMap && opt_create) {\n        listenerMap = target.ol_lm = {};\n    }\n    return listenerMap;\n}\n/**\n * Remove the listener map from a target.\n * @param {Object} target Target.\n */\nfunction removeListenerMap(target) {\n    delete target.ol_lm;\n}\n/**\n * Clean up all listener objects of the given type.  All properties on the\n * listener objects will be removed, and if no listeners remain in the listener\n * map, it will be removed from the target.\n * @param {import(\"./events/Target.js\").EventTargetLike} target Target.\n * @param {string} type Type.\n */\nfunction removeListeners(target, type) {\n    var listeners = getListeners(target, type);\n    if (listeners) {\n        for (var i = 0, ii = listeners.length; i < ii; ++i) {\n            /** @type {import(\"./events/Target.js\").default} */ (target).\n                removeEventListener(type, listeners[i].boundListener);\n            clear(listeners[i]);\n        }\n        listeners.length = 0;\n        var listenerMap = getListenerMap(target);\n        if (listenerMap) {\n            delete listenerMap[type];\n            if (Object.keys(listenerMap).length === 0) {\n                removeListenerMap(target);\n            }\n        }\n    }\n}\n/**\n * Registers an event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` to a `this` object, and returns\n * a key for use with {@link module:ol/events~unlistenByKey}.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object=} opt_this Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @param {boolean=} opt_once If true, add the listener as one-off listener.\n * @return {EventsKey} Unique key for the listener.\n */\nexport function listen(target, type, listener, opt_this, opt_once) {\n    var listenerMap = getListenerMap(target, true);\n    var listeners = listenerMap[type];\n    if (!listeners) {\n        listeners = listenerMap[type] = [];\n    }\n    var listenerObj = findListener(listeners, listener, opt_this, false);\n    if (listenerObj) {\n        if (!opt_once) {\n            // Turn one-off listener into a permanent one.\n            listenerObj.callOnce = false;\n        }\n    }\n    else {\n        listenerObj = {\n            bindTo: opt_this,\n            callOnce: !!opt_once,\n            listener: listener,\n            target: target,\n            type: type\n        };\n        /** @type {import(\"./events/Target.js\").default} */ (target).\n            addEventListener(type, bindListener(listenerObj));\n        listeners.push(listenerObj);\n    }\n    return listenerObj;\n}\n/**\n * Registers a one-off event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` as self-unregistering listener\n * to a `this` object, and returns a key for use with\n * {@link module:ol/events~unlistenByKey} in case the listener needs to be\n * unregistered before it is called.\n *\n * When {@link module:ol/events~listen} is called with the same arguments after this\n * function, the self-unregistering listener will be turned into a permanent\n * listener.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object=} opt_this Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @return {EventsKey} Key for unlistenByKey.\n */\nexport function listenOnce(target, type, listener, opt_this) {\n    return listen(target, type, listener, opt_this, true);\n}\n/**\n * Unregisters an event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * To return a listener, this function needs to be called with the exact same\n * arguments that were used for a previous {@link module:ol/events~listen} call.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object=} opt_this Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n */\nexport function unlisten(target, type, listener, opt_this) {\n    var listeners = getListeners(target, type);\n    if (listeners) {\n        var listenerObj = findListener(listeners, listener, opt_this, true);\n        if (listenerObj) {\n            unlistenByKey(listenerObj);\n        }\n    }\n}\n/**\n * Unregisters event listeners on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * The argument passed to this function is the key returned from\n * {@link module:ol/events~listen} or {@link module:ol/events~listenOnce}.\n *\n * @param {EventsKey} key The key.\n */\nexport function unlistenByKey(key) {\n    if (key && key.target) {\n        /** @type {import(\"./events/Target.js\").default} */ (key.target).\n            removeEventListener(key.type, key.boundListener);\n        var listeners = getListeners(key.target, key.type);\n        if (listeners) {\n            var i = 'deleteIndex' in key ? key.deleteIndex : listeners.indexOf(key);\n            if (i !== -1) {\n                listeners.splice(i, 1);\n            }\n            if (listeners.length === 0) {\n                removeListeners(key.target, key.type);\n            }\n        }\n        clear(key);\n    }\n}\n/**\n * Unregisters all event listeners on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Target.\n */\nexport function unlistenAll(target) {\n    var listenerMap = getListenerMap(target);\n    if (listenerMap) {\n        for (var type in listenerMap) {\n            removeListeners(target, type);\n        }\n    }\n}\n//# sourceMappingURL=events.js.map","/**\n * @module ol/Disposable\n */\n/**\n * @classdesc\n * Objects that need to clean up after themselves.\n */\nvar Disposable = /** @class */ (function () {\n    function Disposable() {\n        /**\n         * The object has already been disposed.\n         * @type {boolean}\n         * @private\n         */\n        this.disposed_ = false;\n    }\n    /**\n     * Clean up.\n     */\n    Disposable.prototype.dispose = function () {\n        if (!this.disposed_) {\n            this.disposed_ = true;\n            this.disposeInternal();\n        }\n    };\n    /**\n     * Extension point for disposable objects.\n     * @protected\n     */\n    Disposable.prototype.disposeInternal = function () { };\n    return Disposable;\n}());\nexport default Disposable;\n//# sourceMappingURL=Disposable.js.map","/**\n * @module ol/functions\n */\n/**\n * Always returns true.\n * @returns {boolean} true.\n */\nexport function TRUE() {\n    return true;\n}\n/**\n * Always returns false.\n * @returns {boolean} false.\n */\nexport function FALSE() {\n    return false;\n}\n/**\n * A reusable function, used e.g. as a default for callbacks.\n *\n * @return {void} Nothing.\n */\nexport function VOID() { }\n//# sourceMappingURL=functions.js.map","/**\n * @module ol/events/Event\n */\n/**\n * @classdesc\n * Stripped down implementation of the W3C DOM Level 2 Event interface.\n * See https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-interface.\n *\n * This implementation only provides `type` and `target` properties, and\n * `stopPropagation` and `preventDefault` methods. It is meant as base class\n * for higher level events defined in the library, and works with\n * {@link module:ol/events/Target~Target}.\n */\nvar Event = /** @class */ (function () {\n    /**\n     * @param {string} type Type.\n     */\n    function Event(type) {\n        /**\n         * @type {boolean}\n         */\n        this.propagationStopped;\n        /**\n         * The event type.\n         * @type {string}\n         * @api\n         */\n        this.type = type;\n        /**\n         * The event target.\n         * @type {Object}\n         * @api\n         */\n        this.target = null;\n    }\n    /**\n     * Stop event propagation.\n     * @api\n     */\n    Event.prototype.preventDefault = function () {\n        this.propagationStopped = true;\n    };\n    /**\n     * Stop event propagation.\n     * @api\n     */\n    Event.prototype.stopPropagation = function () {\n        this.propagationStopped = true;\n    };\n    return Event;\n}());\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function stopPropagation(evt) {\n    evt.stopPropagation();\n}\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function preventDefault(evt) {\n    evt.preventDefault();\n}\nexport default Event;\n//# sourceMappingURL=Event.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/events/Target\n */\nimport Disposable from '../Disposable.js';\nimport { unlistenAll } from '../events.js';\nimport { VOID } from '../functions.js';\nimport Event from './Event.js';\n/**\n * @typedef {EventTarget|Target} EventTargetLike\n */\n/**\n * @classdesc\n * A simplified implementation of the W3C DOM Level 2 EventTarget interface.\n * See https://www.w3.org/TR/2000/REC-DOM-Level-2-Events-20001113/events.html#Events-EventTarget.\n *\n * There are two important simplifications compared to the specification:\n *\n * 1. The handling of `useCapture` in `addEventListener` and\n *    `removeEventListener`. There is no real capture model.\n * 2. The handling of `stopPropagation` and `preventDefault` on `dispatchEvent`.\n *    There is no event target hierarchy. When a listener calls\n *    `stopPropagation` or `preventDefault` on an event object, it means that no\n *    more listeners after this one will be called. Same as when the listener\n *    returns false.\n */\nvar Target = /** @class */ (function (_super) {\n    __extends(Target, _super);\n    function Target() {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {!Object<string, number>}\n         */\n        _this.pendingRemovals_ = {};\n        /**\n         * @private\n         * @type {!Object<string, number>}\n         */\n        _this.dispatching_ = {};\n        /**\n         * @private\n         * @type {!Object<string, Array<import(\"../events.js\").ListenerFunction>>}\n         */\n        _this.listeners_ = {};\n        return _this;\n    }\n    /**\n     * @param {string} type Type.\n     * @param {import(\"../events.js\").ListenerFunction} listener Listener.\n     */\n    Target.prototype.addEventListener = function (type, listener) {\n        var listeners = this.listeners_[type];\n        if (!listeners) {\n            listeners = this.listeners_[type] = [];\n        }\n        if (listeners.indexOf(listener) === -1) {\n            listeners.push(listener);\n        }\n    };\n    /**\n     * Dispatches an event and calls all listeners listening for events\n     * of this type. The event parameter can either be a string or an\n     * Object with a `type` property.\n     *\n     * @param {{type: string,\n     *     target: (EventTargetLike|undefined),\n     *     propagationStopped: (boolean|undefined)}|\n     *     import(\"./Event.js\").default|string} event Event object.\n     * @return {boolean|undefined} `false` if anyone called preventDefault on the\n     *     event object or if any of the listeners returned false.\n     * @api\n     */\n    Target.prototype.dispatchEvent = function (event) {\n        var evt = typeof event === 'string' ? new Event(event) : event;\n        var type = evt.type;\n        evt.target = this;\n        var listeners = this.listeners_[type];\n        var propagate;\n        if (listeners) {\n            if (!(type in this.dispatching_)) {\n                this.dispatching_[type] = 0;\n                this.pendingRemovals_[type] = 0;\n            }\n            ++this.dispatching_[type];\n            for (var i = 0, ii = listeners.length; i < ii; ++i) {\n                if (listeners[i].call(this, evt) === false || evt.propagationStopped) {\n                    propagate = false;\n                    break;\n                }\n            }\n            --this.dispatching_[type];\n            if (this.dispatching_[type] === 0) {\n                var pendingRemovals = this.pendingRemovals_[type];\n                delete this.pendingRemovals_[type];\n                while (pendingRemovals--) {\n                    this.removeEventListener(type, VOID);\n                }\n                delete this.dispatching_[type];\n            }\n            return propagate;\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    Target.prototype.disposeInternal = function () {\n        unlistenAll(this);\n    };\n    /**\n     * Get the listeners for a specified event type. Listeners are returned in the\n     * order that they will be called in.\n     *\n     * @param {string} type Type.\n     * @return {Array<import(\"../events.js\").ListenerFunction>} Listeners.\n     */\n    Target.prototype.getListeners = function (type) {\n        return this.listeners_[type];\n    };\n    /**\n     * @param {string=} opt_type Type. If not provided,\n     *     `true` will be returned if this event target has any listeners.\n     * @return {boolean} Has listeners.\n     */\n    Target.prototype.hasListener = function (opt_type) {\n        return opt_type ?\n            opt_type in this.listeners_ :\n            Object.keys(this.listeners_).length > 0;\n    };\n    /**\n     * @param {string} type Type.\n     * @param {import(\"../events.js\").ListenerFunction} listener Listener.\n     */\n    Target.prototype.removeEventListener = function (type, listener) {\n        var listeners = this.listeners_[type];\n        if (listeners) {\n            var index = listeners.indexOf(listener);\n            if (type in this.pendingRemovals_) {\n                // make listener a no-op, and remove later in #dispatchEvent()\n                listeners[index] = VOID;\n                ++this.pendingRemovals_[type];\n            }\n            else {\n                listeners.splice(index, 1);\n                if (listeners.length === 0) {\n                    delete this.listeners_[type];\n                }\n            }\n        }\n    };\n    return Target;\n}(Disposable));\nexport default Target;\n//# sourceMappingURL=Target.js.map","/**\n * @module ol/events/EventType\n */\n/**\n * @enum {string}\n * @const\n */\nexport default {\n    /**\n     * Generic change event. Triggered when the revision counter is increased.\n     * @event module:ol/events/Event~Event#change\n     * @api\n     */\n    CHANGE: 'change',\n    CLEAR: 'clear',\n    CONTEXTMENU: 'contextmenu',\n    CLICK: 'click',\n    DBLCLICK: 'dblclick',\n    DRAGENTER: 'dragenter',\n    DRAGOVER: 'dragover',\n    DROP: 'drop',\n    ERROR: 'error',\n    KEYDOWN: 'keydown',\n    KEYPRESS: 'keypress',\n    LOAD: 'load',\n    MOUSEDOWN: 'mousedown',\n    MOUSEMOVE: 'mousemove',\n    MOUSEOUT: 'mouseout',\n    MOUSEUP: 'mouseup',\n    MOUSEWHEEL: 'mousewheel',\n    MSPOINTERDOWN: 'MSPointerDown',\n    RESIZE: 'resize',\n    TOUCHSTART: 'touchstart',\n    TOUCHMOVE: 'touchmove',\n    TOUCHEND: 'touchend',\n    WHEEL: 'wheel'\n};\n//# sourceMappingURL=EventType.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/Observable\n */\nimport { listen, unlistenByKey, unlisten, listenOnce } from './events.js';\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * An event target providing convenient methods for listener registration\n * and unregistration. A generic `change` event is always available through\n * {@link module:ol/Observable~Observable#changed}.\n *\n * @fires import(\"./events/Event.js\").Event\n * @api\n */\nvar Observable = /** @class */ (function (_super) {\n    __extends(Observable, _super);\n    function Observable() {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.revision_ = 0;\n        return _this;\n    }\n    /**\n     * Increases the revision counter and dispatches a 'change' event.\n     * @api\n     */\n    Observable.prototype.changed = function () {\n        ++this.revision_;\n        this.dispatchEvent(EventType.CHANGE);\n    };\n    /**\n     * Get the version number for this object.  Each time the object is modified,\n     * its version number will be incremented.\n     * @return {number} Revision.\n     * @api\n     */\n    Observable.prototype.getRevision = function () {\n        return this.revision_;\n    };\n    /**\n     * Listen for a certain type of event.\n     * @param {string|Array<string>} type The event type or array of event types.\n     * @param {function(?): ?} listener The listener function.\n     * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n     *     called with an array of event types as the first argument, the return\n     *     will be an array of keys.\n     * @api\n     */\n    Observable.prototype.on = function (type, listener) {\n        if (Array.isArray(type)) {\n            var len = type.length;\n            var keys = new Array(len);\n            for (var i = 0; i < len; ++i) {\n                keys[i] = listen(this, type[i], listener);\n            }\n            return keys;\n        }\n        else {\n            return listen(this, /** @type {string} */ (type), listener);\n        }\n    };\n    /**\n     * Listen once for a certain type of event.\n     * @param {string|Array<string>} type The event type or array of event types.\n     * @param {function(?): ?} listener The listener function.\n     * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n     *     called with an array of event types as the first argument, the return\n     *     will be an array of keys.\n     * @api\n     */\n    Observable.prototype.once = function (type, listener) {\n        if (Array.isArray(type)) {\n            var len = type.length;\n            var keys = new Array(len);\n            for (var i = 0; i < len; ++i) {\n                keys[i] = listenOnce(this, type[i], listener);\n            }\n            return keys;\n        }\n        else {\n            return listenOnce(this, /** @type {string} */ (type), listener);\n        }\n    };\n    /**\n     * Unlisten for a certain type of event.\n     * @param {string|Array<string>} type The event type or array of event types.\n     * @param {function(?): ?} listener The listener function.\n     * @api\n     */\n    Observable.prototype.un = function (type, listener) {\n        if (Array.isArray(type)) {\n            for (var i = 0, ii = type.length; i < ii; ++i) {\n                unlisten(this, type[i], listener);\n            }\n            return;\n        }\n        else {\n            unlisten(this, /** @type {string} */ (type), listener);\n        }\n    };\n    return Observable;\n}(EventTarget));\n/**\n * Removes an event listener using the key returned by `on()` or `once()`.\n * @param {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} key The key returned by `on()`\n *     or `once()` (or an array of keys).\n * @api\n */\nexport function unByKey(key) {\n    if (Array.isArray(key)) {\n        for (var i = 0, ii = key.length; i < ii; ++i) {\n            unlistenByKey(key[i]);\n        }\n    }\n    else {\n        unlistenByKey(/** @type {import(\"./events.js\").EventsKey} */ (key));\n    }\n}\nexport default Observable;\n//# sourceMappingURL=Observable.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/Object\n */\nimport { getUid } from './util.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport Observable from './Observable.js';\nimport Event from './events/Event.js';\nimport { assign } from './obj.js';\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Object~BaseObject} instances are instances of this type.\n */\nvar ObjectEvent = /** @class */ (function (_super) {\n    __extends(ObjectEvent, _super);\n    /**\n     * @param {string} type The event type.\n     * @param {string} key The property name.\n     * @param {*} oldValue The old value for `key`.\n     */\n    function ObjectEvent(type, key, oldValue) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * The name of the property whose value is changing.\n         * @type {string}\n         * @api\n         */\n        _this.key = key;\n        /**\n         * The old value. To get the new value use `e.target.get(e.key)` where\n         * `e` is the event object.\n         * @type {*}\n         * @api\n         */\n        _this.oldValue = oldValue;\n        return _this;\n    }\n    return ObjectEvent;\n}(Event));\nexport { ObjectEvent };\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Most non-trivial classes inherit from this.\n *\n * This extends {@link module:ol/Observable} with observable\n * properties, where each property is observable as well as the object as a\n * whole.\n *\n * Classes that inherit from this have pre-defined properties, to which you can\n * add your owns. The pre-defined properties are listed in this documentation as\n * 'Observable Properties', and have their own accessors; for example,\n * {@link module:ol/Map~Map} has a `target` property, accessed with\n * `getTarget()` and changed with `setTarget()`. Not all properties are however\n * settable. There are also general-purpose accessors `get()` and `set()`. For\n * example, `get('target')` is equivalent to `getTarget()`.\n *\n * The `set` accessors trigger a change event, and you can monitor this by\n * registering a listener. For example, {@link module:ol/View~View} has a\n * `center` property, so `view.on('change:center', function(evt) {...});` would\n * call the function whenever the value of the center property changes. Within\n * the function, `evt.target` would be the view, so `evt.target.getCenter()`\n * would return the new center.\n *\n * You can add your own observable properties with\n * `object.set('prop', 'value')`, and retrieve that with `object.get('prop')`.\n * You can listen for changes on that property value with\n * `object.on('change:prop', listener)`. You can get a list of all\n * properties with {@link module:ol/Object~BaseObject#getProperties}.\n *\n * Note that the observable properties are separate from standard JS properties.\n * You can, for example, give your map object a title with\n * `map.title='New title'` and with `map.set('title', 'Another title')`. The\n * first will be a `hasOwnProperty`; the second will appear in\n * `getProperties()`. Only the second is observable.\n *\n * Properties can be deleted by using the unset method. E.g.\n * object.unset('foo').\n *\n * @fires ObjectEvent\n * @api\n */\nvar BaseObject = /** @class */ (function (_super) {\n    __extends(BaseObject, _super);\n    /**\n     * @param {Object<string, *>=} opt_values An object with key-value pairs.\n     */\n    function BaseObject(opt_values) {\n        var _this = _super.call(this) || this;\n        // Call {@link module:ol/util~getUid} to ensure that the order of objects' ids is\n        // the same as the order in which they were created.  This also helps to\n        // ensure that object properties are always added in the same order, which\n        // helps many JavaScript engines generate faster code.\n        getUid(_this);\n        /**\n         * @private\n         * @type {!Object<string, *>}\n         */\n        _this.values_ = {};\n        if (opt_values !== undefined) {\n            _this.setProperties(opt_values);\n        }\n        return _this;\n    }\n    /**\n     * Gets a value.\n     * @param {string} key Key name.\n     * @return {*} Value.\n     * @api\n     */\n    BaseObject.prototype.get = function (key) {\n        var value;\n        if (this.values_.hasOwnProperty(key)) {\n            value = this.values_[key];\n        }\n        return value;\n    };\n    /**\n     * Get a list of object property names.\n     * @return {Array<string>} List of property names.\n     * @api\n     */\n    BaseObject.prototype.getKeys = function () {\n        return Object.keys(this.values_);\n    };\n    /**\n     * Get an object of all property names and values.\n     * @return {Object<string, *>} Object.\n     * @api\n     */\n    BaseObject.prototype.getProperties = function () {\n        return assign({}, this.values_);\n    };\n    /**\n     * @param {string} key Key name.\n     * @param {*} oldValue Old value.\n     */\n    BaseObject.prototype.notify = function (key, oldValue) {\n        var eventType;\n        eventType = getChangeEventType(key);\n        this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n        eventType = ObjectEventType.PROPERTYCHANGE;\n        this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    };\n    /**\n     * Sets a value.\n     * @param {string} key Key name.\n     * @param {*} value Value.\n     * @param {boolean=} opt_silent Update without triggering an event.\n     * @api\n     */\n    BaseObject.prototype.set = function (key, value, opt_silent) {\n        if (opt_silent) {\n            this.values_[key] = value;\n        }\n        else {\n            var oldValue = this.values_[key];\n            this.values_[key] = value;\n            if (oldValue !== value) {\n                this.notify(key, oldValue);\n            }\n        }\n    };\n    /**\n     * Sets a collection of key-value pairs.  Note that this changes any existing\n     * properties and adds new ones (it does not remove any existing properties).\n     * @param {Object<string, *>} values Values.\n     * @param {boolean=} opt_silent Update without triggering an event.\n     * @api\n     */\n    BaseObject.prototype.setProperties = function (values, opt_silent) {\n        for (var key in values) {\n            this.set(key, values[key], opt_silent);\n        }\n    };\n    /**\n     * Unsets a property.\n     * @param {string} key Key name.\n     * @param {boolean=} opt_silent Unset without triggering an event.\n     * @api\n     */\n    BaseObject.prototype.unset = function (key, opt_silent) {\n        if (key in this.values_) {\n            var oldValue = this.values_[key];\n            delete this.values_[key];\n            if (!opt_silent) {\n                this.notify(key, oldValue);\n            }\n        }\n    };\n    return BaseObject;\n}(Observable));\n/**\n * @type {Object<string, string>}\n */\nvar changeEventTypeCache = {};\n/**\n * @param {string} key Key name.\n * @return {string} Change name.\n */\nexport function getChangeEventType(key) {\n    return changeEventTypeCache.hasOwnProperty(key) ?\n        changeEventTypeCache[key] :\n        (changeEventTypeCache[key] = 'change:' + key);\n}\nexport default BaseObject;\n//# sourceMappingURL=Object.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/Collection\n */\nimport AssertionError from './AssertionError.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport BaseObject from './Object.js';\nimport Event from './events/Event.js';\n/**\n * @enum {string}\n * @private\n */\nvar Property = {\n    LENGTH: 'length'\n};\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Collection~Collection} instances are instances of this\n * type.\n */\nvar CollectionEvent = /** @class */ (function (_super) {\n    __extends(CollectionEvent, _super);\n    /**\n     * @param {CollectionEventType} type Type.\n     * @param {*=} opt_element Element.\n     * @param {number} opt_index The index of the added or removed element.\n     */\n    function CollectionEvent(type, opt_element, opt_index) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * The element that is added to or removed from the collection.\n         * @type {*}\n         * @api\n         */\n        _this.element = opt_element;\n        /**\n         * The index of the added or removed element.\n         * @type {number}\n         * @api\n         */\n        _this.index = opt_index;\n        return _this;\n    }\n    return CollectionEvent;\n}(Event));\nexport { CollectionEvent };\n/**\n * @typedef {Object} Options\n * @property {boolean} [unique=false] Disallow the same item from being added to\n * the collection twice.\n */\n/**\n * @classdesc\n * An expanded version of standard JS Array, adding convenience methods for\n * manipulation. Add and remove changes to the Collection trigger a Collection\n * event. Note that this does not cover changes to the objects _within_ the\n * Collection; they trigger events on the appropriate object, not on the\n * Collection as a whole.\n *\n * @fires CollectionEvent\n *\n * @template T\n * @api\n */\nvar Collection = /** @class */ (function (_super) {\n    __extends(Collection, _super);\n    /**\n     * @param {Array<T>=} opt_array Array.\n     * @param {Options=} opt_options Collection options.\n     */\n    function Collection(opt_array, opt_options) {\n        var _this = _super.call(this) || this;\n        var options = opt_options || {};\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.unique_ = !!options.unique;\n        /**\n         * @private\n         * @type {!Array<T>}\n         */\n        _this.array_ = opt_array ? opt_array : [];\n        if (_this.unique_) {\n            for (var i = 0, ii = _this.array_.length; i < ii; ++i) {\n                _this.assertUnique_(_this.array_[i], i);\n            }\n        }\n        _this.updateLength_();\n        return _this;\n    }\n    /**\n     * Remove all elements from the collection.\n     * @api\n     */\n    Collection.prototype.clear = function () {\n        while (this.getLength() > 0) {\n            this.pop();\n        }\n    };\n    /**\n     * Add elements to the collection.  This pushes each item in the provided array\n     * to the end of the collection.\n     * @param {!Array<T>} arr Array.\n     * @return {Collection<T>} This collection.\n     * @api\n     */\n    Collection.prototype.extend = function (arr) {\n        for (var i = 0, ii = arr.length; i < ii; ++i) {\n            this.push(arr[i]);\n        }\n        return this;\n    };\n    /**\n     * Iterate over each element, calling the provided callback.\n     * @param {function(T, number, Array<T>): *} f The function to call\n     *     for every element. This function takes 3 arguments (the element, the\n     *     index and the array). The return value is ignored.\n     * @api\n     */\n    Collection.prototype.forEach = function (f) {\n        var array = this.array_;\n        for (var i = 0, ii = array.length; i < ii; ++i) {\n            f(array[i], i, array);\n        }\n    };\n    /**\n     * Get a reference to the underlying Array object. Warning: if the array\n     * is mutated, no events will be dispatched by the collection, and the\n     * collection's \"length\" property won't be in sync with the actual length\n     * of the array.\n     * @return {!Array<T>} Array.\n     * @api\n     */\n    Collection.prototype.getArray = function () {\n        return this.array_;\n    };\n    /**\n     * Get the element at the provided index.\n     * @param {number} index Index.\n     * @return {T} Element.\n     * @api\n     */\n    Collection.prototype.item = function (index) {\n        return this.array_[index];\n    };\n    /**\n     * Get the length of this collection.\n     * @return {number} The length of the array.\n     * @observable\n     * @api\n     */\n    Collection.prototype.getLength = function () {\n        return this.get(Property.LENGTH);\n    };\n    /**\n     * Insert an element at the provided index.\n     * @param {number} index Index.\n     * @param {T} elem Element.\n     * @api\n     */\n    Collection.prototype.insertAt = function (index, elem) {\n        if (this.unique_) {\n            this.assertUnique_(elem);\n        }\n        this.array_.splice(index, 0, elem);\n        this.updateLength_();\n        this.dispatchEvent(new CollectionEvent(CollectionEventType.ADD, elem, index));\n    };\n    /**\n     * Remove the last element of the collection and return it.\n     * Return `undefined` if the collection is empty.\n     * @return {T|undefined} Element.\n     * @api\n     */\n    Collection.prototype.pop = function () {\n        return this.removeAt(this.getLength() - 1);\n    };\n    /**\n     * Insert the provided element at the end of the collection.\n     * @param {T} elem Element.\n     * @return {number} New length of the collection.\n     * @api\n     */\n    Collection.prototype.push = function (elem) {\n        if (this.unique_) {\n            this.assertUnique_(elem);\n        }\n        var n = this.getLength();\n        this.insertAt(n, elem);\n        return this.getLength();\n    };\n    /**\n     * Remove the first occurrence of an element from the collection.\n     * @param {T} elem Element.\n     * @return {T|undefined} The removed element or undefined if none found.\n     * @api\n     */\n    Collection.prototype.remove = function (elem) {\n        var arr = this.array_;\n        for (var i = 0, ii = arr.length; i < ii; ++i) {\n            if (arr[i] === elem) {\n                return this.removeAt(i);\n            }\n        }\n        return undefined;\n    };\n    /**\n     * Remove the element at the provided index and return it.\n     * Return `undefined` if the collection does not contain this index.\n     * @param {number} index Index.\n     * @return {T|undefined} Value.\n     * @api\n     */\n    Collection.prototype.removeAt = function (index) {\n        var prev = this.array_[index];\n        this.array_.splice(index, 1);\n        this.updateLength_();\n        this.dispatchEvent(new CollectionEvent(CollectionEventType.REMOVE, prev, index));\n        return prev;\n    };\n    /**\n     * Set the element at the provided index.\n     * @param {number} index Index.\n     * @param {T} elem Element.\n     * @api\n     */\n    Collection.prototype.setAt = function (index, elem) {\n        var n = this.getLength();\n        if (index < n) {\n            if (this.unique_) {\n                this.assertUnique_(elem, index);\n            }\n            var prev = this.array_[index];\n            this.array_[index] = elem;\n            this.dispatchEvent(new CollectionEvent(CollectionEventType.REMOVE, prev, index));\n            this.dispatchEvent(new CollectionEvent(CollectionEventType.ADD, elem, index));\n        }\n        else {\n            for (var j = n; j < index; ++j) {\n                this.insertAt(j, undefined);\n            }\n            this.insertAt(index, elem);\n        }\n    };\n    /**\n     * @private\n     */\n    Collection.prototype.updateLength_ = function () {\n        this.set(Property.LENGTH, this.array_.length);\n    };\n    /**\n     * @private\n     * @param {T} elem Element.\n     * @param {number=} opt_except Optional index to ignore.\n     */\n    Collection.prototype.assertUnique_ = function (elem, opt_except) {\n        for (var i = 0, ii = this.array_.length; i < ii; ++i) {\n            if (this.array_[i] === elem && i !== opt_except) {\n                throw new AssertionError(58);\n            }\n        }\n    };\n    return Collection;\n}(BaseObject));\nexport default Collection;\n//# sourceMappingURL=Collection.js.map","/**\n * @module ol/asserts\n */\nimport AssertionError from './AssertionError.js';\n/**\n * @param {*} assertion Assertion we expected to be truthy.\n * @param {number} errorCode Error code.\n */\nexport function assert(assertion, errorCode) {\n    if (!assertion) {\n        throw new AssertionError(errorCode);\n    }\n}\n//# sourceMappingURL=asserts.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/Feature\n */\nimport { assert } from './asserts.js';\nimport { listen, unlisten, unlistenByKey } from './events.js';\nimport EventType from './events/EventType.js';\nimport BaseObject, { getChangeEventType } from './Object.js';\n/**\n * @typedef {typeof Feature|typeof import(\"./render/Feature.js\").default} FeatureClass\n */\n/**\n * @typedef {Feature|import(\"./render/Feature.js\").default} FeatureLike\n */\n/**\n * @classdesc\n * A vector object for geographic features with a geometry and other\n * attribute properties, similar to the features in vector file formats like\n * GeoJSON.\n *\n * Features can be styled individually with `setStyle`; otherwise they use the\n * style of their vector layer.\n *\n * Note that attribute properties are set as {@link module:ol/Object} properties on\n * the feature object, so they are observable, and have get/set accessors.\n *\n * Typically, a feature has a single geometry property. You can set the\n * geometry using the `setGeometry` method and get it with `getGeometry`.\n * It is possible to store more than one geometry on a feature using attribute\n * properties. By default, the geometry used for rendering is identified by\n * the property name `geometry`. If you want to use another geometry property\n * for rendering, use the `setGeometryName` method to change the attribute\n * property associated with the geometry for the feature.  For example:\n *\n * ```js\n *\n * import Feature from 'ol/Feature';\n * import Polygon from 'ol/geom/Polygon';\n * import Point from 'ol/geom/Point';\n *\n * var feature = new Feature({\n *   geometry: new Polygon(polyCoords),\n *   labelPoint: new Point(labelCoords),\n *   name: 'My Polygon'\n * });\n *\n * // get the polygon geometry\n * var poly = feature.getGeometry();\n *\n * // Render the feature as a point using the coordinates from labelPoint\n * feature.setGeometryName('labelPoint');\n *\n * // get the point geometry\n * var point = feature.getGeometry();\n * ```\n *\n * @api\n */\nvar Feature = /** @class */ (function (_super) {\n    __extends(Feature, _super);\n    /**\n     * @param {import(\"./geom/Geometry.js\").default|Object<string, *>=} opt_geometryOrProperties\n     *     You may pass a Geometry object directly, or an object literal containing\n     *     properties. If you pass an object literal, you may include a Geometry\n     *     associated with a `geometry` key.\n     */\n    function Feature(opt_geometryOrProperties) {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {number|string|undefined}\n         */\n        _this.id_ = undefined;\n        /**\n         * @type {string}\n         * @private\n         */\n        _this.geometryName_ = 'geometry';\n        /**\n         * User provided style.\n         * @private\n         * @type {import(\"./style/Style.js\").StyleLike}\n         */\n        _this.style_ = null;\n        /**\n         * @private\n         * @type {import(\"./style/Style.js\").StyleFunction|undefined}\n         */\n        _this.styleFunction_ = undefined;\n        /**\n         * @private\n         * @type {?import(\"./events.js\").EventsKey}\n         */\n        _this.geometryChangeKey_ = null;\n        listen(_this, getChangeEventType(_this.geometryName_), _this.handleGeometryChanged_, _this);\n        if (opt_geometryOrProperties) {\n            if (typeof /** @type {?} */ (opt_geometryOrProperties).getSimplifiedGeometry === 'function') {\n                var geometry = /** @type {import(\"./geom/Geometry.js\").default} */ (opt_geometryOrProperties);\n                _this.setGeometry(geometry);\n            }\n            else {\n                /** @type {Object<string, *>} */\n                var properties = opt_geometryOrProperties;\n                _this.setProperties(properties);\n            }\n        }\n        return _this;\n    }\n    /**\n     * Clone this feature. If the original feature has a geometry it\n     * is also cloned. The feature id is not set in the clone.\n     * @return {Feature} The clone.\n     * @api\n     */\n    Feature.prototype.clone = function () {\n        var clone = new Feature(this.getProperties());\n        clone.setGeometryName(this.getGeometryName());\n        var geometry = this.getGeometry();\n        if (geometry) {\n            clone.setGeometry(geometry.clone());\n        }\n        var style = this.getStyle();\n        if (style) {\n            clone.setStyle(style);\n        }\n        return clone;\n    };\n    /**\n     * Get the feature's default geometry.  A feature may have any number of named\n     * geometries.  The \"default\" geometry (the one that is rendered by default) is\n     * set when calling {@link module:ol/Feature~Feature#setGeometry}.\n     * @return {import(\"./geom/Geometry.js\").default|undefined} The default geometry for the feature.\n     * @api\n     * @observable\n     */\n    Feature.prototype.getGeometry = function () {\n        return (\n        /** @type {import(\"./geom/Geometry.js\").default|undefined} */ (this.get(this.geometryName_)));\n    };\n    /**\n     * Get the feature identifier.  This is a stable identifier for the feature and\n     * is either set when reading data from a remote source or set explicitly by\n     * calling {@link module:ol/Feature~Feature#setId}.\n     * @return {number|string|undefined} Id.\n     * @api\n     */\n    Feature.prototype.getId = function () {\n        return this.id_;\n    };\n    /**\n     * Get the name of the feature's default geometry.  By default, the default\n     * geometry is named `geometry`.\n     * @return {string} Get the property name associated with the default geometry\n     *     for this feature.\n     * @api\n     */\n    Feature.prototype.getGeometryName = function () {\n        return this.geometryName_;\n    };\n    /**\n     * Get the feature's style. Will return what was provided to the\n     * {@link module:ol/Feature~Feature#setStyle} method.\n     * @return {import(\"./style/Style.js\").StyleLike} The feature style.\n     * @api\n     */\n    Feature.prototype.getStyle = function () {\n        return this.style_;\n    };\n    /**\n     * Get the feature's style function.\n     * @return {import(\"./style/Style.js\").StyleFunction|undefined} Return a function\n     * representing the current style of this feature.\n     * @api\n     */\n    Feature.prototype.getStyleFunction = function () {\n        return this.styleFunction_;\n    };\n    /**\n     * @private\n     */\n    Feature.prototype.handleGeometryChange_ = function () {\n        this.changed();\n    };\n    /**\n     * @private\n     */\n    Feature.prototype.handleGeometryChanged_ = function () {\n        if (this.geometryChangeKey_) {\n            unlistenByKey(this.geometryChangeKey_);\n            this.geometryChangeKey_ = null;\n        }\n        var geometry = this.getGeometry();\n        if (geometry) {\n            this.geometryChangeKey_ = listen(geometry, EventType.CHANGE, this.handleGeometryChange_, this);\n        }\n        this.changed();\n    };\n    /**\n     * Set the default geometry for the feature.  This will update the property\n     * with the name returned by {@link module:ol/Feature~Feature#getGeometryName}.\n     * @param {import(\"./geom/Geometry.js\").default|undefined} geometry The new geometry.\n     * @api\n     * @observable\n     */\n    Feature.prototype.setGeometry = function (geometry) {\n        this.set(this.geometryName_, geometry);\n    };\n    /**\n     * Set the style for the feature.  This can be a single style object, an array\n     * of styles, or a function that takes a resolution and returns an array of\n     * styles. If it is `null` the feature has no style (a `null` style).\n     * @param {import(\"./style/Style.js\").StyleLike} style Style for this feature.\n     * @api\n     * @fires module:ol/events/Event~Event#event:change\n     */\n    Feature.prototype.setStyle = function (style) {\n        this.style_ = style;\n        this.styleFunction_ = !style ? undefined : createStyleFunction(style);\n        this.changed();\n    };\n    /**\n     * Set the feature id.  The feature id is considered stable and may be used when\n     * requesting features or comparing identifiers returned from a remote source.\n     * The feature id can be used with the\n     * {@link module:ol/source/Vector~VectorSource#getFeatureById} method.\n     * @param {number|string|undefined} id The feature id.\n     * @api\n     * @fires module:ol/events/Event~Event#event:change\n     */\n    Feature.prototype.setId = function (id) {\n        this.id_ = id;\n        this.changed();\n    };\n    /**\n     * Set the property name to be used when getting the feature's default geometry.\n     * When calling {@link module:ol/Feature~Feature#getGeometry}, the value of the property with\n     * this name will be returned.\n     * @param {string} name The property name of the default geometry.\n     * @api\n     */\n    Feature.prototype.setGeometryName = function (name) {\n        unlisten(this, getChangeEventType(this.geometryName_), this.handleGeometryChanged_, this);\n        this.geometryName_ = name;\n        listen(this, getChangeEventType(this.geometryName_), this.handleGeometryChanged_, this);\n        this.handleGeometryChanged_();\n    };\n    return Feature;\n}(BaseObject));\n/**\n * Convert the provided object into a feature style function.  Functions passed\n * through unchanged.  Arrays of Style or single style objects wrapped\n * in a new feature style function.\n * @param {!import(\"./style/Style.js\").StyleFunction|!Array<import(\"./style/Style.js\").default>|!import(\"./style/Style.js\").default} obj\n *     A feature style function, a single style, or an array of styles.\n * @return {import(\"./style/Style.js\").StyleFunction} A style function.\n */\nexport function createStyleFunction(obj) {\n    if (typeof obj === 'function') {\n        return obj;\n    }\n    else {\n        /**\n         * @type {Array<import(\"./style/Style.js\").default>}\n         */\n        var styles_1;\n        if (Array.isArray(obj)) {\n            styles_1 = obj;\n        }\n        else {\n            assert(typeof /** @type {?} */ (obj).getZIndex === 'function', 41); // Expected an `import(\"./style/Style.js\").Style` or an array of `import(\"./style/Style.js\").Style`\n            var style = /** @type {import(\"./style/Style.js\").default} */ (obj);\n            styles_1 = [style];\n        }\n        return function () {\n            return styles_1;\n        };\n    }\n}\nexport default Feature;\n//# sourceMappingURL=Feature.js.map","/**\n * @module ol/array\n */\n/**\n * Performs a binary search on the provided sorted list and returns the index of the item if found. If it can't be found it'll return -1.\n * https://github.com/darkskyapp/binary-search\n *\n * @param {Array<*>} haystack Items to search through.\n * @param {*} needle The item to look for.\n * @param {Function=} opt_comparator Comparator function.\n * @return {number} The index of the item if found, -1 if not.\n */\nexport function binarySearch(haystack, needle, opt_comparator) {\n    var mid, cmp;\n    var comparator = opt_comparator || numberSafeCompareFunction;\n    var low = 0;\n    var high = haystack.length;\n    var found = false;\n    while (low < high) {\n        /* Note that \"(low + high) >>> 1\" may overflow, and results in a typecast\n         * to double (which gives the wrong results). */\n        mid = low + (high - low >> 1);\n        cmp = +comparator(haystack[mid], needle);\n        if (cmp < 0.0) { /* Too low. */\n            low = mid + 1;\n        }\n        else { /* Key found or too high */\n            high = mid;\n            found = !cmp;\n        }\n    }\n    /* Key not found. */\n    return found ? low : ~low;\n}\n/**\n * Compare function for array sort that is safe for numbers.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is less than, equal to, or greater than the second.\n */\nexport function numberSafeCompareFunction(a, b) {\n    return a > b ? 1 : a < b ? -1 : 0;\n}\n/**\n * Whether the array contains the given object.\n * @param {Array<*>} arr The array to test for the presence of the element.\n * @param {*} obj The object for which to test.\n * @return {boolean} The object is in the array.\n */\nexport function includes(arr, obj) {\n    return arr.indexOf(obj) >= 0;\n}\n/**\n * @param {Array<number>} arr Array.\n * @param {number} target Target.\n * @param {number} direction 0 means return the nearest, > 0\n *    means return the largest nearest, < 0 means return the\n *    smallest nearest.\n * @return {number} Index.\n */\nexport function linearFindNearest(arr, target, direction) {\n    var n = arr.length;\n    if (arr[0] <= target) {\n        return 0;\n    }\n    else if (target <= arr[n - 1]) {\n        return n - 1;\n    }\n    else {\n        var i = void 0;\n        if (direction > 0) {\n            for (i = 1; i < n; ++i) {\n                if (arr[i] < target) {\n                    return i - 1;\n                }\n            }\n        }\n        else if (direction < 0) {\n            for (i = 1; i < n; ++i) {\n                if (arr[i] <= target) {\n                    return i;\n                }\n            }\n        }\n        else {\n            for (i = 1; i < n; ++i) {\n                if (arr[i] == target) {\n                    return i;\n                }\n                else if (arr[i] < target) {\n                    if (arr[i - 1] - target < target - arr[i]) {\n                        return i - 1;\n                    }\n                    else {\n                        return i;\n                    }\n                }\n            }\n        }\n        return n - 1;\n    }\n}\n/**\n * @param {Array<*>} arr Array.\n * @param {number} begin Begin index.\n * @param {number} end End index.\n */\nexport function reverseSubArray(arr, begin, end) {\n    while (begin < end) {\n        var tmp = arr[begin];\n        arr[begin] = arr[end];\n        arr[end] = tmp;\n        ++begin;\n        --end;\n    }\n}\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {!Array<VALUE>|VALUE} data The elements or arrays of elements to add to arr.\n * @template VALUE\n */\nexport function extend(arr, data) {\n    var extension = Array.isArray(data) ? data : [data];\n    var length = extension.length;\n    for (var i = 0; i < length; i++) {\n        arr[arr.length] = extension[i];\n    }\n}\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {VALUE} obj The element to remove.\n * @template VALUE\n * @return {boolean} If the element was removed.\n */\nexport function remove(arr, obj) {\n    var i = arr.indexOf(obj);\n    var found = i > -1;\n    if (found) {\n        arr.splice(i, 1);\n    }\n    return found;\n}\n/**\n * @param {Array<VALUE>} arr The array to search in.\n * @param {function(VALUE, number, ?) : boolean} func The function to compare.\n * @template VALUE\n * @return {VALUE|null} The element found or null.\n */\nexport function find(arr, func) {\n    var length = arr.length >>> 0;\n    var value;\n    for (var i = 0; i < length; i++) {\n        value = arr[i];\n        if (func(value, i, arr)) {\n            return value;\n        }\n    }\n    return null;\n}\n/**\n * @param {Array|Uint8ClampedArray} arr1 The first array to compare.\n * @param {Array|Uint8ClampedArray} arr2 The second array to compare.\n * @return {boolean} Whether the two arrays are equal.\n */\nexport function equals(arr1, arr2) {\n    var len1 = arr1.length;\n    if (len1 !== arr2.length) {\n        return false;\n    }\n    for (var i = 0; i < len1; i++) {\n        if (arr1[i] !== arr2[i]) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Sort the passed array such that the relative order of equal elements is preverved.\n * See https://en.wikipedia.org/wiki/Sorting_algorithm#Stability for details.\n * @param {Array<*>} arr The array to sort (modifies original).\n * @param {!function(*, *): number} compareFnc Comparison function.\n * @api\n */\nexport function stableSort(arr, compareFnc) {\n    var length = arr.length;\n    var tmp = Array(arr.length);\n    var i;\n    for (i = 0; i < length; i++) {\n        tmp[i] = { index: i, value: arr[i] };\n    }\n    tmp.sort(function (a, b) {\n        return compareFnc(a.value, b.value) || a.index - b.index;\n    });\n    for (i = 0; i < arr.length; i++) {\n        arr[i] = tmp[i].value;\n    }\n}\n/**\n * @param {Array<*>} arr The array to search in.\n * @param {Function} func Comparison function.\n * @return {number} Return index.\n */\nexport function findIndex(arr, func) {\n    var index;\n    var found = !arr.every(function (el, idx) {\n        index = idx;\n        return !func(el, idx, arr);\n    });\n    return found ? index : -1;\n}\n/**\n * @param {Array<*>} arr The array to test.\n * @param {Function=} opt_func Comparison function.\n * @param {boolean=} opt_strict Strictly sorted (default false).\n * @return {boolean} Return index.\n */\nexport function isSorted(arr, opt_func, opt_strict) {\n    var compare = opt_func || numberSafeCompareFunction;\n    return arr.every(function (currentVal, index) {\n        if (index === 0) {\n            return true;\n        }\n        var res = compare(arr[index - 1], currentVal);\n        return !(res > 0 || opt_strict && res === 0);\n    });\n}\n//# sourceMappingURL=array.js.map","/**\n * @module ol/extent/Corner\n */\n/**\n * Extent corner.\n * @enum {string}\n */\nexport default {\n    BOTTOM_LEFT: 'bottom-left',\n    BOTTOM_RIGHT: 'bottom-right',\n    TOP_LEFT: 'top-left',\n    TOP_RIGHT: 'top-right'\n};\n//# sourceMappingURL=Corner.js.map","/**\n * @module ol/extent/Relationship\n */\n/**\n * Relationship to an extent.\n * @enum {number}\n */\nexport default {\n    UNKNOWN: 0,\n    INTERSECTING: 1,\n    ABOVE: 2,\n    RIGHT: 4,\n    BELOW: 8,\n    LEFT: 16\n};\n//# sourceMappingURL=Relationship.js.map","/**\n * @module ol/extent\n */\nimport { assert } from './asserts.js';\nimport Corner from './extent/Corner.js';\nimport Relationship from './extent/Relationship.js';\n/**\n * An array of numbers representing an extent: `[minx, miny, maxx, maxy]`.\n * @typedef {Array<number>} Extent\n * @api\n */\n/**\n * Build an extent that includes all given coordinates.\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Bounding extent.\n * @api\n */\nexport function boundingExtent(coordinates) {\n    var extent = createEmpty();\n    for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n        extendCoordinate(extent, coordinates[i]);\n    }\n    return extent;\n}\n/**\n * @param {Array<number>} xs Xs.\n * @param {Array<number>} ys Ys.\n * @param {Extent=} opt_extent Destination extent.\n * @private\n * @return {Extent} Extent.\n */\nfunction _boundingExtentXYs(xs, ys, opt_extent) {\n    var minX = Math.min.apply(null, xs);\n    var minY = Math.min.apply(null, ys);\n    var maxX = Math.max.apply(null, xs);\n    var maxY = Math.max.apply(null, ys);\n    return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n}\n/**\n * Return extent increased by the provided value.\n * @param {Extent} extent Extent.\n * @param {number} value The amount by which the extent should be buffered.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n * @api\n */\nexport function buffer(extent, value, opt_extent) {\n    if (opt_extent) {\n        opt_extent[0] = extent[0] - value;\n        opt_extent[1] = extent[1] - value;\n        opt_extent[2] = extent[2] + value;\n        opt_extent[3] = extent[3] + value;\n        return opt_extent;\n    }\n    else {\n        return [\n            extent[0] - value,\n            extent[1] - value,\n            extent[2] + value,\n            extent[3] + value\n        ];\n    }\n}\n/**\n * Creates a clone of an extent.\n *\n * @param {Extent} extent Extent to clone.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} The clone.\n */\nexport function clone(extent, opt_extent) {\n    if (opt_extent) {\n        opt_extent[0] = extent[0];\n        opt_extent[1] = extent[1];\n        opt_extent[2] = extent[2];\n        opt_extent[3] = extent[3];\n        return opt_extent;\n    }\n    else {\n        return extent.slice();\n    }\n}\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {number} Closest squared distance.\n */\nexport function closestSquaredDistanceXY(extent, x, y) {\n    var dx, dy;\n    if (x < extent[0]) {\n        dx = extent[0] - x;\n    }\n    else if (extent[2] < x) {\n        dx = x - extent[2];\n    }\n    else {\n        dx = 0;\n    }\n    if (y < extent[1]) {\n        dy = extent[1] - y;\n    }\n    else if (extent[3] < y) {\n        dy = y - extent[3];\n    }\n    else {\n        dy = 0;\n    }\n    return dx * dx + dy * dy;\n}\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @return {boolean} The coordinate is contained in the extent.\n * @api\n */\nexport function containsCoordinate(extent, coordinate) {\n    return containsXY(extent, coordinate[0], coordinate[1]);\n}\n/**\n * Check if one extent contains another.\n *\n * An extent is deemed contained if it lies completely within the other extent,\n * including if they share one or more edges.\n *\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The second extent is contained by or on the edge of the\n *     first.\n * @api\n */\nexport function containsExtent(extent1, extent2) {\n    return extent1[0] <= extent2[0] && extent2[2] <= extent1[2] &&\n        extent1[1] <= extent2[1] && extent2[3] <= extent1[3];\n}\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n * @return {boolean} The x, y values are contained in the extent.\n * @api\n */\nexport function containsXY(extent, x, y) {\n    return extent[0] <= x && x <= extent[2] && extent[1] <= y && y <= extent[3];\n}\n/**\n * Get the relationship between a coordinate and extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate The coordinate.\n * @return {Relationship} The relationship (bitwise compare with\n *     import(\"./extent/Relationship.js\").Relationship).\n */\nexport function coordinateRelationship(extent, coordinate) {\n    var minX = extent[0];\n    var minY = extent[1];\n    var maxX = extent[2];\n    var maxY = extent[3];\n    var x = coordinate[0];\n    var y = coordinate[1];\n    var relationship = Relationship.UNKNOWN;\n    if (x < minX) {\n        relationship = relationship | Relationship.LEFT;\n    }\n    else if (x > maxX) {\n        relationship = relationship | Relationship.RIGHT;\n    }\n    if (y < minY) {\n        relationship = relationship | Relationship.BELOW;\n    }\n    else if (y > maxY) {\n        relationship = relationship | Relationship.ABOVE;\n    }\n    if (relationship === Relationship.UNKNOWN) {\n        relationship = Relationship.INTERSECTING;\n    }\n    return relationship;\n}\n/**\n * Create an empty extent.\n * @return {Extent} Empty extent.\n * @api\n */\nexport function createEmpty() {\n    return [Infinity, Infinity, -Infinity, -Infinity];\n}\n/**\n * Create a new extent or update the provided extent.\n * @param {number} minX Minimum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxX Maximum X.\n * @param {number} maxY Maximum Y.\n * @param {Extent=} opt_extent Destination extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdate(minX, minY, maxX, maxY, opt_extent) {\n    if (opt_extent) {\n        opt_extent[0] = minX;\n        opt_extent[1] = minY;\n        opt_extent[2] = maxX;\n        opt_extent[3] = maxY;\n        return opt_extent;\n    }\n    else {\n        return [minX, minY, maxX, maxY];\n    }\n}\n/**\n * Create a new empty extent or make the provided one empty.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateEmpty(opt_extent) {\n    return createOrUpdate(Infinity, Infinity, -Infinity, -Infinity, opt_extent);\n}\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinate(coordinate, opt_extent) {\n    var x = coordinate[0];\n    var y = coordinate[1];\n    return createOrUpdate(x, y, x, y, opt_extent);\n}\n/**\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinates(coordinates, opt_extent) {\n    var extent = createOrUpdateEmpty(opt_extent);\n    return extendCoordinates(extent, coordinates);\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromFlatCoordinates(flatCoordinates, offset, end, stride, opt_extent) {\n    var extent = createOrUpdateEmpty(opt_extent);\n    return extendFlatCoordinates(extent, flatCoordinates, offset, end, stride);\n}\n/**\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromRings(rings, opt_extent) {\n    var extent = createOrUpdateEmpty(opt_extent);\n    return extendRings(extent, rings);\n}\n/**\n * Determine if two extents are equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The two extents are equivalent.\n * @api\n */\nexport function equals(extent1, extent2) {\n    return extent1[0] == extent2[0] && extent1[2] == extent2[2] &&\n        extent1[1] == extent2[1] && extent1[3] == extent2[3];\n}\n/**\n * Modify an extent to include another extent.\n * @param {Extent} extent1 The extent to be modified.\n * @param {Extent} extent2 The extent that will be included in the first.\n * @return {Extent} A reference to the first (extended) extent.\n * @api\n */\nexport function extend(extent1, extent2) {\n    if (extent2[0] < extent1[0]) {\n        extent1[0] = extent2[0];\n    }\n    if (extent2[2] > extent1[2]) {\n        extent1[2] = extent2[2];\n    }\n    if (extent2[1] < extent1[1]) {\n        extent1[1] = extent2[1];\n    }\n    if (extent2[3] > extent1[3]) {\n        extent1[3] = extent2[3];\n    }\n    return extent1;\n}\n/**\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n */\nexport function extendCoordinate(extent, coordinate) {\n    if (coordinate[0] < extent[0]) {\n        extent[0] = coordinate[0];\n    }\n    if (coordinate[0] > extent[2]) {\n        extent[2] = coordinate[0];\n    }\n    if (coordinate[1] < extent[1]) {\n        extent[1] = coordinate[1];\n    }\n    if (coordinate[1] > extent[3]) {\n        extent[3] = coordinate[1];\n    }\n}\n/**\n * @param {Extent} extent Extent.\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Extent.\n */\nexport function extendCoordinates(extent, coordinates) {\n    for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n        extendCoordinate(extent, coordinates[i]);\n    }\n    return extent;\n}\n/**\n * @param {Extent} extent Extent.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Extent} Extent.\n */\nexport function extendFlatCoordinates(extent, flatCoordinates, offset, end, stride) {\n    for (; offset < end; offset += stride) {\n        extendXY(extent, flatCoordinates[offset], flatCoordinates[offset + 1]);\n    }\n    return extent;\n}\n/**\n * @param {Extent} extent Extent.\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @return {Extent} Extent.\n */\nexport function extendRings(extent, rings) {\n    for (var i = 0, ii = rings.length; i < ii; ++i) {\n        extendCoordinates(extent, rings[i]);\n    }\n    return extent;\n}\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n */\nexport function extendXY(extent, x, y) {\n    extent[0] = Math.min(extent[0], x);\n    extent[1] = Math.min(extent[1], y);\n    extent[2] = Math.max(extent[2], x);\n    extent[3] = Math.max(extent[3], y);\n}\n/**\n * This function calls `callback` for each corner of the extent. If the\n * callback returns a truthy value the function returns that value\n * immediately. Otherwise the function returns `false`.\n * @param {Extent} extent Extent.\n * @param {function(import(\"./coordinate.js\").Coordinate): S} callback Callback.\n * @return {S|boolean} Value.\n * @template S\n */\nexport function forEachCorner(extent, callback) {\n    var val;\n    val = callback(getBottomLeft(extent));\n    if (val) {\n        return val;\n    }\n    val = callback(getBottomRight(extent));\n    if (val) {\n        return val;\n    }\n    val = callback(getTopRight(extent));\n    if (val) {\n        return val;\n    }\n    val = callback(getTopLeft(extent));\n    if (val) {\n        return val;\n    }\n    return false;\n}\n/**\n * Get the size of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Area.\n * @api\n */\nexport function getArea(extent) {\n    var area = 0;\n    if (!isEmpty(extent)) {\n        area = getWidth(extent) * getHeight(extent);\n    }\n    return area;\n}\n/**\n * Get the bottom left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom left coordinate.\n * @api\n */\nexport function getBottomLeft(extent) {\n    return [extent[0], extent[1]];\n}\n/**\n * Get the bottom right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom right coordinate.\n * @api\n */\nexport function getBottomRight(extent) {\n    return [extent[2], extent[1]];\n}\n/**\n * Get the center coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Center.\n * @api\n */\nexport function getCenter(extent) {\n    return [(extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2];\n}\n/**\n * Get a corner coordinate of an extent.\n * @param {Extent} extent Extent.\n * @param {Corner} corner Corner.\n * @return {import(\"./coordinate.js\").Coordinate} Corner coordinate.\n */\nexport function getCorner(extent, corner) {\n    var coordinate;\n    if (corner === Corner.BOTTOM_LEFT) {\n        coordinate = getBottomLeft(extent);\n    }\n    else if (corner === Corner.BOTTOM_RIGHT) {\n        coordinate = getBottomRight(extent);\n    }\n    else if (corner === Corner.TOP_LEFT) {\n        coordinate = getTopLeft(extent);\n    }\n    else if (corner === Corner.TOP_RIGHT) {\n        coordinate = getTopRight(extent);\n    }\n    else {\n        assert(false, 13); // Invalid corner\n    }\n    return coordinate;\n}\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Enlarged area.\n */\nexport function getEnlargedArea(extent1, extent2) {\n    var minX = Math.min(extent1[0], extent2[0]);\n    var minY = Math.min(extent1[1], extent2[1]);\n    var maxX = Math.max(extent1[2], extent2[2]);\n    var maxY = Math.max(extent1[3], extent2[3]);\n    return (maxX - minX) * (maxY - minY);\n}\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @param {Extent=} opt_extent Destination extent.\n * @return {Extent} Extent.\n */\nexport function getForViewAndSize(center, resolution, rotation, size, opt_extent) {\n    var dx = resolution * size[0] / 2;\n    var dy = resolution * size[1] / 2;\n    var cosRotation = Math.cos(rotation);\n    var sinRotation = Math.sin(rotation);\n    var xCos = dx * cosRotation;\n    var xSin = dx * sinRotation;\n    var yCos = dy * cosRotation;\n    var ySin = dy * sinRotation;\n    var x = center[0];\n    var y = center[1];\n    var x0 = x - xCos + ySin;\n    var x1 = x - xCos - ySin;\n    var x2 = x + xCos - ySin;\n    var x3 = x + xCos + ySin;\n    var y0 = y - xSin - yCos;\n    var y1 = y - xSin + yCos;\n    var y2 = y + xSin + yCos;\n    var y3 = y + xSin - yCos;\n    return createOrUpdate(Math.min(x0, x1, x2, x3), Math.min(y0, y1, y2, y3), Math.max(x0, x1, x2, x3), Math.max(y0, y1, y2, y3), opt_extent);\n}\n/**\n * Get the height of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Height.\n * @api\n */\nexport function getHeight(extent) {\n    return extent[3] - extent[1];\n}\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Intersection area.\n */\nexport function getIntersectionArea(extent1, extent2) {\n    var intersection = getIntersection(extent1, extent2);\n    return getArea(intersection);\n}\n/**\n * Get the intersection of two extents.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {Extent=} opt_extent Optional extent to populate with intersection.\n * @return {Extent} Intersecting extent.\n * @api\n */\nexport function getIntersection(extent1, extent2, opt_extent) {\n    var intersection = opt_extent ? opt_extent : createEmpty();\n    if (intersects(extent1, extent2)) {\n        if (extent1[0] > extent2[0]) {\n            intersection[0] = extent1[0];\n        }\n        else {\n            intersection[0] = extent2[0];\n        }\n        if (extent1[1] > extent2[1]) {\n            intersection[1] = extent1[1];\n        }\n        else {\n            intersection[1] = extent2[1];\n        }\n        if (extent1[2] < extent2[2]) {\n            intersection[2] = extent1[2];\n        }\n        else {\n            intersection[2] = extent2[2];\n        }\n        if (extent1[3] < extent2[3]) {\n            intersection[3] = extent1[3];\n        }\n        else {\n            intersection[3] = extent2[3];\n        }\n    }\n    else {\n        createOrUpdateEmpty(intersection);\n    }\n    return intersection;\n}\n/**\n * @param {Extent} extent Extent.\n * @return {number} Margin.\n */\nexport function getMargin(extent) {\n    return getWidth(extent) + getHeight(extent);\n}\n/**\n * Get the size (width, height) of an extent.\n * @param {Extent} extent The extent.\n * @return {import(\"./size.js\").Size} The extent size.\n * @api\n */\nexport function getSize(extent) {\n    return [extent[2] - extent[0], extent[3] - extent[1]];\n}\n/**\n * Get the top left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top left coordinate.\n * @api\n */\nexport function getTopLeft(extent) {\n    return [extent[0], extent[3]];\n}\n/**\n * Get the top right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top right coordinate.\n * @api\n */\nexport function getTopRight(extent) {\n    return [extent[2], extent[3]];\n}\n/**\n * Get the width of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Width.\n * @api\n */\nexport function getWidth(extent) {\n    return extent[2] - extent[0];\n}\n/**\n * Determine if one extent intersects another.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent.\n * @return {boolean} The two extents intersect.\n * @api\n */\nexport function intersects(extent1, extent2) {\n    return extent1[0] <= extent2[2] &&\n        extent1[2] >= extent2[0] &&\n        extent1[1] <= extent2[3] &&\n        extent1[3] >= extent2[1];\n}\n/**\n * Determine if an extent is empty.\n * @param {Extent} extent Extent.\n * @return {boolean} Is empty.\n * @api\n */\nexport function isEmpty(extent) {\n    return extent[2] < extent[0] || extent[3] < extent[1];\n}\n/**\n * @param {Extent} extent Extent.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function returnOrUpdate(extent, opt_extent) {\n    if (opt_extent) {\n        opt_extent[0] = extent[0];\n        opt_extent[1] = extent[1];\n        opt_extent[2] = extent[2];\n        opt_extent[3] = extent[3];\n        return opt_extent;\n    }\n    else {\n        return extent;\n    }\n}\n/**\n * @param {Extent} extent Extent.\n * @param {number} value Value.\n */\nexport function scaleFromCenter(extent, value) {\n    var deltaX = ((extent[2] - extent[0]) / 2) * (value - 1);\n    var deltaY = ((extent[3] - extent[1]) / 2) * (value - 1);\n    extent[0] -= deltaX;\n    extent[2] += deltaX;\n    extent[1] -= deltaY;\n    extent[3] += deltaY;\n}\n/**\n * Determine if the segment between two coordinates intersects (crosses,\n * touches, or is contained by) the provided extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} start Segment start coordinate.\n * @param {import(\"./coordinate.js\").Coordinate} end Segment end coordinate.\n * @return {boolean} The segment intersects the extent.\n */\nexport function intersectsSegment(extent, start, end) {\n    var intersects = false;\n    var startRel = coordinateRelationship(extent, start);\n    var endRel = coordinateRelationship(extent, end);\n    if (startRel === Relationship.INTERSECTING ||\n        endRel === Relationship.INTERSECTING) {\n        intersects = true;\n    }\n    else {\n        var minX = extent[0];\n        var minY = extent[1];\n        var maxX = extent[2];\n        var maxY = extent[3];\n        var startX = start[0];\n        var startY = start[1];\n        var endX = end[0];\n        var endY = end[1];\n        var slope = (endY - startY) / (endX - startX);\n        var x = void 0, y = void 0;\n        if (!!(endRel & Relationship.ABOVE) &&\n            !(startRel & Relationship.ABOVE)) {\n            // potentially intersects top\n            x = endX - ((endY - maxY) / slope);\n            intersects = x >= minX && x <= maxX;\n        }\n        if (!intersects && !!(endRel & Relationship.RIGHT) &&\n            !(startRel & Relationship.RIGHT)) {\n            // potentially intersects right\n            y = endY - ((endX - maxX) * slope);\n            intersects = y >= minY && y <= maxY;\n        }\n        if (!intersects && !!(endRel & Relationship.BELOW) &&\n            !(startRel & Relationship.BELOW)) {\n            // potentially intersects bottom\n            x = endX - ((endY - minY) / slope);\n            intersects = x >= minX && x <= maxX;\n        }\n        if (!intersects && !!(endRel & Relationship.LEFT) &&\n            !(startRel & Relationship.LEFT)) {\n            // potentially intersects left\n            y = endY - ((endX - minX) * slope);\n            intersects = y >= minY && y <= maxY;\n        }\n    }\n    return intersects;\n}\n/**\n * Apply a transform function to the extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./proj.js\").TransformFunction} transformFn Transform function.\n * Called with `[minX, minY, maxX, maxY]` extent coordinates.\n * @param {Extent=} opt_extent Destination extent.\n * @return {Extent} Extent.\n * @api\n */\nexport function applyTransform(extent, transformFn, opt_extent) {\n    var coordinates = [\n        extent[0], extent[1],\n        extent[0], extent[3],\n        extent[2], extent[1],\n        extent[2], extent[3]\n    ];\n    transformFn(coordinates, coordinates, 2);\n    var xs = [coordinates[0], coordinates[2], coordinates[4], coordinates[6]];\n    var ys = [coordinates[1], coordinates[3], coordinates[5], coordinates[7]];\n    return _boundingExtentXYs(xs, ys, opt_extent);\n}\n//# sourceMappingURL=extent.js.map","/**\n * @module ol/geom/GeometryLayout\n */\n/**\n * The coordinate layout for geometries, indicating whether a 3rd or 4th z ('Z')\n * or measure ('M') coordinate is available. Supported values are `'XY'`,\n * `'XYZ'`, `'XYM'`, `'XYZM'`.\n * @enum {string}\n */\nexport default {\n    XY: 'XY',\n    XYZ: 'XYZ',\n    XYM: 'XYM',\n    XYZM: 'XYZM'\n};\n//# sourceMappingURL=GeometryLayout.js.map","/**\n * @module ol/geom/GeometryType\n */\n/**\n * The geometry type. One of `'Point'`, `'LineString'`, `'LinearRing'`,\n * `'Polygon'`, `'MultiPoint'`, `'MultiLineString'`, `'MultiPolygon'`,\n * `'GeometryCollection'`, `'Circle'`.\n * @enum {string}\n */\nexport default {\n    POINT: 'Point',\n    LINE_STRING: 'LineString',\n    LINEAR_RING: 'LinearRing',\n    POLYGON: 'Polygon',\n    MULTI_POINT: 'MultiPoint',\n    MULTI_LINE_STRING: 'MultiLineString',\n    MULTI_POLYGON: 'MultiPolygon',\n    GEOMETRY_COLLECTION: 'GeometryCollection',\n    CIRCLE: 'Circle'\n};\n//# sourceMappingURL=GeometryType.js.map","/**\n * @module ol/geom/flat/transform\n */\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../transform.js\").Transform} transform Transform.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function transform2D(flatCoordinates, offset, end, stride, transform, opt_dest) {\n    var dest = opt_dest ? opt_dest : [];\n    var i = 0;\n    for (var j = offset; j < end; j += stride) {\n        var x = flatCoordinates[j];\n        var y = flatCoordinates[j + 1];\n        dest[i++] = transform[0] * x + transform[2] * y + transform[4];\n        dest[i++] = transform[1] * x + transform[3] * y + transform[5];\n    }\n    if (opt_dest && dest.length != i) {\n        dest.length = i;\n    }\n    return dest;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} angle Angle.\n * @param {Array<number>} anchor Rotation anchor point.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function rotate(flatCoordinates, offset, end, stride, angle, anchor, opt_dest) {\n    var dest = opt_dest ? opt_dest : [];\n    var cos = Math.cos(angle);\n    var sin = Math.sin(angle);\n    var anchorX = anchor[0];\n    var anchorY = anchor[1];\n    var i = 0;\n    for (var j = offset; j < end; j += stride) {\n        var deltaX = flatCoordinates[j] - anchorX;\n        var deltaY = flatCoordinates[j + 1] - anchorY;\n        dest[i++] = anchorX + deltaX * cos - deltaY * sin;\n        dest[i++] = anchorY + deltaX * sin + deltaY * cos;\n        for (var k = j + 2; k < j + stride; ++k) {\n            dest[i++] = flatCoordinates[k];\n        }\n    }\n    if (opt_dest && dest.length != i) {\n        dest.length = i;\n    }\n    return dest;\n}\n/**\n * Scale the coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} sx Scale factor in the x-direction.\n * @param {number} sy Scale factor in the y-direction.\n * @param {Array<number>} anchor Scale anchor point.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function scale(flatCoordinates, offset, end, stride, sx, sy, anchor, opt_dest) {\n    var dest = opt_dest ? opt_dest : [];\n    var anchorX = anchor[0];\n    var anchorY = anchor[1];\n    var i = 0;\n    for (var j = offset; j < end; j += stride) {\n        var deltaX = flatCoordinates[j] - anchorX;\n        var deltaY = flatCoordinates[j + 1] - anchorY;\n        dest[i++] = anchorX + sx * deltaX;\n        dest[i++] = anchorY + sy * deltaY;\n        for (var k = j + 2; k < j + stride; ++k) {\n            dest[i++] = flatCoordinates[k];\n        }\n    }\n    if (opt_dest && dest.length != i) {\n        dest.length = i;\n    }\n    return dest;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} deltaX Delta X.\n * @param {number} deltaY Delta Y.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function translate(flatCoordinates, offset, end, stride, deltaX, deltaY, opt_dest) {\n    var dest = opt_dest ? opt_dest : [];\n    var i = 0;\n    for (var j = offset; j < end; j += stride) {\n        dest[i++] = flatCoordinates[j] + deltaX;\n        dest[i++] = flatCoordinates[j + 1] + deltaY;\n        for (var k = j + 2; k < j + stride; ++k) {\n            dest[i++] = flatCoordinates[k];\n        }\n    }\n    if (opt_dest && dest.length != i) {\n        dest.length = i;\n    }\n    return dest;\n}\n//# sourceMappingURL=transform.js.map","/**\n * @module ol/math\n */\nimport { assert } from './asserts.js';\n/**\n * Takes a number and clamps it to within the provided bounds.\n * @param {number} value The input number.\n * @param {number} min The minimum value to return.\n * @param {number} max The maximum value to return.\n * @return {number} The input number if it is within bounds, or the nearest\n *     number within the bounds.\n */\nexport function clamp(value, min, max) {\n    return Math.min(Math.max(value, min), max);\n}\n/**\n * Return the hyperbolic cosine of a given number. The method will use the\n * native `Math.cosh` function if it is available, otherwise the hyperbolic\n * cosine will be calculated via the reference implementation of the Mozilla\n * developer network.\n *\n * @param {number} x X.\n * @return {number} Hyperbolic cosine of x.\n */\nexport var cosh = (function () {\n    // Wrapped in a iife, to save the overhead of checking for the native\n    // implementation on every invocation.\n    var cosh;\n    if ('cosh' in Math) {\n        // The environment supports the native Math.cosh function, use it…\n        cosh = Math.cosh;\n    }\n    else {\n        // … else, use the reference implementation of MDN:\n        cosh = function (x) {\n            var y = /** @type {Math} */ (Math).exp(x);\n            return (y + 1 / y) / 2;\n        };\n    }\n    return cosh;\n}());\n/**\n * @param {number} x X.\n * @return {number} The smallest power of two greater than or equal to x.\n */\nexport function roundUpToPowerOfTwo(x) {\n    assert(0 < x, 29); // `x` must be greater than `0`\n    return Math.pow(2, Math.ceil(Math.log(x) / Math.LN2));\n}\n/**\n * Returns the square of the closest distance between the point (x, y) and the\n * line segment (x1, y1) to (x2, y2).\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredSegmentDistance(x, y, x1, y1, x2, y2) {\n    var dx = x2 - x1;\n    var dy = y2 - y1;\n    if (dx !== 0 || dy !== 0) {\n        var t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n        if (t > 1) {\n            x1 = x2;\n            y1 = y2;\n        }\n        else if (t > 0) {\n            x1 += dx * t;\n            y1 += dy * t;\n        }\n    }\n    return squaredDistance(x, y, x1, y1);\n}\n/**\n * Returns the square of the distance between the points (x1, y1) and (x2, y2).\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredDistance(x1, y1, x2, y2) {\n    var dx = x2 - x1;\n    var dy = y2 - y1;\n    return dx * dx + dy * dy;\n}\n/**\n * Solves system of linear equations using Gaussian elimination method.\n *\n * @param {Array<Array<number>>} mat Augmented matrix (n x n + 1 column)\n *                                     in row-major order.\n * @return {Array<number>} The resulting vector.\n */\nexport function solveLinearSystem(mat) {\n    var n = mat.length;\n    for (var i = 0; i < n; i++) {\n        // Find max in the i-th column (ignoring i - 1 first rows)\n        var maxRow = i;\n        var maxEl = Math.abs(mat[i][i]);\n        for (var r = i + 1; r < n; r++) {\n            var absValue = Math.abs(mat[r][i]);\n            if (absValue > maxEl) {\n                maxEl = absValue;\n                maxRow = r;\n            }\n        }\n        if (maxEl === 0) {\n            return null; // matrix is singular\n        }\n        // Swap max row with i-th (current) row\n        var tmp = mat[maxRow];\n        mat[maxRow] = mat[i];\n        mat[i] = tmp;\n        // Subtract the i-th row to make all the remaining rows 0 in the i-th column\n        for (var j = i + 1; j < n; j++) {\n            var coef = -mat[j][i] / mat[i][i];\n            for (var k = i; k < n + 1; k++) {\n                if (i == k) {\n                    mat[j][k] = 0;\n                }\n                else {\n                    mat[j][k] += coef * mat[i][k];\n                }\n            }\n        }\n    }\n    // Solve Ax=b for upper triangular matrix A (mat)\n    var x = new Array(n);\n    for (var l = n - 1; l >= 0; l--) {\n        x[l] = mat[l][n] / mat[l][l];\n        for (var m = l - 1; m >= 0; m--) {\n            mat[m][n] -= mat[m][l] * x[l];\n        }\n    }\n    return x;\n}\n/**\n * Converts radians to to degrees.\n *\n * @param {number} angleInRadians Angle in radians.\n * @return {number} Angle in degrees.\n */\nexport function toDegrees(angleInRadians) {\n    return angleInRadians * 180 / Math.PI;\n}\n/**\n * Converts degrees to radians.\n *\n * @param {number} angleInDegrees Angle in degrees.\n * @return {number} Angle in radians.\n */\nexport function toRadians(angleInDegrees) {\n    return angleInDegrees * Math.PI / 180;\n}\n/**\n * Returns the modulo of a / b, depending on the sign of b.\n *\n * @param {number} a Dividend.\n * @param {number} b Divisor.\n * @return {number} Modulo.\n */\nexport function modulo(a, b) {\n    var r = a % b;\n    return r * b < 0 ? r + b : r;\n}\n/**\n * Calculates the linearly interpolated value of x between a and b.\n *\n * @param {number} a Number\n * @param {number} b Number\n * @param {number} x Value to be interpolated.\n * @return {number} Interpolated value.\n */\nexport function lerp(a, b, x) {\n    return a + x * (b - a);\n}\n//# sourceMappingURL=math.js.map","/**\n * @license\n * Latitude/longitude spherical geodesy formulae taken from\n * http://www.movable-type.co.uk/scripts/latlong.html\n * Licensed under CC-BY-3.0.\n */\n/**\n * @module ol/sphere\n */\nimport { toRadians, toDegrees } from './math.js';\nimport GeometryType from './geom/GeometryType.js';\n/**\n * Object literal with options for the {@link getLength} or {@link getArea}\n * functions.\n * @typedef {Object} SphereMetricOptions\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857']\n * Projection of the  geometry.  By default, the geometry is assumed to be in\n * Web Mercator.\n * @property {number} [radius=6371008.8] Sphere radius.  By default, the\n * [mean Earth radius](https://en.wikipedia.org/wiki/Earth_radius#Mean_radius)\n * for the WGS84 ellipsoid is used.\n */\n/**\n * The mean Earth radius (1/3 * (2a + b)) for the WGS84 ellipsoid.\n * https://en.wikipedia.org/wiki/Earth_radius#Mean_radius\n * @type {number}\n */\nexport var DEFAULT_RADIUS = 6371008.8;\n/**\n * Get the great circle distance (in meters) between two geographic coordinates.\n * @param {Array} c1 Starting coordinate.\n * @param {Array} c2 Ending coordinate.\n * @param {number=} opt_radius The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {number} The great circle distance between the points (in meters).\n * @api\n */\nexport function getDistance(c1, c2, opt_radius) {\n    var radius = opt_radius || DEFAULT_RADIUS;\n    var lat1 = toRadians(c1[1]);\n    var lat2 = toRadians(c2[1]);\n    var deltaLatBy2 = (lat2 - lat1) / 2;\n    var deltaLonBy2 = toRadians(c2[0] - c1[0]) / 2;\n    var a = Math.sin(deltaLatBy2) * Math.sin(deltaLatBy2) +\n        Math.sin(deltaLonBy2) * Math.sin(deltaLonBy2) *\n            Math.cos(lat1) * Math.cos(lat2);\n    return 2 * radius * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n}\n/**\n * Get the cumulative great circle length of linestring coordinates (geographic).\n * @param {Array} coordinates Linestring coordinates.\n * @param {number} radius The sphere radius to use.\n * @return {number} The length (in meters).\n */\nfunction getLengthInternal(coordinates, radius) {\n    var length = 0;\n    for (var i = 0, ii = coordinates.length; i < ii - 1; ++i) {\n        length += getDistance(coordinates[i], coordinates[i + 1], radius);\n    }\n    return length;\n}\n/**\n * Get the spherical length of a geometry.  This length is the sum of the\n * great circle distances between coordinates.  For polygons, the length is\n * the sum of all rings.  For points, the length is zero.  For multi-part\n * geometries, the length is the sum of the length of each part.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions=} opt_options Options for the\n * length calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n * You can change this by providing a `projection` option.\n * @return {number} The spherical length (in meters).\n * @api\n */\nexport function getLength(geometry, opt_options) {\n    var options = opt_options || {};\n    var radius = options.radius || DEFAULT_RADIUS;\n    var projection = options.projection || 'EPSG:3857';\n    var type = geometry.getType();\n    if (type !== GeometryType.GEOMETRY_COLLECTION) {\n        geometry = geometry.clone().transform(projection, 'EPSG:4326');\n    }\n    var length = 0;\n    var coordinates, coords, i, ii, j, jj;\n    switch (type) {\n        case GeometryType.POINT:\n        case GeometryType.MULTI_POINT: {\n            break;\n        }\n        case GeometryType.LINE_STRING:\n        case GeometryType.LINEAR_RING: {\n            coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n            length = getLengthInternal(coordinates, radius);\n            break;\n        }\n        case GeometryType.MULTI_LINE_STRING:\n        case GeometryType.POLYGON: {\n            coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n            for (i = 0, ii = coordinates.length; i < ii; ++i) {\n                length += getLengthInternal(coordinates[i], radius);\n            }\n            break;\n        }\n        case GeometryType.MULTI_POLYGON: {\n            coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n            for (i = 0, ii = coordinates.length; i < ii; ++i) {\n                coords = coordinates[i];\n                for (j = 0, jj = coords.length; j < jj; ++j) {\n                    length += getLengthInternal(coords[j], radius);\n                }\n            }\n            break;\n        }\n        case GeometryType.GEOMETRY_COLLECTION: {\n            var geometries = /** @type {import(\"./geom/GeometryCollection.js\").default} */ (geometry).getGeometries();\n            for (i = 0, ii = geometries.length; i < ii; ++i) {\n                length += getLength(geometries[i], opt_options);\n            }\n            break;\n        }\n        default: {\n            throw new Error('Unsupported geometry type: ' + type);\n        }\n    }\n    return length;\n}\n/**\n * Returns the spherical area for a list of coordinates.\n *\n * [Reference](https://trs-new.jpl.nasa.gov/handle/2014/40409)\n * Robert. G. Chamberlain and William H. Duquette, \"Some Algorithms for\n * Polygons on a Sphere\", JPL Publication 07-03, Jet Propulsion\n * Laboratory, Pasadena, CA, June 2007\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates List of coordinates of a linear\n * ring. If the ring is oriented clockwise, the area will be positive,\n * otherwise it will be negative.\n * @param {number} radius The sphere radius.\n * @return {number} Area (in square meters).\n */\nfunction getAreaInternal(coordinates, radius) {\n    var area = 0;\n    var len = coordinates.length;\n    var x1 = coordinates[len - 1][0];\n    var y1 = coordinates[len - 1][1];\n    for (var i = 0; i < len; i++) {\n        var x2 = coordinates[i][0];\n        var y2 = coordinates[i][1];\n        area += toRadians(x2 - x1) *\n            (2 + Math.sin(toRadians(y1)) +\n                Math.sin(toRadians(y2)));\n        x1 = x2;\n        y1 = y2;\n    }\n    return area * radius * radius / 2.0;\n}\n/**\n * Get the spherical area of a geometry.  This is the area (in meters) assuming\n * that polygon edges are segments of great circles on a sphere.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions=} opt_options Options for the area\n *     calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n *     You can change this by providing a `projection` option.\n * @return {number} The spherical area (in square meters).\n * @api\n */\nexport function getArea(geometry, opt_options) {\n    var options = opt_options || {};\n    var radius = options.radius || DEFAULT_RADIUS;\n    var projection = options.projection || 'EPSG:3857';\n    var type = geometry.getType();\n    if (type !== GeometryType.GEOMETRY_COLLECTION) {\n        geometry = geometry.clone().transform(projection, 'EPSG:4326');\n    }\n    var area = 0;\n    var coordinates, coords, i, ii, j, jj;\n    switch (type) {\n        case GeometryType.POINT:\n        case GeometryType.MULTI_POINT:\n        case GeometryType.LINE_STRING:\n        case GeometryType.MULTI_LINE_STRING:\n        case GeometryType.LINEAR_RING: {\n            break;\n        }\n        case GeometryType.POLYGON: {\n            coordinates = /** @type {import(\"./geom/Polygon.js\").default} */ (geometry).getCoordinates();\n            area = Math.abs(getAreaInternal(coordinates[0], radius));\n            for (i = 1, ii = coordinates.length; i < ii; ++i) {\n                area -= Math.abs(getAreaInternal(coordinates[i], radius));\n            }\n            break;\n        }\n        case GeometryType.MULTI_POLYGON: {\n            coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n            for (i = 0, ii = coordinates.length; i < ii; ++i) {\n                coords = coordinates[i];\n                area += Math.abs(getAreaInternal(coords[0], radius));\n                for (j = 1, jj = coords.length; j < jj; ++j) {\n                    area -= Math.abs(getAreaInternal(coords[j], radius));\n                }\n            }\n            break;\n        }\n        case GeometryType.GEOMETRY_COLLECTION: {\n            var geometries = /** @type {import(\"./geom/GeometryCollection.js\").default} */ (geometry).getGeometries();\n            for (i = 0, ii = geometries.length; i < ii; ++i) {\n                area += getArea(geometries[i], opt_options);\n            }\n            break;\n        }\n        default: {\n            throw new Error('Unsupported geometry type: ' + type);\n        }\n    }\n    return area;\n}\n/**\n * Returns the coordinate at the given distance and bearing from `c1`.\n *\n * @param {import(\"./coordinate.js\").Coordinate} c1 The origin point (`[lon, lat]` in degrees).\n * @param {number} distance The great-circle distance between the origin\n *     point and the target point.\n * @param {number} bearing The bearing (in radians).\n * @param {number=} opt_radius The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {import(\"./coordinate.js\").Coordinate} The target point.\n */\nexport function offset(c1, distance, bearing, opt_radius) {\n    var radius = opt_radius || DEFAULT_RADIUS;\n    var lat1 = toRadians(c1[1]);\n    var lon1 = toRadians(c1[0]);\n    var dByR = distance / radius;\n    var lat = Math.asin(Math.sin(lat1) * Math.cos(dByR) +\n        Math.cos(lat1) * Math.sin(dByR) * Math.cos(bearing));\n    var lon = lon1 + Math.atan2(Math.sin(bearing) * Math.sin(dByR) * Math.cos(lat1), Math.cos(dByR) - Math.sin(lat1) * Math.sin(lat));\n    return [toDegrees(lon), toDegrees(lat)];\n}\n//# sourceMappingURL=sphere.js.map","/**\n * @module ol/proj/Units\n */\n/**\n * Projection units: `'degrees'`, `'ft'`, `'m'`, `'pixels'`, `'tile-pixels'` or\n * `'us-ft'`.\n * @enum {string}\n */\nvar Units = {\n    DEGREES: 'degrees',\n    FEET: 'ft',\n    METERS: 'm',\n    PIXELS: 'pixels',\n    TILE_PIXELS: 'tile-pixels',\n    USFEET: 'us-ft'\n};\n/**\n * Meters per unit lookup table.\n * @const\n * @type {Object<Units, number>}\n * @api\n */\nexport var METERS_PER_UNIT = {};\n// use the radius of the Normal sphere\nMETERS_PER_UNIT[Units.DEGREES] = 2 * Math.PI * 6370997 / 360;\nMETERS_PER_UNIT[Units.FEET] = 0.3048;\nMETERS_PER_UNIT[Units.METERS] = 1;\nMETERS_PER_UNIT[Units.USFEET] = 1200 / 3937;\nexport default Units;\n//# sourceMappingURL=Units.js.map","/**\n * @module ol/proj/Projection\n */\nimport { METERS_PER_UNIT } from './Units.js';\n/**\n * @typedef {Object} Options\n * @property {string} code The SRS identifier code, e.g. `EPSG:4326`.\n * @property {import(\"./Units.js\").default|string} [units] Units. Required unless a\n * proj4 projection is defined for `code`.\n * @property {import(\"../extent.js\").Extent} [extent] The validity extent for the SRS.\n * @property {string} [axisOrientation='enu'] The axis orientation as specified in Proj4.\n * @property {boolean} [global=false] Whether the projection is valid for the whole globe.\n * @property {number} [metersPerUnit] The meters per unit for the SRS.\n * If not provided, the `units` are used to get the meters per unit from the {@link module:ol/proj/Units~METERS_PER_UNIT}\n * lookup table.\n * @property {import(\"../extent.js\").Extent} [worldExtent] The world extent for the SRS.\n * @property {function(number, import(\"../coordinate.js\").Coordinate):number} [getPointResolution]\n * Function to determine resolution at a point. The function is called with a\n * `{number}` view resolution and an `{import(\"../coordinate.js\").Coordinate}` as arguments, and returns\n * the `{number}` resolution in projection units at the passed coordinate. If this is `undefined`,\n * the default {@link module:ol/proj#getPointResolution} function will be used.\n */\n/**\n * @classdesc\n * Projection definition class. One of these is created for each projection\n * supported in the application and stored in the {@link module:ol/proj} namespace.\n * You can use these in applications, but this is not required, as API params\n * and options use {@link module:ol/proj~ProjectionLike} which means the simple string\n * code will suffice.\n *\n * You can use {@link module:ol/proj~get} to retrieve the object for a particular\n * projection.\n *\n * The library includes definitions for `EPSG:4326` and `EPSG:3857`, together\n * with the following aliases:\n * * `EPSG:4326`: CRS:84, urn:ogc:def:crs:EPSG:6.6:4326,\n *     urn:ogc:def:crs:OGC:1.3:CRS84, urn:ogc:def:crs:OGC:2:84,\n *     http://www.opengis.net/gml/srs/epsg.xml#4326,\n *     urn:x-ogc:def:crs:EPSG:4326\n * * `EPSG:3857`: EPSG:102100, EPSG:102113, EPSG:900913,\n *     urn:ogc:def:crs:EPSG:6.18:3:3857,\n *     http://www.opengis.net/gml/srs/epsg.xml#3857\n *\n * If you use [proj4js](https://github.com/proj4js/proj4js), aliases can\n * be added using `proj4.defs()`. After all required projection definitions are\n * added, call the {@link module:ol/proj/proj4~register} function.\n *\n * @api\n */\nvar Projection = /** @class */ (function () {\n    /**\n     * @param {Options} options Projection options.\n     */\n    function Projection(options) {\n        /**\n         * @private\n         * @type {string}\n         */\n        this.code_ = options.code;\n        /**\n         * Units of projected coordinates. When set to `TILE_PIXELS`, a\n         * `this.extent_` and `this.worldExtent_` must be configured properly for each\n         * tile.\n         * @private\n         * @type {import(\"./Units.js\").default}\n         */\n        this.units_ = /** @type {import(\"./Units.js\").default} */ (options.units);\n        /**\n         * Validity extent of the projection in projected coordinates. For projections\n         * with `TILE_PIXELS` units, this is the extent of the tile in\n         * tile pixel space.\n         * @private\n         * @type {import(\"../extent.js\").Extent}\n         */\n        this.extent_ = options.extent !== undefined ? options.extent : null;\n        /**\n         * Extent of the world in EPSG:4326. For projections with\n         * `TILE_PIXELS` units, this is the extent of the tile in\n         * projected coordinate space.\n         * @private\n         * @type {import(\"../extent.js\").Extent}\n         */\n        this.worldExtent_ = options.worldExtent !== undefined ?\n            options.worldExtent : null;\n        /**\n         * @private\n         * @type {string}\n         */\n        this.axisOrientation_ = options.axisOrientation !== undefined ?\n            options.axisOrientation : 'enu';\n        /**\n         * @private\n         * @type {boolean}\n         */\n        this.global_ = options.global !== undefined ? options.global : false;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        this.canWrapX_ = !!(this.global_ && this.extent_);\n        /**\n         * @private\n         * @type {function(number, import(\"../coordinate.js\").Coordinate):number|undefined}\n         */\n        this.getPointResolutionFunc_ = options.getPointResolution;\n        /**\n         * @private\n         * @type {import(\"../tilegrid/TileGrid.js\").default}\n         */\n        this.defaultTileGrid_ = null;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        this.metersPerUnit_ = options.metersPerUnit;\n    }\n    /**\n     * @return {boolean} The projection is suitable for wrapping the x-axis\n     */\n    Projection.prototype.canWrapX = function () {\n        return this.canWrapX_;\n    };\n    /**\n     * Get the code for this projection, e.g. 'EPSG:4326'.\n     * @return {string} Code.\n     * @api\n     */\n    Projection.prototype.getCode = function () {\n        return this.code_;\n    };\n    /**\n     * Get the validity extent for this projection.\n     * @return {import(\"../extent.js\").Extent} Extent.\n     * @api\n     */\n    Projection.prototype.getExtent = function () {\n        return this.extent_;\n    };\n    /**\n     * Get the units of this projection.\n     * @return {import(\"./Units.js\").default} Units.\n     * @api\n     */\n    Projection.prototype.getUnits = function () {\n        return this.units_;\n    };\n    /**\n     * Get the amount of meters per unit of this projection.  If the projection is\n     * not configured with `metersPerUnit` or a units identifier, the return is\n     * `undefined`.\n     * @return {number|undefined} Meters.\n     * @api\n     */\n    Projection.prototype.getMetersPerUnit = function () {\n        return this.metersPerUnit_ || METERS_PER_UNIT[this.units_];\n    };\n    /**\n     * Get the world extent for this projection.\n     * @return {import(\"../extent.js\").Extent} Extent.\n     * @api\n     */\n    Projection.prototype.getWorldExtent = function () {\n        return this.worldExtent_;\n    };\n    /**\n     * Get the axis orientation of this projection.\n     * Example values are:\n     * enu - the default easting, northing, elevation.\n     * neu - northing, easting, up - useful for \"lat/long\" geographic coordinates,\n     *     or south orientated transverse mercator.\n     * wnu - westing, northing, up - some planetary coordinate systems have\n     *     \"west positive\" coordinate systems\n     * @return {string} Axis orientation.\n     * @api\n     */\n    Projection.prototype.getAxisOrientation = function () {\n        return this.axisOrientation_;\n    };\n    /**\n     * Is this projection a global projection which spans the whole world?\n     * @return {boolean} Whether the projection is global.\n     * @api\n     */\n    Projection.prototype.isGlobal = function () {\n        return this.global_;\n    };\n    /**\n     * Set if the projection is a global projection which spans the whole world\n     * @param {boolean} global Whether the projection is global.\n     * @api\n     */\n    Projection.prototype.setGlobal = function (global) {\n        this.global_ = global;\n        this.canWrapX_ = !!(global && this.extent_);\n    };\n    /**\n     * @return {import(\"../tilegrid/TileGrid.js\").default} The default tile grid.\n     */\n    Projection.prototype.getDefaultTileGrid = function () {\n        return this.defaultTileGrid_;\n    };\n    /**\n     * @param {import(\"../tilegrid/TileGrid.js\").default} tileGrid The default tile grid.\n     */\n    Projection.prototype.setDefaultTileGrid = function (tileGrid) {\n        this.defaultTileGrid_ = tileGrid;\n    };\n    /**\n     * Set the validity extent for this projection.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @api\n     */\n    Projection.prototype.setExtent = function (extent) {\n        this.extent_ = extent;\n        this.canWrapX_ = !!(this.global_ && extent);\n    };\n    /**\n     * Set the world extent for this projection.\n     * @param {import(\"../extent.js\").Extent} worldExtent World extent\n     *     [minlon, minlat, maxlon, maxlat].\n     * @api\n     */\n    Projection.prototype.setWorldExtent = function (worldExtent) {\n        this.worldExtent_ = worldExtent;\n    };\n    /**\n     * Set the getPointResolution function (see {@link module:ol/proj~getPointResolution}\n     * for this projection.\n     * @param {function(number, import(\"../coordinate.js\").Coordinate):number} func Function\n     * @api\n     */\n    Projection.prototype.setGetPointResolution = function (func) {\n        this.getPointResolutionFunc_ = func;\n    };\n    /**\n     * Get the custom point resolution function for this projection (if set).\n     * @return {function(number, import(\"../coordinate.js\").Coordinate):number|undefined} The custom point\n     * resolution function (if set).\n     */\n    Projection.prototype.getPointResolutionFunc = function () {\n        return this.getPointResolutionFunc_;\n    };\n    return Projection;\n}());\nexport default Projection;\n//# sourceMappingURL=Projection.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/proj/epsg3857\n */\nimport { cosh } from '../math.js';\nimport Projection from './Projection.js';\nimport Units from './Units.js';\n/**\n * Radius of WGS84 sphere\n *\n * @const\n * @type {number}\n */\nexport var RADIUS = 6378137;\n/**\n * @const\n * @type {number}\n */\nexport var HALF_SIZE = Math.PI * RADIUS;\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport var EXTENT = [\n    -HALF_SIZE, -HALF_SIZE,\n    HALF_SIZE, HALF_SIZE\n];\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport var WORLD_EXTENT = [-180, -85, 180, 85];\n/**\n * @classdesc\n * Projection object for web/spherical Mercator (EPSG:3857).\n */\nvar EPSG3857Projection = /** @class */ (function (_super) {\n    __extends(EPSG3857Projection, _super);\n    /**\n     * @param {string} code Code.\n     */\n    function EPSG3857Projection(code) {\n        return _super.call(this, {\n            code: code,\n            units: Units.METERS,\n            extent: EXTENT,\n            global: true,\n            worldExtent: WORLD_EXTENT,\n            getPointResolution: function (resolution, point) {\n                return resolution / cosh(point[1] / RADIUS);\n            }\n        }) || this;\n    }\n    return EPSG3857Projection;\n}(Projection));\n/**\n * Projections equal to EPSG:3857.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport var PROJECTIONS = [\n    new EPSG3857Projection('EPSG:3857'),\n    new EPSG3857Projection('EPSG:102100'),\n    new EPSG3857Projection('EPSG:102113'),\n    new EPSG3857Projection('EPSG:900913'),\n    new EPSG3857Projection('urn:ogc:def:crs:EPSG:6.18:3:3857'),\n    new EPSG3857Projection('urn:ogc:def:crs:EPSG::3857'),\n    new EPSG3857Projection('http://www.opengis.net/gml/srs/epsg.xml#3857')\n];\n/**\n * Transformation from EPSG:4326 to EPSG:3857.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function fromEPSG4326(input, opt_output, opt_dimension) {\n    var length = input.length;\n    var dimension = opt_dimension > 1 ? opt_dimension : 2;\n    var output = opt_output;\n    if (output === undefined) {\n        if (dimension > 2) {\n            // preserve values beyond second dimension\n            output = input.slice();\n        }\n        else {\n            output = new Array(length);\n        }\n    }\n    var halfSize = HALF_SIZE;\n    for (var i = 0; i < length; i += dimension) {\n        output[i] = halfSize * input[i] / 180;\n        var y = RADIUS *\n            Math.log(Math.tan(Math.PI * (+input[i + 1] + 90) / 360));\n        if (y > halfSize) {\n            y = halfSize;\n        }\n        else if (y < -halfSize) {\n            y = -halfSize;\n        }\n        output[i + 1] = y;\n    }\n    return output;\n}\n/**\n * Transformation from EPSG:3857 to EPSG:4326.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function toEPSG4326(input, opt_output, opt_dimension) {\n    var length = input.length;\n    var dimension = opt_dimension > 1 ? opt_dimension : 2;\n    var output = opt_output;\n    if (output === undefined) {\n        if (dimension > 2) {\n            // preserve values beyond second dimension\n            output = input.slice();\n        }\n        else {\n            output = new Array(length);\n        }\n    }\n    for (var i = 0; i < length; i += dimension) {\n        output[i] = 180 * input[i] / HALF_SIZE;\n        output[i + 1] = 360 * Math.atan(Math.exp(input[i + 1] / RADIUS)) / Math.PI - 90;\n    }\n    return output;\n}\n//# sourceMappingURL=epsg3857.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/proj/epsg4326\n */\nimport Projection from './Projection.js';\nimport Units from './Units.js';\n/**\n * Semi-major radius of the WGS84 ellipsoid.\n *\n * @const\n * @type {number}\n */\nexport var RADIUS = 6378137;\n/**\n * Extent of the EPSG:4326 projection which is the whole world.\n *\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport var EXTENT = [-180, -90, 180, 90];\n/**\n * @const\n * @type {number}\n */\nexport var METERS_PER_UNIT = Math.PI * RADIUS / 180;\n/**\n * @classdesc\n * Projection object for WGS84 geographic coordinates (EPSG:4326).\n *\n * Note that OpenLayers does not strictly comply with the EPSG definition.\n * The EPSG registry defines 4326 as a CRS for Latitude,Longitude (y,x).\n * OpenLayers treats EPSG:4326 as a pseudo-projection, with x,y coordinates.\n */\nvar EPSG4326Projection = /** @class */ (function (_super) {\n    __extends(EPSG4326Projection, _super);\n    /**\n     * @param {string} code Code.\n     * @param {string=} opt_axisOrientation Axis orientation.\n     */\n    function EPSG4326Projection(code, opt_axisOrientation) {\n        return _super.call(this, {\n            code: code,\n            units: Units.DEGREES,\n            extent: EXTENT,\n            axisOrientation: opt_axisOrientation,\n            global: true,\n            metersPerUnit: METERS_PER_UNIT,\n            worldExtent: EXTENT\n        }) || this;\n    }\n    return EPSG4326Projection;\n}(Projection));\n/**\n * Projections equal to EPSG:4326.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport var PROJECTIONS = [\n    new EPSG4326Projection('CRS:84'),\n    new EPSG4326Projection('EPSG:4326', 'neu'),\n    new EPSG4326Projection('urn:ogc:def:crs:EPSG::4326', 'neu'),\n    new EPSG4326Projection('urn:ogc:def:crs:EPSG:6.6:4326', 'neu'),\n    new EPSG4326Projection('urn:ogc:def:crs:OGC:1.3:CRS84'),\n    new EPSG4326Projection('urn:ogc:def:crs:OGC:2:84'),\n    new EPSG4326Projection('http://www.opengis.net/gml/srs/epsg.xml#4326', 'neu'),\n    new EPSG4326Projection('urn:x-ogc:def:crs:EPSG:4326', 'neu')\n];\n//# sourceMappingURL=epsg4326.js.map","/**\n * @module ol/proj/projections\n */\n/**\n * @type {Object<string, import(\"./Projection.js\").default>}\n */\nvar cache = {};\n/**\n * Clear the projections cache.\n */\nexport function clear() {\n    cache = {};\n}\n/**\n * Get a cached projection by code.\n * @param {string} code The code for the projection.\n * @return {import(\"./Projection.js\").default} The projection (if cached).\n */\nexport function get(code) {\n    return cache[code] || null;\n}\n/**\n * Add a projection to the cache.\n * @param {string} code The projection code.\n * @param {import(\"./Projection.js\").default} projection The projection to cache.\n */\nexport function add(code, projection) {\n    cache[code] = projection;\n}\n//# sourceMappingURL=projections.js.map","/**\n * @module ol/proj/transforms\n */\nimport { isEmpty } from '../obj.js';\n/**\n * @private\n * @type {!Object<string, Object<string, import(\"../proj.js\").TransformFunction>>}\n */\nvar transforms = {};\n/**\n * Clear the transform cache.\n */\nexport function clear() {\n    transforms = {};\n}\n/**\n * Registers a conversion function to convert coordinates from the source\n * projection to the destination projection.\n *\n * @param {import(\"./Projection.js\").default} source Source.\n * @param {import(\"./Projection.js\").default} destination Destination.\n * @param {import(\"../proj.js\").TransformFunction} transformFn Transform.\n */\nexport function add(source, destination, transformFn) {\n    var sourceCode = source.getCode();\n    var destinationCode = destination.getCode();\n    if (!(sourceCode in transforms)) {\n        transforms[sourceCode] = {};\n    }\n    transforms[sourceCode][destinationCode] = transformFn;\n}\n/**\n * Unregisters the conversion function to convert coordinates from the source\n * projection to the destination projection.  This method is used to clean up\n * cached transforms during testing.\n *\n * @param {import(\"./Projection.js\").default} source Source projection.\n * @param {import(\"./Projection.js\").default} destination Destination projection.\n * @return {import(\"../proj.js\").TransformFunction} transformFn The unregistered transform.\n */\nexport function remove(source, destination) {\n    var sourceCode = source.getCode();\n    var destinationCode = destination.getCode();\n    var transform = transforms[sourceCode][destinationCode];\n    delete transforms[sourceCode][destinationCode];\n    if (isEmpty(transforms[sourceCode])) {\n        delete transforms[sourceCode];\n    }\n    return transform;\n}\n/**\n * Get a transform given a source code and a destination code.\n * @param {string} sourceCode The code for the source projection.\n * @param {string} destinationCode The code for the destination projection.\n * @return {import(\"../proj.js\").TransformFunction|undefined} The transform function (if found).\n */\nexport function get(sourceCode, destinationCode) {\n    var transform;\n    if (sourceCode in transforms && destinationCode in transforms[sourceCode]) {\n        transform = transforms[sourceCode][destinationCode];\n    }\n    return transform;\n}\n//# sourceMappingURL=transforms.js.map","/**\n * @module ol/proj\n */\n/**\n * The ol/proj module stores:\n * * a list of {@link module:ol/proj/Projection}\n * objects, one for each projection supported by the application\n * * a list of transform functions needed to convert coordinates in one projection\n * into another.\n *\n * The static functions are the methods used to maintain these.\n * Each transform function can handle not only simple coordinate pairs, but also\n * large arrays of coordinates such as vector geometries.\n *\n * When loaded, the library adds projection objects for EPSG:4326 (WGS84\n * geographic coordinates) and EPSG:3857 (Web or Spherical Mercator, as used\n * for example by Bing Maps or OpenStreetMap), together with the relevant\n * transform functions.\n *\n * Additional transforms may be added by using the http://proj4js.org/\n * library (version 2.2 or later). You can use the full build supplied by\n * Proj4js, or create a custom build to support those projections you need; see\n * the Proj4js website for how to do this. You also need the Proj4js definitions\n * for the required projections. These definitions can be obtained from\n * https://epsg.io/, and are a JS function, so can be loaded in a script\n * tag (as in the examples) or pasted into your application.\n *\n * After all required projection definitions are added to proj4's registry (by\n * using `proj4.defs()`), simply call `register(proj4)` from the `ol/proj/proj4`\n * package. Existing transforms are not changed by this function. See\n * examples/wms-image-custom-proj for an example of this.\n *\n * Additional projection definitions can be registered with `proj4.defs()` any\n * time. Just make sure to call `register(proj4)` again; for example, with user-supplied data where you don't\n * know in advance what projections are needed, you can initially load minimal\n * support and then load whichever are requested.\n *\n * Note that Proj4js does not support projection extents. If you want to add\n * one for creating default tile grids, you can add it after the Projection\n * object has been created with `setExtent`, for example,\n * `get('EPSG:1234').setExtent(extent)`.\n *\n * In addition to Proj4js support, any transform functions can be added with\n * {@link module:ol/proj~addCoordinateTransforms}. To use this, you must first create\n * a {@link module:ol/proj/Projection} object for the new projection and add it with\n * {@link module:ol/proj~addProjection}. You can then add the forward and inverse\n * functions with {@link module:ol/proj~addCoordinateTransforms}. See\n * examples/wms-custom-proj for an example of this.\n *\n * Note that if no transforms are needed and you only need to define the\n * projection, just add a {@link module:ol/proj/Projection} with\n * {@link module:ol/proj~addProjection}. See examples/wms-no-proj for an example of\n * this.\n */\nimport { getDistance } from './sphere.js';\nimport { applyTransform } from './extent.js';\nimport { modulo } from './math.js';\nimport { toEPSG4326, fromEPSG4326, PROJECTIONS as EPSG3857_PROJECTIONS } from './proj/epsg3857.js';\nimport { PROJECTIONS as EPSG4326_PROJECTIONS } from './proj/epsg4326.js';\nimport Projection from './proj/Projection.js';\nimport Units, { METERS_PER_UNIT } from './proj/Units.js';\nimport * as projections from './proj/projections.js';\nimport { add as addTransformFunc, clear as clearTransformFuncs, get as getTransformFunc } from './proj/transforms.js';\n/**\n * A projection as {@link module:ol/proj/Projection}, SRS identifier\n * string or undefined.\n * @typedef {Projection|string|undefined} ProjectionLike\n * @api\n */\n/**\n * A transform function accepts an array of input coordinate values, an optional\n * output array, and an optional dimension (default should be 2).  The function\n * transforms the input coordinate values, populates the output array, and\n * returns the output array.\n *\n * @typedef {function(Array<number>, Array<number>=, number=): Array<number>} TransformFunction\n * @api\n */\nexport { METERS_PER_UNIT };\nexport { Projection };\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension.\n * @return {Array<number>} Output coordinate array (new array, same coordinate\n *     values).\n */\nexport function cloneTransform(input, opt_output, opt_dimension) {\n    var output;\n    if (opt_output !== undefined) {\n        for (var i = 0, ii = input.length; i < ii; ++i) {\n            opt_output[i] = input[i];\n        }\n        output = opt_output;\n    }\n    else {\n        output = input.slice();\n    }\n    return output;\n}\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension.\n * @return {Array<number>} Input coordinate array (same array as input).\n */\nexport function identityTransform(input, opt_output, opt_dimension) {\n    if (opt_output !== undefined && input !== opt_output) {\n        for (var i = 0, ii = input.length; i < ii; ++i) {\n            opt_output[i] = input[i];\n        }\n        input = opt_output;\n    }\n    return input;\n}\n/**\n * Add a Projection object to the list of supported projections that can be\n * looked up by their code.\n *\n * @param {Projection} projection Projection instance.\n * @api\n */\nexport function addProjection(projection) {\n    projections.add(projection.getCode(), projection);\n    addTransformFunc(projection, projection, cloneTransform);\n}\n/**\n * @param {Array<Projection>} projections Projections.\n */\nexport function addProjections(projections) {\n    projections.forEach(addProjection);\n}\n/**\n * Fetches a Projection object for the code specified.\n *\n * @param {ProjectionLike} projectionLike Either a code string which is\n *     a combination of authority and identifier such as \"EPSG:4326\", or an\n *     existing projection object, or undefined.\n * @return {Projection} Projection object, or null if not in list.\n * @api\n */\nexport function get(projectionLike) {\n    return typeof projectionLike === 'string' ?\n        projections.get(/** @type {string} */ (projectionLike)) :\n        ( /** @type {Projection} */(projectionLike) || null);\n}\n/**\n * Get the resolution of the point in degrees or distance units.\n * For projections with degrees as the unit this will simply return the\n * provided resolution. For other projections the point resolution is\n * by default estimated by transforming the 'point' pixel to EPSG:4326,\n * measuring its width and height on the normal sphere,\n * and taking the average of the width and height.\n * A custom function can be provided for a specific projection, either\n * by setting the `getPointResolution` option in the\n * {@link module:ol/proj/Projection~Projection} constructor or by using\n * {@link module:ol/proj/Projection~Projection#setGetPointResolution} to change an existing\n * projection object.\n * @param {ProjectionLike} projection The projection.\n * @param {number} resolution Nominal resolution in projection units.\n * @param {import(\"./coordinate.js\").Coordinate} point Point to find adjusted resolution at.\n * @param {Units=} opt_units Units to get the point resolution in.\n * Default is the projection's units.\n * @return {number} Point resolution.\n * @api\n */\nexport function getPointResolution(projection, resolution, point, opt_units) {\n    projection = get(projection);\n    var pointResolution;\n    var getter = projection.getPointResolutionFunc();\n    if (getter) {\n        pointResolution = getter(resolution, point);\n        if (opt_units && opt_units !== projection.getUnits()) {\n            var metersPerUnit = projection.getMetersPerUnit();\n            if (metersPerUnit) {\n                pointResolution = pointResolution * metersPerUnit / METERS_PER_UNIT[opt_units];\n            }\n        }\n    }\n    else {\n        var units = projection.getUnits();\n        if (units == Units.DEGREES && !opt_units || opt_units == Units.DEGREES) {\n            pointResolution = resolution;\n        }\n        else {\n            // Estimate point resolution by transforming the center pixel to EPSG:4326,\n            // measuring its width and height on the normal sphere, and taking the\n            // average of the width and height.\n            var toEPSG4326_1 = getTransformFromProjections(projection, get('EPSG:4326'));\n            var vertices = [\n                point[0] - resolution / 2, point[1],\n                point[0] + resolution / 2, point[1],\n                point[0], point[1] - resolution / 2,\n                point[0], point[1] + resolution / 2\n            ];\n            vertices = toEPSG4326_1(vertices, vertices, 2);\n            var width = getDistance(vertices.slice(0, 2), vertices.slice(2, 4));\n            var height = getDistance(vertices.slice(4, 6), vertices.slice(6, 8));\n            pointResolution = (width + height) / 2;\n            var metersPerUnit = opt_units ?\n                METERS_PER_UNIT[opt_units] :\n                projection.getMetersPerUnit();\n            if (metersPerUnit !== undefined) {\n                pointResolution /= metersPerUnit;\n            }\n        }\n    }\n    return pointResolution;\n}\n/**\n * Registers transformation functions that don't alter coordinates. Those allow\n * to transform between projections with equal meaning.\n *\n * @param {Array<Projection>} projections Projections.\n * @api\n */\nexport function addEquivalentProjections(projections) {\n    addProjections(projections);\n    projections.forEach(function (source) {\n        projections.forEach(function (destination) {\n            if (source !== destination) {\n                addTransformFunc(source, destination, cloneTransform);\n            }\n        });\n    });\n}\n/**\n * Registers transformation functions to convert coordinates in any projection\n * in projection1 to any projection in projection2.\n *\n * @param {Array<Projection>} projections1 Projections with equal\n *     meaning.\n * @param {Array<Projection>} projections2 Projections with equal\n *     meaning.\n * @param {TransformFunction} forwardTransform Transformation from any\n *   projection in projection1 to any projection in projection2.\n * @param {TransformFunction} inverseTransform Transform from any projection\n *   in projection2 to any projection in projection1..\n */\nexport function addEquivalentTransforms(projections1, projections2, forwardTransform, inverseTransform) {\n    projections1.forEach(function (projection1) {\n        projections2.forEach(function (projection2) {\n            addTransformFunc(projection1, projection2, forwardTransform);\n            addTransformFunc(projection2, projection1, inverseTransform);\n        });\n    });\n}\n/**\n * Clear all cached projections and transforms.\n */\nexport function clearAllProjections() {\n    projections.clear();\n    clearTransformFuncs();\n}\n/**\n * @param {Projection|string|undefined} projection Projection.\n * @param {string} defaultCode Default code.\n * @return {Projection} Projection.\n */\nexport function createProjection(projection, defaultCode) {\n    if (!projection) {\n        return get(defaultCode);\n    }\n    else if (typeof projection === 'string') {\n        return get(projection);\n    }\n    else {\n        return (\n        /** @type {Projection} */ (projection));\n    }\n}\n/**\n * Creates a {@link module:ol/proj~TransformFunction} from a simple 2D coordinate transform\n * function.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} coordTransform Coordinate\n *     transform.\n * @return {TransformFunction} Transform function.\n */\nexport function createTransformFromCoordinateTransform(coordTransform) {\n    return (\n    /**\n     * @param {Array<number>} input Input.\n     * @param {Array<number>=} opt_output Output.\n     * @param {number=} opt_dimension Dimension.\n     * @return {Array<number>} Output.\n     */\n    function (input, opt_output, opt_dimension) {\n        var length = input.length;\n        var dimension = opt_dimension !== undefined ? opt_dimension : 2;\n        var output = opt_output !== undefined ? opt_output : new Array(length);\n        for (var i = 0; i < length; i += dimension) {\n            var point = coordTransform([input[i], input[i + 1]]);\n            output[i] = point[0];\n            output[i + 1] = point[1];\n            for (var j = dimension - 1; j >= 2; --j) {\n                output[i + j] = input[i + j];\n            }\n        }\n        return output;\n    });\n}\n/**\n * Registers coordinate transform functions to convert coordinates between the\n * source projection and the destination projection.\n * The forward and inverse functions convert coordinate pairs; this function\n * converts these into the functions used internally which also handle\n * extents and coordinate arrays.\n *\n * @param {ProjectionLike} source Source projection.\n * @param {ProjectionLike} destination Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} forward The forward transform\n *     function (that is, from the source projection to the destination\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} inverse The inverse transform\n *     function (that is, from the destination projection to the source\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @api\n */\nexport function addCoordinateTransforms(source, destination, forward, inverse) {\n    var sourceProj = get(source);\n    var destProj = get(destination);\n    addTransformFunc(sourceProj, destProj, createTransformFromCoordinateTransform(forward));\n    addTransformFunc(destProj, sourceProj, createTransformFromCoordinateTransform(inverse));\n}\n/**\n * Transforms a coordinate from longitude/latitude to a different projection.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate as longitude and latitude, i.e.\n *     an array with longitude as 1st and latitude as 2nd element.\n * @param {ProjectionLike=} opt_projection Target projection. The\n *     default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate projected to the target projection.\n * @api\n */\nexport function fromLonLat(coordinate, opt_projection) {\n    return transform(coordinate, 'EPSG:4326', opt_projection !== undefined ? opt_projection : 'EPSG:3857');\n}\n/**\n * Transforms a coordinate to longitude/latitude.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Projected coordinate.\n * @param {ProjectionLike=} opt_projection Projection of the coordinate.\n *     The default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate as longitude and latitude, i.e. an array\n *     with longitude as 1st and latitude as 2nd element.\n * @api\n */\nexport function toLonLat(coordinate, opt_projection) {\n    var lonLat = transform(coordinate, opt_projection !== undefined ? opt_projection : 'EPSG:3857', 'EPSG:4326');\n    var lon = lonLat[0];\n    if (lon < -180 || lon > 180) {\n        lonLat[0] = modulo(lon + 180, 360) - 180;\n    }\n    return lonLat;\n}\n/**\n * Checks if two projections are the same, that is every coordinate in one\n * projection does represent the same geographic point as the same coordinate in\n * the other projection.\n *\n * @param {Projection} projection1 Projection 1.\n * @param {Projection} projection2 Projection 2.\n * @return {boolean} Equivalent.\n * @api\n */\nexport function equivalent(projection1, projection2) {\n    if (projection1 === projection2) {\n        return true;\n    }\n    var equalUnits = projection1.getUnits() === projection2.getUnits();\n    if (projection1.getCode() === projection2.getCode()) {\n        return equalUnits;\n    }\n    else {\n        var transformFunc = getTransformFromProjections(projection1, projection2);\n        return transformFunc === cloneTransform && equalUnits;\n    }\n}\n/**\n * Searches in the list of transform functions for the function for converting\n * coordinates from the source projection to the destination projection.\n *\n * @param {Projection} sourceProjection Source Projection object.\n * @param {Projection} destinationProjection Destination Projection\n *     object.\n * @return {TransformFunction} Transform function.\n */\nexport function getTransformFromProjections(sourceProjection, destinationProjection) {\n    var sourceCode = sourceProjection.getCode();\n    var destinationCode = destinationProjection.getCode();\n    var transformFunc = getTransformFunc(sourceCode, destinationCode);\n    if (!transformFunc) {\n        transformFunc = identityTransform;\n    }\n    return transformFunc;\n}\n/**\n * Given the projection-like objects, searches for a transformation\n * function to convert a coordinates array from the source projection to the\n * destination projection.\n *\n * @param {ProjectionLike} source Source.\n * @param {ProjectionLike} destination Destination.\n * @return {TransformFunction} Transform function.\n * @api\n */\nexport function getTransform(source, destination) {\n    var sourceProjection = get(source);\n    var destinationProjection = get(destination);\n    return getTransformFromProjections(sourceProjection, destinationProjection);\n}\n/**\n * Transforms a coordinate from source projection to destination projection.\n * This returns a new coordinate (and does not modify the original).\n *\n * See {@link module:ol/proj~transformExtent} for extent transformation.\n * See the transform method of {@link module:ol/geom/Geometry~Geometry} and its\n * subclasses for geometry transforms.\n *\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n * @api\n */\nexport function transform(coordinate, source, destination) {\n    var transformFunc = getTransform(source, destination);\n    return transformFunc(coordinate, undefined, coordinate.length);\n}\n/**\n * Transforms an extent from source projection to destination projection.  This\n * returns a new extent (and does not modify the original).\n *\n * @param {import(\"./extent.js\").Extent} extent The extent to transform.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @return {import(\"./extent.js\").Extent} The transformed extent.\n * @api\n */\nexport function transformExtent(extent, source, destination) {\n    var transformFunc = getTransform(source, destination);\n    return applyTransform(extent, transformFunc);\n}\n/**\n * Transforms the given point to the destination projection.\n *\n * @param {import(\"./coordinate.js\").Coordinate} point Point.\n * @param {Projection} sourceProjection Source projection.\n * @param {Projection} destinationProjection Destination projection.\n * @return {import(\"./coordinate.js\").Coordinate} Point.\n */\nexport function transformWithProjections(point, sourceProjection, destinationProjection) {\n    var transformFunc = getTransformFromProjections(sourceProjection, destinationProjection);\n    return transformFunc(point);\n}\n/**\n * Add transforms to and from EPSG:4326 and EPSG:3857.  This function is called\n * by when this module is executed and should only need to be called again after\n * `clearAllProjections()` is called (e.g. in tests).\n */\nexport function addCommon() {\n    // Add transformations that don't alter coordinates to convert within set of\n    // projections with equal meaning.\n    addEquivalentProjections(EPSG3857_PROJECTIONS);\n    addEquivalentProjections(EPSG4326_PROJECTIONS);\n    // Add transformations to convert EPSG:4326 like coordinates to EPSG:3857 like\n    // coordinates and back.\n    addEquivalentTransforms(EPSG4326_PROJECTIONS, EPSG3857_PROJECTIONS, fromEPSG4326, toEPSG4326);\n}\naddCommon();\n//# sourceMappingURL=proj.js.map","/**\n * @module ol/transform\n */\nimport { assert } from './asserts.js';\n/**\n * An array representing an affine 2d transformation for use with\n * {@link module:ol/transform} functions. The array has 6 elements.\n * @typedef {!Array<number>} Transform\n */\n/**\n * Collection of affine 2d transformation functions. The functions work on an\n * array of 6 elements. The element order is compatible with the [SVGMatrix\n * interface](https://developer.mozilla.org/en-US/docs/Web/API/SVGMatrix) and is\n * a subset (elements a to f) of a 3×3 matrix:\n * ```\n * [ a c e ]\n * [ b d f ]\n * [ 0 0 1 ]\n * ```\n */\n/**\n * @private\n * @type {Transform}\n */\nvar tmp_ = new Array(6);\n/**\n * Create an identity transform.\n * @return {!Transform} Identity transform.\n */\nexport function create() {\n    return [1, 0, 0, 1, 0, 0];\n}\n/**\n * Resets the given transform to an identity transform.\n * @param {!Transform} transform Transform.\n * @return {!Transform} Transform.\n */\nexport function reset(transform) {\n    return set(transform, 1, 0, 0, 1, 0, 0);\n}\n/**\n * Multiply the underlying matrices of two transforms and return the result in\n * the first transform.\n * @param {!Transform} transform1 Transform parameters of matrix 1.\n * @param {!Transform} transform2 Transform parameters of matrix 2.\n * @return {!Transform} transform1 multiplied with transform2.\n */\nexport function multiply(transform1, transform2) {\n    var a1 = transform1[0];\n    var b1 = transform1[1];\n    var c1 = transform1[2];\n    var d1 = transform1[3];\n    var e1 = transform1[4];\n    var f1 = transform1[5];\n    var a2 = transform2[0];\n    var b2 = transform2[1];\n    var c2 = transform2[2];\n    var d2 = transform2[3];\n    var e2 = transform2[4];\n    var f2 = transform2[5];\n    transform1[0] = a1 * a2 + c1 * b2;\n    transform1[1] = b1 * a2 + d1 * b2;\n    transform1[2] = a1 * c2 + c1 * d2;\n    transform1[3] = b1 * c2 + d1 * d2;\n    transform1[4] = a1 * e2 + c1 * f2 + e1;\n    transform1[5] = b1 * e2 + d1 * f2 + f1;\n    return transform1;\n}\n/**\n * Set the transform components a-f on a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} a The a component of the transform.\n * @param {number} b The b component of the transform.\n * @param {number} c The c component of the transform.\n * @param {number} d The d component of the transform.\n * @param {number} e The e component of the transform.\n * @param {number} f The f component of the transform.\n * @return {!Transform} Matrix with transform applied.\n */\nexport function set(transform, a, b, c, d, e, f) {\n    transform[0] = a;\n    transform[1] = b;\n    transform[2] = c;\n    transform[3] = d;\n    transform[4] = e;\n    transform[5] = f;\n    return transform;\n}\n/**\n * Set transform on one matrix from another matrix.\n * @param {!Transform} transform1 Matrix to set transform to.\n * @param {!Transform} transform2 Matrix to set transform from.\n * @return {!Transform} transform1 with transform from transform2 applied.\n */\nexport function setFromArray(transform1, transform2) {\n    transform1[0] = transform2[0];\n    transform1[1] = transform2[1];\n    transform1[2] = transform2[2];\n    transform1[3] = transform2[3];\n    transform1[4] = transform2[4];\n    transform1[5] = transform2[5];\n    return transform1;\n}\n/**\n * Transforms the given coordinate with the given transform returning the\n * resulting, transformed coordinate. The coordinate will be modified in-place.\n *\n * @param {Transform} transform The transformation.\n * @param {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} coordinate The coordinate to transform.\n * @return {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} return coordinate so that operations can be\n *     chained together.\n */\nexport function apply(transform, coordinate) {\n    var x = coordinate[0];\n    var y = coordinate[1];\n    coordinate[0] = transform[0] * x + transform[2] * y + transform[4];\n    coordinate[1] = transform[1] * x + transform[3] * y + transform[5];\n    return coordinate;\n}\n/**\n * Applies rotation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} angle Angle in radians.\n * @return {!Transform} The rotated transform.\n */\nexport function rotate(transform, angle) {\n    var cos = Math.cos(angle);\n    var sin = Math.sin(angle);\n    return multiply(transform, set(tmp_, cos, sin, -sin, cos, 0, 0));\n}\n/**\n * Applies scale to a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scaled transform.\n */\nexport function scale(transform, x, y) {\n    return multiply(transform, set(tmp_, x, 0, 0, y, 0, 0));\n}\n/**\n * Creates a scale transform.\n * @param {!Transform} target Transform to overwrite.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scale transform.\n */\nexport function makeScale(target, x, y) {\n    return set(target, x, 0, 0, y, 0, 0);\n}\n/**\n * Applies translation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} dx Translation x.\n * @param {number} dy Translation y.\n * @return {!Transform} The translated transform.\n */\nexport function translate(transform, dx, dy) {\n    return multiply(transform, set(tmp_, 1, 0, 0, 1, dx, dy));\n}\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative).\n * @param {!Transform} transform The transform (will be modified in place).\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {!Transform} The composite transform.\n */\nexport function compose(transform, dx1, dy1, sx, sy, angle, dx2, dy2) {\n    var sin = Math.sin(angle);\n    var cos = Math.cos(angle);\n    transform[0] = sx * cos;\n    transform[1] = sy * sin;\n    transform[2] = -sx * sin;\n    transform[3] = sy * cos;\n    transform[4] = dx2 * sx * cos - dy2 * sx * sin + dx1;\n    transform[5] = dx2 * sy * sin + dy2 * sy * cos + dy1;\n    return transform;\n}\n/**\n * Invert the given transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (source) transform.\n */\nexport function invert(source) {\n    return makeInverse(source, source);\n}\n/**\n * Invert the given transform.\n * @param {!Transform} target Transform to be set as the inverse of\n *     the source transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (target) transform.\n */\nexport function makeInverse(target, source) {\n    var det = determinant(source);\n    assert(det !== 0, 32); // Transformation matrix cannot be inverted\n    var a = source[0];\n    var b = source[1];\n    var c = source[2];\n    var d = source[3];\n    var e = source[4];\n    var f = source[5];\n    target[0] = d / det;\n    target[1] = -b / det;\n    target[2] = -c / det;\n    target[3] = a / det;\n    target[4] = (c * f - d * e) / det;\n    target[5] = -(a * f - b * e) / det;\n    return target;\n}\n/**\n * Returns the determinant of the given matrix.\n * @param {!Transform} mat Matrix.\n * @return {number} Determinant.\n */\nexport function determinant(mat) {\n    return mat[0] * mat[3] - mat[1] * mat[2];\n}\n/**\n * A string version of the transform.  This can be used\n * for CSS transforms.\n * @param {!Transform} mat Matrix.\n * @return {string} The transform as a string.\n */\nexport function toString(mat) {\n    return 'matrix(' + mat.join(', ') + ')';\n}\n//# sourceMappingURL=transform.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/Geometry\n */\nimport { abstract } from '../util.js';\nimport BaseObject from '../Object.js';\nimport { createEmpty, getHeight, returnOrUpdate } from '../extent.js';\nimport { transform2D } from './flat/transform.js';\nimport { get as getProjection, getTransform } from '../proj.js';\nimport Units from '../proj/Units.js';\nimport { create as createTransform, compose as composeTransform } from '../transform.js';\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nvar tmpTransform = createTransform();\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for vector geometries.\n *\n * To get notified of changes to the geometry, register a listener for the\n * generic `change` event on your geometry instance.\n *\n * @abstract\n * @api\n */\nvar Geometry = /** @class */ (function (_super) {\n    __extends(Geometry, _super);\n    function Geometry() {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {import(\"../extent.js\").Extent}\n         */\n        _this.extent_ = createEmpty();\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.extentRevision_ = -1;\n        /**\n         * @protected\n         * @type {Object<string, Geometry>}\n         */\n        _this.simplifiedGeometryCache = {};\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.simplifiedGeometryRevision = 0;\n        return _this;\n    }\n    /**\n     * Make a complete copy of the geometry.\n     * @abstract\n     * @return {!Geometry} Clone.\n     */\n    Geometry.prototype.clone = function () {\n        return abstract();\n    };\n    /**\n     * @abstract\n     * @param {number} x X.\n     * @param {number} y Y.\n     * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n     * @param {number} minSquaredDistance Minimum squared distance.\n     * @return {number} Minimum squared distance.\n     */\n    Geometry.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\n        return abstract();\n    };\n    /**\n     * @param {number} x X.\n     * @param {number} y Y.\n     * @return {boolean} Contains (x, y).\n     */\n    Geometry.prototype.containsXY = function (x, y) {\n        var coord = this.getClosestPoint([x, y]);\n        return coord[0] === x && coord[1] === y;\n    };\n    /**\n     * Return the closest point of the geometry to the passed point as\n     * {@link module:ol/coordinate~Coordinate coordinate}.\n     * @param {import(\"../coordinate.js\").Coordinate} point Point.\n     * @param {import(\"../coordinate.js\").Coordinate=} opt_closestPoint Closest point.\n     * @return {import(\"../coordinate.js\").Coordinate} Closest point.\n     * @api\n     */\n    Geometry.prototype.getClosestPoint = function (point, opt_closestPoint) {\n        var closestPoint = opt_closestPoint ? opt_closestPoint : [NaN, NaN];\n        this.closestPointXY(point[0], point[1], closestPoint, Infinity);\n        return closestPoint;\n    };\n    /**\n     * Returns true if this geometry includes the specified coordinate. If the\n     * coordinate is on the boundary of the geometry, returns false.\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {boolean} Contains coordinate.\n     * @api\n     */\n    Geometry.prototype.intersectsCoordinate = function (coordinate) {\n        return this.containsXY(coordinate[0], coordinate[1]);\n    };\n    /**\n     * @abstract\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @protected\n     * @return {import(\"../extent.js\").Extent} extent Extent.\n     */\n    Geometry.prototype.computeExtent = function (extent) {\n        return abstract();\n    };\n    /**\n     * Get the extent of the geometry.\n     * @param {import(\"../extent.js\").Extent=} opt_extent Extent.\n     * @return {import(\"../extent.js\").Extent} extent Extent.\n     * @api\n     */\n    Geometry.prototype.getExtent = function (opt_extent) {\n        if (this.extentRevision_ != this.getRevision()) {\n            this.extent_ = this.computeExtent(this.extent_);\n            this.extentRevision_ = this.getRevision();\n        }\n        return returnOrUpdate(this.extent_, opt_extent);\n    };\n    /**\n     * Rotate the geometry around a given coordinate. This modifies the geometry\n     * coordinates in place.\n     * @abstract\n     * @param {number} angle Rotation angle in radians.\n     * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n     * @api\n     */\n    Geometry.prototype.rotate = function (angle, anchor) {\n        abstract();\n    };\n    /**\n     * Scale the geometry (with an optional origin).  This modifies the geometry\n     * coordinates in place.\n     * @abstract\n     * @param {number} sx The scaling factor in the x-direction.\n     * @param {number=} opt_sy The scaling factor in the y-direction (defaults to\n     *     sx).\n     * @param {import(\"../coordinate.js\").Coordinate=} opt_anchor The scale origin (defaults to the center\n     *     of the geometry extent).\n     * @api\n     */\n    Geometry.prototype.scale = function (sx, opt_sy, opt_anchor) {\n        abstract();\n    };\n    /**\n     * Create a simplified version of this geometry.  For linestrings, this uses\n     * the the {@link\n     * https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm\n     * Douglas Peucker} algorithm.  For polygons, a quantization-based\n     * simplification is used to preserve topology.\n     * @param {number} tolerance The tolerance distance for simplification.\n     * @return {Geometry} A new, simplified version of the original geometry.\n     * @api\n     */\n    Geometry.prototype.simplify = function (tolerance) {\n        return this.getSimplifiedGeometry(tolerance * tolerance);\n    };\n    /**\n     * Create a simplified version of this geometry using the Douglas Peucker\n     * algorithm.\n     * See https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm.\n     * @abstract\n     * @param {number} squaredTolerance Squared tolerance.\n     * @return {Geometry} Simplified geometry.\n     */\n    Geometry.prototype.getSimplifiedGeometry = function (squaredTolerance) {\n        return abstract();\n    };\n    /**\n     * Get the type of this geometry.\n     * @abstract\n     * @return {import(\"./GeometryType.js\").default} Geometry type.\n     */\n    Geometry.prototype.getType = function () {\n        return abstract();\n    };\n    /**\n     * Apply a transform function to each coordinate of the geometry.\n     * The geometry is modified in place.\n     * If you do not want the geometry modified in place, first `clone()` it and\n     * then use this function on the clone.\n     * @abstract\n     * @param {import(\"../proj.js\").TransformFunction} transformFn Transform.\n     */\n    Geometry.prototype.applyTransform = function (transformFn) {\n        abstract();\n    };\n    /**\n     * Test if the geometry and the passed extent intersect.\n     * @abstract\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @return {boolean} `true` if the geometry and the extent intersect.\n     */\n    Geometry.prototype.intersectsExtent = function (extent) {\n        return abstract();\n    };\n    /**\n     * Translate the geometry.  This modifies the geometry coordinates in place.  If\n     * instead you want a new geometry, first `clone()` this geometry.\n     * @abstract\n     * @param {number} deltaX Delta X.\n     * @param {number} deltaY Delta Y.\n     * @api\n     */\n    Geometry.prototype.translate = function (deltaX, deltaY) {\n        abstract();\n    };\n    /**\n     * Transform each coordinate of the geometry from one coordinate reference\n     * system to another. The geometry is modified in place.\n     * For example, a line will be transformed to a line and a circle to a circle.\n     * If you do not want the geometry modified in place, first `clone()` it and\n     * then use this function on the clone.\n     *\n     * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\n     *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n     * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\n     *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n     * @return {Geometry} This geometry.  Note that original geometry is\n     *     modified in place.\n     * @api\n     */\n    Geometry.prototype.transform = function (source, destination) {\n        /** @type {import(\"../proj/Projection.js\").default} */\n        var sourceProj = getProjection(source);\n        var transformFn = sourceProj.getUnits() == Units.TILE_PIXELS ?\n            function (inCoordinates, outCoordinates, stride) {\n                var pixelExtent = sourceProj.getExtent();\n                var projectedExtent = sourceProj.getWorldExtent();\n                var scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n                composeTransform(tmpTransform, projectedExtent[0], projectedExtent[3], scale, -scale, 0, 0, 0);\n                transform2D(inCoordinates, 0, inCoordinates.length, stride, tmpTransform, outCoordinates);\n                return getTransform(sourceProj, destination)(inCoordinates, outCoordinates, stride);\n            } :\n            getTransform(sourceProj, destination);\n        this.applyTransform(transformFn);\n        return this;\n    };\n    return Geometry;\n}(BaseObject));\nexport default Geometry;\n//# sourceMappingURL=Geometry.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/SimpleGeometry\n */\nimport { abstract } from '../util.js';\nimport { createOrUpdateFromFlatCoordinates, getCenter } from '../extent.js';\nimport Geometry from './Geometry.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport { rotate, scale, translate, transform2D } from './flat/transform.js';\nimport { clear } from '../obj.js';\n/**\n * @classdesc\n * Abstract base class; only used for creating subclasses; do not instantiate\n * in apps, as cannot be rendered.\n *\n * @abstract\n * @api\n */\nvar SimpleGeometry = /** @class */ (function (_super) {\n    __extends(SimpleGeometry, _super);\n    function SimpleGeometry() {\n        var _this = _super.call(this) || this;\n        /**\n         * @protected\n         * @type {GeometryLayout}\n         */\n        _this.layout = GeometryLayout.XY;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.stride = 2;\n        /**\n         * @protected\n         * @type {Array<number>}\n         */\n        _this.flatCoordinates = null;\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    SimpleGeometry.prototype.computeExtent = function (extent) {\n        return createOrUpdateFromFlatCoordinates(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, extent);\n    };\n    /**\n     * @abstract\n     * @return {Array<*>} Coordinates.\n     */\n    SimpleGeometry.prototype.getCoordinates = function () {\n        return abstract();\n    };\n    /**\n     * Return the first coordinate of the geometry.\n     * @return {import(\"../coordinate.js\").Coordinate} First coordinate.\n     * @api\n     */\n    SimpleGeometry.prototype.getFirstCoordinate = function () {\n        return this.flatCoordinates.slice(0, this.stride);\n    };\n    /**\n     * @return {Array<number>} Flat coordinates.\n     */\n    SimpleGeometry.prototype.getFlatCoordinates = function () {\n        return this.flatCoordinates;\n    };\n    /**\n     * Return the last coordinate of the geometry.\n     * @return {import(\"../coordinate.js\").Coordinate} Last point.\n     * @api\n     */\n    SimpleGeometry.prototype.getLastCoordinate = function () {\n        return this.flatCoordinates.slice(this.flatCoordinates.length - this.stride);\n    };\n    /**\n     * Return the {@link module:ol/geom/GeometryLayout layout} of the geometry.\n     * @return {GeometryLayout} Layout.\n     * @api\n     */\n    SimpleGeometry.prototype.getLayout = function () {\n        return this.layout;\n    };\n    /**\n     * @inheritDoc\n     */\n    SimpleGeometry.prototype.getSimplifiedGeometry = function (squaredTolerance) {\n        if (this.simplifiedGeometryRevision != this.getRevision()) {\n            clear(this.simplifiedGeometryCache);\n            this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n            this.simplifiedGeometryRevision = this.getRevision();\n        }\n        // If squaredTolerance is negative or if we know that simplification will not\n        // have any effect then just return this.\n        if (squaredTolerance < 0 ||\n            (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n                squaredTolerance <= this.simplifiedGeometryMaxMinSquaredTolerance)) {\n            return this;\n        }\n        var key = squaredTolerance.toString();\n        if (this.simplifiedGeometryCache.hasOwnProperty(key)) {\n            return this.simplifiedGeometryCache[key];\n        }\n        else {\n            var simplifiedGeometry = this.getSimplifiedGeometryInternal(squaredTolerance);\n            var simplifiedFlatCoordinates = simplifiedGeometry.getFlatCoordinates();\n            if (simplifiedFlatCoordinates.length < this.flatCoordinates.length) {\n                this.simplifiedGeometryCache[key] = simplifiedGeometry;\n                return simplifiedGeometry;\n            }\n            else {\n                // Simplification did not actually remove any coordinates.  We now know\n                // that any calls to getSimplifiedGeometry with a squaredTolerance less\n                // than or equal to the current squaredTolerance will also not have any\n                // effect.  This allows us to short circuit simplification (saving CPU\n                // cycles) and prevents the cache of simplified geometries from filling\n                // up with useless identical copies of this geometry (saving memory).\n                this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n                return this;\n            }\n        }\n    };\n    /**\n     * @param {number} squaredTolerance Squared tolerance.\n     * @return {SimpleGeometry} Simplified geometry.\n     * @protected\n     */\n    SimpleGeometry.prototype.getSimplifiedGeometryInternal = function (squaredTolerance) {\n        return this;\n    };\n    /**\n     * @return {number} Stride.\n     */\n    SimpleGeometry.prototype.getStride = function () {\n        return this.stride;\n    };\n    /**\n     * @param {GeometryLayout} layout Layout.\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     */\n    SimpleGeometry.prototype.setFlatCoordinates = function (layout, flatCoordinates) {\n        this.stride = getStrideForLayout(layout);\n        this.layout = layout;\n        this.flatCoordinates = flatCoordinates;\n    };\n    /**\n     * @abstract\n     * @param {!Array<*>} coordinates Coordinates.\n     * @param {GeometryLayout=} opt_layout Layout.\n     */\n    SimpleGeometry.prototype.setCoordinates = function (coordinates, opt_layout) {\n        abstract();\n    };\n    /**\n     * @param {GeometryLayout|undefined} layout Layout.\n     * @param {Array<*>} coordinates Coordinates.\n     * @param {number} nesting Nesting.\n     * @protected\n     */\n    SimpleGeometry.prototype.setLayout = function (layout, coordinates, nesting) {\n        /** @type {number} */\n        var stride;\n        if (layout) {\n            stride = getStrideForLayout(layout);\n        }\n        else {\n            for (var i = 0; i < nesting; ++i) {\n                if (coordinates.length === 0) {\n                    this.layout = GeometryLayout.XY;\n                    this.stride = 2;\n                    return;\n                }\n                else {\n                    coordinates = /** @type {Array} */ (coordinates[0]);\n                }\n            }\n            stride = coordinates.length;\n            layout = getLayoutForStride(stride);\n        }\n        this.layout = layout;\n        this.stride = stride;\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    SimpleGeometry.prototype.applyTransform = function (transformFn) {\n        if (this.flatCoordinates) {\n            transformFn(this.flatCoordinates, this.flatCoordinates, this.stride);\n            this.changed();\n        }\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    SimpleGeometry.prototype.rotate = function (angle, anchor) {\n        var flatCoordinates = this.getFlatCoordinates();\n        if (flatCoordinates) {\n            var stride = this.getStride();\n            rotate(flatCoordinates, 0, flatCoordinates.length, stride, angle, anchor, flatCoordinates);\n            this.changed();\n        }\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    SimpleGeometry.prototype.scale = function (sx, opt_sy, opt_anchor) {\n        var sy = opt_sy;\n        if (sy === undefined) {\n            sy = sx;\n        }\n        var anchor = opt_anchor;\n        if (!anchor) {\n            anchor = getCenter(this.getExtent());\n        }\n        var flatCoordinates = this.getFlatCoordinates();\n        if (flatCoordinates) {\n            var stride = this.getStride();\n            scale(flatCoordinates, 0, flatCoordinates.length, stride, sx, sy, anchor, flatCoordinates);\n            this.changed();\n        }\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    SimpleGeometry.prototype.translate = function (deltaX, deltaY) {\n        var flatCoordinates = this.getFlatCoordinates();\n        if (flatCoordinates) {\n            var stride = this.getStride();\n            translate(flatCoordinates, 0, flatCoordinates.length, stride, deltaX, deltaY, flatCoordinates);\n            this.changed();\n        }\n    };\n    return SimpleGeometry;\n}(Geometry));\n/**\n * @param {number} stride Stride.\n * @return {GeometryLayout} layout Layout.\n */\nfunction getLayoutForStride(stride) {\n    var layout;\n    if (stride == 2) {\n        layout = GeometryLayout.XY;\n    }\n    else if (stride == 3) {\n        layout = GeometryLayout.XYZ;\n    }\n    else if (stride == 4) {\n        layout = GeometryLayout.XYZM;\n    }\n    return (\n    /** @type {GeometryLayout} */ (layout));\n}\n/**\n * @param {GeometryLayout} layout Layout.\n * @return {number} Stride.\n */\nexport function getStrideForLayout(layout) {\n    var stride;\n    if (layout == GeometryLayout.XY) {\n        stride = 2;\n    }\n    else if (layout == GeometryLayout.XYZ || layout == GeometryLayout.XYM) {\n        stride = 3;\n    }\n    else if (layout == GeometryLayout.XYZM) {\n        stride = 4;\n    }\n    return /** @type {number} */ (stride);\n}\n/**\n * @param {SimpleGeometry} simpleGeometry Simple geometry.\n * @param {import(\"../transform.js\").Transform} transform Transform.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed flat coordinates.\n */\nexport function transformGeom2D(simpleGeometry, transform, opt_dest) {\n    var flatCoordinates = simpleGeometry.getFlatCoordinates();\n    if (!flatCoordinates) {\n        return null;\n    }\n    else {\n        var stride = simpleGeometry.getStride();\n        return transform2D(flatCoordinates, 0, flatCoordinates.length, stride, transform, opt_dest);\n    }\n}\nexport default SimpleGeometry;\n//# sourceMappingURL=SimpleGeometry.js.map","/**\n * @module ol/geom/flat/area\n */\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRing(flatCoordinates, offset, end, stride) {\n    var twiceArea = 0;\n    var x1 = flatCoordinates[end - stride];\n    var y1 = flatCoordinates[end - stride + 1];\n    for (; offset < end; offset += stride) {\n        var x2 = flatCoordinates[offset];\n        var y2 = flatCoordinates[offset + 1];\n        twiceArea += y1 * x2 - x1 * y2;\n        x1 = x2;\n        y1 = y2;\n    }\n    return twiceArea / 2;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRings(flatCoordinates, offset, ends, stride) {\n    var area = 0;\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        var end = ends[i];\n        area += linearRing(flatCoordinates, offset, end, stride);\n        offset = end;\n    }\n    return area;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n    var area = 0;\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        area += linearRings(flatCoordinates, offset, ends, stride);\n        offset = ends[ends.length - 1];\n    }\n    return area;\n}\n//# sourceMappingURL=area.js.map","/**\n * @module ol/geom/flat/closest\n */\nimport { lerp, squaredDistance as squaredDx } from '../../math.js';\n/**\n * Returns the point on the 2D line segment flatCoordinates[offset1] to\n * flatCoordinates[offset2] that is closest to the point (x, y).  Extra\n * dimensions are linearly interpolated.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset1 Offset 1.\n * @param {number} offset2 Offset 2.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n */\nfunction assignClosest(flatCoordinates, offset1, offset2, stride, x, y, closestPoint) {\n    var x1 = flatCoordinates[offset1];\n    var y1 = flatCoordinates[offset1 + 1];\n    var dx = flatCoordinates[offset2] - x1;\n    var dy = flatCoordinates[offset2 + 1] - y1;\n    var offset;\n    if (dx === 0 && dy === 0) {\n        offset = offset1;\n    }\n    else {\n        var t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n        if (t > 1) {\n            offset = offset2;\n        }\n        else if (t > 0) {\n            for (var i = 0; i < stride; ++i) {\n                closestPoint[i] = lerp(flatCoordinates[offset1 + i], flatCoordinates[offset2 + i], t);\n            }\n            closestPoint.length = stride;\n            return;\n        }\n        else {\n            offset = offset1;\n        }\n    }\n    for (var i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[offset + i];\n    }\n    closestPoint.length = stride;\n}\n/**\n * Return the squared of the largest distance between any pair of consecutive\n * coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function maxSquaredDelta(flatCoordinates, offset, end, stride, max) {\n    var x1 = flatCoordinates[offset];\n    var y1 = flatCoordinates[offset + 1];\n    for (offset += stride; offset < end; offset += stride) {\n        var x2 = flatCoordinates[offset];\n        var y2 = flatCoordinates[offset + 1];\n        var squaredDelta = squaredDx(x1, y1, x2, y2);\n        if (squaredDelta > max) {\n            max = squaredDelta;\n        }\n        x1 = x2;\n        y1 = y2;\n    }\n    return max;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function arrayMaxSquaredDelta(flatCoordinates, offset, ends, stride, max) {\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        var end = ends[i];\n        max = maxSquaredDelta(flatCoordinates, offset, end, stride, max);\n        offset = end;\n    }\n    return max;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function multiArrayMaxSquaredDelta(flatCoordinates, offset, endss, stride, max) {\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        max = arrayMaxSquaredDelta(flatCoordinates, offset, ends, stride, max);\n        offset = ends[ends.length - 1];\n    }\n    return max;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>=} opt_tmpPoint Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestPoint(flatCoordinates, offset, end, stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance, opt_tmpPoint) {\n    if (offset == end) {\n        return minSquaredDistance;\n    }\n    var i, squaredDistance;\n    if (maxDelta === 0) {\n        // All points are identical, so just test the first point.\n        squaredDistance = squaredDx(x, y, flatCoordinates[offset], flatCoordinates[offset + 1]);\n        if (squaredDistance < minSquaredDistance) {\n            for (i = 0; i < stride; ++i) {\n                closestPoint[i] = flatCoordinates[offset + i];\n            }\n            closestPoint.length = stride;\n            return squaredDistance;\n        }\n        else {\n            return minSquaredDistance;\n        }\n    }\n    var tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n    var index = offset + stride;\n    while (index < end) {\n        assignClosest(flatCoordinates, index - stride, index, stride, x, y, tmpPoint);\n        squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n        if (squaredDistance < minSquaredDistance) {\n            minSquaredDistance = squaredDistance;\n            for (i = 0; i < stride; ++i) {\n                closestPoint[i] = tmpPoint[i];\n            }\n            closestPoint.length = stride;\n            index += stride;\n        }\n        else {\n            // Skip ahead multiple points, because we know that all the skipped\n            // points cannot be any closer than the closest point we have found so\n            // far.  We know this because we know how close the current point is, how\n            // close the closest point we have found so far is, and the maximum\n            // distance between consecutive points.  For example, if we're currently\n            // at distance 10, the best we've found so far is 3, and that the maximum\n            // distance between consecutive points is 2, then we'll need to skip at\n            // least (10 - 3) / 2 == 3 (rounded down) points to have any chance of\n            // finding a closer point.  We use Math.max(..., 1) to ensure that we\n            // always advance at least one point, to avoid an infinite loop.\n            index += stride * Math.max(((Math.sqrt(squaredDistance) -\n                Math.sqrt(minSquaredDistance)) / maxDelta) | 0, 1);\n        }\n    }\n    if (isRing) {\n        // Check the closing segment.\n        assignClosest(flatCoordinates, end - stride, offset, stride, x, y, tmpPoint);\n        squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n        if (squaredDistance < minSquaredDistance) {\n            minSquaredDistance = squaredDistance;\n            for (i = 0; i < stride; ++i) {\n                closestPoint[i] = tmpPoint[i];\n            }\n            closestPoint.length = stride;\n        }\n    }\n    return minSquaredDistance;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>=} opt_tmpPoint Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestArrayPoint(flatCoordinates, offset, ends, stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance, opt_tmpPoint) {\n    var tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        var end = ends[i];\n        minSquaredDistance = assignClosestPoint(flatCoordinates, offset, end, stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance, tmpPoint);\n        offset = end;\n    }\n    return minSquaredDistance;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>=} opt_tmpPoint Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestMultiArrayPoint(flatCoordinates, offset, endss, stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance, opt_tmpPoint) {\n    var tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        minSquaredDistance = assignClosestArrayPoint(flatCoordinates, offset, ends, stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance, tmpPoint);\n        offset = ends[ends.length - 1];\n    }\n    return minSquaredDistance;\n}\n//# sourceMappingURL=closest.js.map","/**\n * @module ol/geom/flat/deflate\n */\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinate(flatCoordinates, offset, coordinate, stride) {\n    for (var i = 0, ii = coordinate.length; i < ii; ++i) {\n        flatCoordinates[offset++] = coordinate[i];\n    }\n    return offset;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinates(flatCoordinates, offset, coordinates, stride) {\n    for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n        var coordinate = coordinates[i];\n        for (var j = 0; j < stride; ++j) {\n            flatCoordinates[offset++] = coordinate[j];\n        }\n    }\n    return offset;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} coordinatess Coordinatess.\n * @param {number} stride Stride.\n * @param {Array<number>=} opt_ends Ends.\n * @return {Array<number>} Ends.\n */\nexport function deflateCoordinatesArray(flatCoordinates, offset, coordinatess, stride, opt_ends) {\n    var ends = opt_ends ? opt_ends : [];\n    var i = 0;\n    for (var j = 0, jj = coordinatess.length; j < jj; ++j) {\n        var end = deflateCoordinates(flatCoordinates, offset, coordinatess[j], stride);\n        ends[i++] = end;\n        offset = end;\n    }\n    ends.length = i;\n    return ends;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} coordinatesss Coordinatesss.\n * @param {number} stride Stride.\n * @param {Array<Array<number>>=} opt_endss Endss.\n * @return {Array<Array<number>>} Endss.\n */\nexport function deflateMultiCoordinatesArray(flatCoordinates, offset, coordinatesss, stride, opt_endss) {\n    var endss = opt_endss ? opt_endss : [];\n    var i = 0;\n    for (var j = 0, jj = coordinatesss.length; j < jj; ++j) {\n        var ends = deflateCoordinatesArray(flatCoordinates, offset, coordinatesss[j], stride, endss[i]);\n        endss[i++] = ends;\n        offset = ends[ends.length - 1];\n    }\n    endss.length = i;\n    return endss;\n}\n//# sourceMappingURL=deflate.js.map","/**\n * @module ol/geom/flat/inflate\n */\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>=} opt_coordinates Coordinates.\n * @return {Array<import(\"../../coordinate.js\").Coordinate>} Coordinates.\n */\nexport function inflateCoordinates(flatCoordinates, offset, end, stride, opt_coordinates) {\n    var coordinates = opt_coordinates !== undefined ? opt_coordinates : [];\n    var i = 0;\n    for (var j = offset; j < end; j += stride) {\n        coordinates[i++] = flatCoordinates.slice(j, j + stride);\n    }\n    coordinates.length = i;\n    return coordinates;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>=} opt_coordinatess Coordinatess.\n * @return {Array<Array<import(\"../../coordinate.js\").Coordinate>>} Coordinatess.\n */\nexport function inflateCoordinatesArray(flatCoordinates, offset, ends, stride, opt_coordinatess) {\n    var coordinatess = opt_coordinatess !== undefined ? opt_coordinatess : [];\n    var i = 0;\n    for (var j = 0, jj = ends.length; j < jj; ++j) {\n        var end = ends[j];\n        coordinatess[i++] = inflateCoordinates(flatCoordinates, offset, end, stride, coordinatess[i]);\n        offset = end;\n    }\n    coordinatess.length = i;\n    return coordinatess;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>=} opt_coordinatesss\n *     Coordinatesss.\n * @return {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} Coordinatesss.\n */\nexport function inflateMultiCoordinatesArray(flatCoordinates, offset, endss, stride, opt_coordinatesss) {\n    var coordinatesss = opt_coordinatesss !== undefined ? opt_coordinatesss : [];\n    var i = 0;\n    for (var j = 0, jj = endss.length; j < jj; ++j) {\n        var ends = endss[j];\n        coordinatesss[i++] = inflateCoordinatesArray(flatCoordinates, offset, ends, stride, coordinatesss[i]);\n        offset = ends[ends.length - 1];\n    }\n    coordinatesss.length = i;\n    return coordinatesss;\n}\n//# sourceMappingURL=inflate.js.map","/**\n * @module ol/geom/flat/simplify\n */\n// Based on simplify-js https://github.com/mourner/simplify-js\n// Copyright (c) 2012, Vladimir Agafonkin\n// All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are met:\n//\n//    1. Redistributions of source code must retain the above copyright notice,\n//       this list of conditions and the following disclaimer.\n//\n//    2. Redistributions in binary form must reproduce the above copyright\n//       notice, this list of conditions and the following disclaimer in the\n//       documentation and/or other materials provided with the distribution.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n// POSSIBILITY OF SUCH DAMAGE.\nimport { squaredSegmentDistance, squaredDistance } from '../../math.js';\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {boolean} highQuality Highest quality.\n * @param {Array<number>=} opt_simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @return {Array<number>} Simplified line string.\n */\nexport function simplifyLineString(flatCoordinates, offset, end, stride, squaredTolerance, highQuality, opt_simplifiedFlatCoordinates) {\n    var simplifiedFlatCoordinates = opt_simplifiedFlatCoordinates !== undefined ?\n        opt_simplifiedFlatCoordinates : [];\n    if (!highQuality) {\n        end = radialDistance(flatCoordinates, offset, end, stride, squaredTolerance, simplifiedFlatCoordinates, 0);\n        flatCoordinates = simplifiedFlatCoordinates;\n        offset = 0;\n        stride = 2;\n    }\n    simplifiedFlatCoordinates.length = douglasPeucker(flatCoordinates, offset, end, stride, squaredTolerance, simplifiedFlatCoordinates, 0);\n    return simplifiedFlatCoordinates;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function douglasPeucker(flatCoordinates, offset, end, stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset) {\n    var n = (end - offset) / stride;\n    if (n < 3) {\n        for (; offset < end; offset += stride) {\n            simplifiedFlatCoordinates[simplifiedOffset++] =\n                flatCoordinates[offset];\n            simplifiedFlatCoordinates[simplifiedOffset++] =\n                flatCoordinates[offset + 1];\n        }\n        return simplifiedOffset;\n    }\n    /** @type {Array<number>} */\n    var markers = new Array(n);\n    markers[0] = 1;\n    markers[n - 1] = 1;\n    /** @type {Array<number>} */\n    var stack = [offset, end - stride];\n    var index = 0;\n    while (stack.length > 0) {\n        var last = stack.pop();\n        var first = stack.pop();\n        var maxSquaredDistance = 0;\n        var x1 = flatCoordinates[first];\n        var y1 = flatCoordinates[first + 1];\n        var x2 = flatCoordinates[last];\n        var y2 = flatCoordinates[last + 1];\n        for (var i = first + stride; i < last; i += stride) {\n            var x = flatCoordinates[i];\n            var y = flatCoordinates[i + 1];\n            var squaredDistance_1 = squaredSegmentDistance(x, y, x1, y1, x2, y2);\n            if (squaredDistance_1 > maxSquaredDistance) {\n                index = i;\n                maxSquaredDistance = squaredDistance_1;\n            }\n        }\n        if (maxSquaredDistance > squaredTolerance) {\n            markers[(index - offset) / stride] = 1;\n            if (first + stride < index) {\n                stack.push(first, index);\n            }\n            if (index + stride < last) {\n                stack.push(index, last);\n            }\n        }\n    }\n    for (var i = 0; i < n; ++i) {\n        if (markers[i]) {\n            simplifiedFlatCoordinates[simplifiedOffset++] =\n                flatCoordinates[offset + i * stride];\n            simplifiedFlatCoordinates[simplifiedOffset++] =\n                flatCoordinates[offset + i * stride + 1];\n        }\n    }\n    return simplifiedOffset;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerArray(flatCoordinates, offset, ends, stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds) {\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        var end = ends[i];\n        simplifiedOffset = douglasPeucker(flatCoordinates, offset, end, stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset);\n        simplifiedEnds.push(simplifiedOffset);\n        offset = end;\n    }\n    return simplifiedOffset;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerMultiArray(flatCoordinates, offset, endss, stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset, simplifiedEndss) {\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        var simplifiedEnds = [];\n        simplifiedOffset = douglasPeuckerArray(flatCoordinates, offset, ends, stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds);\n        simplifiedEndss.push(simplifiedEnds);\n        offset = ends[ends.length - 1];\n    }\n    return simplifiedOffset;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function radialDistance(flatCoordinates, offset, end, stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset) {\n    if (end <= offset + stride) {\n        // zero or one point, no simplification possible, so copy and return\n        for (; offset < end; offset += stride) {\n            simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n            simplifiedFlatCoordinates[simplifiedOffset++] =\n                flatCoordinates[offset + 1];\n        }\n        return simplifiedOffset;\n    }\n    var x1 = flatCoordinates[offset];\n    var y1 = flatCoordinates[offset + 1];\n    // copy first point\n    simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n    var x2 = x1;\n    var y2 = y1;\n    for (offset += stride; offset < end; offset += stride) {\n        x2 = flatCoordinates[offset];\n        y2 = flatCoordinates[offset + 1];\n        if (squaredDistance(x1, y1, x2, y2) > squaredTolerance) {\n            // copy point at offset\n            simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n            simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n            x1 = x2;\n            y1 = y2;\n        }\n    }\n    if (x2 != x1 || y2 != y1) {\n        // copy last point\n        simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n        simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n    }\n    return simplifiedOffset;\n}\n/**\n * @param {number} value Value.\n * @param {number} tolerance Tolerance.\n * @return {number} Rounded value.\n */\nexport function snap(value, tolerance) {\n    return tolerance * Math.round(value / tolerance);\n}\n/**\n * Simplifies a line string using an algorithm designed by Tim Schaub.\n * Coordinates are snapped to the nearest value in a virtual grid and\n * consecutive duplicate coordinates are discarded.  This effectively preserves\n * topology as the simplification of any subsection of a line string is\n * independent of the rest of the line string.  This means that, for examples,\n * the common edge between two polygons will be simplified to the same line\n * string independently in both polygons.  This implementation uses a single\n * pass over the coordinates and eliminates intermediate collinear points.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function quantize(flatCoordinates, offset, end, stride, tolerance, simplifiedFlatCoordinates, simplifiedOffset) {\n    // do nothing if the line is empty\n    if (offset == end) {\n        return simplifiedOffset;\n    }\n    // snap the first coordinate (P1)\n    var x1 = snap(flatCoordinates[offset], tolerance);\n    var y1 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    // add the first coordinate to the output\n    simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n    // find the next coordinate that does not snap to the same value as the first\n    // coordinate (P2)\n    var x2, y2;\n    do {\n        x2 = snap(flatCoordinates[offset], tolerance);\n        y2 = snap(flatCoordinates[offset + 1], tolerance);\n        offset += stride;\n        if (offset == end) {\n            // all coordinates snap to the same value, the line collapses to a point\n            // push the last snapped value anyway to ensure that the output contains\n            // at least two points\n            // FIXME should we really return at least two points anyway?\n            simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n            simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n            return simplifiedOffset;\n        }\n    } while (x2 == x1 && y2 == y1);\n    while (offset < end) {\n        // snap the next coordinate (P3)\n        var x3 = snap(flatCoordinates[offset], tolerance);\n        var y3 = snap(flatCoordinates[offset + 1], tolerance);\n        offset += stride;\n        // skip P3 if it is equal to P2\n        if (x3 == x2 && y3 == y2) {\n            continue;\n        }\n        // calculate the delta between P1 and P2\n        var dx1 = x2 - x1;\n        var dy1 = y2 - y1;\n        // calculate the delta between P3 and P1\n        var dx2 = x3 - x1;\n        var dy2 = y3 - y1;\n        // if P1, P2, and P3 are colinear and P3 is further from P1 than P2 is from\n        // P1 in the same direction then P2 is on the straight line between P1 and\n        // P3\n        if ((dx1 * dy2 == dy1 * dx2) &&\n            ((dx1 < 0 && dx2 < dx1) || dx1 == dx2 || (dx1 > 0 && dx2 > dx1)) &&\n            ((dy1 < 0 && dy2 < dy1) || dy1 == dy2 || (dy1 > 0 && dy2 > dy1))) {\n            // discard P2 and set P2 = P3\n            x2 = x3;\n            y2 = y3;\n            continue;\n        }\n        // either P1, P2, and P3 are not colinear, or they are colinear but P3 is\n        // between P3 and P1 or on the opposite half of the line to P2.  add P2,\n        // and continue with P1 = P2 and P2 = P3\n        simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n        simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n        x1 = x2;\n        y1 = y2;\n        x2 = x3;\n        y2 = y3;\n    }\n    // add the last point (P2)\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n    return simplifiedOffset;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function quantizeArray(flatCoordinates, offset, ends, stride, tolerance, simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds) {\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        var end = ends[i];\n        simplifiedOffset = quantize(flatCoordinates, offset, end, stride, tolerance, simplifiedFlatCoordinates, simplifiedOffset);\n        simplifiedEnds.push(simplifiedOffset);\n        offset = end;\n    }\n    return simplifiedOffset;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function quantizeMultiArray(flatCoordinates, offset, endss, stride, tolerance, simplifiedFlatCoordinates, simplifiedOffset, simplifiedEndss) {\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        var simplifiedEnds = [];\n        simplifiedOffset = quantizeArray(flatCoordinates, offset, ends, stride, tolerance, simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds);\n        simplifiedEndss.push(simplifiedEnds);\n        offset = ends[ends.length - 1];\n    }\n    return simplifiedOffset;\n}\n//# sourceMappingURL=simplify.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/LinearRing\n */\nimport { closestSquaredDistanceXY } from '../extent.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport { linearRing as linearRingArea } from './flat/area.js';\nimport { assignClosestPoint, maxSquaredDelta } from './flat/closest.js';\nimport { deflateCoordinates } from './flat/deflate.js';\nimport { inflateCoordinates } from './flat/inflate.js';\nimport { douglasPeucker } from './flat/simplify.js';\n/**\n * @classdesc\n * Linear ring geometry. Only used as part of polygon; cannot be rendered\n * on its own.\n *\n * @api\n */\nvar LinearRing = /** @class */ (function (_super) {\n    __extends(LinearRing, _super);\n    /**\n     * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n     *     For internal use, flat coordinates in combination with `opt_layout` are also accepted.\n     * @param {GeometryLayout=} opt_layout Layout.\n     */\n    function LinearRing(coordinates, opt_layout) {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDelta_ = -1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDeltaRevision_ = -1;\n        if (opt_layout !== undefined && !Array.isArray(coordinates[0])) {\n            _this.setFlatCoordinates(opt_layout, /** @type {Array<number>} */ (coordinates));\n        }\n        else {\n            _this.setCoordinates(/** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (coordinates), opt_layout);\n        }\n        return _this;\n    }\n    /**\n     * Make a complete copy of the geometry.\n     * @return {!LinearRing} Clone.\n     * @override\n     * @api\n     */\n    LinearRing.prototype.clone = function () {\n        return new LinearRing(this.flatCoordinates.slice(), this.layout);\n    };\n    /**\n     * @inheritDoc\n     */\n    LinearRing.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\n        if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n            return minSquaredDistance;\n        }\n        if (this.maxDeltaRevision_ != this.getRevision()) {\n            this.maxDelta_ = Math.sqrt(maxSquaredDelta(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, 0));\n            this.maxDeltaRevision_ = this.getRevision();\n        }\n        return assignClosestPoint(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);\n    };\n    /**\n     * Return the area of the linear ring on projected plane.\n     * @return {number} Area (on projected plane).\n     * @api\n     */\n    LinearRing.prototype.getArea = function () {\n        return linearRingArea(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n    };\n    /**\n     * Return the coordinates of the linear ring.\n     * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n     * @override\n     * @api\n     */\n    LinearRing.prototype.getCoordinates = function () {\n        return inflateCoordinates(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n    };\n    /**\n     * @inheritDoc\n     */\n    LinearRing.prototype.getSimplifiedGeometryInternal = function (squaredTolerance) {\n        var simplifiedFlatCoordinates = [];\n        simplifiedFlatCoordinates.length = douglasPeucker(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, squaredTolerance, simplifiedFlatCoordinates, 0);\n        return new LinearRing(simplifiedFlatCoordinates, GeometryLayout.XY);\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    LinearRing.prototype.getType = function () {\n        return GeometryType.LINEAR_RING;\n    };\n    /**\n     * @inheritDoc\n     */\n    LinearRing.prototype.intersectsExtent = function (extent) {\n        return false;\n    };\n    /**\n     * Set the coordinates of the linear ring.\n     * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n     * @param {GeometryLayout=} opt_layout Layout.\n     * @override\n     * @api\n     */\n    LinearRing.prototype.setCoordinates = function (coordinates, opt_layout) {\n        this.setLayout(opt_layout, coordinates, 1);\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = [];\n        }\n        this.flatCoordinates.length = deflateCoordinates(this.flatCoordinates, 0, coordinates, this.stride);\n        this.changed();\n    };\n    return LinearRing;\n}(SimpleGeometry));\nexport default LinearRing;\n//# sourceMappingURL=LinearRing.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/Point\n */\nimport { createOrUpdateFromCoordinate, containsXY } from '../extent.js';\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport { deflateCoordinate } from './flat/deflate.js';\nimport { squaredDistance as squaredDx } from '../math.js';\n/**\n * @classdesc\n * Point geometry.\n *\n * @api\n */\nvar Point = /** @class */ (function (_super) {\n    __extends(Point, _super);\n    /**\n     * @param {import(\"../coordinate.js\").Coordinate} coordinates Coordinates.\n     * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n     */\n    function Point(coordinates, opt_layout) {\n        var _this = _super.call(this) || this;\n        _this.setCoordinates(coordinates, opt_layout);\n        return _this;\n    }\n    /**\n     * Make a complete copy of the geometry.\n     * @return {!Point} Clone.\n     * @override\n     * @api\n     */\n    Point.prototype.clone = function () {\n        var point = new Point(this.flatCoordinates.slice(), this.layout);\n        return point;\n    };\n    /**\n     * @inheritDoc\n     */\n    Point.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\n        var flatCoordinates = this.flatCoordinates;\n        var squaredDistance = squaredDx(x, y, flatCoordinates[0], flatCoordinates[1]);\n        if (squaredDistance < minSquaredDistance) {\n            var stride = this.stride;\n            for (var i = 0; i < stride; ++i) {\n                closestPoint[i] = flatCoordinates[i];\n            }\n            closestPoint.length = stride;\n            return squaredDistance;\n        }\n        else {\n            return minSquaredDistance;\n        }\n    };\n    /**\n     * Return the coordinate of the point.\n     * @return {import(\"../coordinate.js\").Coordinate} Coordinates.\n     * @override\n     * @api\n     */\n    Point.prototype.getCoordinates = function () {\n        return !this.flatCoordinates ? [] : this.flatCoordinates.slice();\n    };\n    /**\n     * @inheritDoc\n     */\n    Point.prototype.computeExtent = function (extent) {\n        return createOrUpdateFromCoordinate(this.flatCoordinates, extent);\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    Point.prototype.getType = function () {\n        return GeometryType.POINT;\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    Point.prototype.intersectsExtent = function (extent) {\n        return containsXY(extent, this.flatCoordinates[0], this.flatCoordinates[1]);\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    Point.prototype.setCoordinates = function (coordinates, opt_layout) {\n        this.setLayout(opt_layout, coordinates, 0);\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = [];\n        }\n        this.flatCoordinates.length = deflateCoordinate(this.flatCoordinates, 0, coordinates, this.stride);\n        this.changed();\n    };\n    return Point;\n}(SimpleGeometry));\nexport default Point;\n//# sourceMappingURL=Point.js.map","/**\n * @module ol/geom/flat/contains\n */\nimport { forEachCorner } from '../../extent.js';\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} Contains extent.\n */\nexport function linearRingContainsExtent(flatCoordinates, offset, end, stride, extent) {\n    var outside = forEachCorner(extent, \n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {boolean} Contains (x, y).\n     */\n    function (coordinate) {\n        return !linearRingContainsXY(flatCoordinates, offset, end, stride, coordinate[0], coordinate[1]);\n    });\n    return !outside;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingContainsXY(flatCoordinates, offset, end, stride, x, y) {\n    // http://geomalgorithms.com/a03-_inclusion.html\n    // Copyright 2000 softSurfer, 2012 Dan Sunday\n    // This code may be freely used and modified for any purpose\n    // providing that this copyright notice is included with it.\n    // SoftSurfer makes no warranty for this code, and cannot be held\n    // liable for any real or imagined damage resulting from its use.\n    // Users of this code must verify correctness for their application.\n    var wn = 0;\n    var x1 = flatCoordinates[end - stride];\n    var y1 = flatCoordinates[end - stride + 1];\n    for (; offset < end; offset += stride) {\n        var x2 = flatCoordinates[offset];\n        var y2 = flatCoordinates[offset + 1];\n        if (y1 <= y) {\n            if (y2 > y && ((x2 - x1) * (y - y1)) - ((x - x1) * (y2 - y1)) > 0) {\n                wn++;\n            }\n        }\n        else if (y2 <= y && ((x2 - x1) * (y - y1)) - ((x - x1) * (y2 - y1)) < 0) {\n            wn--;\n        }\n        x1 = x2;\n        y1 = y2;\n    }\n    return wn !== 0;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y) {\n    if (ends.length === 0) {\n        return false;\n    }\n    if (!linearRingContainsXY(flatCoordinates, offset, ends[0], stride, x, y)) {\n        return false;\n    }\n    for (var i = 1, ii = ends.length; i < ii; ++i) {\n        if (linearRingContainsXY(flatCoordinates, ends[i - 1], ends[i], stride, x, y)) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingssContainsXY(flatCoordinates, offset, endss, stride, x, y) {\n    if (endss.length === 0) {\n        return false;\n    }\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n            return true;\n        }\n        offset = ends[ends.length - 1];\n    }\n    return false;\n}\n//# sourceMappingURL=contains.js.map","/**\n * @module ol/geom/flat/interiorpoint\n */\nimport { numberSafeCompareFunction } from '../../array.js';\nimport { linearRingsContainsXY } from './contains.js';\n/**\n * Calculates a point that is likely to lie in the interior of the linear rings.\n * Inspired by JTS's com.vividsolutions.jts.geom.Geometry#getInteriorPoint.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @param {number} flatCentersOffset Flat center offset.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Destination point as XYM coordinate, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointOfArray(flatCoordinates, offset, ends, stride, flatCenters, flatCentersOffset, opt_dest) {\n    var i, ii, x, x1, x2, y1, y2;\n    var y = flatCenters[flatCentersOffset + 1];\n    /** @type {Array<number>} */\n    var intersections = [];\n    // Calculate intersections with the horizontal line\n    for (var r = 0, rr = ends.length; r < rr; ++r) {\n        var end = ends[r];\n        x1 = flatCoordinates[end - stride];\n        y1 = flatCoordinates[end - stride + 1];\n        for (i = offset; i < end; i += stride) {\n            x2 = flatCoordinates[i];\n            y2 = flatCoordinates[i + 1];\n            if ((y <= y1 && y2 <= y) || (y1 <= y && y <= y2)) {\n                x = (y - y1) / (y2 - y1) * (x2 - x1) + x1;\n                intersections.push(x);\n            }\n            x1 = x2;\n            y1 = y2;\n        }\n    }\n    // Find the longest segment of the horizontal line that has its center point\n    // inside the linear ring.\n    var pointX = NaN;\n    var maxSegmentLength = -Infinity;\n    intersections.sort(numberSafeCompareFunction);\n    x1 = intersections[0];\n    for (i = 1, ii = intersections.length; i < ii; ++i) {\n        x2 = intersections[i];\n        var segmentLength = Math.abs(x2 - x1);\n        if (segmentLength > maxSegmentLength) {\n            x = (x1 + x2) / 2;\n            if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n                pointX = x;\n                maxSegmentLength = segmentLength;\n            }\n        }\n        x1 = x2;\n    }\n    if (isNaN(pointX)) {\n        // There is no horizontal line that has its center point inside the linear\n        // ring.  Use the center of the the linear ring's extent.\n        pointX = flatCenters[flatCentersOffset];\n    }\n    if (opt_dest) {\n        opt_dest.push(pointX, y, maxSegmentLength);\n        return opt_dest;\n    }\n    else {\n        return [pointX, y, maxSegmentLength];\n    }\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @return {Array<number>} Interior points as XYM coordinates, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointsOfMultiArray(flatCoordinates, offset, endss, stride, flatCenters) {\n    var interiorPoints = [];\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        interiorPoints = getInteriorPointOfArray(flatCoordinates, offset, ends, stride, flatCenters, 2 * i, interiorPoints);\n        offset = ends[ends.length - 1];\n    }\n    return interiorPoints;\n}\n//# sourceMappingURL=interiorpoint.js.map","/**\n * @module ol/geom/flat/segments\n */\n/**\n * This function calls `callback` for each segment of the flat coordinates\n * array. If the callback returns a truthy value the function returns that\n * value immediately. Otherwise the function returns `false`.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {function(import(\"../../coordinate.js\").Coordinate, import(\"../../coordinate.js\").Coordinate): T} callback Function\n *     called for each segment.\n * @return {T|boolean} Value.\n * @template T\n */\nexport function forEach(flatCoordinates, offset, end, stride, callback) {\n    var point1 = [flatCoordinates[offset], flatCoordinates[offset + 1]];\n    var point2 = [];\n    var ret;\n    for (; (offset + stride) < end; offset += stride) {\n        point2[0] = flatCoordinates[offset + stride];\n        point2[1] = flatCoordinates[offset + stride + 1];\n        ret = callback(point1, point2);\n        if (ret) {\n            return ret;\n        }\n        point1[0] = point2[0];\n        point1[1] = point2[1];\n    }\n    return false;\n}\n//# sourceMappingURL=segments.js.map","/**\n * @module ol/geom/flat/intersectsextent\n */\nimport { containsExtent, createEmpty, extendFlatCoordinates, intersects, intersectsSegment } from '../../extent.js';\nimport { linearRingContainsXY, linearRingContainsExtent } from './contains.js';\nimport { forEach as forEachSegment } from './segments.js';\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineString(flatCoordinates, offset, end, stride, extent) {\n    var coordinatesExtent = extendFlatCoordinates(createEmpty(), flatCoordinates, offset, end, stride);\n    if (!intersects(extent, coordinatesExtent)) {\n        return false;\n    }\n    if (containsExtent(extent, coordinatesExtent)) {\n        return true;\n    }\n    if (coordinatesExtent[0] >= extent[0] &&\n        coordinatesExtent[2] <= extent[2]) {\n        return true;\n    }\n    if (coordinatesExtent[1] >= extent[1] &&\n        coordinatesExtent[3] <= extent[3]) {\n        return true;\n    }\n    return forEachSegment(flatCoordinates, offset, end, stride, \n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} point1 Start point.\n     * @param {import(\"../../coordinate.js\").Coordinate} point2 End point.\n     * @return {boolean} `true` if the segment and the extent intersect,\n     *     `false` otherwise.\n     */\n    function (point1, point2) {\n        return intersectsSegment(extent, point1, point2);\n    });\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineStringArray(flatCoordinates, offset, ends, stride, extent) {\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        if (intersectsLineString(flatCoordinates, offset, ends[i], stride, extent)) {\n            return true;\n        }\n        offset = ends[i];\n    }\n    return false;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRing(flatCoordinates, offset, end, stride, extent) {\n    if (intersectsLineString(flatCoordinates, offset, end, stride, extent)) {\n        return true;\n    }\n    if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[0], extent[1])) {\n        return true;\n    }\n    if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[0], extent[3])) {\n        return true;\n    }\n    if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[2], extent[1])) {\n        return true;\n    }\n    if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[2], extent[3])) {\n        return true;\n    }\n    return false;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingArray(flatCoordinates, offset, ends, stride, extent) {\n    if (!intersectsLinearRing(flatCoordinates, offset, ends[0], stride, extent)) {\n        return false;\n    }\n    if (ends.length === 1) {\n        return true;\n    }\n    for (var i = 1, ii = ends.length; i < ii; ++i) {\n        if (linearRingContainsExtent(flatCoordinates, ends[i - 1], ends[i], stride, extent)) {\n            if (!intersectsLineString(flatCoordinates, ends[i - 1], ends[i], stride, extent)) {\n                return false;\n            }\n        }\n    }\n    return true;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingMultiArray(flatCoordinates, offset, endss, stride, extent) {\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        if (intersectsLinearRingArray(flatCoordinates, offset, ends, stride, extent)) {\n            return true;\n        }\n        offset = ends[ends.length - 1];\n    }\n    return false;\n}\n//# sourceMappingURL=intersectsextent.js.map","/**\n * @module ol/geom/flat/reverse\n */\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n */\nexport function coordinates(flatCoordinates, offset, end, stride) {\n    while (offset < end - stride) {\n        for (var i = 0; i < stride; ++i) {\n            var tmp = flatCoordinates[offset + i];\n            flatCoordinates[offset + i] = flatCoordinates[end - stride + i];\n            flatCoordinates[end - stride + i] = tmp;\n        }\n        offset += stride;\n        end -= stride;\n    }\n}\n//# sourceMappingURL=reverse.js.map","/**\n * @module ol/geom/flat/orient\n */\nimport { coordinates as reverseCoordinates } from './reverse.js';\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {boolean} Is clockwise.\n */\nexport function linearRingIsClockwise(flatCoordinates, offset, end, stride) {\n    // http://tinyurl.com/clockwise-method\n    // https://github.com/OSGeo/gdal/blob/trunk/gdal/ogr/ogrlinearring.cpp\n    var edge = 0;\n    var x1 = flatCoordinates[end - stride];\n    var y1 = flatCoordinates[end - stride + 1];\n    for (; offset < end; offset += stride) {\n        var x2 = flatCoordinates[offset];\n        var y2 = flatCoordinates[offset + 1];\n        edge += (x2 - x1) * (y2 + y1);\n        x1 = x2;\n        y1 = y2;\n    }\n    return edge > 0;\n}\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingsAreOriented(flatCoordinates, offset, ends, stride, opt_right) {\n    var right = opt_right !== undefined ? opt_right : false;\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        var end = ends[i];\n        var isClockwise = linearRingIsClockwise(flatCoordinates, offset, end, stride);\n        if (i === 0) {\n            if ((right && isClockwise) || (!right && !isClockwise)) {\n                return false;\n            }\n        }\n        else {\n            if ((right && !isClockwise) || (!right && isClockwise)) {\n                return false;\n            }\n        }\n        offset = end;\n    }\n    return true;\n}\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingssAreOriented(flatCoordinates, offset, endss, stride, opt_right) {\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        if (!linearRingsAreOriented(flatCoordinates, offset, ends, stride, opt_right)) {\n            return false;\n        }\n        if (ends.length) {\n            offset = ends[ends.length - 1];\n        }\n    }\n    return true;\n}\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRings(flatCoordinates, offset, ends, stride, opt_right) {\n    var right = opt_right !== undefined ? opt_right : false;\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        var end = ends[i];\n        var isClockwise = linearRingIsClockwise(flatCoordinates, offset, end, stride);\n        var reverse = i === 0 ?\n            (right && isClockwise) || (!right && !isClockwise) :\n            (right && !isClockwise) || (!right && isClockwise);\n        if (reverse) {\n            reverseCoordinates(flatCoordinates, offset, end, stride);\n        }\n        offset = end;\n    }\n    return offset;\n}\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRingsArray(flatCoordinates, offset, endss, stride, opt_right) {\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        offset = orientLinearRings(flatCoordinates, offset, endss[i], stride, opt_right);\n    }\n    return offset;\n}\n//# sourceMappingURL=orient.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/Polygon\n */\nimport { extend } from '../array.js';\nimport { closestSquaredDistanceXY, getCenter } from '../extent.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport LinearRing from './LinearRing.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport { offset as sphereOffset } from '../sphere.js';\nimport { linearRings as linearRingsArea } from './flat/area.js';\nimport { assignClosestArrayPoint, arrayMaxSquaredDelta } from './flat/closest.js';\nimport { linearRingsContainsXY } from './flat/contains.js';\nimport { deflateCoordinatesArray } from './flat/deflate.js';\nimport { inflateCoordinatesArray } from './flat/inflate.js';\nimport { getInteriorPointOfArray } from './flat/interiorpoint.js';\nimport { intersectsLinearRingArray } from './flat/intersectsextent.js';\nimport { linearRingsAreOriented, orientLinearRings } from './flat/orient.js';\nimport { quantizeArray } from './flat/simplify.js';\nimport { modulo } from '../math.js';\n/**\n * @classdesc\n * Polygon geometry.\n *\n * @api\n */\nvar Polygon = /** @class */ (function (_super) {\n    __extends(Polygon, _super);\n    /**\n     * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>|!Array<number>} coordinates\n     *     Array of linear rings that define the polygon. The first linear ring of the\n     *     array defines the outer-boundary or surface of the polygon. Each subsequent\n     *     linear ring defines a hole in the surface of the polygon. A linear ring is\n     *     an array of vertices' coordinates where the first coordinate and the last are\n     *     equivalent. (For internal use, flat coordinates in combination with\n     *     `opt_layout` and `opt_ends` are also accepted.)\n     * @param {GeometryLayout=} opt_layout Layout.\n     * @param {Array<number>=} opt_ends Ends (for internal use with flat coordinates).\n     */\n    function Polygon(coordinates, opt_layout, opt_ends) {\n        var _this = _super.call(this) || this;\n        /**\n         * @type {Array<number>}\n         * @private\n         */\n        _this.ends_ = [];\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.flatInteriorPointRevision_ = -1;\n        /**\n         * @private\n         * @type {import(\"../coordinate.js\").Coordinate}\n         */\n        _this.flatInteriorPoint_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDelta_ = -1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDeltaRevision_ = -1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.orientedRevision_ = -1;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.orientedFlatCoordinates_ = null;\n        if (opt_layout !== undefined && opt_ends) {\n            _this.setFlatCoordinates(opt_layout, /** @type {Array<number>} */ (coordinates));\n            _this.ends_ = opt_ends;\n        }\n        else {\n            _this.setCoordinates(/** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (coordinates), opt_layout);\n        }\n        return _this;\n    }\n    /**\n     * Append the passed linear ring to this polygon.\n     * @param {LinearRing} linearRing Linear ring.\n     * @api\n     */\n    Polygon.prototype.appendLinearRing = function (linearRing) {\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = linearRing.getFlatCoordinates().slice();\n        }\n        else {\n            extend(this.flatCoordinates, linearRing.getFlatCoordinates());\n        }\n        this.ends_.push(this.flatCoordinates.length);\n        this.changed();\n    };\n    /**\n     * Make a complete copy of the geometry.\n     * @return {!Polygon} Clone.\n     * @override\n     * @api\n     */\n    Polygon.prototype.clone = function () {\n        return new Polygon(this.flatCoordinates.slice(), this.layout, this.ends_.slice());\n    };\n    /**\n     * @inheritDoc\n     */\n    Polygon.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\n        if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n            return minSquaredDistance;\n        }\n        if (this.maxDeltaRevision_ != this.getRevision()) {\n            this.maxDelta_ = Math.sqrt(arrayMaxSquaredDelta(this.flatCoordinates, 0, this.ends_, this.stride, 0));\n            this.maxDeltaRevision_ = this.getRevision();\n        }\n        return assignClosestArrayPoint(this.flatCoordinates, 0, this.ends_, this.stride, this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);\n    };\n    /**\n     * @inheritDoc\n     */\n    Polygon.prototype.containsXY = function (x, y) {\n        return linearRingsContainsXY(this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride, x, y);\n    };\n    /**\n     * Return the area of the polygon on projected plane.\n     * @return {number} Area (on projected plane).\n     * @api\n     */\n    Polygon.prototype.getArea = function () {\n        return linearRingsArea(this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride);\n    };\n    /**\n     * Get the coordinate array for this geometry.  This array has the structure\n     * of a GeoJSON coordinate array for polygons.\n     *\n     * @param {boolean=} opt_right Orient coordinates according to the right-hand\n     *     rule (counter-clockwise for exterior and clockwise for interior rings).\n     *     If `false`, coordinates will be oriented according to the left-hand rule\n     *     (clockwise for exterior and counter-clockwise for interior rings).\n     *     By default, coordinate orientation will depend on how the geometry was\n     *     constructed.\n     * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n     * @override\n     * @api\n     */\n    Polygon.prototype.getCoordinates = function (opt_right) {\n        var flatCoordinates;\n        if (opt_right !== undefined) {\n            flatCoordinates = this.getOrientedFlatCoordinates().slice();\n            orientLinearRings(flatCoordinates, 0, this.ends_, this.stride, opt_right);\n        }\n        else {\n            flatCoordinates = this.flatCoordinates;\n        }\n        return inflateCoordinatesArray(flatCoordinates, 0, this.ends_, this.stride);\n    };\n    /**\n     * @return {Array<number>} Ends.\n     */\n    Polygon.prototype.getEnds = function () {\n        return this.ends_;\n    };\n    /**\n     * @return {Array<number>} Interior point.\n     */\n    Polygon.prototype.getFlatInteriorPoint = function () {\n        if (this.flatInteriorPointRevision_ != this.getRevision()) {\n            var flatCenter = getCenter(this.getExtent());\n            this.flatInteriorPoint_ = getInteriorPointOfArray(this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride, flatCenter, 0);\n            this.flatInteriorPointRevision_ = this.getRevision();\n        }\n        return this.flatInteriorPoint_;\n    };\n    /**\n     * Return an interior point of the polygon.\n     * @return {Point} Interior point as XYM coordinate, where M is the\n     * length of the horizontal intersection that the point belongs to.\n     * @api\n     */\n    Polygon.prototype.getInteriorPoint = function () {\n        return new Point(this.getFlatInteriorPoint(), GeometryLayout.XYM);\n    };\n    /**\n     * Return the number of rings of the polygon,  this includes the exterior\n     * ring and any interior rings.\n     *\n     * @return {number} Number of rings.\n     * @api\n     */\n    Polygon.prototype.getLinearRingCount = function () {\n        return this.ends_.length;\n    };\n    /**\n     * Return the Nth linear ring of the polygon geometry. Return `null` if the\n     * given index is out of range.\n     * The exterior linear ring is available at index `0` and the interior rings\n     * at index `1` and beyond.\n     *\n     * @param {number} index Index.\n     * @return {LinearRing} Linear ring.\n     * @api\n     */\n    Polygon.prototype.getLinearRing = function (index) {\n        if (index < 0 || this.ends_.length <= index) {\n            return null;\n        }\n        return new LinearRing(this.flatCoordinates.slice(index === 0 ? 0 : this.ends_[index - 1], this.ends_[index]), this.layout);\n    };\n    /**\n     * Return the linear rings of the polygon.\n     * @return {Array<LinearRing>} Linear rings.\n     * @api\n     */\n    Polygon.prototype.getLinearRings = function () {\n        var layout = this.layout;\n        var flatCoordinates = this.flatCoordinates;\n        var ends = this.ends_;\n        var linearRings = [];\n        var offset = 0;\n        for (var i = 0, ii = ends.length; i < ii; ++i) {\n            var end = ends[i];\n            var linearRing = new LinearRing(flatCoordinates.slice(offset, end), layout);\n            linearRings.push(linearRing);\n            offset = end;\n        }\n        return linearRings;\n    };\n    /**\n     * @return {Array<number>} Oriented flat coordinates.\n     */\n    Polygon.prototype.getOrientedFlatCoordinates = function () {\n        if (this.orientedRevision_ != this.getRevision()) {\n            var flatCoordinates = this.flatCoordinates;\n            if (linearRingsAreOriented(flatCoordinates, 0, this.ends_, this.stride)) {\n                this.orientedFlatCoordinates_ = flatCoordinates;\n            }\n            else {\n                this.orientedFlatCoordinates_ = flatCoordinates.slice();\n                this.orientedFlatCoordinates_.length =\n                    orientLinearRings(this.orientedFlatCoordinates_, 0, this.ends_, this.stride);\n            }\n            this.orientedRevision_ = this.getRevision();\n        }\n        return this.orientedFlatCoordinates_;\n    };\n    /**\n     * @inheritDoc\n     */\n    Polygon.prototype.getSimplifiedGeometryInternal = function (squaredTolerance) {\n        var simplifiedFlatCoordinates = [];\n        var simplifiedEnds = [];\n        simplifiedFlatCoordinates.length = quantizeArray(this.flatCoordinates, 0, this.ends_, this.stride, Math.sqrt(squaredTolerance), simplifiedFlatCoordinates, 0, simplifiedEnds);\n        return new Polygon(simplifiedFlatCoordinates, GeometryLayout.XY, simplifiedEnds);\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    Polygon.prototype.getType = function () {\n        return GeometryType.POLYGON;\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    Polygon.prototype.intersectsExtent = function (extent) {\n        return intersectsLinearRingArray(this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride, extent);\n    };\n    /**\n     * Set the coordinates of the polygon.\n     * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n     * @param {GeometryLayout=} opt_layout Layout.\n     * @override\n     * @api\n     */\n    Polygon.prototype.setCoordinates = function (coordinates, opt_layout) {\n        this.setLayout(opt_layout, coordinates, 2);\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = [];\n        }\n        var ends = deflateCoordinatesArray(this.flatCoordinates, 0, coordinates, this.stride, this.ends_);\n        this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n        this.changed();\n    };\n    return Polygon;\n}(SimpleGeometry));\nexport default Polygon;\n/**\n * Create an approximation of a circle on the surface of a sphere.\n * @param {import(\"../coordinate.js\").Coordinate} center Center (`[lon, lat]` in degrees).\n * @param {number} radius The great-circle distance from the center to\n *     the polygon vertices.\n * @param {number=} opt_n Optional number of vertices for the resulting\n *     polygon. Default is `32`.\n * @param {number=} opt_sphereRadius Optional radius for the sphere (defaults to\n *     the Earth's mean radius using the WGS84 ellipsoid).\n * @return {Polygon} The \"circular\" polygon.\n * @api\n */\nexport function circular(center, radius, opt_n, opt_sphereRadius) {\n    var n = opt_n ? opt_n : 32;\n    /** @type {Array<number>} */\n    var flatCoordinates = [];\n    for (var i = 0; i < n; ++i) {\n        extend(flatCoordinates, sphereOffset(center, radius, 2 * Math.PI * i / n, opt_sphereRadius));\n    }\n    flatCoordinates.push(flatCoordinates[0], flatCoordinates[1]);\n    return new Polygon(flatCoordinates, GeometryLayout.XY, [flatCoordinates.length]);\n}\n/**\n * Create a polygon from an extent. The layout used is `XY`.\n * @param {import(\"../extent.js\").Extent} extent The extent.\n * @return {Polygon} The polygon.\n * @api\n */\nexport function fromExtent(extent) {\n    var minX = extent[0];\n    var minY = extent[1];\n    var maxX = extent[2];\n    var maxY = extent[3];\n    var flatCoordinates = [minX, minY, minX, maxY, maxX, maxY, maxX, minY, minX, minY];\n    return new Polygon(flatCoordinates, GeometryLayout.XY, [flatCoordinates.length]);\n}\n/**\n * Create a regular polygon from a circle.\n * @param {import(\"./Circle.js\").default} circle Circle geometry.\n * @param {number=} opt_sides Number of sides of the polygon. Default is 32.\n * @param {number=} opt_angle Start angle for the first vertex of the polygon in\n *     radians. Default is 0.\n * @return {Polygon} Polygon geometry.\n * @api\n */\nexport function fromCircle(circle, opt_sides, opt_angle) {\n    var sides = opt_sides ? opt_sides : 32;\n    var stride = circle.getStride();\n    var layout = circle.getLayout();\n    var center = circle.getCenter();\n    var arrayLength = stride * (sides + 1);\n    var flatCoordinates = new Array(arrayLength);\n    for (var i = 0; i < arrayLength; i += stride) {\n        flatCoordinates[i] = 0;\n        flatCoordinates[i + 1] = 0;\n        for (var j = 2; j < stride; j++) {\n            flatCoordinates[i + j] = center[j];\n        }\n    }\n    var ends = [flatCoordinates.length];\n    var polygon = new Polygon(flatCoordinates, layout, ends);\n    makeRegular(polygon, center, circle.getRadius(), opt_angle);\n    return polygon;\n}\n/**\n * Modify the coordinates of a polygon to make it a regular polygon.\n * @param {Polygon} polygon Polygon geometry.\n * @param {import(\"../coordinate.js\").Coordinate} center Center of the regular polygon.\n * @param {number} radius Radius of the regular polygon.\n * @param {number=} opt_angle Start angle for the first vertex of the polygon in\n *     radians. Default is 0.\n */\nexport function makeRegular(polygon, center, radius, opt_angle) {\n    var flatCoordinates = polygon.getFlatCoordinates();\n    var stride = polygon.getStride();\n    var sides = flatCoordinates.length / stride - 1;\n    var startAngle = opt_angle ? opt_angle : 0;\n    for (var i = 0; i <= sides; ++i) {\n        var offset = i * stride;\n        var angle = startAngle + (modulo(i, sides) * 2 * Math.PI / sides);\n        flatCoordinates[offset] = center[0] + (radius * Math.cos(angle));\n        flatCoordinates[offset + 1] = center[1] + (radius * Math.sin(angle));\n    }\n    polygon.changed();\n}\n//# sourceMappingURL=Polygon.js.map","/**\n * @module ol/has\n */\nvar ua = typeof navigator !== 'undefined' ?\n    navigator.userAgent.toLowerCase() : '';\n/**\n * User agent string says we are dealing with Firefox as browser.\n * @type {boolean}\n */\nexport var FIREFOX = ua.indexOf('firefox') !== -1;\n/**\n * User agent string says we are dealing with Safari as browser.\n * @type {boolean}\n */\nexport var SAFARI = ua.indexOf('safari') !== -1 && ua.indexOf('chrom') == -1;\n/**\n * User agent string says we are dealing with a WebKit engine.\n * @type {boolean}\n */\nexport var WEBKIT = ua.indexOf('webkit') !== -1 && ua.indexOf('edge') == -1;\n/**\n * User agent string says we are dealing with a Mac as platform.\n * @type {boolean}\n */\nexport var MAC = ua.indexOf('macintosh') !== -1;\n/**\n * The ratio between physical pixels and device-independent pixels\n * (dips) on the device (`window.devicePixelRatio`).\n * @const\n * @type {number}\n * @api\n */\nexport var DEVICE_PIXEL_RATIO = window.devicePixelRatio || 1;\n/**\n * Is HTML5 geolocation supported in the current browser?\n * @const\n * @type {boolean}\n * @api\n */\nexport var GEOLOCATION = 'geolocation' in navigator;\n/**\n * True if browser supports touch events.\n * @const\n * @type {boolean}\n * @api\n */\nexport var TOUCH = 'ontouchstart' in window;\n/**\n * True if browser supports pointer events.\n * @const\n * @type {boolean}\n */\nexport var POINTER = 'PointerEvent' in window;\n/**\n * True if browser supports ms pointer events (IE 10).\n * @const\n * @type {boolean}\n */\nexport var MSPOINTER = !!(navigator.msPointerEnabled);\nexport { HAS as WEBGL } from './webgl.js';\n//# sourceMappingURL=has.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/Geolocation\n */\nimport BaseObject, { getChangeEventType } from './Object.js';\nimport { listen } from './events.js';\nimport Event from './events/Event.js';\nimport EventType from './events/EventType.js';\nimport { circular as circularPolygon } from './geom/Polygon.js';\nimport { GEOLOCATION } from './has.js';\nimport { toRadians } from './math.js';\nimport { get as getProjection, getTransformFromProjections, identityTransform } from './proj.js';\n/**\n * @enum {string}\n */\nvar Property = {\n    ACCURACY: 'accuracy',\n    ACCURACY_GEOMETRY: 'accuracyGeometry',\n    ALTITUDE: 'altitude',\n    ALTITUDE_ACCURACY: 'altitudeAccuracy',\n    HEADING: 'heading',\n    POSITION: 'position',\n    PROJECTION: 'projection',\n    SPEED: 'speed',\n    TRACKING: 'tracking',\n    TRACKING_OPTIONS: 'trackingOptions'\n};\n/**\n * @classdesc\n * Events emitted on Geolocation error.\n */\nvar GeolocationError = /** @class */ (function (_super) {\n    __extends(GeolocationError, _super);\n    /**\n     * @param {PositionError} error error object.\n     */\n    function GeolocationError(error) {\n        var _this = _super.call(this, EventType.ERROR) || this;\n        /**\n         * @type {number}\n         */\n        _this.code = error.code;\n        /**\n         * @type {string}\n         */\n        _this.message = error.message;\n        return _this;\n    }\n    return GeolocationError;\n}(Event));\n/**\n * @typedef {Object} Options\n * @property {boolean} [tracking=false] Start Tracking right after\n * instantiation.\n * @property {PositionOptions} [trackingOptions] Tracking options.\n * See http://www.w3.org/TR/geolocation-API/#position_options_interface.\n * @property {import(\"./proj.js\").ProjectionLike} [projection] The projection the position\n * is reported in.\n */\n/**\n * @classdesc\n * Helper class for providing HTML5 Geolocation capabilities.\n * The [Geolocation API](http://www.w3.org/TR/geolocation-API/)\n * is used to locate a user's position.\n *\n * To get notified of position changes, register a listener for the generic\n * `change` event on your instance of {@link module:ol/Geolocation~Geolocation}.\n *\n * Example:\n *\n *     var geolocation = new Geolocation({\n *       // take the projection to use from the map's view\n *       projection: view.getProjection()\n *     });\n *     // listen to changes in position\n *     geolocation.on('change', function(evt) {\n *       window.console.log(geolocation.getPosition());\n *     });\n *\n * @fires error\n * @api\n */\nvar Geolocation = /** @class */ (function (_super) {\n    __extends(Geolocation, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function Geolocation(opt_options) {\n        var _this = _super.call(this) || this;\n        var options = opt_options || {};\n        /**\n         * The unprojected (EPSG:4326) device position.\n         * @private\n         * @type {import(\"./coordinate.js\").Coordinate}\n         */\n        _this.position_ = null;\n        /**\n         * @private\n         * @type {import(\"./proj.js\").TransformFunction}\n         */\n        _this.transform_ = identityTransform;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.watchId_ = undefined;\n        listen(_this, getChangeEventType(Property.PROJECTION), _this.handleProjectionChanged_, _this);\n        listen(_this, getChangeEventType(Property.TRACKING), _this.handleTrackingChanged_, _this);\n        if (options.projection !== undefined) {\n            _this.setProjection(options.projection);\n        }\n        if (options.trackingOptions !== undefined) {\n            _this.setTrackingOptions(options.trackingOptions);\n        }\n        _this.setTracking(options.tracking !== undefined ? options.tracking : false);\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    Geolocation.prototype.disposeInternal = function () {\n        this.setTracking(false);\n        _super.prototype.disposeInternal.call(this);\n    };\n    /**\n     * @private\n     */\n    Geolocation.prototype.handleProjectionChanged_ = function () {\n        var projection = this.getProjection();\n        if (projection) {\n            this.transform_ = getTransformFromProjections(getProjection('EPSG:4326'), projection);\n            if (this.position_) {\n                this.set(Property.POSITION, this.transform_(this.position_));\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    Geolocation.prototype.handleTrackingChanged_ = function () {\n        if (GEOLOCATION) {\n            var tracking = this.getTracking();\n            if (tracking && this.watchId_ === undefined) {\n                this.watchId_ = navigator.geolocation.watchPosition(this.positionChange_.bind(this), this.positionError_.bind(this), this.getTrackingOptions());\n            }\n            else if (!tracking && this.watchId_ !== undefined) {\n                navigator.geolocation.clearWatch(this.watchId_);\n                this.watchId_ = undefined;\n            }\n        }\n    };\n    /**\n     * @private\n     * @param {Position} position position event.\n     */\n    Geolocation.prototype.positionChange_ = function (position) {\n        var coords = position.coords;\n        this.set(Property.ACCURACY, coords.accuracy);\n        this.set(Property.ALTITUDE, coords.altitude === null ? undefined : coords.altitude);\n        this.set(Property.ALTITUDE_ACCURACY, coords.altitudeAccuracy === null ?\n            undefined : coords.altitudeAccuracy);\n        this.set(Property.HEADING, coords.heading === null ?\n            undefined : toRadians(coords.heading));\n        if (!this.position_) {\n            this.position_ = [coords.longitude, coords.latitude];\n        }\n        else {\n            this.position_[0] = coords.longitude;\n            this.position_[1] = coords.latitude;\n        }\n        var projectedPosition = this.transform_(this.position_);\n        this.set(Property.POSITION, projectedPosition);\n        this.set(Property.SPEED, coords.speed === null ? undefined : coords.speed);\n        var geometry = circularPolygon(this.position_, coords.accuracy);\n        geometry.applyTransform(this.transform_);\n        this.set(Property.ACCURACY_GEOMETRY, geometry);\n        this.changed();\n    };\n    /**\n     * Triggered when the Geolocation returns an error.\n     * @event error\n     * @api\n     */\n    /**\n     * @private\n     * @param {PositionError} error error object.\n     */\n    Geolocation.prototype.positionError_ = function (error) {\n        this.setTracking(false);\n        this.dispatchEvent(new GeolocationError(error));\n    };\n    /**\n     * Get the accuracy of the position in meters.\n     * @return {number|undefined} The accuracy of the position measurement in\n     *     meters.\n     * @observable\n     * @api\n     */\n    Geolocation.prototype.getAccuracy = function () {\n        return /** @type {number|undefined} */ (this.get(Property.ACCURACY));\n    };\n    /**\n     * Get a geometry of the position accuracy.\n     * @return {?import(\"./geom/Polygon.js\").default} A geometry of the position accuracy.\n     * @observable\n     * @api\n     */\n    Geolocation.prototype.getAccuracyGeometry = function () {\n        return (\n        /** @type {?import(\"./geom/Polygon.js\").default} */ (this.get(Property.ACCURACY_GEOMETRY) || null));\n    };\n    /**\n     * Get the altitude associated with the position.\n     * @return {number|undefined} The altitude of the position in meters above mean\n     *     sea level.\n     * @observable\n     * @api\n     */\n    Geolocation.prototype.getAltitude = function () {\n        return /** @type {number|undefined} */ (this.get(Property.ALTITUDE));\n    };\n    /**\n     * Get the altitude accuracy of the position.\n     * @return {number|undefined} The accuracy of the altitude measurement in\n     *     meters.\n     * @observable\n     * @api\n     */\n    Geolocation.prototype.getAltitudeAccuracy = function () {\n        return /** @type {number|undefined} */ (this.get(Property.ALTITUDE_ACCURACY));\n    };\n    /**\n     * Get the heading as radians clockwise from North.\n     * Note: depending on the browser, the heading is only defined if the `enableHighAccuracy`\n     * is set to `true` in the tracking options.\n     * @return {number|undefined} The heading of the device in radians from north.\n     * @observable\n     * @api\n     */\n    Geolocation.prototype.getHeading = function () {\n        return /** @type {number|undefined} */ (this.get(Property.HEADING));\n    };\n    /**\n     * Get the position of the device.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} The current position of the device reported\n     *     in the current projection.\n     * @observable\n     * @api\n     */\n    Geolocation.prototype.getPosition = function () {\n        return (\n        /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (this.get(Property.POSITION)));\n    };\n    /**\n     * Get the projection associated with the position.\n     * @return {import(\"./proj/Projection.js\").default|undefined} The projection the position is\n     *     reported in.\n     * @observable\n     * @api\n     */\n    Geolocation.prototype.getProjection = function () {\n        return (\n        /** @type {import(\"./proj/Projection.js\").default|undefined} */ (this.get(Property.PROJECTION)));\n    };\n    /**\n     * Get the speed in meters per second.\n     * @return {number|undefined} The instantaneous speed of the device in meters\n     *     per second.\n     * @observable\n     * @api\n     */\n    Geolocation.prototype.getSpeed = function () {\n        return /** @type {number|undefined} */ (this.get(Property.SPEED));\n    };\n    /**\n     * Determine if the device location is being tracked.\n     * @return {boolean} The device location is being tracked.\n     * @observable\n     * @api\n     */\n    Geolocation.prototype.getTracking = function () {\n        return /** @type {boolean} */ (this.get(Property.TRACKING));\n    };\n    /**\n     * Get the tracking options.\n     * See http://www.w3.org/TR/geolocation-API/#position-options.\n     * @return {PositionOptions|undefined} PositionOptions as defined by\n     *     the [HTML5 Geolocation spec\n     *     ](http://www.w3.org/TR/geolocation-API/#position_options_interface).\n     * @observable\n     * @api\n     */\n    Geolocation.prototype.getTrackingOptions = function () {\n        return /** @type {PositionOptions|undefined} */ (this.get(Property.TRACKING_OPTIONS));\n    };\n    /**\n     * Set the projection to use for transforming the coordinates.\n     * @param {import(\"./proj.js\").ProjectionLike} projection The projection the position is\n     *     reported in.\n     * @observable\n     * @api\n     */\n    Geolocation.prototype.setProjection = function (projection) {\n        this.set(Property.PROJECTION, getProjection(projection));\n    };\n    /**\n     * Enable or disable tracking.\n     * @param {boolean} tracking Enable tracking.\n     * @observable\n     * @api\n     */\n    Geolocation.prototype.setTracking = function (tracking) {\n        this.set(Property.TRACKING, tracking);\n    };\n    /**\n     * Set the tracking options.\n     * See http://www.w3.org/TR/geolocation-API/#position-options.\n     * @param {PositionOptions} options PositionOptions as defined by the\n     *     [HTML5 Geolocation spec\n     *     ](http://www.w3.org/TR/geolocation-API/#position_options_interface).\n     * @observable\n     * @api\n     */\n    Geolocation.prototype.setTrackingOptions = function (options) {\n        this.set(Property.TRACKING_OPTIONS, options);\n    };\n    return Geolocation;\n}(BaseObject));\nexport default Geolocation;\n//# sourceMappingURL=Geolocation.js.map","/**\n * @module ol/Kinetic\n */\n/**\n * @classdesc\n * Implementation of inertial deceleration for map movement.\n *\n * @api\n */\nvar Kinetic = /** @class */ (function () {\n    /**\n     * @param {number} decay Rate of decay (must be negative).\n     * @param {number} minVelocity Minimum velocity (pixels/millisecond).\n     * @param {number} delay Delay to consider to calculate the kinetic\n     *     initial values (milliseconds).\n     */\n    function Kinetic(decay, minVelocity, delay) {\n        /**\n         * @private\n         * @type {number}\n         */\n        this.decay_ = decay;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.minVelocity_ = minVelocity;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.delay_ = delay;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        this.points_ = [];\n        /**\n         * @private\n         * @type {number}\n         */\n        this.angle_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.initialVelocity_ = 0;\n    }\n    /**\n     * FIXME empty description for jsdoc\n     */\n    Kinetic.prototype.begin = function () {\n        this.points_.length = 0;\n        this.angle_ = 0;\n        this.initialVelocity_ = 0;\n    };\n    /**\n     * @param {number} x X.\n     * @param {number} y Y.\n     */\n    Kinetic.prototype.update = function (x, y) {\n        this.points_.push(x, y, Date.now());\n    };\n    /**\n     * @return {boolean} Whether we should do kinetic animation.\n     */\n    Kinetic.prototype.end = function () {\n        if (this.points_.length < 6) {\n            // at least 2 points are required (i.e. there must be at least 6 elements\n            // in the array)\n            return false;\n        }\n        var delay = Date.now() - this.delay_;\n        var lastIndex = this.points_.length - 3;\n        if (this.points_[lastIndex + 2] < delay) {\n            // the last tracked point is too old, which means that the user stopped\n            // panning before releasing the map\n            return false;\n        }\n        // get the first point which still falls into the delay time\n        var firstIndex = lastIndex - 3;\n        while (firstIndex > 0 && this.points_[firstIndex + 2] > delay) {\n            firstIndex -= 3;\n        }\n        var duration = this.points_[lastIndex + 2] - this.points_[firstIndex + 2];\n        // we don't want a duration of 0 (divide by zero)\n        // we also make sure the user panned for a duration of at least one frame\n        // (1/60s) to compute sane displacement values\n        if (duration < 1000 / 60) {\n            return false;\n        }\n        var dx = this.points_[lastIndex] - this.points_[firstIndex];\n        var dy = this.points_[lastIndex + 1] - this.points_[firstIndex + 1];\n        this.angle_ = Math.atan2(dy, dx);\n        this.initialVelocity_ = Math.sqrt(dx * dx + dy * dy) / duration;\n        return this.initialVelocity_ > this.minVelocity_;\n    };\n    /**\n     * @return {number} Total distance travelled (pixels).\n     */\n    Kinetic.prototype.getDistance = function () {\n        return (this.minVelocity_ - this.initialVelocity_) / this.decay_;\n    };\n    /**\n     * @return {number} Angle of the kinetic panning animation (radians).\n     */\n    Kinetic.prototype.getAngle = function () {\n        return this.angle_;\n    };\n    return Kinetic;\n}());\nexport default Kinetic;\n//# sourceMappingURL=Kinetic.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/MapEvent\n */\nimport Event from './events/Event.js';\n/**\n * @classdesc\n * Events emitted as map events are instances of this type.\n * See {@link module:ol/PluggableMap~PluggableMap} for which events trigger a map event.\n */\nvar MapEvent = /** @class */ (function (_super) {\n    __extends(MapEvent, _super);\n    /**\n     * @param {string} type Event type.\n     * @param {import(\"./PluggableMap.js\").default} map Map.\n     * @param {?import(\"./PluggableMap.js\").FrameState=} opt_frameState Frame state.\n     */\n    function MapEvent(type, map, opt_frameState) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * The map where the event occurred.\n         * @type {import(\"./PluggableMap.js\").default}\n         * @api\n         */\n        _this.map = map;\n        /**\n         * The frame state at the time of the event.\n         * @type {?import(\"./PluggableMap.js\").FrameState}\n         * @api\n         */\n        _this.frameState = opt_frameState !== undefined ? opt_frameState : null;\n        return _this;\n    }\n    return MapEvent;\n}(Event));\nexport default MapEvent;\n//# sourceMappingURL=MapEvent.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/MapBrowserEvent\n */\nimport MapEvent from './MapEvent.js';\n/**\n * @classdesc\n * Events emitted as map browser events are instances of this type.\n * See {@link module:ol/PluggableMap~PluggableMap} for which events trigger a map browser event.\n */\nvar MapBrowserEvent = /** @class */ (function (_super) {\n    __extends(MapBrowserEvent, _super);\n    /**\n     * @param {string} type Event type.\n     * @param {import(\"./PluggableMap.js\").default} map Map.\n     * @param {Event} browserEvent Browser event.\n     * @param {boolean=} opt_dragging Is the map currently being dragged?\n     * @param {?import(\"./PluggableMap.js\").FrameState=} opt_frameState Frame state.\n     */\n    function MapBrowserEvent(type, map, browserEvent, opt_dragging, opt_frameState) {\n        var _this = _super.call(this, type, map, opt_frameState) || this;\n        /**\n         * The original browser event.\n         * @const\n         * @type {Event}\n         * @api\n         */\n        _this.originalEvent = browserEvent;\n        /**\n         * The map pixel relative to the viewport corresponding to the original browser event.\n         * @type {import(\"./pixel.js\").Pixel}\n         * @api\n         */\n        _this.pixel = map.getEventPixel(browserEvent);\n        /**\n         * The coordinate in view projection corresponding to the original browser event.\n         * @type {import(\"./coordinate.js\").Coordinate}\n         * @api\n         */\n        _this.coordinate = map.getCoordinateFromPixel(_this.pixel);\n        /**\n         * Indicates if the map is currently being dragged. Only set for\n         * `POINTERDRAG` and `POINTERMOVE` events. Default is `false`.\n         *\n         * @type {boolean}\n         * @api\n         */\n        _this.dragging = opt_dragging !== undefined ? opt_dragging : false;\n        return _this;\n    }\n    /**\n     * Prevents the default browser action.\n     * See https://developer.mozilla.org/en-US/docs/Web/API/event.preventDefault.\n     * @override\n     * @api\n     */\n    MapBrowserEvent.prototype.preventDefault = function () {\n        _super.prototype.preventDefault.call(this);\n        this.originalEvent.preventDefault();\n    };\n    /**\n     * Prevents further propagation of the current event.\n     * See https://developer.mozilla.org/en-US/docs/Web/API/event.stopPropagation.\n     * @override\n     * @api\n     */\n    MapBrowserEvent.prototype.stopPropagation = function () {\n        _super.prototype.stopPropagation.call(this);\n        this.originalEvent.stopPropagation();\n    };\n    return MapBrowserEvent;\n}(MapEvent));\nexport default MapBrowserEvent;\n//# sourceMappingURL=MapBrowserEvent.js.map","/**\n * @module ol/MapBrowserEventType\n */\nimport EventType from './events/EventType.js';\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n    /**\n     * A true single click with no dragging and no double click. Note that this\n     * event is delayed by 250 ms to ensure that it is not a double click.\n     * @event module:ol/MapBrowserEvent~MapBrowserEvent#singleclick\n     * @api\n     */\n    SINGLECLICK: 'singleclick',\n    /**\n     * A click with no dragging. A double click will fire two of this.\n     * @event module:ol/MapBrowserEvent~MapBrowserEvent#click\n     * @api\n     */\n    CLICK: EventType.CLICK,\n    /**\n     * A true double click, with no dragging.\n     * @event module:ol/MapBrowserEvent~MapBrowserEvent#dblclick\n     * @api\n     */\n    DBLCLICK: EventType.DBLCLICK,\n    /**\n     * Triggered when a pointer is dragged.\n     * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointerdrag\n     * @api\n     */\n    POINTERDRAG: 'pointerdrag',\n    /**\n     * Triggered when a pointer is moved. Note that on touch devices this is\n     * triggered when the map is panned, so is not the same as mousemove.\n     * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointermove\n     * @api\n     */\n    POINTERMOVE: 'pointermove',\n    POINTERDOWN: 'pointerdown',\n    POINTERUP: 'pointerup',\n    POINTEROVER: 'pointerover',\n    POINTEROUT: 'pointerout',\n    POINTERENTER: 'pointerenter',\n    POINTERLEAVE: 'pointerleave',\n    POINTERCANCEL: 'pointercancel'\n};\n//# sourceMappingURL=MapBrowserEventType.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/MapBrowserPointerEvent\n */\nimport MapBrowserEvent from './MapBrowserEvent.js';\nvar MapBrowserPointerEvent = /** @class */ (function (_super) {\n    __extends(MapBrowserPointerEvent, _super);\n    /**\n     * @param {string} type Event type.\n     * @param {import(\"./PluggableMap.js\").default} map Map.\n     * @param {import(\"./pointer/PointerEvent.js\").default} pointerEvent Pointer event.\n     * @param {boolean=} opt_dragging Is the map currently being dragged?\n     * @param {?import(\"./PluggableMap.js\").FrameState=} opt_frameState Frame state.\n     */\n    function MapBrowserPointerEvent(type, map, pointerEvent, opt_dragging, opt_frameState) {\n        var _this = _super.call(this, type, map, pointerEvent.originalEvent, opt_dragging, opt_frameState) || this;\n        /**\n         * @const\n         * @type {import(\"./pointer/PointerEvent.js\").default}\n         */\n        _this.pointerEvent = pointerEvent;\n        return _this;\n    }\n    return MapBrowserPointerEvent;\n}(MapBrowserEvent));\nexport default MapBrowserPointerEvent;\n//# sourceMappingURL=MapBrowserPointerEvent.js.map","/**\n * @module ol/pointer/EventType\n */\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n    POINTERMOVE: 'pointermove',\n    POINTERDOWN: 'pointerdown',\n    POINTERUP: 'pointerup',\n    POINTEROVER: 'pointerover',\n    POINTEROUT: 'pointerout',\n    POINTERENTER: 'pointerenter',\n    POINTERLEAVE: 'pointerleave',\n    POINTERCANCEL: 'pointercancel'\n};\n//# sourceMappingURL=EventType.js.map","/**\n * @module ol/pointer/EventSource\n */\nvar EventSource = /** @class */ (function () {\n    /**\n     * @param {import(\"./PointerEventHandler.js\").default} dispatcher Event handler.\n     * @param {!Object<string, function(Event): void>} mapping Event mapping.\n     */\n    function EventSource(dispatcher, mapping) {\n        /**\n         * @type {import(\"./PointerEventHandler.js\").default}\n         */\n        this.dispatcher = dispatcher;\n        /**\n         * @private\n         * @const\n         * @type {!Object<string, function(Event): void>}\n         */\n        this.mapping_ = mapping;\n    }\n    /**\n     * List of events supported by this source.\n     * @return {Array<string>} Event names\n     */\n    EventSource.prototype.getEvents = function () {\n        return Object.keys(this.mapping_);\n    };\n    /**\n     * Returns the handler that should handle a given event type.\n     * @param {string} eventType The event type.\n     * @return {function(Event)} Handler\n     */\n    EventSource.prototype.getHandlerForEvent = function (eventType) {\n        return this.mapping_[eventType];\n    };\n    return EventSource;\n}());\nexport default EventSource;\n//# sourceMappingURL=EventSource.js.map","/**\n * @module ol/pointer/MouseSource\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n// Based on https://github.com/Polymer/PointerEvents\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\nimport EventSource from './EventSource.js';\n/**\n * @type {number}\n */\nexport var POINTER_ID = 1;\n/**\n * @type {string}\n */\nexport var POINTER_TYPE = 'mouse';\n/**\n * Radius around touchend that swallows mouse events.\n *\n * @type {number}\n */\nvar DEDUP_DIST = 25;\n/**\n * Handler for `mousedown`.\n *\n * @this {MouseSource}\n * @param {MouseEvent} inEvent The in event.\n */\nfunction mousedown(inEvent) {\n    if (!this.isEventSimulatedFromTouch_(inEvent)) {\n        // TODO(dfreedman) workaround for some elements not sending mouseup\n        // http://crbug/149091\n        if (POINTER_ID.toString() in this.pointerMap) {\n            this.cancel(inEvent);\n        }\n        var e = prepareEvent(inEvent, this.dispatcher);\n        this.pointerMap[POINTER_ID.toString()] = inEvent;\n        this.dispatcher.down(e, inEvent);\n    }\n}\n/**\n * Handler for `mousemove`.\n *\n * @this {MouseSource}\n * @param {MouseEvent} inEvent The in event.\n */\nfunction mousemove(inEvent) {\n    if (!this.isEventSimulatedFromTouch_(inEvent)) {\n        var e = prepareEvent(inEvent, this.dispatcher);\n        this.dispatcher.move(e, inEvent);\n    }\n}\n/**\n * Handler for `mouseup`.\n *\n * @this {MouseSource}\n * @param {MouseEvent} inEvent The in event.\n */\nfunction mouseup(inEvent) {\n    if (!this.isEventSimulatedFromTouch_(inEvent)) {\n        var p = this.pointerMap[POINTER_ID.toString()];\n        if (p && p.button === inEvent.button) {\n            var e = prepareEvent(inEvent, this.dispatcher);\n            this.dispatcher.up(e, inEvent);\n            this.cleanupMouse();\n        }\n    }\n}\n/**\n * Handler for `mouseover`.\n *\n * @this {MouseSource}\n * @param {MouseEvent} inEvent The in event.\n */\nfunction mouseover(inEvent) {\n    if (!this.isEventSimulatedFromTouch_(inEvent)) {\n        var e = prepareEvent(inEvent, this.dispatcher);\n        this.dispatcher.enterOver(e, inEvent);\n    }\n}\n/**\n * Handler for `mouseout`.\n *\n * @this {MouseSource}\n * @param {MouseEvent} inEvent The in event.\n */\nfunction mouseout(inEvent) {\n    if (!this.isEventSimulatedFromTouch_(inEvent)) {\n        var e = prepareEvent(inEvent, this.dispatcher);\n        this.dispatcher.leaveOut(e, inEvent);\n    }\n}\nvar MouseSource = /** @class */ (function (_super) {\n    __extends(MouseSource, _super);\n    /**\n     * @param {import(\"./PointerEventHandler.js\").default} dispatcher Event handler.\n     */\n    function MouseSource(dispatcher) {\n        var _this = this;\n        var mapping = {\n            'mousedown': mousedown,\n            'mousemove': mousemove,\n            'mouseup': mouseup,\n            'mouseover': mouseover,\n            'mouseout': mouseout\n        };\n        _this = _super.call(this, dispatcher, mapping) || this;\n        /**\n         * @const\n         * @type {!Object<string, Event|Object>}\n         */\n        _this.pointerMap = dispatcher.pointerMap;\n        /**\n         * @const\n         * @type {Array<import(\"../pixel.js\").Pixel>}\n         */\n        _this.lastTouches = [];\n        return _this;\n    }\n    /**\n     * Detect if a mouse event was simulated from a touch by\n     * checking if previously there was a touch event at the\n     * same position.\n     *\n     * FIXME - Known problem with the native Android browser on\n     * Samsung GT-I9100 (Android 4.1.2):\n     * In case the page is scrolled, this function does not work\n     * correctly when a canvas is used (WebGL or canvas renderer).\n     * Mouse listeners on canvas elements (for this browser), create\n     * two mouse events: One 'good' and one 'bad' one (on other browsers or\n     * when a div is used, there is only one event). For the 'bad' one,\n     * clientX/clientY and also pageX/pageY are wrong when the page\n     * is scrolled. Because of that, this function can not detect if\n     * the events were simulated from a touch event. As result, a\n     * pointer event at a wrong position is dispatched, which confuses\n     * the map interactions.\n     * It is unclear, how one can get the correct position for the event\n     * or detect that the positions are invalid.\n     *\n     * @private\n     * @param {MouseEvent} inEvent The in event.\n     * @return {boolean} True, if the event was generated by a touch.\n     */\n    MouseSource.prototype.isEventSimulatedFromTouch_ = function (inEvent) {\n        var lts = this.lastTouches;\n        var x = inEvent.clientX;\n        var y = inEvent.clientY;\n        for (var i = 0, l = lts.length, t = void 0; i < l && (t = lts[i]); i++) {\n            // simulated mouse events will be swallowed near a primary touchend\n            var dx = Math.abs(x - t[0]);\n            var dy = Math.abs(y - t[1]);\n            if (dx <= DEDUP_DIST && dy <= DEDUP_DIST) {\n                return true;\n            }\n        }\n        return false;\n    };\n    /**\n     * Dispatches a `pointercancel` event.\n     *\n     * @param {Event} inEvent The in event.\n     */\n    MouseSource.prototype.cancel = function (inEvent) {\n        var e = prepareEvent(inEvent, this.dispatcher);\n        this.dispatcher.cancel(e, inEvent);\n        this.cleanupMouse();\n    };\n    /**\n     * Remove the mouse from the list of active pointers.\n     */\n    MouseSource.prototype.cleanupMouse = function () {\n        delete this.pointerMap[POINTER_ID.toString()];\n    };\n    return MouseSource;\n}(EventSource));\n/**\n * Creates a copy of the original event that will be used\n * for the fake pointer event.\n *\n * @param {Event} inEvent The in event.\n * @param {import(\"./PointerEventHandler.js\").default} dispatcher Event handler.\n * @return {Object} The copied event.\n */\nexport function prepareEvent(inEvent, dispatcher) {\n    var e = dispatcher.cloneEvent(inEvent, inEvent);\n    // forward mouse preventDefault\n    var pd = e.preventDefault;\n    e.preventDefault = function () {\n        inEvent.preventDefault();\n        pd();\n    };\n    e.pointerId = POINTER_ID;\n    e.isPrimary = true;\n    e.pointerType = POINTER_TYPE;\n    return e;\n}\nexport default MouseSource;\n//# sourceMappingURL=MouseSource.js.map","/**\n * @module ol/pointer/MsSource\n */\n// Based on https://github.com/Polymer/PointerEvents\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\nimport EventSource from './EventSource.js';\n/**\n * @const\n * @type {Array<string>}\n */\nvar POINTER_TYPES = [\n    '',\n    'unavailable',\n    'touch',\n    'pen',\n    'mouse'\n];\n/**\n * Handler for `msPointerDown`.\n *\n * @this {MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msPointerDown(inEvent) {\n    this.pointerMap[inEvent.pointerId.toString()] = inEvent;\n    var e = this.prepareEvent_(inEvent);\n    this.dispatcher.down(e, inEvent);\n}\n/**\n * Handler for `msPointerMove`.\n *\n * @this {MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msPointerMove(inEvent) {\n    var e = this.prepareEvent_(inEvent);\n    this.dispatcher.move(e, inEvent);\n}\n/**\n * Handler for `msPointerUp`.\n *\n * @this {MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msPointerUp(inEvent) {\n    var e = this.prepareEvent_(inEvent);\n    this.dispatcher.up(e, inEvent);\n    this.cleanup(inEvent.pointerId);\n}\n/**\n * Handler for `msPointerOut`.\n *\n * @this {MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msPointerOut(inEvent) {\n    var e = this.prepareEvent_(inEvent);\n    this.dispatcher.leaveOut(e, inEvent);\n}\n/**\n * Handler for `msPointerOver`.\n *\n * @this {MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msPointerOver(inEvent) {\n    var e = this.prepareEvent_(inEvent);\n    this.dispatcher.enterOver(e, inEvent);\n}\n/**\n * Handler for `msPointerCancel`.\n *\n * @this {MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msPointerCancel(inEvent) {\n    var e = this.prepareEvent_(inEvent);\n    this.dispatcher.cancel(e, inEvent);\n    this.cleanup(inEvent.pointerId);\n}\n/**\n * Handler for `msLostPointerCapture`.\n *\n * @this {MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msLostPointerCapture(inEvent) {\n    var e = this.dispatcher.makeEvent('lostpointercapture', inEvent, inEvent);\n    this.dispatcher.dispatchEvent(e);\n}\n/**\n * Handler for `msGotPointerCapture`.\n *\n * @this {MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msGotPointerCapture(inEvent) {\n    var e = this.dispatcher.makeEvent('gotpointercapture', inEvent, inEvent);\n    this.dispatcher.dispatchEvent(e);\n}\nvar MsSource = /** @class */ (function (_super) {\n    __extends(MsSource, _super);\n    /**\n     * @param {import(\"./PointerEventHandler.js\").default} dispatcher Event handler.\n     */\n    function MsSource(dispatcher) {\n        var _this = this;\n        var mapping = {\n            'MSPointerDown': msPointerDown,\n            'MSPointerMove': msPointerMove,\n            'MSPointerUp': msPointerUp,\n            'MSPointerOut': msPointerOut,\n            'MSPointerOver': msPointerOver,\n            'MSPointerCancel': msPointerCancel,\n            'MSGotPointerCapture': msGotPointerCapture,\n            'MSLostPointerCapture': msLostPointerCapture\n        };\n        _this = _super.call(this, dispatcher, mapping) || this;\n        /**\n         * @const\n         * @type {!Object<string, MSPointerEvent|Object>}\n         */\n        _this.pointerMap = dispatcher.pointerMap;\n        return _this;\n    }\n    /**\n     * Creates a copy of the original event that will be used\n     * for the fake pointer event.\n     *\n     * @private\n     * @param {MSPointerEvent} inEvent The in event.\n     * @return {Object} The copied event.\n     */\n    MsSource.prototype.prepareEvent_ = function (inEvent) {\n        /** @type {MSPointerEvent|Object} */\n        var e = inEvent;\n        if (typeof inEvent.pointerType === 'number') {\n            e = this.dispatcher.cloneEvent(inEvent, inEvent);\n            e.pointerType = POINTER_TYPES[inEvent.pointerType];\n        }\n        return e;\n    };\n    /**\n     * Remove this pointer from the list of active pointers.\n     * @param {number} pointerId Pointer identifier.\n     */\n    MsSource.prototype.cleanup = function (pointerId) {\n        delete this.pointerMap[pointerId.toString()];\n    };\n    return MsSource;\n}(EventSource));\nexport default MsSource;\n//# sourceMappingURL=MsSource.js.map","/**\n * @module ol/pointer/NativeSource\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n// Based on https://github.com/Polymer/PointerEvents\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\nimport EventSource from './EventSource.js';\n/**\n * Handler for `pointerdown`.\n *\n * @this {NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction pointerDown(inEvent) {\n    this.dispatcher.fireNativeEvent(inEvent);\n}\n/**\n * Handler for `pointermove`.\n *\n * @this {NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction pointerMove(inEvent) {\n    this.dispatcher.fireNativeEvent(inEvent);\n}\n/**\n * Handler for `pointerup`.\n *\n * @this {NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction pointerUp(inEvent) {\n    this.dispatcher.fireNativeEvent(inEvent);\n}\n/**\n * Handler for `pointerout`.\n *\n * @this {NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction pointerOut(inEvent) {\n    this.dispatcher.fireNativeEvent(inEvent);\n}\n/**\n * Handler for `pointerover`.\n *\n * @this {NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction pointerOver(inEvent) {\n    this.dispatcher.fireNativeEvent(inEvent);\n}\n/**\n * Handler for `pointercancel`.\n *\n * @this {NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction pointerCancel(inEvent) {\n    this.dispatcher.fireNativeEvent(inEvent);\n}\n/**\n * Handler for `lostpointercapture`.\n *\n * @this {NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction lostPointerCapture(inEvent) {\n    this.dispatcher.fireNativeEvent(inEvent);\n}\n/**\n * Handler for `gotpointercapture`.\n *\n * @this {NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction gotPointerCapture(inEvent) {\n    this.dispatcher.fireNativeEvent(inEvent);\n}\nvar NativeSource = /** @class */ (function (_super) {\n    __extends(NativeSource, _super);\n    /**\n     * @param {import(\"./PointerEventHandler.js\").default} dispatcher Event handler.\n     */\n    function NativeSource(dispatcher) {\n        var _this = this;\n        var mapping = {\n            'pointerdown': pointerDown,\n            'pointermove': pointerMove,\n            'pointerup': pointerUp,\n            'pointerout': pointerOut,\n            'pointerover': pointerOver,\n            'pointercancel': pointerCancel,\n            'gotpointercapture': gotPointerCapture,\n            'lostpointercapture': lostPointerCapture\n        };\n        _this = _super.call(this, dispatcher, mapping) || this;\n        return _this;\n    }\n    return NativeSource;\n}(EventSource));\nexport default NativeSource;\n//# sourceMappingURL=NativeSource.js.map","/**\n * @module ol/pointer/PointerEvent\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n// Based on https://github.com/Polymer/PointerEvents\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\nimport _Event from '../events/Event.js';\n/**\n * Is the `buttons` property supported?\n * @type {boolean}\n */\nvar HAS_BUTTONS = false;\nvar PointerEvent = /** @class */ (function (_super) {\n    __extends(PointerEvent, _super);\n    /**\n     * A class for pointer events.\n     *\n     * This class is used as an abstraction for mouse events,\n     * touch events and even native pointer events.\n     *\n     * @param {string} type The type of the event to create.\n     * @param {Event} originalEvent The event.\n     * @param {Object<string, ?>=} opt_eventDict An optional dictionary of\n     *    initial event properties.\n     */\n    function PointerEvent(type, originalEvent, opt_eventDict) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * @const\n         * @type {Event}\n         */\n        _this.originalEvent = originalEvent;\n        var eventDict = opt_eventDict ? opt_eventDict : {};\n        /**\n         * @type {number}\n         */\n        _this.buttons = getButtons(eventDict);\n        /**\n         * @type {number}\n         */\n        _this.pressure = getPressure(eventDict, _this.buttons);\n        // MouseEvent related properties\n        /**\n         * @type {boolean}\n         */\n        _this.bubbles = 'bubbles' in eventDict ? eventDict['bubbles'] : false;\n        /**\n         * @type {boolean}\n         */\n        _this.cancelable = 'cancelable' in eventDict ? eventDict['cancelable'] : false;\n        /**\n         * @type {Object}\n         */\n        _this.view = 'view' in eventDict ? eventDict['view'] : null;\n        /**\n         * @type {number}\n         */\n        _this.detail = 'detail' in eventDict ? eventDict['detail'] : null;\n        /**\n         * @type {number}\n         */\n        _this.screenX = 'screenX' in eventDict ? eventDict['screenX'] : 0;\n        /**\n         * @type {number}\n         */\n        _this.screenY = 'screenY' in eventDict ? eventDict['screenY'] : 0;\n        /**\n         * @type {number}\n         */\n        _this.clientX = 'clientX' in eventDict ? eventDict['clientX'] : 0;\n        /**\n         * @type {number}\n         */\n        _this.clientY = 'clientY' in eventDict ? eventDict['clientY'] : 0;\n        /**\n         * @type {boolean}\n         */\n        _this.ctrlKey = 'ctrlKey' in eventDict ? eventDict['ctrlKey'] : false;\n        /**\n         * @type {boolean}\n         */\n        _this.altKey = 'altKey' in eventDict ? eventDict['altKey'] : false;\n        /**\n         * @type {boolean}\n         */\n        _this.shiftKey = 'shiftKey' in eventDict ? eventDict['shiftKey'] : false;\n        /**\n         * @type {boolean}\n         */\n        _this.metaKey = 'metaKey' in eventDict ? eventDict['metaKey'] : false;\n        /**\n         * @type {number}\n         */\n        _this.button = 'button' in eventDict ? eventDict['button'] : 0;\n        /**\n         * @type {Node}\n         */\n        _this.relatedTarget = 'relatedTarget' in eventDict ?\n            eventDict['relatedTarget'] : null;\n        // PointerEvent related properties\n        /**\n         * @const\n         * @type {number}\n         */\n        _this.pointerId = 'pointerId' in eventDict ? eventDict['pointerId'] : 0;\n        /**\n         * @type {number}\n         */\n        _this.width = 'width' in eventDict ? eventDict['width'] : 0;\n        /**\n         * @type {number}\n         */\n        _this.height = 'height' in eventDict ? eventDict['height'] : 0;\n        /**\n         * @type {number}\n         */\n        _this.tiltX = 'tiltX' in eventDict ? eventDict['tiltX'] : 0;\n        /**\n         * @type {number}\n         */\n        _this.tiltY = 'tiltY' in eventDict ? eventDict['tiltY'] : 0;\n        /**\n         * @type {string}\n         */\n        _this.pointerType = 'pointerType' in eventDict ? eventDict['pointerType'] : '';\n        /**\n         * @type {number}\n         */\n        _this.hwTimestamp = 'hwTimestamp' in eventDict ? eventDict['hwTimestamp'] : 0;\n        /**\n         * @type {boolean}\n         */\n        _this.isPrimary = 'isPrimary' in eventDict ? eventDict['isPrimary'] : false;\n        // keep the semantics of preventDefault\n        if (originalEvent.preventDefault) {\n            _this.preventDefault = function () {\n                originalEvent.preventDefault();\n            };\n        }\n        return _this;\n    }\n    return PointerEvent;\n}(_Event));\n/**\n * @param {Object<string, ?>} eventDict The event dictionary.\n * @return {number} Button indicator.\n */\nfunction getButtons(eventDict) {\n    // According to the w3c spec,\n    // http://www.w3.org/TR/DOM-Level-3-Events/#events-MouseEvent-button\n    // MouseEvent.button == 0 can mean either no mouse button depressed, or the\n    // left mouse button depressed.\n    //\n    // As of now, the only way to distinguish between the two states of\n    // MouseEvent.button is by using the deprecated MouseEvent.which property, as\n    // this maps mouse buttons to positive integers > 0, and uses 0 to mean that\n    // no mouse button is held.\n    //\n    // MouseEvent.which is derived from MouseEvent.button at MouseEvent creation,\n    // but initMouseEvent does not expose an argument with which to set\n    // MouseEvent.which. Calling initMouseEvent with a buttonArg of 0 will set\n    // MouseEvent.button == 0 and MouseEvent.which == 1, breaking the expectations\n    // of app developers.\n    //\n    // The only way to propagate the correct state of MouseEvent.which and\n    // MouseEvent.button to a new MouseEvent.button == 0 and MouseEvent.which == 0\n    // is to call initMouseEvent with a buttonArg value of -1.\n    //\n    // This is fixed with DOM Level 4's use of buttons\n    var buttons;\n    if (eventDict.buttons || HAS_BUTTONS) {\n        buttons = eventDict.buttons;\n    }\n    else {\n        switch (eventDict.which) {\n            case 1:\n                buttons = 1;\n                break;\n            case 2:\n                buttons = 4;\n                break;\n            case 3:\n                buttons = 2;\n                break;\n            default: buttons = 0;\n        }\n    }\n    return buttons;\n}\n/**\n * @param {Object<string, ?>} eventDict The event dictionary.\n * @param {number} buttons Button indicator.\n * @return {number} The pressure.\n */\nfunction getPressure(eventDict, buttons) {\n    // Spec requires that pointers without pressure specified use 0.5 for down\n    // state and 0 for up state.\n    var pressure = 0;\n    if (eventDict.pressure) {\n        pressure = eventDict.pressure;\n    }\n    else {\n        pressure = buttons ? 0.5 : 0;\n    }\n    return pressure;\n}\n/**\n * Checks if the `buttons` property is supported.\n */\n(function () {\n    try {\n        var ev = new MouseEvent('click', { buttons: 1 });\n        HAS_BUTTONS = ev.buttons === 1;\n    }\n    catch (e) {\n        // pass\n    }\n})();\nexport default PointerEvent;\n//# sourceMappingURL=PointerEvent.js.map","/**\n * @module ol/pointer/TouchSource\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n// Based on https://github.com/Polymer/PointerEvents\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\nimport { remove } from '../array.js';\nimport EventSource from './EventSource.js';\nimport { POINTER_ID } from './MouseSource.js';\n/**\n * @type {number}\n */\nvar CLICK_COUNT_TIMEOUT = 200;\n/**\n * @type {string}\n */\nvar POINTER_TYPE = 'touch';\n/**\n * Handler for `touchstart`, triggers `pointerover`,\n * `pointerenter` and `pointerdown` events.\n *\n * @this {TouchSource}\n * @param {TouchEvent} inEvent The in event.\n */\nfunction touchstart(inEvent) {\n    this.vacuumTouches_(inEvent);\n    this.setPrimaryTouch_(inEvent.changedTouches[0]);\n    this.dedupSynthMouse_(inEvent);\n    this.clickCount_++;\n    this.processTouches_(inEvent, this.overDown_);\n}\n/**\n * Handler for `touchmove`.\n *\n * @this {TouchSource}\n * @param {TouchEvent} inEvent The in event.\n */\nfunction touchmove(inEvent) {\n    this.processTouches_(inEvent, this.moveOverOut_);\n}\n/**\n * Handler for `touchend`, triggers `pointerup`,\n * `pointerout` and `pointerleave` events.\n *\n * @this {TouchSource}\n * @param {TouchEvent} inEvent The event.\n */\nfunction touchend(inEvent) {\n    this.dedupSynthMouse_(inEvent);\n    this.processTouches_(inEvent, this.upOut_);\n}\n/**\n * Handler for `touchcancel`, triggers `pointercancel`,\n * `pointerout` and `pointerleave` events.\n *\n * @this {TouchSource}\n * @param {TouchEvent} inEvent The in event.\n */\nfunction touchcancel(inEvent) {\n    this.processTouches_(inEvent, this.cancelOut_);\n}\nvar TouchSource = /** @class */ (function (_super) {\n    __extends(TouchSource, _super);\n    /**\n     * @param {import(\"./PointerEventHandler.js\").default} dispatcher The event handler.\n     * @param {import(\"./MouseSource.js\").default} mouseSource Mouse source.\n     */\n    function TouchSource(dispatcher, mouseSource) {\n        var _this = this;\n        var mapping = {\n            'touchstart': touchstart,\n            'touchmove': touchmove,\n            'touchend': touchend,\n            'touchcancel': touchcancel\n        };\n        _this = _super.call(this, dispatcher, mapping) || this;\n        /**\n         * @const\n         * @type {!Object<string, Event|Object>}\n         */\n        _this.pointerMap = dispatcher.pointerMap;\n        /**\n         * @const\n         * @type {import(\"./MouseSource.js\").default}\n         */\n        _this.mouseSource = mouseSource;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.firstTouchId_ = undefined;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.clickCount_ = 0;\n        /**\n         * @private\n         * @type {?}\n         */\n        _this.resetId_;\n        /**\n         * Mouse event timeout: This should be long enough to\n         * ignore compat mouse events made by touch.\n         * @private\n         * @type {number}\n         */\n        _this.dedupTimeout_ = 2500;\n        return _this;\n    }\n    /**\n     * @private\n     * @param {Touch} inTouch The in touch.\n     * @return {boolean} True, if this is the primary touch.\n     */\n    TouchSource.prototype.isPrimaryTouch_ = function (inTouch) {\n        return this.firstTouchId_ === inTouch.identifier;\n    };\n    /**\n     * Set primary touch if there are no pointers, or the only pointer is the mouse.\n     * @param {Touch} inTouch The in touch.\n     * @private\n     */\n    TouchSource.prototype.setPrimaryTouch_ = function (inTouch) {\n        var count = Object.keys(this.pointerMap).length;\n        if (count === 0 || (count === 1 && POINTER_ID.toString() in this.pointerMap)) {\n            this.firstTouchId_ = inTouch.identifier;\n            this.cancelResetClickCount_();\n        }\n    };\n    /**\n     * @private\n     * @param {PointerEvent} inPointer The in pointer object.\n     */\n    TouchSource.prototype.removePrimaryPointer_ = function (inPointer) {\n        if (inPointer.isPrimary) {\n            this.firstTouchId_ = undefined;\n            this.resetClickCount_();\n        }\n    };\n    /**\n     * @private\n     */\n    TouchSource.prototype.resetClickCount_ = function () {\n        this.resetId_ = setTimeout(this.resetClickCountHandler_.bind(this), CLICK_COUNT_TIMEOUT);\n    };\n    /**\n     * @private\n     */\n    TouchSource.prototype.resetClickCountHandler_ = function () {\n        this.clickCount_ = 0;\n        this.resetId_ = undefined;\n    };\n    /**\n     * @private\n     */\n    TouchSource.prototype.cancelResetClickCount_ = function () {\n        if (this.resetId_ !== undefined) {\n            clearTimeout(this.resetId_);\n        }\n    };\n    /**\n     * @private\n     * @param {TouchEvent} browserEvent Browser event\n     * @param {Touch} inTouch Touch event\n     * @return {PointerEvent} A pointer object.\n     */\n    TouchSource.prototype.touchToPointer_ = function (browserEvent, inTouch) {\n        var e = this.dispatcher.cloneEvent(browserEvent, inTouch);\n        // Spec specifies that pointerId 1 is reserved for Mouse.\n        // Touch identifiers can start at 0.\n        // Add 2 to the touch identifier for compatibility.\n        e.pointerId = inTouch.identifier + 2;\n        // TODO: check if this is necessary?\n        //e.target = findTarget(e);\n        e.bubbles = true;\n        e.cancelable = true;\n        e.detail = this.clickCount_;\n        e.button = 0;\n        e.buttons = 1;\n        e.width = inTouch.radiusX || 0;\n        e.height = inTouch.radiusY || 0;\n        e.pressure = inTouch.force || 0.5;\n        e.isPrimary = this.isPrimaryTouch_(inTouch);\n        e.pointerType = POINTER_TYPE;\n        // make sure that the properties that are different for\n        // each `Touch` object are not copied from the BrowserEvent object\n        e.clientX = inTouch.clientX;\n        e.clientY = inTouch.clientY;\n        e.screenX = inTouch.screenX;\n        e.screenY = inTouch.screenY;\n        return e;\n    };\n    /**\n     * @private\n     * @param {TouchEvent} inEvent Touch event\n     * @param {function(TouchEvent, PointerEvent): void} inFunction In function.\n     */\n    TouchSource.prototype.processTouches_ = function (inEvent, inFunction) {\n        var touches = Array.prototype.slice.call(inEvent.changedTouches);\n        var count = touches.length;\n        function preventDefault() {\n            inEvent.preventDefault();\n        }\n        for (var i = 0; i < count; ++i) {\n            var pointer = this.touchToPointer_(inEvent, touches[i]);\n            // forward touch preventDefaults\n            pointer.preventDefault = preventDefault;\n            inFunction.call(this, inEvent, pointer);\n        }\n    };\n    /**\n     * @private\n     * @param {TouchList} touchList The touch list.\n     * @param {number} searchId Search identifier.\n     * @return {boolean} True, if the `Touch` with the given id is in the list.\n     */\n    TouchSource.prototype.findTouch_ = function (touchList, searchId) {\n        var l = touchList.length;\n        for (var i = 0; i < l; i++) {\n            var touch = touchList[i];\n            if (touch.identifier === searchId) {\n                return true;\n            }\n        }\n        return false;\n    };\n    /**\n     * In some instances, a touchstart can happen without a touchend. This\n     * leaves the pointermap in a broken state.\n     * Therefore, on every touchstart, we remove the touches that did not fire a\n     * touchend event.\n     * To keep state globally consistent, we fire a pointercancel for\n     * this \"abandoned\" touch\n     *\n     * @private\n     * @param {TouchEvent} inEvent The in event.\n     */\n    TouchSource.prototype.vacuumTouches_ = function (inEvent) {\n        var touchList = inEvent.touches;\n        // pointerMap.getCount() should be < touchList.length here,\n        // as the touchstart has not been processed yet.\n        var keys = Object.keys(this.pointerMap);\n        var count = keys.length;\n        if (count >= touchList.length) {\n            var d = [];\n            for (var i = 0; i < count; ++i) {\n                var key = Number(keys[i]);\n                var value = this.pointerMap[key];\n                // Never remove pointerId == 1, which is mouse.\n                // Touch identifiers are 2 smaller than their pointerId, which is the\n                // index in pointermap.\n                if (key != POINTER_ID && !this.findTouch_(touchList, key - 2)) {\n                    d.push(value.out);\n                }\n            }\n            for (var i = 0; i < d.length; ++i) {\n                this.cancelOut_(inEvent, d[i]);\n            }\n        }\n    };\n    /**\n     * @private\n     * @param {TouchEvent} browserEvent The event.\n     * @param {PointerEvent} inPointer The in pointer object.\n     */\n    TouchSource.prototype.overDown_ = function (browserEvent, inPointer) {\n        this.pointerMap[inPointer.pointerId] = {\n            target: inPointer.target,\n            out: inPointer,\n            outTarget: inPointer.target\n        };\n        this.dispatcher.over(inPointer, browserEvent);\n        this.dispatcher.enter(inPointer, browserEvent);\n        this.dispatcher.down(inPointer, browserEvent);\n    };\n    /**\n     * @private\n     * @param {TouchEvent} browserEvent The event.\n     * @param {PointerEvent} inPointer The in pointer.\n     */\n    TouchSource.prototype.moveOverOut_ = function (browserEvent, inPointer) {\n        var event = inPointer;\n        var pointer = this.pointerMap[event.pointerId];\n        // a finger drifted off the screen, ignore it\n        if (!pointer) {\n            return;\n        }\n        var outEvent = pointer.out;\n        var outTarget = pointer.outTarget;\n        this.dispatcher.move(event, browserEvent);\n        if (outEvent && outTarget !== event.target) {\n            outEvent.relatedTarget = event.target;\n            /** @type {Object} */ (event).relatedTarget = outTarget;\n            // recover from retargeting by shadow\n            outEvent.target = outTarget;\n            if (event.target) {\n                this.dispatcher.leaveOut(outEvent, browserEvent);\n                this.dispatcher.enterOver(event, browserEvent);\n            }\n            else {\n                // clean up case when finger leaves the screen\n                /** @type {Object} */ (event).target = outTarget;\n                /** @type {Object} */ (event).relatedTarget = null;\n                this.cancelOut_(browserEvent, event);\n            }\n        }\n        pointer.out = event;\n        pointer.outTarget = event.target;\n    };\n    /**\n     * @private\n     * @param {TouchEvent} browserEvent An event.\n     * @param {PointerEvent} inPointer The inPointer object.\n     */\n    TouchSource.prototype.upOut_ = function (browserEvent, inPointer) {\n        this.dispatcher.up(inPointer, browserEvent);\n        this.dispatcher.out(inPointer, browserEvent);\n        this.dispatcher.leave(inPointer, browserEvent);\n        this.cleanUpPointer_(inPointer);\n    };\n    /**\n     * @private\n     * @param {TouchEvent} browserEvent The event.\n     * @param {PointerEvent} inPointer The in pointer.\n     */\n    TouchSource.prototype.cancelOut_ = function (browserEvent, inPointer) {\n        this.dispatcher.cancel(inPointer, browserEvent);\n        this.dispatcher.out(inPointer, browserEvent);\n        this.dispatcher.leave(inPointer, browserEvent);\n        this.cleanUpPointer_(inPointer);\n    };\n    /**\n     * @private\n     * @param {PointerEvent} inPointer The inPointer object.\n     */\n    TouchSource.prototype.cleanUpPointer_ = function (inPointer) {\n        delete this.pointerMap[inPointer.pointerId];\n        this.removePrimaryPointer_(inPointer);\n    };\n    /**\n     * Prevent synth mouse events from creating pointer events.\n     *\n     * @private\n     * @param {TouchEvent} inEvent The in event.\n     */\n    TouchSource.prototype.dedupSynthMouse_ = function (inEvent) {\n        var lts = this.mouseSource.lastTouches;\n        var t = inEvent.changedTouches[0];\n        // only the primary finger will synth mouse events\n        if (this.isPrimaryTouch_(t)) {\n            // remember x/y of last touch\n            var lt_1 = [t.clientX, t.clientY];\n            lts.push(lt_1);\n            setTimeout(function () {\n                // remove touch after timeout\n                remove(lts, lt_1);\n            }, this.dedupTimeout_);\n        }\n    };\n    return TouchSource;\n}(EventSource));\nexport default TouchSource;\n//# sourceMappingURL=TouchSource.js.map","/**\n * @module ol/pointer/PointerEventHandler\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n// Based on https://github.com/Polymer/PointerEvents\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\nimport { listen, unlisten } from '../events.js';\nimport EventTarget from '../events/Target.js';\nimport { POINTER, MSPOINTER, TOUCH } from '../has.js';\nimport PointerEventType from './EventType.js';\nimport MouseSource, { prepareEvent as prepareMouseEvent } from './MouseSource.js';\nimport MsSource from './MsSource.js';\nimport NativeSource from './NativeSource.js';\nimport PointerEvent from './PointerEvent.js';\nimport TouchSource from './TouchSource.js';\n/**\n * Properties to copy when cloning an event, with default values.\n * @type {Array<Array>}\n */\nvar CLONE_PROPS = [\n    // MouseEvent\n    ['bubbles', false],\n    ['cancelable', false],\n    ['view', null],\n    ['detail', null],\n    ['screenX', 0],\n    ['screenY', 0],\n    ['clientX', 0],\n    ['clientY', 0],\n    ['ctrlKey', false],\n    ['altKey', false],\n    ['shiftKey', false],\n    ['metaKey', false],\n    ['button', 0],\n    ['relatedTarget', null],\n    // DOM Level 3\n    ['buttons', 0],\n    // PointerEvent\n    ['pointerId', 0],\n    ['width', 0],\n    ['height', 0],\n    ['pressure', 0],\n    ['tiltX', 0],\n    ['tiltY', 0],\n    ['pointerType', ''],\n    ['hwTimestamp', 0],\n    ['isPrimary', false],\n    // event instance\n    ['type', ''],\n    ['target', null],\n    ['currentTarget', null],\n    ['which', 0]\n];\nvar PointerEventHandler = /** @class */ (function (_super) {\n    __extends(PointerEventHandler, _super);\n    /**\n     * @param {Element|HTMLDocument} element Viewport element.\n     */\n    function PointerEventHandler(element) {\n        var _this = _super.call(this) || this;\n        /**\n         * @const\n         * @private\n         * @type {Element|HTMLDocument}\n         */\n        _this.element_ = element;\n        /**\n         * @const\n         * @type {!Object<string, Event|Object>}\n         */\n        _this.pointerMap = {};\n        /**\n         * @type {Object<string, function(Event): void>}\n         * @private\n         */\n        _this.eventMap_ = {};\n        /**\n         * @type {Array<import(\"./EventSource.js\").default>}\n         * @private\n         */\n        _this.eventSourceList_ = [];\n        _this.registerSources();\n        return _this;\n    }\n    /**\n     * Set up the event sources (mouse, touch and native pointers)\n     * that generate pointer events.\n     */\n    PointerEventHandler.prototype.registerSources = function () {\n        if (POINTER) {\n            this.registerSource('native', new NativeSource(this));\n        }\n        else if (MSPOINTER) {\n            this.registerSource('ms', new MsSource(this));\n        }\n        else {\n            var mouseSource = new MouseSource(this);\n            this.registerSource('mouse', mouseSource);\n            if (TOUCH) {\n                this.registerSource('touch', new TouchSource(this, mouseSource));\n            }\n        }\n        // register events on the viewport element\n        this.register_();\n    };\n    /**\n     * Add a new event source that will generate pointer events.\n     *\n     * @param {string} name A name for the event source\n     * @param {import(\"./EventSource.js\").default} source The source event.\n     */\n    PointerEventHandler.prototype.registerSource = function (name, source) {\n        var s = source;\n        var newEvents = s.getEvents();\n        if (newEvents) {\n            newEvents.forEach(function (e) {\n                var handler = s.getHandlerForEvent(e);\n                if (handler) {\n                    this.eventMap_[e] = handler.bind(s);\n                }\n            }.bind(this));\n            this.eventSourceList_.push(s);\n        }\n    };\n    /**\n     * Set up the events for all registered event sources.\n     * @private\n     */\n    PointerEventHandler.prototype.register_ = function () {\n        var l = this.eventSourceList_.length;\n        for (var i = 0; i < l; i++) {\n            var eventSource = this.eventSourceList_[i];\n            this.addEvents_(eventSource.getEvents());\n        }\n    };\n    /**\n     * Remove all registered events.\n     * @private\n     */\n    PointerEventHandler.prototype.unregister_ = function () {\n        var l = this.eventSourceList_.length;\n        for (var i = 0; i < l; i++) {\n            var eventSource = this.eventSourceList_[i];\n            this.removeEvents_(eventSource.getEvents());\n        }\n    };\n    /**\n     * Calls the right handler for a new event.\n     * @private\n     * @param {Event} inEvent Browser event.\n     */\n    PointerEventHandler.prototype.eventHandler_ = function (inEvent) {\n        var type = inEvent.type;\n        var handler = this.eventMap_[type];\n        if (handler) {\n            handler(inEvent);\n        }\n    };\n    /**\n     * Setup listeners for the given events.\n     * @private\n     * @param {Array<string>} events List of events.\n     */\n    PointerEventHandler.prototype.addEvents_ = function (events) {\n        events.forEach(function (eventName) {\n            listen(this.element_, eventName, this.eventHandler_, this);\n        }.bind(this));\n    };\n    /**\n     * Unregister listeners for the given events.\n     * @private\n     * @param {Array<string>} events List of events.\n     */\n    PointerEventHandler.prototype.removeEvents_ = function (events) {\n        events.forEach(function (e) {\n            unlisten(this.element_, e, this.eventHandler_, this);\n        }.bind(this));\n    };\n    /**\n     * Returns a snapshot of inEvent, with writable properties.\n     *\n     * @param {Event} event Browser event.\n     * @param {Event|Touch} inEvent An event that contains\n     *    properties to copy.\n     * @return {Object} An object containing shallow copies of\n     *    `inEvent`'s properties.\n     */\n    PointerEventHandler.prototype.cloneEvent = function (event, inEvent) {\n        var eventCopy = {};\n        for (var i = 0, ii = CLONE_PROPS.length; i < ii; i++) {\n            var p = CLONE_PROPS[i][0];\n            eventCopy[p] = event[p] || inEvent[p] || CLONE_PROPS[i][1];\n        }\n        return eventCopy;\n    };\n    // EVENTS\n    /**\n     * Triggers a 'pointerdown' event.\n     * @param {Object} data Pointer event data.\n     * @param {Event} event The event.\n     */\n    PointerEventHandler.prototype.down = function (data, event) {\n        this.fireEvent(PointerEventType.POINTERDOWN, data, event);\n    };\n    /**\n     * Triggers a 'pointermove' event.\n     * @param {Object} data Pointer event data.\n     * @param {Event} event The event.\n     */\n    PointerEventHandler.prototype.move = function (data, event) {\n        this.fireEvent(PointerEventType.POINTERMOVE, data, event);\n    };\n    /**\n     * Triggers a 'pointerup' event.\n     * @param {Object} data Pointer event data.\n     * @param {Event} event The event.\n     */\n    PointerEventHandler.prototype.up = function (data, event) {\n        this.fireEvent(PointerEventType.POINTERUP, data, event);\n    };\n    /**\n     * Triggers a 'pointerenter' event.\n     * @param {Object} data Pointer event data.\n     * @param {Event} event The event.\n     */\n    PointerEventHandler.prototype.enter = function (data, event) {\n        data.bubbles = false;\n        this.fireEvent(PointerEventType.POINTERENTER, data, event);\n    };\n    /**\n     * Triggers a 'pointerleave' event.\n     * @param {Object} data Pointer event data.\n     * @param {Event} event The event.\n     */\n    PointerEventHandler.prototype.leave = function (data, event) {\n        data.bubbles = false;\n        this.fireEvent(PointerEventType.POINTERLEAVE, data, event);\n    };\n    /**\n     * Triggers a 'pointerover' event.\n     * @param {Object} data Pointer event data.\n     * @param {Event} event The event.\n     */\n    PointerEventHandler.prototype.over = function (data, event) {\n        data.bubbles = true;\n        this.fireEvent(PointerEventType.POINTEROVER, data, event);\n    };\n    /**\n     * Triggers a 'pointerout' event.\n     * @param {Object} data Pointer event data.\n     * @param {Event} event The event.\n     */\n    PointerEventHandler.prototype.out = function (data, event) {\n        data.bubbles = true;\n        this.fireEvent(PointerEventType.POINTEROUT, data, event);\n    };\n    /**\n     * Triggers a 'pointercancel' event.\n     * @param {Object} data Pointer event data.\n     * @param {Event} event The event.\n     */\n    PointerEventHandler.prototype.cancel = function (data, event) {\n        this.fireEvent(PointerEventType.POINTERCANCEL, data, event);\n    };\n    /**\n     * Triggers a combination of 'pointerout' and 'pointerleave' events.\n     * @param {Object} data Pointer event data.\n     * @param {Event} event The event.\n     */\n    PointerEventHandler.prototype.leaveOut = function (data, event) {\n        this.out(data, event);\n        if (!this.contains_(data.target, data.relatedTarget)) {\n            this.leave(data, event);\n        }\n    };\n    /**\n     * Triggers a combination of 'pointerover' and 'pointerevents' events.\n     * @param {Object} data Pointer event data.\n     * @param {Event} event The event.\n     */\n    PointerEventHandler.prototype.enterOver = function (data, event) {\n        this.over(data, event);\n        if (!this.contains_(data.target, data.relatedTarget)) {\n            this.enter(data, event);\n        }\n    };\n    /**\n     * @private\n     * @param {Element} container The container element.\n     * @param {Element} contained The contained element.\n     * @return {boolean} Returns true if the container element\n     *   contains the other element.\n     */\n    PointerEventHandler.prototype.contains_ = function (container, contained) {\n        if (!container || !contained) {\n            return false;\n        }\n        return container.contains(contained);\n    };\n    // EVENT CREATION AND TRACKING\n    /**\n     * Creates a new Event of type `inType`, based on the information in\n     * `data`.\n     *\n     * @param {string} inType A string representing the type of event to create.\n     * @param {Object} data Pointer event data.\n     * @param {Event} event The event.\n     * @return {PointerEvent} A PointerEvent of type `inType`.\n     */\n    PointerEventHandler.prototype.makeEvent = function (inType, data, event) {\n        return new PointerEvent(inType, event, data);\n    };\n    /**\n     * Make and dispatch an event in one call.\n     * @param {string} inType A string representing the type of event.\n     * @param {Object} data Pointer event data.\n     * @param {Event} event The event.\n     */\n    PointerEventHandler.prototype.fireEvent = function (inType, data, event) {\n        var e = this.makeEvent(inType, data, event);\n        this.dispatchEvent(e);\n    };\n    /**\n     * Creates a pointer event from a native pointer event\n     * and dispatches this event.\n     * @param {Event} event A platform event with a target.\n     */\n    PointerEventHandler.prototype.fireNativeEvent = function (event) {\n        var e = this.makeEvent(event.type, event, event);\n        this.dispatchEvent(e);\n    };\n    /**\n     * Wrap a native mouse event into a pointer event.\n     * This proxy method is required for the legacy IE support.\n     * @param {string} eventType The pointer event type.\n     * @param {Event} event The event.\n     * @return {PointerEvent} The wrapped event.\n     */\n    PointerEventHandler.prototype.wrapMouseEvent = function (eventType, event) {\n        var pointerEvent = this.makeEvent(eventType, prepareMouseEvent(event, this), event);\n        return pointerEvent;\n    };\n    /**\n     * @inheritDoc\n     */\n    PointerEventHandler.prototype.disposeInternal = function () {\n        this.unregister_();\n        _super.prototype.disposeInternal.call(this);\n    };\n    return PointerEventHandler;\n}(EventTarget));\nexport default PointerEventHandler;\n//# sourceMappingURL=PointerEventHandler.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/MapBrowserEventHandler\n */\nimport { DEVICE_PIXEL_RATIO } from './has.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport MapBrowserPointerEvent from './MapBrowserPointerEvent.js';\nimport { listen, unlistenByKey } from './events.js';\nimport EventTarget from './events/Target.js';\nimport PointerEventType from './pointer/EventType.js';\nimport PointerEventHandler from './pointer/PointerEventHandler.js';\nvar MapBrowserEventHandler = /** @class */ (function (_super) {\n    __extends(MapBrowserEventHandler, _super);\n    /**\n     * @param {import(\"./PluggableMap.js\").default} map The map with the viewport to listen to events on.\n     * @param {number=} moveTolerance The minimal distance the pointer must travel to trigger a move.\n     */\n    function MapBrowserEventHandler(map, moveTolerance) {\n        var _this = _super.call(this) || this;\n        /**\n         * This is the element that we will listen to the real events on.\n         * @type {import(\"./PluggableMap.js\").default}\n         * @private\n         */\n        _this.map_ = map;\n        /**\n         * @type {any}\n         * @private\n         */\n        _this.clickTimeoutId_;\n        /**\n         * @type {boolean}\n         * @private\n         */\n        _this.dragging_ = false;\n        /**\n         * @type {!Array<import(\"./events.js\").EventsKey>}\n         * @private\n         */\n        _this.dragListenerKeys_ = [];\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.moveTolerance_ = moveTolerance ?\n            moveTolerance * DEVICE_PIXEL_RATIO : DEVICE_PIXEL_RATIO;\n        /**\n         * The most recent \"down\" type event (or null if none have occurred).\n         * Set on pointerdown.\n         * @type {import(\"./pointer/PointerEvent.js\").default}\n         * @private\n         */\n        _this.down_ = null;\n        var element = _this.map_.getViewport();\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.activePointers_ = 0;\n        /**\n         * @type {!Object<number, boolean>}\n         * @private\n         */\n        _this.trackedTouches_ = {};\n        /**\n         * Event handler which generates pointer events for\n         * the viewport element.\n         *\n         * @type {PointerEventHandler}\n         * @private\n         */\n        _this.pointerEventHandler_ = new PointerEventHandler(element);\n        /**\n         * Event handler which generates pointer events for\n         * the document (used when dragging).\n         *\n         * @type {PointerEventHandler}\n         * @private\n         */\n        _this.documentPointerEventHandler_ = null;\n        /**\n         * @type {?import(\"./events.js\").EventsKey}\n         * @private\n         */\n        _this.pointerdownListenerKey_ = listen(_this.pointerEventHandler_, PointerEventType.POINTERDOWN, _this.handlePointerDown_, _this);\n        /**\n         * @type {?import(\"./events.js\").EventsKey}\n         * @private\n         */\n        _this.relayedListenerKey_ = listen(_this.pointerEventHandler_, PointerEventType.POINTERMOVE, _this.relayEvent_, _this);\n        return _this;\n    }\n    /**\n     * @param {import(\"./pointer/PointerEvent.js\").default} pointerEvent Pointer\n     * event.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.emulateClick_ = function (pointerEvent) {\n        var newEvent = new MapBrowserPointerEvent(MapBrowserEventType.CLICK, this.map_, pointerEvent);\n        this.dispatchEvent(newEvent);\n        if (this.clickTimeoutId_ !== undefined) {\n            // double-click\n            clearTimeout(this.clickTimeoutId_);\n            this.clickTimeoutId_ = undefined;\n            newEvent = new MapBrowserPointerEvent(MapBrowserEventType.DBLCLICK, this.map_, pointerEvent);\n            this.dispatchEvent(newEvent);\n        }\n        else {\n            // click\n            this.clickTimeoutId_ = setTimeout(function () {\n                this.clickTimeoutId_ = undefined;\n                var newEvent = new MapBrowserPointerEvent(MapBrowserEventType.SINGLECLICK, this.map_, pointerEvent);\n                this.dispatchEvent(newEvent);\n            }.bind(this), 250);\n        }\n    };\n    /**\n     * Keeps track on how many pointers are currently active.\n     *\n     * @param {import(\"./pointer/PointerEvent.js\").default} pointerEvent Pointer\n     * event.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.updateActivePointers_ = function (pointerEvent) {\n        var event = pointerEvent;\n        if (event.type == MapBrowserEventType.POINTERUP ||\n            event.type == MapBrowserEventType.POINTERCANCEL) {\n            delete this.trackedTouches_[event.pointerId];\n        }\n        else if (event.type == MapBrowserEventType.POINTERDOWN) {\n            this.trackedTouches_[event.pointerId] = true;\n        }\n        this.activePointers_ = Object.keys(this.trackedTouches_).length;\n    };\n    /**\n     * @param {import(\"./pointer/PointerEvent.js\").default} pointerEvent Pointer\n     * event.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.handlePointerUp_ = function (pointerEvent) {\n        this.updateActivePointers_(pointerEvent);\n        var newEvent = new MapBrowserPointerEvent(MapBrowserEventType.POINTERUP, this.map_, pointerEvent);\n        this.dispatchEvent(newEvent);\n        // We emulate click events on left mouse button click, touch contact, and pen\n        // contact. isMouseActionButton returns true in these cases (evt.button is set\n        // to 0).\n        // See http://www.w3.org/TR/pointerevents/#button-states\n        // We only fire click, singleclick, and doubleclick if nobody has called\n        // event.stopPropagation() or event.preventDefault().\n        if (!newEvent.propagationStopped && !this.dragging_ && this.isMouseActionButton_(pointerEvent)) {\n            this.emulateClick_(this.down_);\n        }\n        if (this.activePointers_ === 0) {\n            this.dragListenerKeys_.forEach(unlistenByKey);\n            this.dragListenerKeys_.length = 0;\n            this.dragging_ = false;\n            this.down_ = null;\n            this.documentPointerEventHandler_.dispose();\n            this.documentPointerEventHandler_ = null;\n        }\n    };\n    /**\n     * @param {import(\"./pointer/PointerEvent.js\").default} pointerEvent Pointer\n     * event.\n     * @return {boolean} If the left mouse button was pressed.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.isMouseActionButton_ = function (pointerEvent) {\n        return pointerEvent.button === 0;\n    };\n    /**\n     * @param {import(\"./pointer/PointerEvent.js\").default} pointerEvent Pointer\n     * event.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.handlePointerDown_ = function (pointerEvent) {\n        this.updateActivePointers_(pointerEvent);\n        var newEvent = new MapBrowserPointerEvent(MapBrowserEventType.POINTERDOWN, this.map_, pointerEvent);\n        this.dispatchEvent(newEvent);\n        this.down_ = pointerEvent;\n        if (this.dragListenerKeys_.length === 0) {\n            /* Set up a pointer event handler on the `document`,\n             * which is required when the pointer is moved outside\n             * the viewport when dragging.\n             */\n            this.documentPointerEventHandler_ =\n                new PointerEventHandler(document);\n            this.dragListenerKeys_.push(listen(this.documentPointerEventHandler_, MapBrowserEventType.POINTERMOVE, this.handlePointerMove_, this), listen(this.documentPointerEventHandler_, MapBrowserEventType.POINTERUP, this.handlePointerUp_, this), \n            /* Note that the listener for `pointercancel is set up on\n             * `pointerEventHandler_` and not `documentPointerEventHandler_` like\n             * the `pointerup` and `pointermove` listeners.\n             *\n             * The reason for this is the following: `TouchSource.vacuumTouches_()`\n             * issues `pointercancel` events, when there was no `touchend` for a\n             * `touchstart`. Now, let's say a first `touchstart` is registered on\n             * `pointerEventHandler_`. The `documentPointerEventHandler_` is set up.\n             * But `documentPointerEventHandler_` doesn't know about the first\n             * `touchstart`. If there is no `touchend` for the `touchstart`, we can\n             * only receive a `touchcancel` from `pointerEventHandler_`, because it is\n             * only registered there.\n             */\n            listen(this.pointerEventHandler_, MapBrowserEventType.POINTERCANCEL, this.handlePointerUp_, this));\n        }\n    };\n    /**\n     * @param {import(\"./pointer/PointerEvent.js\").default} pointerEvent Pointer\n     * event.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.handlePointerMove_ = function (pointerEvent) {\n        // Between pointerdown and pointerup, pointermove events are triggered.\n        // To avoid a 'false' touchmove event to be dispatched, we test if the pointer\n        // moved a significant distance.\n        if (this.isMoving_(pointerEvent)) {\n            this.dragging_ = true;\n            var newEvent = new MapBrowserPointerEvent(MapBrowserEventType.POINTERDRAG, this.map_, pointerEvent, this.dragging_);\n            this.dispatchEvent(newEvent);\n        }\n        // Some native android browser triggers mousemove events during small period\n        // of time. See: https://code.google.com/p/android/issues/detail?id=5491 or\n        // https://code.google.com/p/android/issues/detail?id=19827\n        // ex: Galaxy Tab P3110 + Android 4.1.1\n        pointerEvent.preventDefault();\n    };\n    /**\n     * Wrap and relay a pointer event.  Note that this requires that the type\n     * string for the MapBrowserPointerEvent matches the PointerEvent type.\n     * @param {import(\"./pointer/PointerEvent.js\").default} pointerEvent Pointer\n     * event.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.relayEvent_ = function (pointerEvent) {\n        var dragging = !!(this.down_ && this.isMoving_(pointerEvent));\n        this.dispatchEvent(new MapBrowserPointerEvent(pointerEvent.type, this.map_, pointerEvent, dragging));\n    };\n    /**\n     * @param {import(\"./pointer/PointerEvent.js\").default} pointerEvent Pointer\n     * event.\n     * @return {boolean} Is moving.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.isMoving_ = function (pointerEvent) {\n        return this.dragging_ ||\n            Math.abs(pointerEvent.clientX - this.down_.clientX) > this.moveTolerance_ ||\n            Math.abs(pointerEvent.clientY - this.down_.clientY) > this.moveTolerance_;\n    };\n    /**\n     * @inheritDoc\n     */\n    MapBrowserEventHandler.prototype.disposeInternal = function () {\n        if (this.relayedListenerKey_) {\n            unlistenByKey(this.relayedListenerKey_);\n            this.relayedListenerKey_ = null;\n        }\n        if (this.pointerdownListenerKey_) {\n            unlistenByKey(this.pointerdownListenerKey_);\n            this.pointerdownListenerKey_ = null;\n        }\n        this.dragListenerKeys_.forEach(unlistenByKey);\n        this.dragListenerKeys_.length = 0;\n        if (this.documentPointerEventHandler_) {\n            this.documentPointerEventHandler_.dispose();\n            this.documentPointerEventHandler_ = null;\n        }\n        if (this.pointerEventHandler_) {\n            this.pointerEventHandler_.dispose();\n            this.pointerEventHandler_ = null;\n        }\n        _super.prototype.disposeInternal.call(this);\n    };\n    return MapBrowserEventHandler;\n}(EventTarget));\nexport default MapBrowserEventHandler;\n//# sourceMappingURL=MapBrowserEventHandler.js.map","/**\n * @module ol/MapEventType\n */\n/**\n * @enum {string}\n */\nexport default {\n    /**\n     * Triggered after a map frame is rendered.\n     * @event module:ol/MapEvent~MapEvent#postrender\n     * @api\n     */\n    POSTRENDER: 'postrender',\n    /**\n     * Triggered when the map starts moving.\n     * @event module:ol/MapEvent~MapEvent#movestart\n     * @api\n     */\n    MOVESTART: 'movestart',\n    /**\n     * Triggered after the map is moved.\n     * @event module:ol/MapEvent~MapEvent#moveend\n     * @api\n     */\n    MOVEEND: 'moveend'\n};\n//# sourceMappingURL=MapEventType.js.map","/**\n * @module ol/MapProperty\n */\n/**\n * @enum {string}\n */\nexport default {\n    LAYERGROUP: 'layergroup',\n    SIZE: 'size',\n    TARGET: 'target',\n    VIEW: 'view'\n};\n//# sourceMappingURL=MapProperty.js.map","/**\n * @module ol/render/EventType\n */\n/**\n * @enum {string}\n */\nexport default {\n    /**\n     * Triggered before a layer is rendered.\n     * @event module:ol/render/Event~RenderEvent#prerender\n     * @api\n     */\n    PRERENDER: 'prerender',\n    /**\n     * Triggered after a layer is rendered.\n     * @event module:ol/render/Event~RenderEvent#postrender\n     * @api\n     */\n    POSTRENDER: 'postrender',\n    /**\n     * Triggered before layers are rendered.\n     * @event module:ol/render/Event~RenderEvent#precompose\n     * @api\n     */\n    PRECOMPOSE: 'precompose',\n    /**\n     * Triggered after all layers are rendered.\n     * @event module:ol/render/Event~RenderEvent#postcompose\n     * @api\n     */\n    POSTCOMPOSE: 'postcompose',\n    /**\n     * Triggered when rendering is complete, i.e. all sources and tiles have\n     * finished loading for the current viewport, and all tiles are faded in.\n     * @event module:ol/render/Event~RenderEvent#rendercomplete\n     * @api\n     */\n    RENDERCOMPLETE: 'rendercomplete'\n};\n//# sourceMappingURL=EventType.js.map","/**\n * @module ol/TileState\n */\n/**\n * @enum {number}\n */\nexport default {\n    IDLE: 0,\n    LOADING: 1,\n    LOADED: 2,\n    /**\n     * Indicates that tile loading failed\n     * @type {number}\n     */\n    ERROR: 3,\n    EMPTY: 4,\n    ABORT: 5\n};\n//# sourceMappingURL=TileState.js.map","/**\n * @module ol/structs/PriorityQueue\n */\nimport { assert } from '../asserts.js';\nimport { clear } from '../obj.js';\n/**\n * @type {number}\n */\nexport var DROP = Infinity;\n/**\n * @classdesc\n * Priority queue.\n *\n * The implementation is inspired from the Closure Library's Heap class and\n * Python's heapq module.\n *\n * See http://closure-library.googlecode.com/svn/docs/closure_goog_structs_heap.js.source.html\n * and http://hg.python.org/cpython/file/2.7/Lib/heapq.py.\n *\n * @template T\n */\nvar PriorityQueue = /** @class */ (function () {\n    /**\n     * @param {function(T): number} priorityFunction Priority function.\n     * @param {function(T): string} keyFunction Key function.\n     */\n    function PriorityQueue(priorityFunction, keyFunction) {\n        /**\n         * @type {function(T): number}\n         * @private\n         */\n        this.priorityFunction_ = priorityFunction;\n        /**\n         * @type {function(T): string}\n         * @private\n         */\n        this.keyFunction_ = keyFunction;\n        /**\n         * @type {Array<T>}\n         * @private\n         */\n        this.elements_ = [];\n        /**\n         * @type {Array<number>}\n         * @private\n         */\n        this.priorities_ = [];\n        /**\n         * @type {!Object<string, boolean>}\n         * @private\n         */\n        this.queuedElements_ = {};\n    }\n    /**\n     * FIXME empty description for jsdoc\n     */\n    PriorityQueue.prototype.clear = function () {\n        this.elements_.length = 0;\n        this.priorities_.length = 0;\n        clear(this.queuedElements_);\n    };\n    /**\n     * Remove and return the highest-priority element. O(log N).\n     * @return {T} Element.\n     */\n    PriorityQueue.prototype.dequeue = function () {\n        var elements = this.elements_;\n        var priorities = this.priorities_;\n        var element = elements[0];\n        if (elements.length == 1) {\n            elements.length = 0;\n            priorities.length = 0;\n        }\n        else {\n            elements[0] = elements.pop();\n            priorities[0] = priorities.pop();\n            this.siftUp_(0);\n        }\n        var elementKey = this.keyFunction_(element);\n        delete this.queuedElements_[elementKey];\n        return element;\n    };\n    /**\n     * Enqueue an element. O(log N).\n     * @param {T} element Element.\n     * @return {boolean} The element was added to the queue.\n     */\n    PriorityQueue.prototype.enqueue = function (element) {\n        assert(!(this.keyFunction_(element) in this.queuedElements_), 31); // Tried to enqueue an `element` that was already added to the queue\n        var priority = this.priorityFunction_(element);\n        if (priority != DROP) {\n            this.elements_.push(element);\n            this.priorities_.push(priority);\n            this.queuedElements_[this.keyFunction_(element)] = true;\n            this.siftDown_(0, this.elements_.length - 1);\n            return true;\n        }\n        return false;\n    };\n    /**\n     * @return {number} Count.\n     */\n    PriorityQueue.prototype.getCount = function () {\n        return this.elements_.length;\n    };\n    /**\n     * Gets the index of the left child of the node at the given index.\n     * @param {number} index The index of the node to get the left child for.\n     * @return {number} The index of the left child.\n     * @private\n     */\n    PriorityQueue.prototype.getLeftChildIndex_ = function (index) {\n        return index * 2 + 1;\n    };\n    /**\n     * Gets the index of the right child of the node at the given index.\n     * @param {number} index The index of the node to get the right child for.\n     * @return {number} The index of the right child.\n     * @private\n     */\n    PriorityQueue.prototype.getRightChildIndex_ = function (index) {\n        return index * 2 + 2;\n    };\n    /**\n     * Gets the index of the parent of the node at the given index.\n     * @param {number} index The index of the node to get the parent for.\n     * @return {number} The index of the parent.\n     * @private\n     */\n    PriorityQueue.prototype.getParentIndex_ = function (index) {\n        return (index - 1) >> 1;\n    };\n    /**\n     * Make this a heap. O(N).\n     * @private\n     */\n    PriorityQueue.prototype.heapify_ = function () {\n        var i;\n        for (i = (this.elements_.length >> 1) - 1; i >= 0; i--) {\n            this.siftUp_(i);\n        }\n    };\n    /**\n     * @return {boolean} Is empty.\n     */\n    PriorityQueue.prototype.isEmpty = function () {\n        return this.elements_.length === 0;\n    };\n    /**\n     * @param {string} key Key.\n     * @return {boolean} Is key queued.\n     */\n    PriorityQueue.prototype.isKeyQueued = function (key) {\n        return key in this.queuedElements_;\n    };\n    /**\n     * @param {T} element Element.\n     * @return {boolean} Is queued.\n     */\n    PriorityQueue.prototype.isQueued = function (element) {\n        return this.isKeyQueued(this.keyFunction_(element));\n    };\n    /**\n     * @param {number} index The index of the node to move down.\n     * @private\n     */\n    PriorityQueue.prototype.siftUp_ = function (index) {\n        var elements = this.elements_;\n        var priorities = this.priorities_;\n        var count = elements.length;\n        var element = elements[index];\n        var priority = priorities[index];\n        var startIndex = index;\n        while (index < (count >> 1)) {\n            var lIndex = this.getLeftChildIndex_(index);\n            var rIndex = this.getRightChildIndex_(index);\n            var smallerChildIndex = rIndex < count &&\n                priorities[rIndex] < priorities[lIndex] ?\n                rIndex : lIndex;\n            elements[index] = elements[smallerChildIndex];\n            priorities[index] = priorities[smallerChildIndex];\n            index = smallerChildIndex;\n        }\n        elements[index] = element;\n        priorities[index] = priority;\n        this.siftDown_(startIndex, index);\n    };\n    /**\n     * @param {number} startIndex The index of the root.\n     * @param {number} index The index of the node to move up.\n     * @private\n     */\n    PriorityQueue.prototype.siftDown_ = function (startIndex, index) {\n        var elements = this.elements_;\n        var priorities = this.priorities_;\n        var element = elements[index];\n        var priority = priorities[index];\n        while (index > startIndex) {\n            var parentIndex = this.getParentIndex_(index);\n            if (priorities[parentIndex] > priority) {\n                elements[index] = elements[parentIndex];\n                priorities[index] = priorities[parentIndex];\n                index = parentIndex;\n            }\n            else {\n                break;\n            }\n        }\n        elements[index] = element;\n        priorities[index] = priority;\n    };\n    /**\n     * FIXME empty description for jsdoc\n     */\n    PriorityQueue.prototype.reprioritize = function () {\n        var priorityFunction = this.priorityFunction_;\n        var elements = this.elements_;\n        var priorities = this.priorities_;\n        var index = 0;\n        var n = elements.length;\n        var element, i, priority;\n        for (i = 0; i < n; ++i) {\n            element = elements[i];\n            priority = priorityFunction(element);\n            if (priority == DROP) {\n                delete this.queuedElements_[this.keyFunction_(element)];\n            }\n            else {\n                priorities[index] = priority;\n                elements[index++] = element;\n            }\n        }\n        elements.length = index;\n        priorities.length = index;\n        this.heapify_();\n    };\n    return PriorityQueue;\n}());\nexport default PriorityQueue;\n//# sourceMappingURL=PriorityQueue.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/TileQueue\n */\nimport TileState from './TileState.js';\nimport { listen, unlisten } from './events.js';\nimport EventType from './events/EventType.js';\nimport PriorityQueue from './structs/PriorityQueue.js';\n/**\n * @typedef {function(import(\"./Tile.js\").default, string, import(\"./coordinate.js\").Coordinate, number): number} PriorityFunction\n */\nvar TileQueue = /** @class */ (function (_super) {\n    __extends(TileQueue, _super);\n    /**\n     * @param {PriorityFunction} tilePriorityFunction Tile priority function.\n     * @param {function(): ?} tileChangeCallback Function called on each tile change event.\n     */\n    function TileQueue(tilePriorityFunction, tileChangeCallback) {\n        var _this = _super.call(this, \n        /**\n         * @param {Array} element Element.\n         * @return {number} Priority.\n         */\n        function (element) {\n            return tilePriorityFunction.apply(null, element);\n        }, \n        /**\n         * @param {Array} element Element.\n         * @return {string} Key.\n         */\n        function (element) {\n            return ( /** @type {import(\"./Tile.js\").default} */(element[0]).getKey());\n        }) || this;\n        /**\n         * @private\n         * @type {function(): ?}\n         */\n        _this.tileChangeCallback_ = tileChangeCallback;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.tilesLoading_ = 0;\n        /**\n         * @private\n         * @type {!Object<string,boolean>}\n         */\n        _this.tilesLoadingKeys_ = {};\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    TileQueue.prototype.enqueue = function (element) {\n        var added = _super.prototype.enqueue.call(this, element);\n        if (added) {\n            var tile = element[0];\n            listen(tile, EventType.CHANGE, this.handleTileChange, this);\n        }\n        return added;\n    };\n    /**\n     * @return {number} Number of tiles loading.\n     */\n    TileQueue.prototype.getTilesLoading = function () {\n        return this.tilesLoading_;\n    };\n    /**\n     * @param {import(\"./events/Event.js\").default} event Event.\n     * @protected\n     */\n    TileQueue.prototype.handleTileChange = function (event) {\n        var tile = /** @type {import(\"./Tile.js\").default} */ (event.target);\n        var state = tile.getState();\n        if (tile.hifi && state === TileState.LOADED || state === TileState.ERROR ||\n            state === TileState.EMPTY || state === TileState.ABORT) {\n            unlisten(tile, EventType.CHANGE, this.handleTileChange, this);\n            var tileKey = tile.getKey();\n            if (tileKey in this.tilesLoadingKeys_) {\n                delete this.tilesLoadingKeys_[tileKey];\n                --this.tilesLoading_;\n            }\n            this.tileChangeCallback_();\n        }\n    };\n    /**\n     * @param {number} maxTotalLoading Maximum number tiles to load simultaneously.\n     * @param {number} maxNewLoads Maximum number of new tiles to load.\n     */\n    TileQueue.prototype.loadMoreTiles = function (maxTotalLoading, maxNewLoads) {\n        var newLoads = 0;\n        var abortedTiles = false;\n        var state, tile, tileKey;\n        while (this.tilesLoading_ < maxTotalLoading && newLoads < maxNewLoads &&\n            this.getCount() > 0) {\n            tile = /** @type {import(\"./Tile.js\").default} */ (this.dequeue()[0]);\n            tileKey = tile.getKey();\n            state = tile.getState();\n            if (state === TileState.ABORT) {\n                abortedTiles = true;\n            }\n            else if (state === TileState.IDLE && !(tileKey in this.tilesLoadingKeys_)) {\n                this.tilesLoadingKeys_[tileKey] = true;\n                ++this.tilesLoading_;\n                ++newLoads;\n                tile.load();\n            }\n        }\n        if (newLoads === 0 && abortedTiles) {\n            // Do not stop the render loop when all wanted tiles were aborted due to\n            // a small, saturated tile cache.\n            this.tileChangeCallback_();\n        }\n    };\n    return TileQueue;\n}(PriorityQueue));\nexport default TileQueue;\n//# sourceMappingURL=TileQueue.js.map","/**\n * @module ol/tilegrid/common\n */\n/**\n * Default maximum zoom for default tile grids.\n * @type {number}\n */\nexport var DEFAULT_MAX_ZOOM = 42;\n/**\n * Default tile size.\n * @type {number}\n */\nexport var DEFAULT_TILE_SIZE = 256;\n//# sourceMappingURL=common.js.map","/**\n * @module ol/centerconstraint\n */\nimport { clamp } from './math.js';\n/**\n * @typedef {function((import(\"./coordinate.js\").Coordinate|undefined), number, import(\"./size.js\").Size, boolean=): (import(\"./coordinate.js\").Coordinate|undefined)} Type\n */\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {boolean} onlyCenter If true, the constraint will only apply to the view center.\n * @param {boolean} smooth If true, the view will be able to go slightly out of the given extent\n * (only during interaction and animation).\n * @return {Type} The constraint.\n */\nexport function createExtent(extent, onlyCenter, smooth) {\n    return (\n    /**\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} center Center.\n     * @param {number} resolution Resolution.\n     * @param {import(\"./size.js\").Size} size Viewport size; unused if `onlyCenter` was specified.\n     * @param {boolean=} opt_isMoving True if an interaction or animation is in progress.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n     */\n    function (center, resolution, size, opt_isMoving) {\n        if (center) {\n            var viewWidth = onlyCenter ? 0 : size[0] * resolution;\n            var viewHeight = onlyCenter ? 0 : size[1] * resolution;\n            var minX = extent[0] + viewWidth / 2;\n            var maxX = extent[2] - viewWidth / 2;\n            var minY = extent[1] + viewHeight / 2;\n            var maxY = extent[3] - viewHeight / 2;\n            // note: when zooming out of bounds, min and max values for x and y may\n            // end up inverted (min > max); this has to be accounted for\n            if (minX > maxX) {\n                minX = maxX = (maxX + minX) / 2;\n            }\n            if (minY > maxY) {\n                minY = maxY = (maxY + minY) / 2;\n            }\n            var x = clamp(center[0], minX, maxX);\n            var y = clamp(center[1], minY, maxY);\n            var ratio = 30 * resolution;\n            // during an interaction, allow some overscroll\n            if (opt_isMoving && smooth) {\n                x += -ratio * Math.log(1 + Math.max(0, minX - center[0]) / ratio) +\n                    ratio * Math.log(1 + Math.max(0, center[0] - maxX) / ratio);\n                y += -ratio * Math.log(1 + Math.max(0, minY - center[1]) / ratio) +\n                    ratio * Math.log(1 + Math.max(0, center[1] - maxY) / ratio);\n            }\n            return [x, y];\n        }\n        else {\n            return undefined;\n        }\n    });\n}\n/**\n * @param {import(\"./coordinate.js\").Coordinate=} center Center.\n * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n */\nexport function none(center) {\n    return center;\n}\n//# sourceMappingURL=centerconstraint.js.map","/**\n * @module ol/resolutionconstraint\n */\nimport { linearFindNearest } from './array.js';\nimport { getHeight, getWidth } from './extent';\nimport { clamp } from './math';\n/**\n * @typedef {function((number|undefined), number, import(\"./size.js\").Size, boolean=): (number|undefined)} Type\n */\n/**\n * Returns a modified resolution taking into acocunt the viewport size and maximum\n * allowed extent.\n * @param {number} resolution Resolution\n * @param {import(\"./extent.js\").Extent=} maxExtent Maximum allowed extent.\n * @param {import(\"./size.js\").Size} viewportSize Viewport size.\n * @return {number} Capped resolution.\n */\nfunction getViewportClampedResolution(resolution, maxExtent, viewportSize) {\n    var xResolution = getWidth(maxExtent) / viewportSize[0];\n    var yResolution = getHeight(maxExtent) / viewportSize[1];\n    return Math.min(resolution, Math.min(xResolution, yResolution));\n}\n/**\n * Returns a modified resolution to be between maxResolution and minResolution while\n * still allowing the value to be slightly out of bounds.\n * Note: the computation is based on the logarithm function (ln):\n *  - at 1, ln(x) is 0\n *  - above 1, ln(x) keeps increasing but at a much slower pace than x\n * The final result is clamped to prevent getting too far away from bounds.\n * @param {number} resolution Resolution.\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @return {number} Smoothed resolution.\n */\nfunction getSmoothClampedResolution(resolution, maxResolution, minResolution) {\n    var result = Math.min(resolution, maxResolution);\n    var ratio = 50;\n    result *= Math.log(1 + ratio * Math.max(0, resolution / maxResolution - 1)) / ratio + 1;\n    if (minResolution) {\n        result = Math.max(result, minResolution);\n        result /= Math.log(1 + ratio * Math.max(0, minResolution / resolution - 1)) / ratio + 1;\n    }\n    return clamp(result, minResolution / 2, maxResolution * 2);\n}\n/**\n * @param {Array<number>} resolutions Resolutions.\n * @param {boolean=} opt_smooth If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent=} opt_maxExtent Maximum allowed extent.\n * @return {Type} Zoom function.\n */\nexport function createSnapToResolutions(resolutions, opt_smooth, opt_maxExtent) {\n    return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean=} opt_isMoving True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, opt_isMoving) {\n        if (resolution !== undefined) {\n            var maxResolution = resolutions[0];\n            var minResolution = resolutions[resolutions.length - 1];\n            var cappedMaxRes = opt_maxExtent ?\n                getViewportClampedResolution(maxResolution, opt_maxExtent, size) :\n                maxResolution;\n            // during interacting or animating, allow intermediary values\n            if (opt_isMoving) {\n                var smooth = opt_smooth !== undefined ? opt_smooth : true;\n                if (!smooth) {\n                    return clamp(resolution, minResolution, cappedMaxRes);\n                }\n                return getSmoothClampedResolution(resolution, cappedMaxRes, minResolution);\n            }\n            var capped = Math.min(cappedMaxRes, resolution);\n            var z = Math.floor(linearFindNearest(resolutions, capped, direction));\n            return resolutions[z];\n        }\n        else {\n            return undefined;\n        }\n    });\n}\n/**\n * @param {number} power Power.\n * @param {number} maxResolution Maximum resolution.\n * @param {number=} opt_minResolution Minimum resolution.\n * @param {boolean=} opt_smooth If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent=} opt_maxExtent Maximum allowed extent.\n * @return {Type} Zoom function.\n */\nexport function createSnapToPower(power, maxResolution, opt_minResolution, opt_smooth, opt_maxExtent) {\n    return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean=} opt_isMoving True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, opt_isMoving) {\n        if (resolution !== undefined) {\n            var cappedMaxRes = opt_maxExtent ?\n                getViewportClampedResolution(maxResolution, opt_maxExtent, size) :\n                maxResolution;\n            var minResolution = opt_minResolution !== undefined ? opt_minResolution : 0;\n            // during interacting or animating, allow intermediary values\n            if (opt_isMoving) {\n                var smooth = opt_smooth !== undefined ? opt_smooth : true;\n                if (!smooth) {\n                    return clamp(resolution, minResolution, cappedMaxRes);\n                }\n                return getSmoothClampedResolution(resolution, cappedMaxRes, minResolution);\n            }\n            var offset = -direction * (0.5 - 1e-9) + 0.5;\n            var capped = Math.min(cappedMaxRes, resolution);\n            var zoomLevel = Math.floor(Math.log(maxResolution / capped) / Math.log(power) + offset);\n            var newResolution = maxResolution / Math.pow(power, zoomLevel);\n            return clamp(newResolution, minResolution, cappedMaxRes);\n        }\n        else {\n            return undefined;\n        }\n    });\n}\n/**\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @param {boolean=} opt_smooth If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent=} opt_maxExtent Maximum allowed extent.\n * @return {Type} Zoom function.\n */\nexport function createMinMaxResolution(maxResolution, minResolution, opt_smooth, opt_maxExtent) {\n    return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean=} opt_isMoving True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, opt_isMoving) {\n        if (resolution !== undefined) {\n            var cappedMaxRes = opt_maxExtent ?\n                getViewportClampedResolution(maxResolution, opt_maxExtent, size) :\n                maxResolution;\n            var smooth = opt_smooth !== undefined ? opt_smooth : true;\n            if (!smooth || !opt_isMoving) {\n                return clamp(resolution, minResolution, cappedMaxRes);\n            }\n            return getSmoothClampedResolution(resolution, cappedMaxRes, minResolution);\n        }\n        else {\n            return undefined;\n        }\n    });\n}\n//# sourceMappingURL=resolutionconstraint.js.map","/**\n * @module ol/rotationconstraint\n */\nimport { toRadians } from './math.js';\n/**\n * @typedef {function((number|undefined), boolean=): (number|undefined)} Type\n */\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function disable(rotation) {\n    if (rotation !== undefined) {\n        return 0;\n    }\n    else {\n        return undefined;\n    }\n}\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function none(rotation) {\n    if (rotation !== undefined) {\n        return rotation;\n    }\n    else {\n        return undefined;\n    }\n}\n/**\n * @param {number} n N.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToN(n) {\n    var theta = 2 * Math.PI / n;\n    return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean=} opt_isMoving True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, opt_isMoving) {\n        if (opt_isMoving) {\n            return rotation;\n        }\n        if (rotation !== undefined) {\n            rotation = Math.floor(rotation / theta + 0.5) * theta;\n            return rotation;\n        }\n        else {\n            return undefined;\n        }\n    });\n}\n/**\n * @param {number=} opt_tolerance Tolerance.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToZero(opt_tolerance) {\n    var tolerance = opt_tolerance || toRadians(5);\n    return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} opt_isMoving True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, opt_isMoving) {\n        if (opt_isMoving) {\n            return rotation;\n        }\n        if (rotation !== undefined) {\n            if (Math.abs(rotation) <= tolerance) {\n                return 0;\n            }\n            else {\n                return rotation;\n            }\n        }\n        else {\n            return undefined;\n        }\n    });\n}\n//# sourceMappingURL=rotationconstraint.js.map","/**\n * @module ol/ViewHint\n */\n/**\n * @enum {number}\n */\nexport default {\n    ANIMATING: 0,\n    INTERACTING: 1\n};\n//# sourceMappingURL=ViewHint.js.map","/**\n * @module ol/ViewProperty\n */\n/**\n * @enum {string}\n */\nexport default {\n    CENTER: 'center',\n    RESOLUTION: 'resolution',\n    ROTATION: 'rotation'\n};\n//# sourceMappingURL=ViewProperty.js.map","/**\n * @module ol/string\n */\n/**\n * @param {number} number Number to be formatted\n * @param {number} width The desired width\n * @param {number=} opt_precision Precision of the output string (i.e. number of decimal places)\n * @returns {string} Formatted string\n */\nexport function padNumber(number, width, opt_precision) {\n    var numberString = opt_precision !== undefined ? number.toFixed(opt_precision) : '' + number;\n    var decimal = numberString.indexOf('.');\n    decimal = decimal === -1 ? numberString.length : decimal;\n    return decimal > width ? numberString : new Array(1 + width - decimal).join('0') + numberString;\n}\n/**\n * Adapted from https://github.com/omichelsen/compare-versions/blob/master/index.js\n * @param {string|number} v1 First version\n * @param {string|number} v2 Second version\n * @returns {number} Value\n */\nexport function compareVersions(v1, v2) {\n    var s1 = ('' + v1).split('.');\n    var s2 = ('' + v2).split('.');\n    for (var i = 0; i < Math.max(s1.length, s2.length); i++) {\n        var n1 = parseInt(s1[i] || '0', 10);\n        var n2 = parseInt(s2[i] || '0', 10);\n        if (n1 > n2) {\n            return 1;\n        }\n        if (n2 > n1) {\n            return -1;\n        }\n    }\n    return 0;\n}\n//# sourceMappingURL=string.js.map","/**\n * @module ol/coordinate\n */\nimport { modulo } from './math.js';\nimport { padNumber } from './string.js';\n/**\n * An array of numbers representing an xy coordinate. Example: `[16, 48]`.\n * @typedef {Array<number>} Coordinate\n * @api\n */\n/**\n * A function that takes a {@link module:ol/coordinate~Coordinate} and\n * transforms it into a `{string}`.\n *\n * @typedef {function((Coordinate|undefined)): string} CoordinateFormat\n * @api\n */\n/**\n * Add `delta` to `coordinate`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {add} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     add(coord, [-2, 4]);\n *     // coord is now [5.85, 51.983333]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {Coordinate} delta Delta.\n * @return {Coordinate} The input coordinate adjusted by\n * the given delta.\n * @api\n */\nexport function add(coordinate, delta) {\n    coordinate[0] += +delta[0];\n    coordinate[1] += +delta[1];\n    return coordinate;\n}\n/**\n * Calculates the point closest to the passed coordinate on the passed circle.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {import(\"./geom/Circle.js\").default} circle The circle.\n * @return {Coordinate} Closest point on the circumference.\n */\nexport function closestOnCircle(coordinate, circle) {\n    var r = circle.getRadius();\n    var center = circle.getCenter();\n    var x0 = center[0];\n    var y0 = center[1];\n    var x1 = coordinate[0];\n    var y1 = coordinate[1];\n    var dx = x1 - x0;\n    var dy = y1 - y0;\n    if (dx === 0 && dy === 0) {\n        dx = 1;\n    }\n    var d = Math.sqrt(dx * dx + dy * dy);\n    var x = x0 + r * dx / d;\n    var y = y0 + r * dy / d;\n    return [x, y];\n}\n/**\n * Calculates the point closest to the passed coordinate on the passed segment.\n * This is the foot of the perpendicular of the coordinate to the segment when\n * the foot is on the segment, or the closest segment coordinate when the foot\n * is outside the segment.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {Array<Coordinate>} segment The two coordinates\n * of the segment.\n * @return {Coordinate} The foot of the perpendicular of\n * the coordinate to the segment.\n */\nexport function closestOnSegment(coordinate, segment) {\n    var x0 = coordinate[0];\n    var y0 = coordinate[1];\n    var start = segment[0];\n    var end = segment[1];\n    var x1 = start[0];\n    var y1 = start[1];\n    var x2 = end[0];\n    var y2 = end[1];\n    var dx = x2 - x1;\n    var dy = y2 - y1;\n    var along = (dx === 0 && dy === 0) ? 0 :\n        ((dx * (x0 - x1)) + (dy * (y0 - y1))) / ((dx * dx + dy * dy) || 0);\n    var x, y;\n    if (along <= 0) {\n        x = x1;\n        y = y1;\n    }\n    else if (along >= 1) {\n        x = x2;\n        y = y2;\n    }\n    else {\n        x = x1 + along * dx;\n        y = y1 + along * dy;\n    }\n    return [x, y];\n}\n/**\n * Returns a {@link module:ol/coordinate~CoordinateFormat} function that can be\n * used to format\n * a {Coordinate} to a string.\n *\n * Example without specifying the fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var stringifyFunc = createStringXY();\n *     var out = stringifyFunc(coord);\n *     // out is now '8, 48'\n *\n * Example with explicitly specifying 2 fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var stringifyFunc = createStringXY(2);\n *     var out = stringifyFunc(coord);\n *     // out is now '7.85, 47.98'\n *\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {CoordinateFormat} Coordinate format.\n * @api\n */\nexport function createStringXY(opt_fractionDigits) {\n    return (\n    /**\n     * @param {Coordinate} coordinate Coordinate.\n     * @return {string} String XY.\n     */\n    function (coordinate) {\n        return toStringXY(coordinate, opt_fractionDigits);\n    });\n}\n/**\n * @param {string} hemispheres Hemispheres.\n * @param {number} degrees Degrees.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} String.\n */\nexport function degreesToStringHDMS(hemispheres, degrees, opt_fractionDigits) {\n    var normalizedDegrees = modulo(degrees + 180, 360) - 180;\n    var x = Math.abs(3600 * normalizedDegrees);\n    var dflPrecision = opt_fractionDigits || 0;\n    var precision = Math.pow(10, dflPrecision);\n    var deg = Math.floor(x / 3600);\n    var min = Math.floor((x - deg * 3600) / 60);\n    var sec = x - (deg * 3600) - (min * 60);\n    sec = Math.ceil(sec * precision) / precision;\n    if (sec >= 60) {\n        sec = 0;\n        min += 1;\n    }\n    if (min >= 60) {\n        min = 0;\n        deg += 1;\n    }\n    return deg + '\\u00b0 ' + padNumber(min, 2) + '\\u2032 ' +\n        padNumber(sec, 2, dflPrecision) + '\\u2033' +\n        (normalizedDegrees == 0 ? '' : ' ' + hemispheres.charAt(normalizedDegrees < 0 ? 1 : 0));\n}\n/**\n * Transforms the given {@link module:ol/coordinate~Coordinate} to a string\n * using the given string template. The strings `{x}` and `{y}` in the template\n * will be replaced with the first and second coordinate values respectively.\n *\n * Example without specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var template = 'Coordinate is ({x}|{y}).';\n *     var out = format(coord, template);\n *     // out is now 'Coordinate is (8|48).'\n *\n * Example explicitly specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var template = 'Coordinate is ({x}|{y}).';\n *     var out = format(coord, template, 2);\n *     // out is now 'Coordinate is (7.85|47.98).'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {string} template A template string with `{x}` and `{y}` placeholders\n *     that will be replaced by first and second coordinate values.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Formatted coordinate.\n * @api\n */\nexport function format(coordinate, template, opt_fractionDigits) {\n    if (coordinate) {\n        return template\n            .replace('{x}', coordinate[0].toFixed(opt_fractionDigits))\n            .replace('{y}', coordinate[1].toFixed(opt_fractionDigits));\n    }\n    else {\n        return '';\n    }\n}\n/**\n * @param {Coordinate} coordinate1 First coordinate.\n * @param {Coordinate} coordinate2 Second coordinate.\n * @return {boolean} The two coordinates are equal.\n */\nexport function equals(coordinate1, coordinate2) {\n    var equals = true;\n    for (var i = coordinate1.length - 1; i >= 0; --i) {\n        if (coordinate1[i] != coordinate2[i]) {\n            equals = false;\n            break;\n        }\n    }\n    return equals;\n}\n/**\n * Rotate `coordinate` by `angle`. `coordinate` is modified in place and\n * returned by the function.\n *\n * Example:\n *\n *     import {rotate} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var rotateRadians = Math.PI / 2; // 90 degrees\n *     rotate(coord, rotateRadians);\n *     // coord is now [-47.983333, 7.85]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} angle Angle in radian.\n * @return {Coordinate} Coordinate.\n * @api\n */\nexport function rotate(coordinate, angle) {\n    var cosAngle = Math.cos(angle);\n    var sinAngle = Math.sin(angle);\n    var x = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n    var y = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n    coordinate[0] = x;\n    coordinate[1] = y;\n    return coordinate;\n}\n/**\n * Scale `coordinate` by `scale`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {scale as scaleCoordinate} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var scale = 1.2;\n *     scaleCoordinate(coord, scale);\n *     // coord is now [9.42, 57.5799996]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} scale Scale factor.\n * @return {Coordinate} Coordinate.\n */\nexport function scale(coordinate, scale) {\n    coordinate[0] *= scale;\n    coordinate[1] *= scale;\n    return coordinate;\n}\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Squared distance between coord1 and coord2.\n */\nexport function squaredDistance(coord1, coord2) {\n    var dx = coord1[0] - coord2[0];\n    var dy = coord1[1] - coord2[1];\n    return dx * dx + dy * dy;\n}\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Distance between coord1 and coord2.\n */\nexport function distance(coord1, coord2) {\n    return Math.sqrt(squaredDistance(coord1, coord2));\n}\n/**\n * Calculate the squared distance from a coordinate to a line segment.\n *\n * @param {Coordinate} coordinate Coordinate of the point.\n * @param {Array<Coordinate>} segment Line segment (2\n * coordinates).\n * @return {number} Squared distance from the point to the line segment.\n */\nexport function squaredDistanceToSegment(coordinate, segment) {\n    return squaredDistance(coordinate, closestOnSegment(coordinate, segment));\n}\n/**\n * Format a geographic coordinate with the hemisphere, degrees, minutes, and\n * seconds.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringHDMS} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringHDMS(coord);\n *     // out is now '47° 58′ 60″ N 7° 50′ 60″ E'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringHDMS} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringHDMS(coord, 1);\n *     // out is now '47° 58′ 60.0″ N 7° 50′ 60.0″ E'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Hemisphere, degrees, minutes and seconds.\n * @api\n */\nexport function toStringHDMS(coordinate, opt_fractionDigits) {\n    if (coordinate) {\n        return degreesToStringHDMS('NS', coordinate[1], opt_fractionDigits) + ' ' +\n            degreesToStringHDMS('EW', coordinate[0], opt_fractionDigits);\n    }\n    else {\n        return '';\n    }\n}\n/**\n * Format a coordinate as a comma delimited string.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringXY(coord);\n *     // out is now '8, 48'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringXY(coord, 1);\n *     // out is now '7.8, 48.0'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} XY.\n * @api\n */\nexport function toStringXY(coordinate, opt_fractionDigits) {\n    return format(coordinate, '{x}, {y}', opt_fractionDigits);\n}\n//# sourceMappingURL=coordinate.js.map","/**\n * @module ol/easing\n */\n/**\n * Start slow and speed up.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeIn(t) {\n    return Math.pow(t, 3);\n}\n/**\n * Start fast and slow down.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeOut(t) {\n    return 1 - easeIn(1 - t);\n}\n/**\n * Start slow, speed up, and then slow down again.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function inAndOut(t) {\n    return 3 * t * t - 2 * t * t * t;\n}\n/**\n * Maintain a constant speed over time.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function linear(t) {\n    return t;\n}\n/**\n * Start slow, speed up, and at the very end slow down again.  This has the\n * same general behavior as {@link module:ol/easing~inAndOut}, but the final\n * slowdown is delayed.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function upAndDown(t) {\n    if (t < 0.5) {\n        return inAndOut(2 * t);\n    }\n    else {\n        return 1 - inAndOut(2 * (t - 0.5));\n    }\n}\n//# sourceMappingURL=easing.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/View\n */\nimport { DEFAULT_TILE_SIZE } from './tilegrid/common.js';\nimport { getUid } from './util.js';\nimport { VOID } from './functions.js';\nimport { createExtent, none as centerNone } from './centerconstraint.js';\nimport BaseObject from './Object.js';\nimport { createSnapToResolutions, createSnapToPower } from './resolutionconstraint.js';\nimport { createSnapToZero, createSnapToN, none as rotationNone, disable } from './rotationconstraint.js';\nimport ViewHint from './ViewHint.js';\nimport ViewProperty from './ViewProperty.js';\nimport { linearFindNearest } from './array.js';\nimport { assert } from './asserts.js';\nimport { add as addCoordinate, rotate as rotateCoordinate, equals as coordinatesEqual } from './coordinate.js';\nimport { inAndOut } from './easing.js';\nimport { getForViewAndSize, getCenter, getHeight, getWidth, isEmpty } from './extent.js';\nimport GeometryType from './geom/GeometryType.js';\nimport { fromExtent as polygonFromExtent } from './geom/Polygon.js';\nimport { clamp, modulo } from './math.js';\nimport { assign } from './obj.js';\nimport { createProjection, METERS_PER_UNIT } from './proj.js';\nimport Units from './proj/Units.js';\nimport { equals } from './coordinate';\nimport { easeOut } from './easing';\nimport { createMinMaxResolution } from './resolutionconstraint';\n/**\n * An animation configuration\n *\n * @typedef {Object} Animation\n * @property {import(\"./coordinate.js\").Coordinate} [sourceCenter]\n * @property {import(\"./coordinate.js\").Coordinate} [targetCenter]\n * @property {number} [sourceResolution]\n * @property {number} [targetResolution]\n * @property {number} [sourceRotation]\n * @property {number} [targetRotation]\n * @property {import(\"./coordinate.js\").Coordinate} [anchor]\n * @property {number} start\n * @property {number} duration\n * @property {boolean} complete\n * @property {function(number):number} easing\n * @property {function(boolean)} callback\n */\n/**\n * @typedef {Object} Constraints\n * @property {import(\"./centerconstraint.js\").Type} center\n * @property {import(\"./resolutionconstraint.js\").Type} resolution\n * @property {import(\"./rotationconstraint.js\").Type} rotation\n */\n/**\n * @typedef {Object} FitOptions\n * @property {import(\"./size.js\").Size} [size] The size in pixels of the box to fit\n * the extent into. Default is the current size of the first map in the DOM that\n * uses this view, or `[100, 100]` if no such map is found.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in pixels) to be\n * cleared inside the view. Values in the array are top, right, bottom and left\n * padding.\n * @property {boolean} [nearest=false] If the view `constrainResolution` option is `true`,\n * get the nearest extent instead of the closest that actually fits the view.\n * @property {number} [minResolution=0] Minimum resolution that we zoom to.\n * @property {number} [maxZoom] Maximum zoom level that we zoom to. If\n * `minResolution` is given, this property is ignored.\n * @property {number} [duration] The duration of the animation in milliseconds.\n * By default, there is no animation to the target extent.\n * @property {function(number):number} [easing] The easing function used during\n * the animation (defaults to {@link module:ol/easing~inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n * @property {function(boolean)} [callback] Function called when the view is in\n * its final position. The callback will be called with `true` if the animation\n * series completed on its own or `false` if it was cancelled.\n */\n/**\n * @typedef {Object} ViewOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The initial center for\n * the view. The coordinate system for the center is specified with the\n * `projection` option. Layer sources will not be fetched if this is not set,\n * but the center can be set later with {@link #setCenter}.\n * @property {boolean|number} [constrainRotation=true] Rotation constraint.\n * `false` means no constraint. `true` means no constraint, but snap to zero\n * near zero. A number constrains the rotation to that number of values. For\n * example, `4` will constrain the rotation to 0, 90, 180, and 270 degrees.\n * @property {boolean} [enableRotation=true] Enable rotation.\n * If `false`, a rotation constraint that always sets the rotation to zero is\n * used. The `constrainRotation` option has no effect if `enableRotation` is\n * `false`.\n * @property {import(\"./extent.js\").Extent} [extent] The extent that constrains the\n * view, in other words, nothing outside of this extent can be visible on the map.\n * @property {boolean} [constrainOnlyCenter=false] If true, the extent\n * constraint will only apply to the view center and not the whole extent.\n * @property {boolean} [smoothExtentConstraint=true] If true, the extent\n * constraint will be applied smoothly, i.e. allow the view to go slightly outside\n * of the given `extent`.\n * @property {number} [maxResolution] The maximum resolution used to determine\n * the resolution constraint. It is used together with `minResolution` (or\n * `maxZoom`) and `zoomFactor`. If unspecified it is calculated in such a way\n * that the projection's validity extent fits in a 256x256 px tile. If the\n * projection is Spherical Mercator (the default) then `maxResolution` defaults\n * to `40075016.68557849 / 256 = 156543.03392804097`.\n * @property {number} [minResolution] The minimum resolution used to determine\n * the resolution constraint.  It is used together with `maxResolution` (or\n * `minZoom`) and `zoomFactor`.  If unspecified it is calculated assuming 29\n * zoom levels (with a factor of 2). If the projection is Spherical Mercator\n * (the default) then `minResolution` defaults to\n * `40075016.68557849 / 256 / Math.pow(2, 28) = 0.0005831682455839253`.\n * @property {number} [maxZoom=28] The maximum zoom level used to determine the\n * resolution constraint. It is used together with `minZoom` (or\n * `maxResolution`) and `zoomFactor`.  Note that if `minResolution` is also\n * provided, it is given precedence over `maxZoom`.\n * @property {number} [minZoom=0] The minimum zoom level used to determine the\n * resolution constraint. It is used together with `maxZoom` (or\n * `minResolution`) and `zoomFactor`.  Note that if `maxResolution` is also\n * provided, it is given precedence over `minZoom`.\n * @property {boolean} [multiWorld=false] No more than one world is visible.\n * @property {boolean} [constrainResolution=false] If true, the view will always\n * animate to the closest zoom level after an interaction; false means\n * intermediary zoom levels are allowed.\n * @property {boolean} [smoothResolutionConstraint=true] If true, the resolution\n * min/max values will be applied smoothly, i. e. allow the view to exceed slightly\n * the given resolution or zoom bounds.\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857'] The\n * projection. The default is Spherical Mercator.\n * @property {number} [resolution] The initial resolution for the view. The\n * units are `projection` units per pixel (e.g. meters per pixel). An\n * alternative to setting this is to set `zoom`. Layer sources will not be\n * fetched if neither this nor `zoom` are defined, but they can be set later\n * with {@link #setZoom} or {@link #setResolution}.\n * @property {Array<number>} [resolutions] Resolutions to determine the\n * resolution constraint. If set the `maxResolution`, `minResolution`,\n * `minZoom`, `maxZoom`, and `zoomFactor` options are ignored.\n * @property {number} [rotation=0] The initial rotation for the view in radians\n * (positive rotation clockwise, 0 means North).\n * @property {number} [zoom] Only used if `resolution` is not defined. Zoom\n * level used to calculate the initial resolution for the view.\n * @property {number} [zoomFactor=2] The zoom factor used to compute the\n * corresponding resolution.\n */\n/**\n * @typedef {Object} AnimationOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The center of the view at the end of\n * the animation.\n * @property {number} [zoom] The zoom level of the view at the end of the\n * animation. This takes precedence over `resolution`.\n * @property {number} [resolution] The resolution of the view at the end\n * of the animation.  If `zoom` is also provided, this option will be ignored.\n * @property {number} [rotation] The rotation of the view at the end of\n * the animation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Optional anchor to remain fixed\n * during a rotation or resolution animation.\n * @property {number} [duration=1000] The duration of the animation in milliseconds.\n * @property {function(number):number} [easing] The easing function used\n * during the animation (defaults to {@link module:ol/easing~inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n */\n/**\n * @typedef {Object} State\n * @property {import(\"./coordinate.js\").Coordinate} center\n * @property {import(\"./proj/Projection.js\").default} projection\n * @property {number} resolution\n * @property {number} rotation\n * @property {number} zoom\n */\n/**\n * Default min zoom level for the map view.\n * @type {number}\n */\nvar DEFAULT_MIN_ZOOM = 0;\n/**\n * @classdesc\n * A View object represents a simple 2D view of the map.\n *\n * This is the object to act upon to change the center, resolution,\n * and rotation of the map.\n *\n * A View has a `projection`. The projection determines the\n * coordinate system of the center, and its units determine the units of the\n * resolution (projection units per pixel). The default projection is\n * Spherical Mercator (EPSG:3857).\n *\n * ### The view states\n *\n * An View is determined by three states: `center`, `resolution`,\n * and `rotation`. Each state has a corresponding getter and setter, e.g.\n * `getCenter` and `setCenter` for the `center` state.\n *\n * The `zoom` state is actually not saved on the view: all computations\n * internally use the `resolution` state. Still, the `setZoom` and `getZoom`\n * methods are available, as well as `getResolutionForZoom` and\n * `getZoomForResolution` to switch from one system to the other.\n *\n * ### The constraints\n *\n * `setCenter`, `setResolution` and `setRotation` can be used to change the\n * states of the view, but any constraint defined in the constructor will\n * be applied along the way.\n *\n * A View object can have a *resolution constraint*, a *rotation constraint*\n * and a *center constraint*.\n *\n * The *resolution constraint* typically restricts min/max values and\n * snaps to specific resolutions. It is determined by the following\n * options: `resolutions`, `maxResolution`, `maxZoom` and `zoomFactor`.\n * If `resolutions` is set, the other three options are ignored. See\n * documentation for each option for more information. By default, the view\n * only has a min/max restriction and allow intermediary zoom levels when\n * pinch-zooming for example.\n *\n * The *rotation constraint* snaps to specific angles. It is determined\n * by the following options: `enableRotation` and `constrainRotation`.\n * By default rotation is allowed and its value is snapped to zero when approaching the\n * horizontal.\n *\n * The *center constraint* is determined by the `extent` option. By\n * default the view center is not constrained at all.\n *\n * ### Changing the view state\n *\n * It is important to note that `setZoom`, `setResolution`, `setCenter` and\n * `setRotation` are subject to the above mentioned constraints. As such, it\n * may sometimes not be possible to know in advance the resulting state of the\n * View. For example, calling `setResolution(10)` does not guarantee that\n * `getResolution()` will return `10`.\n *\n * A consequence of this is that, when applying a delta on the view state, one\n * should use `adjustCenter`, `adjustRotation`, `adjustZoom` and `adjustResolution`\n * rather than the corresponding setters. This will let view do its internal\n * computations. Besides, the `adjust*` methods also take an `opt_anchor`\n * argument which allows specifying an origin for the transformation.\n *\n * ### Interacting with the view\n *\n * View constraints are usually only applied when the view is *at rest*, meaning that\n * no interaction or animation is ongoing. As such, if the user puts the view in a\n * state that is not equivalent to a constrained one (e.g. rotating the view when\n * the snap angle is 0), an animation will be triggered at the interaction end to\n * put back the view to a stable state;\n *\n * @api\n */\nvar View = /** @class */ (function (_super) {\n    __extends(View, _super);\n    /**\n     * @param {ViewOptions=} opt_options View options.\n     */\n    function View(opt_options) {\n        var _this = _super.call(this) || this;\n        var options = assign({}, opt_options);\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.hints_ = [0, 0];\n        /**\n         * @private\n         * @type {Array<Array<Animation>>}\n         */\n        _this.animations_ = [];\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.updateAnimationKey_;\n        /**\n         * @private\n         * @const\n         * @type {import(\"./proj/Projection.js\").default}\n         */\n        _this.projection_ = createProjection(options.projection, 'EPSG:3857');\n        /**\n         * @private\n         * @type {import(\"./coordinate.js\").Coordinate|undefined}\n         */\n        _this.targetCenter_ = null;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.targetResolution_;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.targetRotation_;\n        _this.applyOptions_(options);\n        return _this;\n    }\n    /**\n     * Set up the view with the given options.\n     * @param {ViewOptions} options View options.\n     */\n    View.prototype.applyOptions_ = function (options) {\n        /**\n         * @type {Object<string, *>}\n         */\n        var properties = {};\n        var resolutionConstraintInfo = createResolutionConstraint(options);\n        /**\n         * @private\n         * @type {number}\n         */\n        this.maxResolution_ = resolutionConstraintInfo.maxResolution;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.minResolution_ = resolutionConstraintInfo.minResolution;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.zoomFactor_ = resolutionConstraintInfo.zoomFactor;\n        /**\n         * @private\n         * @type {Array<number>|undefined}\n         */\n        this.resolutions_ = options.resolutions;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.minZoom_ = resolutionConstraintInfo.minZoom;\n        var centerConstraint = createCenterConstraint(options);\n        var resolutionConstraint = resolutionConstraintInfo.constraint;\n        var rotationConstraint = createRotationConstraint(options);\n        /**\n         * @private\n         * @type {Constraints}\n         */\n        this.constraints_ = {\n            center: centerConstraint,\n            resolution: resolutionConstraint,\n            rotation: rotationConstraint\n        };\n        this.setRotation(options.rotation !== undefined ? options.rotation : 0);\n        this.setCenter(options.center !== undefined ? options.center : null);\n        if (options.resolution !== undefined) {\n            this.setResolution(options.resolution);\n        }\n        else if (options.zoom !== undefined) {\n            this.setZoom(options.zoom);\n        }\n        this.resolveConstraints(0);\n        this.setProperties(properties);\n        /**\n         * @private\n         * @type {ViewOptions}\n         */\n        this.options_ = options;\n    };\n    /**\n     * Get an updated version of the view options used to construct the view.  The\n     * current resolution (or zoom), center, and rotation are applied to any stored\n     * options.  The provided options can be used to apply new min/max zoom or\n     * resolution limits.\n     * @param {ViewOptions} newOptions New options to be applied.\n     * @return {ViewOptions} New options updated with the current view state.\n     */\n    View.prototype.getUpdatedOptions_ = function (newOptions) {\n        var options = assign({}, this.options_);\n        // preserve resolution (or zoom)\n        if (options.resolution !== undefined) {\n            options.resolution = this.getResolution();\n        }\n        else {\n            options.zoom = this.getZoom();\n        }\n        // preserve center\n        options.center = this.getCenter();\n        // preserve rotation\n        options.rotation = this.getRotation();\n        return assign({}, options, newOptions);\n    };\n    /**\n     * Animate the view.  The view's center, zoom (or resolution), and rotation\n     * can be animated for smooth transitions between view states.  For example,\n     * to animate the view to a new zoom level:\n     *\n     *     view.animate({zoom: view.getZoom() + 1});\n     *\n     * By default, the animation lasts one second and uses in-and-out easing.  You\n     * can customize this behavior by including `duration` (in milliseconds) and\n     * `easing` options (see {@link module:ol/easing}).\n     *\n     * To chain together multiple animations, call the method with multiple\n     * animation objects.  For example, to first zoom and then pan:\n     *\n     *     view.animate({zoom: 10}, {center: [0, 0]});\n     *\n     * If you provide a function as the last argument to the animate method, it\n     * will get called at the end of an animation series.  The callback will be\n     * called with `true` if the animation series completed on its own or `false`\n     * if it was cancelled.\n     *\n     * Animations are cancelled by user interactions (e.g. dragging the map) or by\n     * calling `view.setCenter()`, `view.setResolution()`, or `view.setRotation()`\n     * (or another method that calls one of these).\n     *\n     * @param {...(AnimationOptions|function(boolean): void)} var_args Animation\n     *     options.  Multiple animations can be run in series by passing multiple\n     *     options objects.  To run multiple animations in parallel, call the method\n     *     multiple times.  An optional callback can be provided as a final\n     *     argument.  The callback will be called with a boolean indicating whether\n     *     the animation completed without being cancelled.\n     * @api\n     */\n    View.prototype.animate = function (var_args) {\n        if (this.isDef() && !this.getAnimating()) {\n            this.resolveConstraints(0);\n        }\n        this.animate_.apply(this, arguments);\n    };\n    /**\n     * @private\n     * @param {...(AnimationOptions|function(boolean): void)} var_args Animation options.\n     */\n    View.prototype.animate_ = function (var_args) {\n        var animationCount = arguments.length;\n        var callback;\n        if (animationCount > 1 && typeof arguments[animationCount - 1] === 'function') {\n            callback = arguments[animationCount - 1];\n            --animationCount;\n        }\n        if (!this.isDef()) {\n            // if view properties are not yet set, shortcut to the final state\n            var state = arguments[animationCount - 1];\n            if (state.center) {\n                this.setCenter(state.center);\n            }\n            if (state.zoom !== undefined) {\n                this.setZoom(state.zoom);\n            }\n            if (state.rotation !== undefined) {\n                this.setRotation(state.rotation);\n            }\n            if (callback) {\n                animationCallback(callback, true);\n            }\n            return;\n        }\n        var start = Date.now();\n        var center = this.targetCenter_.slice();\n        var resolution = this.targetResolution_;\n        var rotation = this.targetRotation_;\n        var series = [];\n        for (var i = 0; i < animationCount; ++i) {\n            var options = /** @type {AnimationOptions} */ (arguments[i]);\n            var animation = {\n                start: start,\n                complete: false,\n                anchor: options.anchor,\n                duration: options.duration !== undefined ? options.duration : 1000,\n                easing: options.easing || inAndOut,\n                callback: callback\n            };\n            if (options.center) {\n                animation.sourceCenter = center;\n                animation.targetCenter = options.center.slice();\n                center = animation.targetCenter;\n            }\n            if (options.zoom !== undefined) {\n                animation.sourceResolution = resolution;\n                animation.targetResolution = this.getResolutionForZoom(options.zoom);\n                resolution = animation.targetResolution;\n            }\n            else if (options.resolution) {\n                animation.sourceResolution = resolution;\n                animation.targetResolution = options.resolution;\n                resolution = animation.targetResolution;\n            }\n            if (options.rotation !== undefined) {\n                animation.sourceRotation = rotation;\n                var delta = modulo(options.rotation - rotation + Math.PI, 2 * Math.PI) - Math.PI;\n                animation.targetRotation = rotation + delta;\n                rotation = animation.targetRotation;\n            }\n            // check if animation is a no-op\n            if (isNoopAnimation(animation)) {\n                animation.complete = true;\n                // we still push it onto the series for callback handling\n            }\n            else {\n                start += animation.duration;\n            }\n            series.push(animation);\n        }\n        this.animations_.push(series);\n        this.setHint(ViewHint.ANIMATING, 1);\n        this.updateAnimations_();\n    };\n    /**\n     * Determine if the view is being animated.\n     * @return {boolean} The view is being animated.\n     * @api\n     */\n    View.prototype.getAnimating = function () {\n        return this.hints_[ViewHint.ANIMATING] > 0;\n    };\n    /**\n     * Determine if the user is interacting with the view, such as panning or zooming.\n     * @return {boolean} The view is being interacted with.\n     * @api\n     */\n    View.prototype.getInteracting = function () {\n        return this.hints_[ViewHint.INTERACTING] > 0;\n    };\n    /**\n     * Cancel any ongoing animations.\n     * @api\n     */\n    View.prototype.cancelAnimations = function () {\n        this.setHint(ViewHint.ANIMATING, -this.hints_[ViewHint.ANIMATING]);\n        for (var i = 0, ii = this.animations_.length; i < ii; ++i) {\n            var series = this.animations_[i];\n            if (series[0].callback) {\n                animationCallback(series[0].callback, false);\n            }\n        }\n        this.animations_.length = 0;\n    };\n    /**\n     * Update all animations.\n     */\n    View.prototype.updateAnimations_ = function () {\n        if (this.updateAnimationKey_ !== undefined) {\n            cancelAnimationFrame(this.updateAnimationKey_);\n            this.updateAnimationKey_ = undefined;\n        }\n        if (!this.getAnimating()) {\n            return;\n        }\n        var now = Date.now();\n        var more = false;\n        for (var i = this.animations_.length - 1; i >= 0; --i) {\n            var series = this.animations_[i];\n            var seriesComplete = true;\n            for (var j = 0, jj = series.length; j < jj; ++j) {\n                var animation = series[j];\n                if (animation.complete) {\n                    continue;\n                }\n                var elapsed = now - animation.start;\n                var fraction = animation.duration > 0 ? elapsed / animation.duration : 1;\n                if (fraction >= 1) {\n                    animation.complete = true;\n                    fraction = 1;\n                }\n                else {\n                    seriesComplete = false;\n                }\n                var progress = animation.easing(fraction);\n                if (animation.sourceCenter) {\n                    var x0 = animation.sourceCenter[0];\n                    var y0 = animation.sourceCenter[1];\n                    var x1 = animation.targetCenter[0];\n                    var y1 = animation.targetCenter[1];\n                    var x = x0 + progress * (x1 - x0);\n                    var y = y0 + progress * (y1 - y0);\n                    this.targetCenter_ = [x, y];\n                }\n                if (animation.sourceResolution && animation.targetResolution) {\n                    var resolution = progress === 1 ?\n                        animation.targetResolution :\n                        animation.sourceResolution + progress * (animation.targetResolution - animation.sourceResolution);\n                    if (animation.anchor) {\n                        var size = this.getSizeFromViewport_(this.getRotation());\n                        var constrainedResolution = this.constraints_.resolution(resolution, 0, size, true);\n                        this.targetCenter_ = this.calculateCenterZoom(constrainedResolution, animation.anchor);\n                    }\n                    this.targetResolution_ = resolution;\n                    this.applyTargetState_(true);\n                }\n                if (animation.sourceRotation !== undefined && animation.targetRotation !== undefined) {\n                    var rotation = progress === 1 ?\n                        modulo(animation.targetRotation + Math.PI, 2 * Math.PI) - Math.PI :\n                        animation.sourceRotation + progress * (animation.targetRotation - animation.sourceRotation);\n                    if (animation.anchor) {\n                        var constrainedRotation = this.constraints_.rotation(rotation, true);\n                        this.targetCenter_ = this.calculateCenterRotate(constrainedRotation, animation.anchor);\n                    }\n                    this.targetRotation_ = rotation;\n                }\n                this.applyTargetState_(true);\n                more = true;\n                if (!animation.complete) {\n                    break;\n                }\n            }\n            if (seriesComplete) {\n                this.animations_[i] = null;\n                this.setHint(ViewHint.ANIMATING, -1);\n                var callback = series[0].callback;\n                if (callback) {\n                    animationCallback(callback, true);\n                }\n            }\n        }\n        // prune completed series\n        this.animations_ = this.animations_.filter(Boolean);\n        if (more && this.updateAnimationKey_ === undefined) {\n            this.updateAnimationKey_ = requestAnimationFrame(this.updateAnimations_.bind(this));\n        }\n    };\n    /**\n     * @param {number} rotation Target rotation.\n     * @param {import(\"./coordinate.js\").Coordinate} anchor Rotation anchor.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for rotation and anchor.\n     */\n    View.prototype.calculateCenterRotate = function (rotation, anchor) {\n        var center;\n        var currentCenter = this.getCenter();\n        if (currentCenter !== undefined) {\n            center = [currentCenter[0] - anchor[0], currentCenter[1] - anchor[1]];\n            rotateCoordinate(center, rotation - this.getRotation());\n            addCoordinate(center, anchor);\n        }\n        return center;\n    };\n    /**\n     * @param {number} resolution Target resolution.\n     * @param {import(\"./coordinate.js\").Coordinate} anchor Zoom anchor.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for resolution and anchor.\n     */\n    View.prototype.calculateCenterZoom = function (resolution, anchor) {\n        var center;\n        var currentCenter = this.getCenter();\n        var currentResolution = this.getResolution();\n        if (currentCenter !== undefined && currentResolution !== undefined) {\n            var x = anchor[0] - resolution * (anchor[0] - currentCenter[0]) / currentResolution;\n            var y = anchor[1] - resolution * (anchor[1] - currentCenter[1]) / currentResolution;\n            center = [x, y];\n        }\n        return center;\n    };\n    /**\n     * @private\n     * @param {number=} opt_rotation Take into account the rotation of the viewport when giving the size\n     * @return {import(\"./size.js\").Size} Viewport size or `[100, 100]` when no viewport is found.\n     */\n    View.prototype.getSizeFromViewport_ = function (opt_rotation) {\n        var size = [100, 100];\n        var selector = '.ol-viewport[data-view=\"' + getUid(this) + '\"]';\n        var element = document.querySelector(selector);\n        if (element) {\n            var metrics = getComputedStyle(element);\n            size[0] = parseInt(metrics.width, 10);\n            size[1] = parseInt(metrics.height, 10);\n        }\n        if (opt_rotation) {\n            var w = size[0];\n            var h = size[1];\n            size[0] = Math.abs(w * Math.cos(opt_rotation)) + Math.abs(h * Math.sin(opt_rotation));\n            size[1] = Math.abs(w * Math.sin(opt_rotation)) + Math.abs(h * Math.cos(opt_rotation));\n        }\n        return size;\n    };\n    /**\n     * Get the view center.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n     * @observable\n     * @api\n     */\n    View.prototype.getCenter = function () {\n        return (\n        /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (this.get(ViewProperty.CENTER)));\n    };\n    /**\n     * @return {Constraints} Constraints.\n     */\n    View.prototype.getConstraints = function () {\n        return this.constraints_;\n    };\n    /**\n     * @param {Array<number>=} opt_hints Destination array.\n     * @return {Array<number>} Hint.\n     */\n    View.prototype.getHints = function (opt_hints) {\n        if (opt_hints !== undefined) {\n            opt_hints[0] = this.hints_[0];\n            opt_hints[1] = this.hints_[1];\n            return opt_hints;\n        }\n        else {\n            return this.hints_.slice();\n        }\n    };\n    /**\n     * Calculate the extent for the current view state and the passed size.\n     * The size is the pixel dimensions of the box into which the calculated extent\n     * should fit. In most cases you want to get the extent of the entire map,\n     * that is `map.getSize()`.\n     * @param {import(\"./size.js\").Size=} opt_size Box pixel size. If not provided, the size of the\n     * first map that uses this view will be used.\n     * @return {import(\"./extent.js\").Extent} Extent.\n     * @api\n     */\n    View.prototype.calculateExtent = function (opt_size) {\n        var size = opt_size || this.getSizeFromViewport_();\n        var center = /** @type {!import(\"./coordinate.js\").Coordinate} */ (this.getCenter());\n        assert(center, 1); // The view center is not defined\n        var resolution = /** @type {!number} */ (this.getResolution());\n        assert(resolution !== undefined, 2); // The view resolution is not defined\n        var rotation = /** @type {!number} */ (this.getRotation());\n        assert(rotation !== undefined, 3); // The view rotation is not defined\n        return getForViewAndSize(center, resolution, rotation, size);\n    };\n    /**\n     * Get the maximum resolution of the view.\n     * @return {number} The maximum resolution of the view.\n     * @api\n     */\n    View.prototype.getMaxResolution = function () {\n        return this.maxResolution_;\n    };\n    /**\n     * Get the minimum resolution of the view.\n     * @return {number} The minimum resolution of the view.\n     * @api\n     */\n    View.prototype.getMinResolution = function () {\n        return this.minResolution_;\n    };\n    /**\n     * Get the maximum zoom level for the view.\n     * @return {number} The maximum zoom level.\n     * @api\n     */\n    View.prototype.getMaxZoom = function () {\n        return /** @type {number} */ (this.getZoomForResolution(this.minResolution_));\n    };\n    /**\n     * Set a new maximum zoom level for the view.\n     * @param {number} zoom The maximum zoom level.\n     * @api\n     */\n    View.prototype.setMaxZoom = function (zoom) {\n        this.applyOptions_(this.getUpdatedOptions_({ maxZoom: zoom }));\n    };\n    /**\n     * Get the minimum zoom level for the view.\n     * @return {number} The minimum zoom level.\n     * @api\n     */\n    View.prototype.getMinZoom = function () {\n        return /** @type {number} */ (this.getZoomForResolution(this.maxResolution_));\n    };\n    /**\n     * Set a new minimum zoom level for the view.\n     * @param {number} zoom The minimum zoom level.\n     * @api\n     */\n    View.prototype.setMinZoom = function (zoom) {\n        this.applyOptions_(this.getUpdatedOptions_({ minZoom: zoom }));\n    };\n    /**\n     * Set whether the view shoud allow intermediary zoom levels.\n     * @param {boolean} enabled Whether the resolution is constrained.\n     * @api\n     */\n    View.prototype.setConstrainResolution = function (enabled) {\n        this.applyOptions_(this.getUpdatedOptions_({ constrainResolution: enabled }));\n    };\n    /**\n     * Get the view projection.\n     * @return {import(\"./proj/Projection.js\").default} The projection of the view.\n     * @api\n     */\n    View.prototype.getProjection = function () {\n        return this.projection_;\n    };\n    /**\n     * Get the view resolution.\n     * @return {number|undefined} The resolution of the view.\n     * @observable\n     * @api\n     */\n    View.prototype.getResolution = function () {\n        return /** @type {number|undefined} */ (this.get(ViewProperty.RESOLUTION));\n    };\n    /**\n     * Get the resolutions for the view. This returns the array of resolutions\n     * passed to the constructor of the View, or undefined if none were given.\n     * @return {Array<number>|undefined} The resolutions of the view.\n     * @api\n     */\n    View.prototype.getResolutions = function () {\n        return this.resolutions_;\n    };\n    /**\n     * Get the resolution for a provided extent (in map units) and size (in pixels).\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {import(\"./size.js\").Size=} opt_size Box pixel size.\n     * @return {number} The resolution at which the provided extent will render at\n     *     the given size.\n     * @api\n     */\n    View.prototype.getResolutionForExtent = function (extent, opt_size) {\n        var size = opt_size || this.getSizeFromViewport_();\n        var xResolution = getWidth(extent) / size[0];\n        var yResolution = getHeight(extent) / size[1];\n        return Math.max(xResolution, yResolution);\n    };\n    /**\n     * Return a function that returns a value between 0 and 1 for a\n     * resolution. Exponential scaling is assumed.\n     * @param {number=} opt_power Power.\n     * @return {function(number): number} Resolution for value function.\n     */\n    View.prototype.getResolutionForValueFunction = function (opt_power) {\n        var power = opt_power || 2;\n        var maxResolution = this.maxResolution_;\n        var minResolution = this.minResolution_;\n        var max = Math.log(maxResolution / minResolution) / Math.log(power);\n        return (\n        /**\n         * @param {number} value Value.\n         * @return {number} Resolution.\n         */\n        function (value) {\n            var resolution = maxResolution / Math.pow(power, value * max);\n            return resolution;\n        });\n    };\n    /**\n     * Get the view rotation.\n     * @return {number} The rotation of the view in radians.\n     * @observable\n     * @api\n     */\n    View.prototype.getRotation = function () {\n        return /** @type {number} */ (this.get(ViewProperty.ROTATION));\n    };\n    /**\n     * Return a function that returns a resolution for a value between\n     * 0 and 1. Exponential scaling is assumed.\n     * @param {number=} opt_power Power.\n     * @return {function(number): number} Value for resolution function.\n     */\n    View.prototype.getValueForResolutionFunction = function (opt_power) {\n        var power = opt_power || 2;\n        var maxResolution = this.maxResolution_;\n        var minResolution = this.minResolution_;\n        var max = Math.log(maxResolution / minResolution) / Math.log(power);\n        return (\n        /**\n         * @param {number} resolution Resolution.\n         * @return {number} Value.\n         */\n        function (resolution) {\n            var value = (Math.log(maxResolution / resolution) / Math.log(power)) / max;\n            return value;\n        });\n    };\n    /**\n     * @param {number} pixelRatio Pixel ratio for center rounding.\n     * @return {State} View state.\n     */\n    View.prototype.getState = function (pixelRatio) {\n        var center = /** @type {import(\"./coordinate.js\").Coordinate} */ (this.getCenter());\n        var projection = this.getProjection();\n        var resolution = /** @type {number} */ (this.getResolution());\n        var rotation = this.getRotation();\n        return {\n            center: center.slice(0),\n            projection: projection !== undefined ? projection : null,\n            resolution: resolution,\n            rotation: rotation,\n            zoom: this.getZoom()\n        };\n    };\n    /**\n     * Get the current zoom level. This method may return non-integer zoom levels\n     * if the view does not constrain the resolution, or if an interaction or\n     * animation is underway.\n     * @return {number|undefined} Zoom.\n     * @api\n     */\n    View.prototype.getZoom = function () {\n        var zoom;\n        var resolution = this.getResolution();\n        if (resolution !== undefined) {\n            zoom = this.getZoomForResolution(resolution);\n        }\n        return zoom;\n    };\n    /**\n     * Get the zoom level for a resolution.\n     * @param {number} resolution The resolution.\n     * @return {number|undefined} The zoom level for the provided resolution.\n     * @api\n     */\n    View.prototype.getZoomForResolution = function (resolution) {\n        var offset = this.minZoom_ || 0;\n        var max, zoomFactor;\n        if (this.resolutions_) {\n            var nearest = linearFindNearest(this.resolutions_, resolution, 1);\n            offset = nearest;\n            max = this.resolutions_[nearest];\n            if (nearest == this.resolutions_.length - 1) {\n                zoomFactor = 2;\n            }\n            else {\n                zoomFactor = max / this.resolutions_[nearest + 1];\n            }\n        }\n        else {\n            max = this.maxResolution_;\n            zoomFactor = this.zoomFactor_;\n        }\n        return offset + Math.log(max / resolution) / Math.log(zoomFactor);\n    };\n    /**\n     * Get the resolution for a zoom level.\n     * @param {number} zoom Zoom level.\n     * @return {number} The view resolution for the provided zoom level.\n     * @api\n     */\n    View.prototype.getResolutionForZoom = function (zoom) {\n        if (this.resolutions_) {\n            if (this.resolutions_.length <= 1) {\n                return 0;\n            }\n            var baseLevel = clamp(Math.floor(zoom), 0, this.resolutions_.length - 2);\n            var zoomFactor = this.resolutions_[baseLevel] / this.resolutions_[baseLevel + 1];\n            return this.resolutions_[baseLevel] / Math.pow(zoomFactor, clamp(zoom - baseLevel, 0, 1));\n        }\n        else {\n            return this.maxResolution_ / Math.pow(this.zoomFactor_, zoom - this.minZoom_);\n        }\n    };\n    /**\n     * Fit the given geometry or extent based on the given map size and border.\n     * The size is pixel dimensions of the box to fit the extent into.\n     * In most cases you will want to use the map size, that is `map.getSize()`.\n     * Takes care of the map angle.\n     * @param {import(\"./geom/SimpleGeometry.js\").default|import(\"./extent.js\").Extent} geometryOrExtent The geometry or\n     *     extent to fit the view to.\n     * @param {FitOptions=} opt_options Options.\n     * @api\n     */\n    View.prototype.fit = function (geometryOrExtent, opt_options) {\n        var options = opt_options || {};\n        var size = options.size;\n        if (!size) {\n            size = this.getSizeFromViewport_();\n        }\n        /** @type {import(\"./geom/SimpleGeometry.js\").default} */\n        var geometry;\n        assert(Array.isArray(geometryOrExtent) || typeof /** @type {?} */ (geometryOrExtent).getSimplifiedGeometry === 'function', 24); // Invalid extent or geometry provided as `geometry`\n        if (Array.isArray(geometryOrExtent)) {\n            assert(!isEmpty(geometryOrExtent), 25); // Cannot fit empty extent provided as `geometry`\n            geometry = polygonFromExtent(geometryOrExtent);\n        }\n        else if (geometryOrExtent.getType() === GeometryType.CIRCLE) {\n            geometryOrExtent = geometryOrExtent.getExtent();\n            geometry = polygonFromExtent(geometryOrExtent);\n            geometry.rotate(this.getRotation(), getCenter(geometryOrExtent));\n        }\n        else {\n            geometry = geometryOrExtent;\n        }\n        var padding = options.padding !== undefined ? options.padding : [0, 0, 0, 0];\n        var nearest = options.nearest !== undefined ? options.nearest : false;\n        var minResolution;\n        if (options.minResolution !== undefined) {\n            minResolution = options.minResolution;\n        }\n        else if (options.maxZoom !== undefined) {\n            minResolution = this.getResolutionForZoom(options.maxZoom);\n        }\n        else {\n            minResolution = 0;\n        }\n        var coords = geometry.getFlatCoordinates();\n        // calculate rotated extent\n        var rotation = this.getRotation();\n        var cosAngle = Math.cos(-rotation);\n        var sinAngle = Math.sin(-rotation);\n        var minRotX = +Infinity;\n        var minRotY = +Infinity;\n        var maxRotX = -Infinity;\n        var maxRotY = -Infinity;\n        var stride = geometry.getStride();\n        for (var i = 0, ii = coords.length; i < ii; i += stride) {\n            var rotX = coords[i] * cosAngle - coords[i + 1] * sinAngle;\n            var rotY = coords[i] * sinAngle + coords[i + 1] * cosAngle;\n            minRotX = Math.min(minRotX, rotX);\n            minRotY = Math.min(minRotY, rotY);\n            maxRotX = Math.max(maxRotX, rotX);\n            maxRotY = Math.max(maxRotY, rotY);\n        }\n        // calculate resolution\n        var resolution = this.getResolutionForExtent([minRotX, minRotY, maxRotX, maxRotY], [size[0] - padding[1] - padding[3], size[1] - padding[0] - padding[2]]);\n        resolution = isNaN(resolution) ? minResolution :\n            Math.max(resolution, minResolution);\n        resolution = this.getConstrainedResolution(resolution, nearest ? 0 : 1);\n        // calculate center\n        sinAngle = -sinAngle; // go back to original rotation\n        var centerRotX = (minRotX + maxRotX) / 2;\n        var centerRotY = (minRotY + maxRotY) / 2;\n        centerRotX += (padding[1] - padding[3]) / 2 * resolution;\n        centerRotY += (padding[0] - padding[2]) / 2 * resolution;\n        var centerX = centerRotX * cosAngle - centerRotY * sinAngle;\n        var centerY = centerRotY * cosAngle + centerRotX * sinAngle;\n        var center = [centerX, centerY];\n        var callback = options.callback ? options.callback : VOID;\n        if (options.duration !== undefined) {\n            this.animate_({\n                resolution: resolution,\n                center: this.getConstrainedCenter(center, resolution),\n                duration: options.duration,\n                easing: options.easing\n            }, callback);\n        }\n        else {\n            this.targetResolution_ = resolution;\n            this.targetCenter_ = center;\n            this.applyTargetState_(false, true);\n            animationCallback(callback, true);\n        }\n    };\n    /**\n     * Center on coordinate and view position.\n     * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {import(\"./size.js\").Size} size Box pixel size.\n     * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n     * @api\n     */\n    View.prototype.centerOn = function (coordinate, size, position) {\n        // calculate rotated position\n        var rotation = this.getRotation();\n        var cosAngle = Math.cos(-rotation);\n        var sinAngle = Math.sin(-rotation);\n        var rotX = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n        var rotY = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n        var resolution = this.getResolution();\n        rotX += (size[0] / 2 - position[0]) * resolution;\n        rotY += (position[1] - size[1] / 2) * resolution;\n        // go back to original angle\n        sinAngle = -sinAngle; // go back to original rotation\n        var centerX = rotX * cosAngle - rotY * sinAngle;\n        var centerY = rotY * cosAngle + rotX * sinAngle;\n        this.setCenter([centerX, centerY]);\n    };\n    /**\n     * @return {boolean} Is defined.\n     */\n    View.prototype.isDef = function () {\n        return !!this.getCenter() && this.getResolution() !== undefined;\n    };\n    /**\n     * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n     * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n     * @api\n     */\n    View.prototype.adjustCenter = function (deltaCoordinates) {\n        var center = this.targetCenter_;\n        this.setCenter([center[0] + deltaCoordinates[0], center[1] + deltaCoordinates[1]]);\n    };\n    /**\n     * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n     * constraint will apply.\n     * @param {number} ratio The ratio to apply on the view resolution.\n     * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The origin of the transformation.\n     * @observable\n     * @api\n     */\n    View.prototype.adjustResolution = function (ratio, opt_anchor) {\n        var isMoving = this.getAnimating() || this.getInteracting();\n        var size = this.getSizeFromViewport_(this.getRotation());\n        var newResolution = this.constraints_.resolution(this.targetResolution_ * ratio, 0, size, isMoving);\n        if (opt_anchor !== undefined) {\n            this.targetCenter_ = this.calculateCenterZoom(newResolution, opt_anchor);\n        }\n        this.targetResolution_ *= ratio;\n        this.applyTargetState_();\n    };\n    /**\n     * Adds a value to the view zoom level, optionally using an anchor. Any resolution\n     * constraint will apply.\n     * @param {number} delta Relative value to add to the zoom level.\n     * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The origin of the transformation.\n     * @api\n     */\n    View.prototype.adjustZoom = function (delta, opt_anchor) {\n        this.adjustResolution(Math.pow(this.zoomFactor_, -delta), opt_anchor);\n    };\n    /**\n     * Adds a value to the view rotation, optionally using an anchor. Any rotation\n     * constraint will apply.\n     * @param {number} delta Relative value to add to the zoom rotation, in radians.\n     * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The rotation center.\n     * @observable\n     * @api\n     */\n    View.prototype.adjustRotation = function (delta, opt_anchor) {\n        var isMoving = this.getAnimating() || this.getInteracting();\n        var newRotation = this.constraints_.rotation(this.targetRotation_ + delta, isMoving);\n        if (opt_anchor !== undefined) {\n            this.targetCenter_ = this.calculateCenterRotate(newRotation, opt_anchor);\n        }\n        this.targetRotation_ += delta;\n        this.applyTargetState_();\n    };\n    /**\n     * Set the center of the current view. Any extent constraint will apply.\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n     * @observable\n     * @api\n     */\n    View.prototype.setCenter = function (center) {\n        this.targetCenter_ = center;\n        this.applyTargetState_();\n    };\n    /**\n     * @param {ViewHint} hint Hint.\n     * @param {number} delta Delta.\n     * @return {number} New value.\n     */\n    View.prototype.setHint = function (hint, delta) {\n        this.hints_[hint] += delta;\n        this.changed();\n        return this.hints_[hint];\n    };\n    /**\n     * Set the resolution for this view. Any resolution constraint will apply.\n     * @param {number|undefined} resolution The resolution of the view.\n     * @observable\n     * @api\n     */\n    View.prototype.setResolution = function (resolution) {\n        this.targetResolution_ = resolution;\n        this.applyTargetState_();\n    };\n    /**\n     * Set the rotation for this view. Any rotation constraint will apply.\n     * @param {number} rotation The rotation of the view in radians.\n     * @observable\n     * @api\n     */\n    View.prototype.setRotation = function (rotation) {\n        this.targetRotation_ = rotation;\n        this.applyTargetState_();\n    };\n    /**\n     * Zoom to a specific zoom level. Any resolution constrain will apply.\n     * @param {number} zoom Zoom level.\n     * @api\n     */\n    View.prototype.setZoom = function (zoom) {\n        this.setResolution(this.getResolutionForZoom(zoom));\n    };\n    /**\n     * Recompute rotation/resolution/center based on target values.\n     * Note: we have to compute rotation first, then resolution and center considering that\n     * parameters can influence one another in case a view extent constraint is present.\n     * @param {boolean=} opt_doNotCancelAnims Do not cancel animations.\n     * @param {boolean=} opt_forceMoving Apply constraints as if the view is moving.\n     * @private\n     */\n    View.prototype.applyTargetState_ = function (opt_doNotCancelAnims, opt_forceMoving) {\n        var isMoving = this.getAnimating() || this.getInteracting() || opt_forceMoving;\n        // compute rotation\n        var newRotation = this.constraints_.rotation(this.targetRotation_, isMoving);\n        var size = this.getSizeFromViewport_(newRotation);\n        var newResolution = this.constraints_.resolution(this.targetResolution_, 0, size, isMoving);\n        var newCenter = this.constraints_.center(this.targetCenter_, newResolution, size, isMoving);\n        if (this.get(ViewProperty.ROTATION) !== newRotation) {\n            this.set(ViewProperty.ROTATION, newRotation);\n        }\n        if (this.get(ViewProperty.RESOLUTION) !== newResolution) {\n            this.set(ViewProperty.RESOLUTION, newResolution);\n        }\n        if (!this.get(ViewProperty.CENTER) || !equals(this.get(ViewProperty.CENTER), newCenter)) {\n            this.set(ViewProperty.CENTER, newCenter);\n        }\n        if (this.getAnimating() && !opt_doNotCancelAnims) {\n            this.cancelAnimations();\n        }\n    };\n    /**\n     * If any constraints need to be applied, an animation will be triggered.\n     * This is typically done on interaction end.\n     * Note: calling this with a duration of 0 will apply the constrained values straight away,\n     * without animation.\n     * @param {number=} opt_duration The animation duration in ms.\n     * @param {number=} opt_resolutionDirection Which direction to zoom.\n     * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The origin of the transformation.\n     */\n    View.prototype.resolveConstraints = function (opt_duration, opt_resolutionDirection, opt_anchor) {\n        var duration = opt_duration !== undefined ? opt_duration : 200;\n        var direction = opt_resolutionDirection || 0;\n        var newRotation = this.constraints_.rotation(this.targetRotation_);\n        var size = this.getSizeFromViewport_(newRotation);\n        var newResolution = this.constraints_.resolution(this.targetResolution_, direction, size);\n        var newCenter = this.constraints_.center(this.targetCenter_, newResolution, size);\n        if (duration === 0) {\n            this.targetResolution_ = newResolution;\n            this.targetRotation_ = newRotation;\n            this.targetCenter_ = newCenter;\n            this.applyTargetState_();\n            return;\n        }\n        if (this.getResolution() !== newResolution ||\n            this.getRotation() !== newRotation ||\n            !this.getCenter() ||\n            !equals(this.getCenter(), newCenter)) {\n            if (this.getAnimating()) {\n                this.cancelAnimations();\n            }\n            this.animate_({\n                rotation: newRotation,\n                center: newCenter,\n                resolution: newResolution,\n                duration: duration,\n                easing: easeOut,\n                anchor: opt_anchor\n            });\n        }\n    };\n    /**\n     * Notify the View that an interaction has started.\n     * The view state will be resolved to a stable one if needed\n     * (depending on its constraints).\n     * @api\n     */\n    View.prototype.beginInteraction = function () {\n        this.resolveConstraints(0);\n        this.setHint(ViewHint.INTERACTING, 1);\n    };\n    /**\n     * Notify the View that an interaction has ended. The view state will be resolved\n     * to a stable one if needed (depending on its constraints).\n     * @param {number=} opt_duration Animation duration in ms.\n     * @param {number=} opt_resolutionDirection Which direction to zoom.\n     * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The origin of the transformation.\n     * @api\n     */\n    View.prototype.endInteraction = function (opt_duration, opt_resolutionDirection, opt_anchor) {\n        this.setHint(ViewHint.INTERACTING, -1);\n        this.resolveConstraints(opt_duration, opt_resolutionDirection, opt_anchor);\n    };\n    /**\n     * Get a valid position for the view center according to the current constraints.\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} targetCenter Target center position.\n     * @param {number=} opt_targetResolution Target resolution. If not supplied, the current one will be used.\n     * This is useful to guess a valid center position at a different zoom level.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Valid center position.\n     */\n    View.prototype.getConstrainedCenter = function (targetCenter, opt_targetResolution) {\n        var size = this.getSizeFromViewport_(this.getRotation());\n        return this.constraints_.center(targetCenter, opt_targetResolution || this.getResolution(), size);\n    };\n    /**\n     * Get a valid zoom level according to the current view constraints.\n     * @param {number|undefined} targetZoom Target zoom.\n     * @param {number=} opt_direction Direction. Default is `0`. Specify `-1` or `1` to return\n     * the available value respectively lower or greater than the target one. Leaving `0` will simply choose\n     * the nearest available value.\n     * @return {number|undefined} Valid zoom level.\n     */\n    View.prototype.getConstrainedZoom = function (targetZoom, opt_direction) {\n        var targetRes = this.getResolutionForZoom(targetZoom);\n        return this.getZoomForResolution(this.getConstrainedResolution(targetRes));\n    };\n    /**\n     * Get a valid resolution according to the current view constraints.\n     * @param {number|undefined} targetResolution Target resolution.\n     * @param {number=} opt_direction Direction. Default is `0`. Specify `-1` or `1` to return\n     * the available value respectively lower or greater than the target one. Leaving `0` will simply choose\n     * the nearest available value.\n     * @return {number|undefined} Valid resolution.\n     */\n    View.prototype.getConstrainedResolution = function (targetResolution, opt_direction) {\n        var direction = opt_direction || 0;\n        var size = this.getSizeFromViewport_(this.getRotation());\n        return this.constraints_.resolution(targetResolution, direction, size);\n    };\n    return View;\n}(BaseObject));\n/**\n * @param {Function} callback Callback.\n * @param {*} returnValue Return value.\n */\nfunction animationCallback(callback, returnValue) {\n    setTimeout(function () {\n        callback(returnValue);\n    }, 0);\n}\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./centerconstraint.js\").Type} The constraint.\n */\nexport function createCenterConstraint(options) {\n    if (options.extent !== undefined) {\n        return createExtent(options.extent, options.constrainOnlyCenter, options.smoothExtentConstraint !== undefined ? options.smoothExtentConstraint : true);\n    }\n    else {\n        return centerNone;\n    }\n}\n/**\n * @param {ViewOptions} options View options.\n * @return {{constraint: import(\"./resolutionconstraint.js\").Type, maxResolution: number,\n *     minResolution: number, minZoom: number, zoomFactor: number}} The constraint.\n */\nexport function createResolutionConstraint(options) {\n    var resolutionConstraint;\n    var maxResolution;\n    var minResolution;\n    // TODO: move these to be ol constants\n    // see https://github.com/openlayers/openlayers/issues/2076\n    var defaultMaxZoom = 28;\n    var defaultZoomFactor = 2;\n    var minZoom = options.minZoom !== undefined ?\n        options.minZoom : DEFAULT_MIN_ZOOM;\n    var maxZoom = options.maxZoom !== undefined ?\n        options.maxZoom : defaultMaxZoom;\n    var zoomFactor = options.zoomFactor !== undefined ?\n        options.zoomFactor : defaultZoomFactor;\n    var multiWorld = options.multiWorld !== undefined ?\n        options.multiWorld : false;\n    var smooth = options.smoothResolutionConstraint !== undefined ? options.smoothResolutionConstraint : true;\n    if (options.resolutions !== undefined) {\n        var resolutions = options.resolutions;\n        maxResolution = resolutions[minZoom];\n        minResolution = resolutions[maxZoom] !== undefined ?\n            resolutions[maxZoom] : resolutions[resolutions.length - 1];\n        if (options.constrainResolution) {\n            resolutionConstraint = createSnapToResolutions(resolutions, smooth, !options.constrainOnlyCenter && options.extent);\n        }\n        else {\n            resolutionConstraint = createMinMaxResolution(maxResolution, minResolution, smooth, !options.constrainOnlyCenter && options.extent);\n        }\n    }\n    else {\n        // calculate the default min and max resolution\n        var projection = createProjection(options.projection, 'EPSG:3857');\n        var extent = projection.getExtent();\n        var size = !extent ?\n            // use an extent that can fit the whole world if need be\n            360 * METERS_PER_UNIT[Units.DEGREES] /\n                projection.getMetersPerUnit() :\n            Math.max(getWidth(extent), getHeight(extent));\n        var defaultMaxResolution = size / DEFAULT_TILE_SIZE / Math.pow(defaultZoomFactor, DEFAULT_MIN_ZOOM);\n        var defaultMinResolution = defaultMaxResolution / Math.pow(defaultZoomFactor, defaultMaxZoom - DEFAULT_MIN_ZOOM);\n        // user provided maxResolution takes precedence\n        maxResolution = options.maxResolution;\n        if (maxResolution !== undefined) {\n            minZoom = 0;\n        }\n        else {\n            maxResolution = defaultMaxResolution / Math.pow(zoomFactor, minZoom);\n        }\n        // user provided minResolution takes precedence\n        minResolution = options.minResolution;\n        if (minResolution === undefined) {\n            if (options.maxZoom !== undefined) {\n                if (options.maxResolution !== undefined) {\n                    minResolution = maxResolution / Math.pow(zoomFactor, maxZoom);\n                }\n                else {\n                    minResolution = defaultMaxResolution / Math.pow(zoomFactor, maxZoom);\n                }\n            }\n            else {\n                minResolution = defaultMinResolution;\n            }\n        }\n        // given discrete zoom levels, minResolution may be different than provided\n        maxZoom = minZoom + Math.floor(Math.log(maxResolution / minResolution) / Math.log(zoomFactor));\n        minResolution = maxResolution / Math.pow(zoomFactor, maxZoom - minZoom);\n        if (options.constrainResolution) {\n            resolutionConstraint = createSnapToPower(zoomFactor, maxResolution, minResolution, smooth, !options.constrainOnlyCenter && options.extent);\n        }\n        else {\n            var constrainOnlyCenter = options.constrainOnlyCenter;\n            var extent_1 = options.extent;\n            if (!multiWorld && !extent_1 && projection.isGlobal()) {\n                constrainOnlyCenter = false;\n                extent_1 = projection.getExtent();\n            }\n            resolutionConstraint = createMinMaxResolution(maxResolution, minResolution, smooth, !constrainOnlyCenter && extent_1);\n        }\n    }\n    return { constraint: resolutionConstraint, maxResolution: maxResolution,\n        minResolution: minResolution, minZoom: minZoom, zoomFactor: zoomFactor };\n}\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./rotationconstraint.js\").Type} Rotation constraint.\n */\nexport function createRotationConstraint(options) {\n    var enableRotation = options.enableRotation !== undefined ?\n        options.enableRotation : true;\n    if (enableRotation) {\n        var constrainRotation = options.constrainRotation;\n        if (constrainRotation === undefined || constrainRotation === true) {\n            return createSnapToZero();\n        }\n        else if (constrainRotation === false) {\n            return rotationNone;\n        }\n        else if (typeof constrainRotation === 'number') {\n            return createSnapToN(constrainRotation);\n        }\n        else {\n            return rotationNone;\n        }\n    }\n    else {\n        return disable;\n    }\n}\n/**\n * Determine if an animation involves no view change.\n * @param {Animation} animation The animation.\n * @return {boolean} The animation involves no view change.\n */\nexport function isNoopAnimation(animation) {\n    if (animation.sourceCenter && animation.targetCenter) {\n        if (!coordinatesEqual(animation.sourceCenter, animation.targetCenter)) {\n            return false;\n        }\n    }\n    if (animation.sourceResolution !== animation.targetResolution) {\n        return false;\n    }\n    if (animation.sourceRotation !== animation.targetRotation) {\n        return false;\n    }\n    return true;\n}\nexport default View;\n//# sourceMappingURL=View.js.map","/**\n * @module ol/dom\n */\n/**\n * Create an html canvas element and returns its 2d context.\n * @param {number=} opt_width Canvas width.\n * @param {number=} opt_height Canvas height.\n * @return {CanvasRenderingContext2D} The context.\n */\nexport function createCanvasContext2D(opt_width, opt_height) {\n    var canvas = document.createElement('canvas');\n    if (opt_width) {\n        canvas.width = opt_width;\n    }\n    if (opt_height) {\n        canvas.height = opt_height;\n    }\n    return canvas.getContext('2d');\n}\n/**\n * Get the current computed width for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerWidth(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The width.\n */\nexport function outerWidth(element) {\n    var width = element.offsetWidth;\n    var style = getComputedStyle(element);\n    width += parseInt(style.marginLeft, 10) + parseInt(style.marginRight, 10);\n    return width;\n}\n/**\n * Get the current computed height for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerHeight(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The height.\n */\nexport function outerHeight(element) {\n    var height = element.offsetHeight;\n    var style = getComputedStyle(element);\n    height += parseInt(style.marginTop, 10) + parseInt(style.marginBottom, 10);\n    return height;\n}\n/**\n * @param {Node} newNode Node to replace old node\n * @param {Node} oldNode The node to be replaced\n */\nexport function replaceNode(newNode, oldNode) {\n    var parent = oldNode.parentNode;\n    if (parent) {\n        parent.replaceChild(newNode, oldNode);\n    }\n}\n/**\n * @param {Node} node The node to remove.\n * @returns {Node} The node that was removed or null.\n */\nexport function removeNode(node) {\n    return node && node.parentNode ? node.parentNode.removeChild(node) : null;\n}\n/**\n * @param {Node} node The node to remove the children from.\n */\nexport function removeChildren(node) {\n    while (node.lastChild) {\n        node.removeChild(node.lastChild);\n    }\n}\n/**\n * Transform the children of a parent node so they match the\n * provided list of children.  This function aims to efficiently\n * remove, add, and reorder child nodes while maintaining a simple\n * implementation (it is not guaranteed to minimize DOM operations).\n * @param {Node} node The parent node whose children need reworking.\n * @param {Array<Node>} children The desired children.\n */\nexport function replaceChildren(node, children) {\n    var oldChildren = node.childNodes;\n    for (var i = 0; true; ++i) {\n        var oldChild = oldChildren[i];\n        var newChild = children[i];\n        // check if our work is done\n        if (!oldChild && !newChild) {\n            break;\n        }\n        // check if children match\n        if (oldChild === newChild) {\n            continue;\n        }\n        // check if a new child needs to be added\n        if (!oldChild) {\n            node.appendChild(newChild);\n            continue;\n        }\n        // check if an old child needs to be removed\n        if (!newChild) {\n            node.removeChild(oldChild);\n            --i;\n            continue;\n        }\n        // reorder\n        node.insertBefore(newChild, oldChild);\n    }\n}\n//# sourceMappingURL=dom.js.map","/**\n * @module ol/layer/Property\n */\n/**\n * @enum {string}\n */\nexport default {\n    OPACITY: 'opacity',\n    VISIBLE: 'visible',\n    EXTENT: 'extent',\n    Z_INDEX: 'zIndex',\n    MAX_RESOLUTION: 'maxResolution',\n    MIN_RESOLUTION: 'minResolution',\n    SOURCE: 'source'\n};\n//# sourceMappingURL=Property.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/layer/Base\n */\nimport { abstract } from '../util.js';\nimport BaseObject from '../Object.js';\nimport LayerProperty from './Property.js';\nimport { clamp } from '../math.js';\nimport { assign } from '../obj.js';\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n */\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Note that with {@link module:ol/layer/Base} and all its subclasses, any property set in\n * the options is set as a {@link module:ol/Object} property on the layer object, so\n * is observable, and has get/set accessors.\n *\n * @api\n */\nvar BaseLayer = /** @class */ (function (_super) {\n    __extends(BaseLayer, _super);\n    /**\n     * @param {Options} options Layer options.\n     */\n    function BaseLayer(options) {\n        var _this = _super.call(this) || this;\n        /**\n         * @type {Object<string, *>}\n         */\n        var properties = assign({}, options);\n        properties[LayerProperty.OPACITY] =\n            options.opacity !== undefined ? options.opacity : 1;\n        properties[LayerProperty.VISIBLE] =\n            options.visible !== undefined ? options.visible : true;\n        properties[LayerProperty.Z_INDEX] = options.zIndex;\n        properties[LayerProperty.MAX_RESOLUTION] =\n            options.maxResolution !== undefined ? options.maxResolution : Infinity;\n        properties[LayerProperty.MIN_RESOLUTION] =\n            options.minResolution !== undefined ? options.minResolution : 0;\n        /**\n         * @type {string}\n         * @private\n         */\n        _this.className_ = properties.className !== undefined ? options.className : 'ol-layer';\n        delete properties.className;\n        _this.setProperties(properties);\n        /**\n         * @type {import(\"./Layer.js\").State}\n         * @private\n         */\n        _this.state_ = null;\n        return _this;\n    }\n    /**\n     * @return {string} CSS class name.\n     */\n    BaseLayer.prototype.getClassName = function () {\n        return this.className_;\n    };\n    /**\n     * @param {boolean=} opt_managed Layer is managed.\n     * @return {import(\"./Layer.js\").State} Layer state.\n     */\n    BaseLayer.prototype.getLayerState = function (opt_managed) {\n        /** @type {import(\"./Layer.js\").State} */\n        var state = this.state_ || /** @type {?} */ ({\n            layer: this,\n            managed: opt_managed === undefined ? true : opt_managed\n        });\n        state.opacity = clamp(Math.round(this.getOpacity() * 100) / 100, 0, 1);\n        state.sourceState = this.getSourceState();\n        state.visible = this.getVisible();\n        state.extent = this.getExtent();\n        state.zIndex = this.getZIndex() || (state.managed === false ? Infinity : 0);\n        state.maxResolution = this.getMaxResolution();\n        state.minResolution = Math.max(this.getMinResolution(), 0);\n        this.state_ = state;\n        return state;\n    };\n    /**\n     * @abstract\n     * @param {Array<import(\"./Layer.js\").default>=} opt_array Array of layers (to be\n     *     modified in place).\n     * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n     */\n    BaseLayer.prototype.getLayersArray = function (opt_array) {\n        return abstract();\n    };\n    /**\n     * @abstract\n     * @param {Array<import(\"./Layer.js\").State>=} opt_states Optional list of layer\n     *     states (to be modified in place).\n     * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n     */\n    BaseLayer.prototype.getLayerStatesArray = function (opt_states) {\n        return abstract();\n    };\n    /**\n     * Return the {@link module:ol/extent~Extent extent} of the layer or `undefined` if it\n     * will be visible regardless of extent.\n     * @return {import(\"../extent.js\").Extent|undefined} The layer extent.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.getExtent = function () {\n        return (\n        /** @type {import(\"../extent.js\").Extent|undefined} */ (this.get(LayerProperty.EXTENT)));\n    };\n    /**\n     * Return the maximum resolution of the layer.\n     * @return {number} The maximum resolution of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.getMaxResolution = function () {\n        return /** @type {number} */ (this.get(LayerProperty.MAX_RESOLUTION));\n    };\n    /**\n     * Return the minimum resolution of the layer.\n     * @return {number} The minimum resolution of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.getMinResolution = function () {\n        return /** @type {number} */ (this.get(LayerProperty.MIN_RESOLUTION));\n    };\n    /**\n     * Return the opacity of the layer (between 0 and 1).\n     * @return {number} The opacity of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.getOpacity = function () {\n        return /** @type {number} */ (this.get(LayerProperty.OPACITY));\n    };\n    /**\n     * @abstract\n     * @return {import(\"../source/State.js\").default} Source state.\n     */\n    BaseLayer.prototype.getSourceState = function () {\n        return abstract();\n    };\n    /**\n     * Return the visibility of the layer (`true` or `false`).\n     * @return {boolean} The visibility of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.getVisible = function () {\n        return /** @type {boolean} */ (this.get(LayerProperty.VISIBLE));\n    };\n    /**\n     * Return the Z-index of the layer, which is used to order layers before\n     * rendering. The default Z-index is 0.\n     * @return {number} The Z-index of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.getZIndex = function () {\n        return /** @type {number} */ (this.get(LayerProperty.Z_INDEX));\n    };\n    /**\n     * Set the extent at which the layer is visible.  If `undefined`, the layer\n     * will be visible at all extents.\n     * @param {import(\"../extent.js\").Extent|undefined} extent The extent of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.setExtent = function (extent) {\n        this.set(LayerProperty.EXTENT, extent);\n    };\n    /**\n     * Set the maximum resolution at which the layer is visible.\n     * @param {number} maxResolution The maximum resolution of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.setMaxResolution = function (maxResolution) {\n        this.set(LayerProperty.MAX_RESOLUTION, maxResolution);\n    };\n    /**\n     * Set the minimum resolution at which the layer is visible.\n     * @param {number} minResolution The minimum resolution of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.setMinResolution = function (minResolution) {\n        this.set(LayerProperty.MIN_RESOLUTION, minResolution);\n    };\n    /**\n     * Set the opacity of the layer, allowed values range from 0 to 1.\n     * @param {number} opacity The opacity of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.setOpacity = function (opacity) {\n        this.set(LayerProperty.OPACITY, opacity);\n    };\n    /**\n     * Set the visibility of the layer (`true` or `false`).\n     * @param {boolean} visible The visibility of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.setVisible = function (visible) {\n        this.set(LayerProperty.VISIBLE, visible);\n    };\n    /**\n     * Set Z-index of the layer, which is used to order layers before rendering.\n     * The default Z-index is 0.\n     * @param {number} zindex The z-index of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.setZIndex = function (zindex) {\n        this.set(LayerProperty.Z_INDEX, zindex);\n    };\n    return BaseLayer;\n}(BaseObject));\nexport default BaseLayer;\n//# sourceMappingURL=Base.js.map","/**\n * @module ol/source/State\n */\n/**\n * @enum {string}\n * State of the source, one of 'undefined', 'loading', 'ready' or 'error'.\n */\nexport default {\n    UNDEFINED: 'undefined',\n    LOADING: 'loading',\n    READY: 'ready',\n    ERROR: 'error'\n};\n//# sourceMappingURL=State.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/layer/Group\n */\nimport { getUid } from '../util.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport { getChangeEventType } from '../Object.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport { assert } from '../asserts.js';\nimport { listen, unlistenByKey } from '../events.js';\nimport EventType from '../events/EventType.js';\nimport { getIntersection } from '../extent.js';\nimport BaseLayer from './Base.js';\nimport { assign, clear } from '../obj.js';\nimport SourceState from '../source/State.js';\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {Array<import(\"./Base.js\").default>|import(\"../Collection.js\").default<import(\"./Base.js\").default>} [layers] Child layers.\n */\n/**\n * @enum {string}\n * @private\n */\nvar Property = {\n    LAYERS: 'layers'\n};\n/**\n * @classdesc\n * A {@link module:ol/Collection~Collection} of layers that are handled together.\n *\n * A generic `change` event is triggered when the group/Collection changes.\n *\n * @api\n */\nvar LayerGroup = /** @class */ (function (_super) {\n    __extends(LayerGroup, _super);\n    /**\n     * @param {Options=} opt_options Layer options.\n     */\n    function LayerGroup(opt_options) {\n        var _this = this;\n        var options = opt_options || {};\n        var baseOptions = /** @type {Options} */ (assign({}, options));\n        delete baseOptions.layers;\n        var layers = options.layers;\n        _this = _super.call(this, baseOptions) || this;\n        /**\n         * @private\n         * @type {Array<import(\"../events.js\").EventsKey>}\n         */\n        _this.layersListenerKeys_ = [];\n        /**\n         * @private\n         * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n         */\n        _this.listenerKeys_ = {};\n        listen(_this, getChangeEventType(Property.LAYERS), _this.handleLayersChanged_, _this);\n        if (layers) {\n            if (Array.isArray(layers)) {\n                layers = new Collection(layers.slice(), { unique: true });\n            }\n            else {\n                assert(typeof /** @type {?} */ (layers).getArray === 'function', 43); // Expected `layers` to be an array or a `Collection`\n            }\n        }\n        else {\n            layers = new Collection(undefined, { unique: true });\n        }\n        _this.setLayers(layers);\n        return _this;\n    }\n    /**\n     * @private\n     */\n    LayerGroup.prototype.handleLayerChange_ = function () {\n        this.changed();\n    };\n    /**\n     * @private\n     */\n    LayerGroup.prototype.handleLayersChanged_ = function () {\n        this.layersListenerKeys_.forEach(unlistenByKey);\n        this.layersListenerKeys_.length = 0;\n        var layers = this.getLayers();\n        this.layersListenerKeys_.push(listen(layers, CollectionEventType.ADD, this.handleLayersAdd_, this), listen(layers, CollectionEventType.REMOVE, this.handleLayersRemove_, this));\n        for (var id in this.listenerKeys_) {\n            this.listenerKeys_[id].forEach(unlistenByKey);\n        }\n        clear(this.listenerKeys_);\n        var layersArray = layers.getArray();\n        for (var i = 0, ii = layersArray.length; i < ii; i++) {\n            var layer = layersArray[i];\n            this.listenerKeys_[getUid(layer)] = [\n                listen(layer, ObjectEventType.PROPERTYCHANGE, this.handleLayerChange_, this),\n                listen(layer, EventType.CHANGE, this.handleLayerChange_, this)\n            ];\n        }\n        this.changed();\n    };\n    /**\n     * @param {import(\"../Collection.js\").CollectionEvent} collectionEvent CollectionEvent.\n     * @private\n     */\n    LayerGroup.prototype.handleLayersAdd_ = function (collectionEvent) {\n        var layer = /** @type {import(\"./Base.js\").default} */ (collectionEvent.element);\n        this.listenerKeys_[getUid(layer)] = [\n            listen(layer, ObjectEventType.PROPERTYCHANGE, this.handleLayerChange_, this),\n            listen(layer, EventType.CHANGE, this.handleLayerChange_, this)\n        ];\n        this.changed();\n    };\n    /**\n     * @param {import(\"../Collection.js\").CollectionEvent} collectionEvent CollectionEvent.\n     * @private\n     */\n    LayerGroup.prototype.handleLayersRemove_ = function (collectionEvent) {\n        var layer = /** @type {import(\"./Base.js\").default} */ (collectionEvent.element);\n        var key = getUid(layer);\n        this.listenerKeys_[key].forEach(unlistenByKey);\n        delete this.listenerKeys_[key];\n        this.changed();\n    };\n    /**\n     * Returns the {@link module:ol/Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n     * in this group.\n     * @return {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} Collection of\n     *   {@link module:ol/layer/Base layers} that are part of this group.\n     * @observable\n     * @api\n     */\n    LayerGroup.prototype.getLayers = function () {\n        return (\n        /** @type {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} */ (this.get(Property.LAYERS)));\n    };\n    /**\n     * Set the {@link module:ol/Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n     * in this group.\n     * @param {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} layers Collection of\n     *   {@link module:ol/layer/Base layers} that are part of this group.\n     * @observable\n     * @api\n     */\n    LayerGroup.prototype.setLayers = function (layers) {\n        this.set(Property.LAYERS, layers);\n    };\n    /**\n     * @inheritDoc\n     */\n    LayerGroup.prototype.getLayersArray = function (opt_array) {\n        var array = opt_array !== undefined ? opt_array : [];\n        this.getLayers().forEach(function (layer) {\n            layer.getLayersArray(array);\n        });\n        return array;\n    };\n    /**\n     * @inheritDoc\n     */\n    LayerGroup.prototype.getLayerStatesArray = function (opt_states) {\n        var states = opt_states !== undefined ? opt_states : [];\n        var pos = states.length;\n        this.getLayers().forEach(function (layer) {\n            layer.getLayerStatesArray(states);\n        });\n        var ownLayerState = this.getLayerState();\n        for (var i = pos, ii = states.length; i < ii; i++) {\n            var layerState = states[i];\n            layerState.opacity *= ownLayerState.opacity;\n            layerState.visible = layerState.visible && ownLayerState.visible;\n            layerState.maxResolution = Math.min(layerState.maxResolution, ownLayerState.maxResolution);\n            layerState.minResolution = Math.max(layerState.minResolution, ownLayerState.minResolution);\n            if (ownLayerState.extent !== undefined) {\n                if (layerState.extent !== undefined) {\n                    layerState.extent = getIntersection(layerState.extent, ownLayerState.extent);\n                }\n                else {\n                    layerState.extent = ownLayerState.extent;\n                }\n            }\n        }\n        return states;\n    };\n    /**\n     * @inheritDoc\n     */\n    LayerGroup.prototype.getSourceState = function () {\n        return SourceState.READY;\n    };\n    return LayerGroup;\n}(BaseLayer));\nexport default LayerGroup;\n//# sourceMappingURL=Group.js.map","/**\n * @module ol/size\n */\n/**\n * An array of numbers representing a size: `[width, height]`.\n * @typedef {Array<number>} Size\n * @api\n */\n/**\n * Returns a buffered size.\n * @param {Size} size Size.\n * @param {number} num The amount by which to buffer.\n * @param {Size=} opt_size Optional reusable size array.\n * @return {Size} The buffered size.\n */\nexport function buffer(size, num, opt_size) {\n    if (opt_size === undefined) {\n        opt_size = [0, 0];\n    }\n    opt_size[0] = size[0] + 2 * num;\n    opt_size[1] = size[1] + 2 * num;\n    return opt_size;\n}\n/**\n * Determines if a size has a positive area.\n * @param {Size} size The size to test.\n * @return {boolean} The size has a positive area.\n */\nexport function hasArea(size) {\n    return size[0] > 0 && size[1] > 0;\n}\n/**\n * Returns a size scaled by a ratio. The result will be an array of integers.\n * @param {Size} size Size.\n * @param {number} ratio Ratio.\n * @param {Size=} opt_size Optional reusable size array.\n * @return {Size} The scaled size.\n */\nexport function scale(size, ratio, opt_size) {\n    if (opt_size === undefined) {\n        opt_size = [0, 0];\n    }\n    opt_size[0] = (size[0] * ratio + 0.5) | 0;\n    opt_size[1] = (size[1] * ratio + 0.5) | 0;\n    return opt_size;\n}\n/**\n * Returns an `Size` array for the passed in number (meaning: square) or\n * `Size` array.\n * (meaning: non-square),\n * @param {number|Size} size Width and height.\n * @param {Size=} opt_size Optional reusable size array.\n * @return {Size} Size.\n * @api\n */\nexport function toSize(size, opt_size) {\n    if (Array.isArray(size)) {\n        return size;\n    }\n    else {\n        if (opt_size === undefined) {\n            opt_size = [size, size];\n        }\n        else {\n            opt_size[0] = opt_size[1] = /** @type {number} */ (size);\n        }\n        return opt_size;\n    }\n}\n//# sourceMappingURL=size.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/PluggableMap\n */\nimport { getUid } from './util.js';\nimport Collection from './Collection.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventHandler from './MapBrowserEventHandler.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport MapEvent from './MapEvent.js';\nimport MapEventType from './MapEventType.js';\nimport MapProperty from './MapProperty.js';\nimport RenderEventType from './render/EventType.js';\nimport BaseObject, { getChangeEventType } from './Object.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport TileQueue from './TileQueue.js';\nimport View from './View.js';\nimport ViewHint from './ViewHint.js';\nimport { assert } from './asserts.js';\nimport { removeNode } from './dom.js';\nimport { listen, unlistenByKey, unlisten } from './events.js';\nimport EventType from './events/EventType.js';\nimport { createEmpty, clone, createOrUpdateEmpty, equals, getForViewAndSize, isEmpty } from './extent.js';\nimport { TRUE } from './functions.js';\nimport { DEVICE_PIXEL_RATIO, TOUCH } from './has.js';\nimport LayerGroup from './layer/Group.js';\nimport { hasArea } from './size.js';\nimport { DROP } from './structs/PriorityQueue.js';\nimport { create as createTransform, apply as applyTransform } from './transform.js';\n/**\n * State of the current frame. Only `pixelRatio`, `time` and `viewState` should\n * be used in applications.\n * @typedef {Object} FrameState\n * @property {number} pixelRatio The pixel ratio of the frame.\n * @property {number} time The time when rendering of the frame was requested.\n * @property {import(\"./View.js\").State} viewState The state of the current view.\n * @property {boolean} animate\n * @property {import(\"./transform.js\").Transform} coordinateToPixelTransform\n * @property {null|import(\"./extent.js\").Extent} extent\n * @property {Array<*>} declutterItems\n * @property {import(\"./coordinate.js\").Coordinate} focus\n * @property {number} index\n * @property {Array<import(\"./layer/Layer.js\").State>} layerStatesArray\n * @property {import(\"./transform.js\").Transform} pixelToCoordinateTransform\n * @property {Array<PostRenderFunction>} postRenderFunctions\n * @property {import(\"./size.js\").Size} size\n * @property {!Object<string, boolean>} skippedFeatureUids\n * @property {TileQueue} tileQueue\n * @property {!Object<string, Object<string, boolean>>} usedTiles\n * @property {Array<number>} viewHints\n * @property {!Object<string, Object<string, boolean>>} wantedTiles\n */\n/**\n * @typedef {function(PluggableMap, ?FrameState): any} PostRenderFunction\n */\n/**\n * @typedef {Object} AtPixelOptions\n * @property {undefined|function(import(\"./layer/Layer.js\").default): boolean} [layerFilter] Layer filter\n * function. The filter function will receive one argument, the\n * {@link module:ol/layer/Layer layer-candidate} and it should return a boolean value.\n * Only layers which are visible and for which this function returns `true`\n * will be tested for features. By default, all visible layers will be tested.\n * @property {number} [hitTolerance=0] Hit-detection tolerance in pixels. Pixels\n * inside the radius around the given position will be checked for features.\n */\n/**\n * @typedef {Object} MapOptionsInternal\n * @property {Collection<import(\"./control/Control.js\").default>} [controls]\n * @property {Collection<import(\"./interaction/Interaction.js\").default>} [interactions]\n * @property {HTMLElement|Document} keyboardEventTarget\n * @property {Collection<import(\"./Overlay.js\").default>} overlays\n * @property {Object<string, *>} values\n */\n/**\n * Object literal with config options for the map.\n * @typedef {Object} MapOptions\n * @property {Collection<import(\"./control/Control.js\").default>|Array<import(\"./control/Control.js\").default>} [controls]\n * Controls initially added to the map. If not specified,\n * {@link module:ol/control~defaults} is used.\n * @property {number} [pixelRatio=window.devicePixelRatio] The ratio between\n * physical pixels and device-independent pixels (dips) on the device.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>|Array<import(\"./interaction/Interaction.js\").default>} [interactions]\n * Interactions that are initially added to the map. If not specified,\n * {@link module:ol/interaction~defaults} is used.\n * @property {HTMLElement|Document|string} [keyboardEventTarget] The element to\n * listen to keyboard events on. This determines when the `KeyboardPan` and\n * `KeyboardZoom` interactions trigger. For example, if this option is set to\n * `document` the keyboard interactions will always trigger. If this option is\n * not specified, the element the library listens to keyboard events on is the\n * map target (i.e. the user-provided div for the map). If this is not\n * `document`, the target element needs to be focused for key events to be\n * emitted, requiring that the target element has a `tabindex` attribute.\n * @property {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>|LayerGroup} [layers]\n * Layers. If this is not defined, a map with no layers will be rendered. Note\n * that layers are rendered in the order supplied, so if you want, for example,\n * a vector layer to appear on top of a tile layer, it must come after the tile\n * layer.\n * @property {number} [maxTilesLoading=16] Maximum number tiles to load\n * simultaneously.\n * @property {number} [moveTolerance=1] The minimum distance in pixels the\n * cursor must move to be detected as a map move event instead of a click.\n * Increasing this value can make it easier to click on the map.\n * @property {Collection<import(\"./Overlay.js\").default>|Array<import(\"./Overlay.js\").default>} [overlays]\n * Overlays initially added to the map. By default, no overlays are added.\n * @property {HTMLElement|string} [target] The container for the map, either the\n * element itself or the `id` of the element. If not specified at construction\n * time, {@link module:ol/Map~Map#setTarget} must be called for the map to be\n * rendered.\n * @property {View} [view] The map's view.  No layer sources will be\n * fetched unless this is specified at construction time or through\n * {@link module:ol/Map~Map#setView}.\n */\n/**\n * @fires import(\"./MapBrowserEvent.js\").MapBrowserEvent\n * @fires import(\"./MapEvent.js\").MapEvent\n * @fires import(\"./render/Event.js\").default#precompose\n * @fires import(\"./render/Event.js\").default#postcompose\n * @fires import(\"./render/Event.js\").default#rendercomplete\n * @api\n */\nvar PluggableMap = /** @class */ (function (_super) {\n    __extends(PluggableMap, _super);\n    /**\n     * @param {MapOptions} options Map options.\n     */\n    function PluggableMap(options) {\n        var _this = _super.call(this) || this;\n        var optionsInternal = createOptionsInternal(options);\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.maxTilesLoading_ = options.maxTilesLoading !== undefined ? options.maxTilesLoading : 16;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.pixelRatio_ = options.pixelRatio !== undefined ?\n            options.pixelRatio : DEVICE_PIXEL_RATIO;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.animationDelayKey_;\n        /**\n         * @private\n         */\n        _this.animationDelay_ = function () {\n            this.animationDelayKey_ = undefined;\n            this.renderFrame_(Date.now());\n        }.bind(_this);\n        /**\n         * @private\n         * @type {import(\"./transform.js\").Transform}\n         */\n        _this.coordinateToPixelTransform_ = createTransform();\n        /**\n         * @private\n         * @type {import(\"./transform.js\").Transform}\n         */\n        _this.pixelToCoordinateTransform_ = createTransform();\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.frameIndex_ = 0;\n        /**\n         * @private\n         * @type {?FrameState}\n         */\n        _this.frameState_ = null;\n        /**\n         * The extent at the previous 'moveend' event.\n         * @private\n         * @type {import(\"./extent.js\").Extent}\n         */\n        _this.previousExtent_ = null;\n        /**\n         * @private\n         * @type {?import(\"./events.js\").EventsKey}\n         */\n        _this.viewPropertyListenerKey_ = null;\n        /**\n         * @private\n         * @type {?import(\"./events.js\").EventsKey}\n         */\n        _this.viewChangeListenerKey_ = null;\n        /**\n         * @private\n         * @type {Array<import(\"./events.js\").EventsKey>}\n         */\n        _this.layerGroupPropertyListenerKeys_ = null;\n        /**\n         * @private\n         * @type {!HTMLElement}\n         */\n        _this.viewport_ = document.createElement('div');\n        _this.viewport_.className = 'ol-viewport' + (TOUCH ? ' ol-touch' : '');\n        _this.viewport_.style.position = 'relative';\n        _this.viewport_.style.overflow = 'hidden';\n        _this.viewport_.style.width = '100%';\n        _this.viewport_.style.height = '100%';\n        // prevent page zoom on IE >= 10 browsers\n        _this.viewport_.style.msTouchAction = 'none';\n        _this.viewport_.style.touchAction = 'none';\n        /**\n         * @private\n         * @type {!HTMLElement}\n         */\n        _this.overlayContainer_ = document.createElement('div');\n        _this.overlayContainer_.style.position = 'absolute';\n        _this.overlayContainer_.style.zIndex = '0';\n        _this.overlayContainer_.style.width = '100%';\n        _this.overlayContainer_.style.height = '100%';\n        _this.overlayContainer_.className = 'ol-overlaycontainer';\n        _this.viewport_.appendChild(_this.overlayContainer_);\n        /**\n         * @private\n         * @type {!HTMLElement}\n         */\n        _this.overlayContainerStopEvent_ = document.createElement('div');\n        _this.overlayContainerStopEvent_.style.position = 'absolute';\n        _this.overlayContainerStopEvent_.style.zIndex = '0';\n        _this.overlayContainerStopEvent_.style.width = '100%';\n        _this.overlayContainerStopEvent_.style.height = '100%';\n        _this.overlayContainerStopEvent_.className = 'ol-overlaycontainer-stopevent';\n        _this.viewport_.appendChild(_this.overlayContainerStopEvent_);\n        /**\n         * @private\n         * @type {MapBrowserEventHandler}\n         */\n        _this.mapBrowserEventHandler_ = new MapBrowserEventHandler(_this, options.moveTolerance);\n        for (var key in MapBrowserEventType) {\n            listen(_this.mapBrowserEventHandler_, MapBrowserEventType[key], _this.handleMapBrowserEvent, _this);\n        }\n        /**\n         * @private\n         * @type {HTMLElement|Document}\n         */\n        _this.keyboardEventTarget_ = optionsInternal.keyboardEventTarget;\n        /**\n         * @private\n         * @type {Array<import(\"./events.js\").EventsKey>}\n         */\n        _this.keyHandlerKeys_ = null;\n        listen(_this.viewport_, EventType.CONTEXTMENU, _this.handleBrowserEvent, _this);\n        listen(_this.viewport_, EventType.WHEEL, _this.handleBrowserEvent, _this);\n        listen(_this.viewport_, EventType.MOUSEWHEEL, _this.handleBrowserEvent, _this);\n        /**\n         * @type {Collection<import(\"./control/Control.js\").default>}\n         * @protected\n         */\n        _this.controls = optionsInternal.controls || new Collection();\n        /**\n         * @type {Collection<import(\"./interaction/Interaction.js\").default>}\n         * @protected\n         */\n        _this.interactions = optionsInternal.interactions || new Collection();\n        /**\n         * @type {Collection<import(\"./Overlay.js\").default>}\n         * @private\n         */\n        _this.overlays_ = optionsInternal.overlays;\n        /**\n         * A lookup of overlays by id.\n         * @private\n         * @type {Object<string, import(\"./Overlay.js\").default>}\n         */\n        _this.overlayIdIndex_ = {};\n        /**\n         * @type {import(\"./renderer/Map.js\").default}\n         * @private\n         */\n        _this.renderer_ = _this.createRenderer();\n        /**\n         * @type {function(Event): void|undefined}\n         * @private\n         */\n        _this.handleResize_;\n        /**\n         * @private\n         * @type {import(\"./coordinate.js\").Coordinate}\n         */\n        _this.focus_ = null;\n        /**\n         * @private\n         * @type {!Array<PostRenderFunction>}\n         */\n        _this.postRenderFunctions_ = [];\n        /**\n         * @private\n         * @type {TileQueue}\n         */\n        _this.tileQueue_ = new TileQueue(_this.getTilePriority.bind(_this), _this.handleTileChange_.bind(_this));\n        /**\n         * Uids of features to skip at rendering time.\n         * @type {Object<string, boolean>}\n         * @private\n         */\n        _this.skippedFeatureUids_ = {};\n        listen(_this, getChangeEventType(MapProperty.LAYERGROUP), _this.handleLayerGroupChanged_, _this);\n        listen(_this, getChangeEventType(MapProperty.VIEW), _this.handleViewChanged_, _this);\n        listen(_this, getChangeEventType(MapProperty.SIZE), _this.handleSizeChanged_, _this);\n        listen(_this, getChangeEventType(MapProperty.TARGET), _this.handleTargetChanged_, _this);\n        // setProperties will trigger the rendering of the map if the map\n        // is \"defined\" already.\n        _this.setProperties(optionsInternal.values);\n        _this.controls.forEach(\n        /**\n         * @param {import(\"./control/Control.js\").default} control Control.\n         * @this {PluggableMap}\n         */\n        (function (control) {\n            control.setMap(this);\n        }).bind(_this));\n        listen(_this.controls, CollectionEventType.ADD, \n        /**\n         * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n         */\n        function (event) {\n            event.element.setMap(this);\n        }, _this);\n        listen(_this.controls, CollectionEventType.REMOVE, \n        /**\n         * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n         */\n        function (event) {\n            event.element.setMap(null);\n        }, _this);\n        _this.interactions.forEach(\n        /**\n         * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction.\n         * @this {PluggableMap}\n         */\n        (function (interaction) {\n            interaction.setMap(this);\n        }).bind(_this));\n        listen(_this.interactions, CollectionEventType.ADD, \n        /**\n         * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n         */\n        function (event) {\n            event.element.setMap(this);\n        }, _this);\n        listen(_this.interactions, CollectionEventType.REMOVE, \n        /**\n         * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n         */\n        function (event) {\n            event.element.setMap(null);\n        }, _this);\n        _this.overlays_.forEach(_this.addOverlayInternal_.bind(_this));\n        listen(_this.overlays_, CollectionEventType.ADD, \n        /**\n         * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n         */\n        function (event) {\n            this.addOverlayInternal_(/** @type {import(\"./Overlay.js\").default} */ (event.element));\n        }, _this);\n        listen(_this.overlays_, CollectionEventType.REMOVE, \n        /**\n         * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n         */\n        function (event) {\n            var overlay = /** @type {import(\"./Overlay.js\").default} */ (event.element);\n            var id = overlay.getId();\n            if (id !== undefined) {\n                delete this.overlayIdIndex_[id.toString()];\n            }\n            event.element.setMap(null);\n        }, _this);\n        return _this;\n    }\n    /**\n     * @abstract\n     * @return {import(\"./renderer/Map.js\").default} The map renderer\n     */\n    PluggableMap.prototype.createRenderer = function () {\n        throw new Error('Use a map type that has a createRenderer method');\n    };\n    /**\n     * Add the given control to the map.\n     * @param {import(\"./control/Control.js\").default} control Control.\n     * @api\n     */\n    PluggableMap.prototype.addControl = function (control) {\n        this.getControls().push(control);\n    };\n    /**\n     * Add the given interaction to the map. If you want to add an interaction\n     * at another point of the collection use `getInteraction()` and the methods\n     * available on {@link module:ol/Collection~Collection}. This can be used to\n     * stop the event propagation from the handleEvent function. The interactions\n     * get to handle the events in the reverse order of this collection.\n     * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to add.\n     * @api\n     */\n    PluggableMap.prototype.addInteraction = function (interaction) {\n        this.getInteractions().push(interaction);\n    };\n    /**\n     * Adds the given layer to the top of this map. If you want to add a layer\n     * elsewhere in the stack, use `getLayers()` and the methods available on\n     * {@link module:ol/Collection~Collection}.\n     * @param {import(\"./layer/Base.js\").default} layer Layer.\n     * @api\n     */\n    PluggableMap.prototype.addLayer = function (layer) {\n        var layers = this.getLayerGroup().getLayers();\n        layers.push(layer);\n    };\n    /**\n     * Add the given overlay to the map.\n     * @param {import(\"./Overlay.js\").default} overlay Overlay.\n     * @api\n     */\n    PluggableMap.prototype.addOverlay = function (overlay) {\n        this.getOverlays().push(overlay);\n    };\n    /**\n     * This deals with map's overlay collection changes.\n     * @param {import(\"./Overlay.js\").default} overlay Overlay.\n     * @private\n     */\n    PluggableMap.prototype.addOverlayInternal_ = function (overlay) {\n        var id = overlay.getId();\n        if (id !== undefined) {\n            this.overlayIdIndex_[id.toString()] = overlay;\n        }\n        overlay.setMap(this);\n    };\n    /**\n     *\n     * @inheritDoc\n     */\n    PluggableMap.prototype.disposeInternal = function () {\n        this.mapBrowserEventHandler_.dispose();\n        unlisten(this.viewport_, EventType.CONTEXTMENU, this.handleBrowserEvent, this);\n        unlisten(this.viewport_, EventType.WHEEL, this.handleBrowserEvent, this);\n        unlisten(this.viewport_, EventType.MOUSEWHEEL, this.handleBrowserEvent, this);\n        if (this.handleResize_ !== undefined) {\n            removeEventListener(EventType.RESIZE, this.handleResize_, false);\n            this.handleResize_ = undefined;\n        }\n        if (this.animationDelayKey_) {\n            cancelAnimationFrame(this.animationDelayKey_);\n            this.animationDelayKey_ = undefined;\n        }\n        this.setTarget(null);\n        _super.prototype.disposeInternal.call(this);\n    };\n    /**\n     * Detect features that intersect a pixel on the viewport, and execute a\n     * callback with each intersecting feature. Layers included in the detection can\n     * be configured through the `layerFilter` option in `opt_options`.\n     * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n     * @param {function(this: S, import(\"./Feature.js\").FeatureLike,\n     *     import(\"./layer/Layer.js\").default): T} callback Feature callback. The callback will be\n     *     called with two arguments. The first argument is one\n     *     {@link module:ol/Feature feature} or\n     *     {@link module:ol/render/Feature render feature} at the pixel, the second is\n     *     the {@link module:ol/layer/Layer layer} of the feature and will be null for\n     *     unmanaged layers. To stop detection, callback functions can return a\n     *     truthy value.\n     * @param {AtPixelOptions=} opt_options Optional options.\n     * @return {T|undefined} Callback result, i.e. the return value of last\n     * callback execution, or the first truthy callback return value.\n     * @template S,T\n     * @api\n     */\n    PluggableMap.prototype.forEachFeatureAtPixel = function (pixel, callback, opt_options) {\n        if (!this.frameState_) {\n            return;\n        }\n        var coordinate = this.getCoordinateFromPixel(pixel);\n        opt_options = opt_options !== undefined ? opt_options :\n            /** @type {AtPixelOptions} */ ({});\n        var hitTolerance = opt_options.hitTolerance !== undefined ?\n            opt_options.hitTolerance * this.frameState_.pixelRatio : 0;\n        var layerFilter = opt_options.layerFilter !== undefined ?\n            opt_options.layerFilter : TRUE;\n        return this.renderer_.forEachFeatureAtCoordinate(coordinate, this.frameState_, hitTolerance, callback, null, layerFilter, null);\n    };\n    /**\n     * Get all features that intersect a pixel on the viewport.\n     * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n     * @param {AtPixelOptions=} opt_options Optional options.\n     * @return {Array<import(\"./Feature.js\").FeatureLike>} The detected features or\n     * `null` if none were found.\n     * @api\n     */\n    PluggableMap.prototype.getFeaturesAtPixel = function (pixel, opt_options) {\n        var features = null;\n        this.forEachFeatureAtPixel(pixel, function (feature) {\n            if (!features) {\n                features = [];\n            }\n            features.push(feature);\n        }, opt_options);\n        return features;\n    };\n    /**\n     * Detect layers that have a color value at a pixel on the viewport, and\n     * execute a callback with each matching layer. Layers included in the\n     * detection can be configured through `opt_layerFilter`.\n     * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n     * @param {function(this: S, import(\"./layer/Layer.js\").default, (Uint8ClampedArray|Uint8Array)): T} callback\n     *     Layer callback. This callback will receive two arguments: first is the\n     *     {@link module:ol/layer/Layer layer}, second argument is an array representing\n     *     [R, G, B, A] pixel values (0 - 255) and will be `null` for layer types\n     *     that do not currently support this argument. To stop detection, callback\n     *     functions can return a truthy value.\n     * @param {AtPixelOptions=} opt_options Configuration options.\n     * @return {T|undefined} Callback result, i.e. the return value of last\n     * callback execution, or the first truthy callback return value.\n     * @template S,T\n     * @api\n     */\n    PluggableMap.prototype.forEachLayerAtPixel = function (pixel, callback, opt_options) {\n        if (!this.frameState_) {\n            return;\n        }\n        var options = opt_options || /** @type {AtPixelOptions} */ ({});\n        var hitTolerance = options.hitTolerance !== undefined ?\n            opt_options.hitTolerance * this.frameState_.pixelRatio : 0;\n        var layerFilter = options.layerFilter || TRUE;\n        return this.renderer_.forEachLayerAtPixel(pixel, this.frameState_, hitTolerance, callback, layerFilter);\n    };\n    /**\n     * Detect if features intersect a pixel on the viewport. Layers included in the\n     * detection can be configured through `opt_layerFilter`.\n     * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n     * @param {AtPixelOptions=} opt_options Optional options.\n     * @return {boolean} Is there a feature at the given pixel?\n     * @api\n     */\n    PluggableMap.prototype.hasFeatureAtPixel = function (pixel, opt_options) {\n        if (!this.frameState_) {\n            return false;\n        }\n        var coordinate = this.getCoordinateFromPixel(pixel);\n        opt_options = opt_options !== undefined ? opt_options :\n            /** @type {AtPixelOptions} */ ({});\n        var layerFilter = opt_options.layerFilter !== undefined ? opt_options.layerFilter : TRUE;\n        var hitTolerance = opt_options.hitTolerance !== undefined ?\n            opt_options.hitTolerance * this.frameState_.pixelRatio : 0;\n        return this.renderer_.hasFeatureAtCoordinate(coordinate, this.frameState_, hitTolerance, layerFilter, null);\n    };\n    /**\n     * Returns the coordinate in view projection for a browser event.\n     * @param {Event} event Event.\n     * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n     * @api\n     */\n    PluggableMap.prototype.getEventCoordinate = function (event) {\n        return this.getCoordinateFromPixel(this.getEventPixel(event));\n    };\n    /**\n     * Returns the map pixel position for a browser event relative to the viewport.\n     * @param {Event|TouchEvent} event Event.\n     * @return {import(\"./pixel.js\").Pixel} Pixel.\n     * @api\n     */\n    PluggableMap.prototype.getEventPixel = function (event) {\n        var viewportPosition = this.viewport_.getBoundingClientRect();\n        var eventPosition = 'changedTouches' in event ?\n            /** @type {TouchEvent} */ (event).changedTouches[0] :\n            /** @type {MouseEvent} */ (event);\n        return [\n            eventPosition.clientX - viewportPosition.left,\n            eventPosition.clientY - viewportPosition.top\n        ];\n    };\n    /**\n     * Get the target in which this map is rendered.\n     * Note that this returns what is entered as an option or in setTarget:\n     * if that was an element, it returns an element; if a string, it returns that.\n     * @return {HTMLElement|string|undefined} The Element or id of the Element that the\n     *     map is rendered in.\n     * @observable\n     * @api\n     */\n    PluggableMap.prototype.getTarget = function () {\n        return /** @type {HTMLElement|string|undefined} */ (this.get(MapProperty.TARGET));\n    };\n    /**\n     * Get the DOM element into which this map is rendered. In contrast to\n     * `getTarget` this method always return an `Element`, or `null` if the\n     * map has no target.\n     * @return {HTMLElement} The element that the map is rendered in.\n     * @api\n     */\n    PluggableMap.prototype.getTargetElement = function () {\n        var target = this.getTarget();\n        if (target !== undefined) {\n            return typeof target === 'string' ? document.getElementById(target) : target;\n        }\n        else {\n            return null;\n        }\n    };\n    /**\n     * Get the coordinate for a given pixel.  This returns a coordinate in the\n     * map view projection.\n     * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n     * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n     * @api\n     */\n    PluggableMap.prototype.getCoordinateFromPixel = function (pixel) {\n        var frameState = this.frameState_;\n        if (!frameState) {\n            return null;\n        }\n        else {\n            return applyTransform(frameState.pixelToCoordinateTransform, pixel.slice());\n        }\n    };\n    /**\n     * Get the map controls. Modifying this collection changes the controls\n     * associated with the map.\n     * @return {Collection<import(\"./control/Control.js\").default>} Controls.\n     * @api\n     */\n    PluggableMap.prototype.getControls = function () {\n        return this.controls;\n    };\n    /**\n     * Get the map overlays. Modifying this collection changes the overlays\n     * associated with the map.\n     * @return {Collection<import(\"./Overlay.js\").default>} Overlays.\n     * @api\n     */\n    PluggableMap.prototype.getOverlays = function () {\n        return this.overlays_;\n    };\n    /**\n     * Get an overlay by its identifier (the value returned by overlay.getId()).\n     * Note that the index treats string and numeric identifiers as the same. So\n     * `map.getOverlayById(2)` will return an overlay with id `'2'` or `2`.\n     * @param {string|number} id Overlay identifier.\n     * @return {import(\"./Overlay.js\").default} Overlay.\n     * @api\n     */\n    PluggableMap.prototype.getOverlayById = function (id) {\n        var overlay = this.overlayIdIndex_[id.toString()];\n        return overlay !== undefined ? overlay : null;\n    };\n    /**\n     * Get the map interactions. Modifying this collection changes the interactions\n     * associated with the map.\n     *\n     * Interactions are used for e.g. pan, zoom and rotate.\n     * @return {Collection<import(\"./interaction/Interaction.js\").default>} Interactions.\n     * @api\n     */\n    PluggableMap.prototype.getInteractions = function () {\n        return this.interactions;\n    };\n    /**\n     * Get the layergroup associated with this map.\n     * @return {LayerGroup} A layer group containing the layers in this map.\n     * @observable\n     * @api\n     */\n    PluggableMap.prototype.getLayerGroup = function () {\n        return (\n        /** @type {LayerGroup} */ (this.get(MapProperty.LAYERGROUP)));\n    };\n    /**\n     * Get the collection of layers associated with this map.\n     * @return {!Collection<import(\"./layer/Base.js\").default>} Layers.\n     * @api\n     */\n    PluggableMap.prototype.getLayers = function () {\n        var layers = this.getLayerGroup().getLayers();\n        return layers;\n    };\n    /**\n     * Get the pixel for a coordinate.  This takes a coordinate in the map view\n     * projection and returns the corresponding pixel.\n     * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n     * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n     * @api\n     */\n    PluggableMap.prototype.getPixelFromCoordinate = function (coordinate) {\n        var frameState = this.frameState_;\n        if (!frameState) {\n            return null;\n        }\n        else {\n            return applyTransform(frameState.coordinateToPixelTransform, coordinate.slice(0, 2));\n        }\n    };\n    /**\n     * Get the map renderer.\n     * @return {import(\"./renderer/Map.js\").default} Renderer\n     */\n    PluggableMap.prototype.getRenderer = function () {\n        return this.renderer_;\n    };\n    /**\n     * Get the size of this map.\n     * @return {import(\"./size.js\").Size|undefined} The size in pixels of the map in the DOM.\n     * @observable\n     * @api\n     */\n    PluggableMap.prototype.getSize = function () {\n        return (\n        /** @type {import(\"./size.js\").Size|undefined} */ (this.get(MapProperty.SIZE)));\n    };\n    /**\n     * Get the view associated with this map. A view manages properties such as\n     * center and resolution.\n     * @return {View} The view that controls this map.\n     * @observable\n     * @api\n     */\n    PluggableMap.prototype.getView = function () {\n        return (\n        /** @type {View} */ (this.get(MapProperty.VIEW)));\n    };\n    /**\n     * Get the element that serves as the map viewport.\n     * @return {HTMLElement} Viewport.\n     * @api\n     */\n    PluggableMap.prototype.getViewport = function () {\n        return this.viewport_;\n    };\n    /**\n     * Get the element that serves as the container for overlays.  Elements added to\n     * this container will let mousedown and touchstart events through to the map,\n     * so clicks and gestures on an overlay will trigger {@link module:ol/MapBrowserEvent~MapBrowserEvent}\n     * events.\n     * @return {!HTMLElement} The map's overlay container.\n     */\n    PluggableMap.prototype.getOverlayContainer = function () {\n        return this.overlayContainer_;\n    };\n    /**\n     * Get the element that serves as a container for overlays that don't allow\n     * event propagation. Elements added to this container won't let mousedown and\n     * touchstart events through to the map, so clicks and gestures on an overlay\n     * don't trigger any {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n     * @return {!HTMLElement} The map's overlay container that stops events.\n     */\n    PluggableMap.prototype.getOverlayContainerStopEvent = function () {\n        return this.overlayContainerStopEvent_;\n    };\n    /**\n     * @param {import(\"./Tile.js\").default} tile Tile.\n     * @param {string} tileSourceKey Tile source key.\n     * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n     * @param {number} tileResolution Tile resolution.\n     * @return {number} Tile priority.\n     */\n    PluggableMap.prototype.getTilePriority = function (tile, tileSourceKey, tileCenter, tileResolution) {\n        // Filter out tiles at higher zoom levels than the current zoom level, or that\n        // are outside the visible extent.\n        var frameState = this.frameState_;\n        if (!frameState || !(tileSourceKey in frameState.wantedTiles)) {\n            return DROP;\n        }\n        if (!frameState.wantedTiles[tileSourceKey][tile.getKey()]) {\n            return DROP;\n        }\n        // Prioritize the highest zoom level tiles closest to the focus.\n        // Tiles at higher zoom levels are prioritized using Math.log(tileResolution).\n        // Within a zoom level, tiles are prioritized by the distance in pixels\n        // between the center of the tile and the focus.  The factor of 65536 means\n        // that the prioritization should behave as desired for tiles up to\n        // 65536 * Math.log(2) = 45426 pixels from the focus.\n        var deltaX = tileCenter[0] - frameState.focus[0];\n        var deltaY = tileCenter[1] - frameState.focus[1];\n        return 65536 * Math.log(tileResolution) +\n            Math.sqrt(deltaX * deltaX + deltaY * deltaY) / tileResolution;\n    };\n    /**\n     * @param {Event} browserEvent Browser event.\n     * @param {string=} opt_type Type.\n     */\n    PluggableMap.prototype.handleBrowserEvent = function (browserEvent, opt_type) {\n        var type = opt_type || browserEvent.type;\n        var mapBrowserEvent = new MapBrowserEvent(type, this, browserEvent);\n        this.handleMapBrowserEvent(mapBrowserEvent);\n    };\n    /**\n     * @param {MapBrowserEvent} mapBrowserEvent The event to handle.\n     */\n    PluggableMap.prototype.handleMapBrowserEvent = function (mapBrowserEvent) {\n        if (!this.frameState_) {\n            // With no view defined, we cannot translate pixels into geographical\n            // coordinates so interactions cannot be used.\n            return;\n        }\n        var target = mapBrowserEvent.originalEvent.target;\n        while (target instanceof HTMLElement) {\n            if (target.parentElement === this.overlayContainerStopEvent_) {\n                return;\n            }\n            target = target.parentElement;\n        }\n        this.focus_ = mapBrowserEvent.coordinate;\n        mapBrowserEvent.frameState = this.frameState_;\n        var interactionsArray = this.getInteractions().getArray();\n        if (this.dispatchEvent(mapBrowserEvent) !== false) {\n            for (var i = interactionsArray.length - 1; i >= 0; i--) {\n                var interaction = interactionsArray[i];\n                if (!interaction.getActive()) {\n                    continue;\n                }\n                var cont = interaction.handleEvent(mapBrowserEvent);\n                if (!cont) {\n                    break;\n                }\n            }\n        }\n    };\n    /**\n     * @protected\n     */\n    PluggableMap.prototype.handlePostRender = function () {\n        var frameState = this.frameState_;\n        // Manage the tile queue\n        // Image loads are expensive and a limited resource, so try to use them\n        // efficiently:\n        // * When the view is static we allow a large number of parallel tile loads\n        //   to complete the frame as quickly as possible.\n        // * When animating or interacting, image loads can cause janks, so we reduce\n        //   the maximum number of loads per frame and limit the number of parallel\n        //   tile loads to remain reactive to view changes and to reduce the chance of\n        //   loading tiles that will quickly disappear from view.\n        var tileQueue = this.tileQueue_;\n        if (!tileQueue.isEmpty()) {\n            var maxTotalLoading = this.maxTilesLoading_;\n            var maxNewLoads = maxTotalLoading;\n            if (frameState) {\n                var hints = frameState.viewHints;\n                if (hints[ViewHint.ANIMATING] || hints[ViewHint.INTERACTING]) {\n                    var lowOnFrameBudget = Date.now() - frameState.time > 8;\n                    maxTotalLoading = lowOnFrameBudget ? 0 : 8;\n                    maxNewLoads = lowOnFrameBudget ? 0 : 2;\n                }\n            }\n            if (tileQueue.getTilesLoading() < maxTotalLoading) {\n                tileQueue.reprioritize(); // FIXME only call if view has changed\n                tileQueue.loadMoreTiles(maxTotalLoading, maxNewLoads);\n            }\n        }\n        if (frameState && this.hasListener(RenderEventType.RENDERCOMPLETE) && !frameState.animate &&\n            !this.tileQueue_.getTilesLoading() && !getLoading(this.getLayers().getArray())) {\n            this.renderer_.dispatchRenderEvent(RenderEventType.RENDERCOMPLETE, frameState);\n        }\n        var postRenderFunctions = this.postRenderFunctions_;\n        for (var i = 0, ii = postRenderFunctions.length; i < ii; ++i) {\n            postRenderFunctions[i](this, frameState);\n        }\n        postRenderFunctions.length = 0;\n    };\n    /**\n     * @private\n     */\n    PluggableMap.prototype.handleSizeChanged_ = function () {\n        if (this.getView()) {\n            this.getView().resolveConstraints(0);\n        }\n        this.render();\n    };\n    /**\n     * @private\n     */\n    PluggableMap.prototype.handleTargetChanged_ = function () {\n        // target may be undefined, null, a string or an Element.\n        // If it's a string we convert it to an Element before proceeding.\n        // If it's not now an Element we remove the viewport from the DOM.\n        // If it's an Element we append the viewport element to it.\n        var targetElement;\n        if (this.getTarget()) {\n            targetElement = this.getTargetElement();\n        }\n        if (this.keyHandlerKeys_) {\n            for (var i = 0, ii = this.keyHandlerKeys_.length; i < ii; ++i) {\n                unlistenByKey(this.keyHandlerKeys_[i]);\n            }\n            this.keyHandlerKeys_ = null;\n        }\n        if (!targetElement) {\n            this.renderer_.removeLayerRenderers();\n            removeNode(this.viewport_);\n            if (this.handleResize_ !== undefined) {\n                removeEventListener(EventType.RESIZE, this.handleResize_, false);\n                this.handleResize_ = undefined;\n            }\n        }\n        else {\n            targetElement.appendChild(this.viewport_);\n            var keyboardEventTarget = !this.keyboardEventTarget_ ?\n                targetElement : this.keyboardEventTarget_;\n            this.keyHandlerKeys_ = [\n                listen(keyboardEventTarget, EventType.KEYDOWN, this.handleBrowserEvent, this),\n                listen(keyboardEventTarget, EventType.KEYPRESS, this.handleBrowserEvent, this)\n            ];\n            if (!this.handleResize_) {\n                this.handleResize_ = this.updateSize.bind(this);\n                addEventListener(EventType.RESIZE, this.handleResize_, false);\n            }\n        }\n        this.updateSize();\n        // updateSize calls setSize, so no need to call this.render\n        // ourselves here.\n    };\n    /**\n     * @private\n     */\n    PluggableMap.prototype.handleTileChange_ = function () {\n        this.render();\n    };\n    /**\n     * @private\n     */\n    PluggableMap.prototype.handleViewPropertyChanged_ = function () {\n        this.render();\n    };\n    /**\n     * @private\n     */\n    PluggableMap.prototype.handleViewChanged_ = function () {\n        if (this.viewPropertyListenerKey_) {\n            unlistenByKey(this.viewPropertyListenerKey_);\n            this.viewPropertyListenerKey_ = null;\n        }\n        if (this.viewChangeListenerKey_) {\n            unlistenByKey(this.viewChangeListenerKey_);\n            this.viewChangeListenerKey_ = null;\n        }\n        var view = this.getView();\n        if (view) {\n            this.viewport_.setAttribute('data-view', getUid(view));\n            this.viewPropertyListenerKey_ = listen(view, ObjectEventType.PROPERTYCHANGE, this.handleViewPropertyChanged_, this);\n            this.viewChangeListenerKey_ = listen(view, EventType.CHANGE, this.handleViewPropertyChanged_, this);\n            view.resolveConstraints(0);\n        }\n        this.render();\n    };\n    /**\n     * @private\n     */\n    PluggableMap.prototype.handleLayerGroupChanged_ = function () {\n        if (this.layerGroupPropertyListenerKeys_) {\n            this.layerGroupPropertyListenerKeys_.forEach(unlistenByKey);\n            this.layerGroupPropertyListenerKeys_ = null;\n        }\n        var layerGroup = this.getLayerGroup();\n        if (layerGroup) {\n            this.layerGroupPropertyListenerKeys_ = [\n                listen(layerGroup, ObjectEventType.PROPERTYCHANGE, this.render, this),\n                listen(layerGroup, EventType.CHANGE, this.render, this)\n            ];\n        }\n        this.render();\n    };\n    /**\n     * @return {boolean} Is rendered.\n     */\n    PluggableMap.prototype.isRendered = function () {\n        return !!this.frameState_;\n    };\n    /**\n     * Requests an immediate render in a synchronous manner.\n     * @api\n     */\n    PluggableMap.prototype.renderSync = function () {\n        if (this.animationDelayKey_) {\n            cancelAnimationFrame(this.animationDelayKey_);\n        }\n        this.animationDelay_();\n    };\n    /**\n     * Request a map rendering (at the next animation frame).\n     * @api\n     */\n    PluggableMap.prototype.render = function () {\n        if (this.animationDelayKey_ === undefined) {\n            this.animationDelayKey_ = requestAnimationFrame(this.animationDelay_);\n        }\n    };\n    /**\n     * Remove the given control from the map.\n     * @param {import(\"./control/Control.js\").default} control Control.\n     * @return {import(\"./control/Control.js\").default|undefined} The removed control (or undefined\n     *     if the control was not found).\n     * @api\n     */\n    PluggableMap.prototype.removeControl = function (control) {\n        return this.getControls().remove(control);\n    };\n    /**\n     * Remove the given interaction from the map.\n     * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to remove.\n     * @return {import(\"./interaction/Interaction.js\").default|undefined} The removed interaction (or\n     *     undefined if the interaction was not found).\n     * @api\n     */\n    PluggableMap.prototype.removeInteraction = function (interaction) {\n        return this.getInteractions().remove(interaction);\n    };\n    /**\n     * Removes the given layer from the map.\n     * @param {import(\"./layer/Base.js\").default} layer Layer.\n     * @return {import(\"./layer/Base.js\").default|undefined} The removed layer (or undefined if the\n     *     layer was not found).\n     * @api\n     */\n    PluggableMap.prototype.removeLayer = function (layer) {\n        var layers = this.getLayerGroup().getLayers();\n        return layers.remove(layer);\n    };\n    /**\n     * Remove the given overlay from the map.\n     * @param {import(\"./Overlay.js\").default} overlay Overlay.\n     * @return {import(\"./Overlay.js\").default|undefined} The removed overlay (or undefined\n     *     if the overlay was not found).\n     * @api\n     */\n    PluggableMap.prototype.removeOverlay = function (overlay) {\n        return this.getOverlays().remove(overlay);\n    };\n    /**\n     * @param {number} time Time.\n     * @private\n     */\n    PluggableMap.prototype.renderFrame_ = function (time) {\n        var viewState;\n        var size = this.getSize();\n        var view = this.getView();\n        var extent = createEmpty();\n        var previousFrameState = this.frameState_;\n        /** @type {?FrameState} */\n        var frameState = null;\n        if (size !== undefined && hasArea(size) && view && view.isDef()) {\n            var viewHints = view.getHints(this.frameState_ ? this.frameState_.viewHints : undefined);\n            viewState = view.getState(this.pixelRatio_);\n            frameState = /** @type {FrameState} */ ({\n                animate: false,\n                coordinateToPixelTransform: this.coordinateToPixelTransform_,\n                declutterItems: previousFrameState ? previousFrameState.declutterItems : [],\n                extent: extent,\n                focus: this.focus_ ? this.focus_ : viewState.center,\n                index: this.frameIndex_++,\n                layerStatesArray: this.getLayerGroup().getLayerStatesArray(),\n                pixelRatio: this.pixelRatio_,\n                pixelToCoordinateTransform: this.pixelToCoordinateTransform_,\n                postRenderFunctions: [],\n                size: size,\n                skippedFeatureUids: this.skippedFeatureUids_,\n                tileQueue: this.tileQueue_,\n                time: time,\n                usedTiles: {},\n                viewState: viewState,\n                viewHints: viewHints,\n                wantedTiles: {}\n            });\n        }\n        if (frameState) {\n            frameState.extent = getForViewAndSize(viewState.center, viewState.resolution, viewState.rotation, frameState.size, extent);\n        }\n        this.frameState_ = frameState;\n        this.renderer_.renderFrame(frameState);\n        if (frameState) {\n            if (frameState.animate) {\n                this.render();\n            }\n            Array.prototype.push.apply(this.postRenderFunctions_, frameState.postRenderFunctions);\n            if (previousFrameState) {\n                var moveStart = !this.previousExtent_ ||\n                    (!isEmpty(this.previousExtent_) &&\n                        !equals(frameState.extent, this.previousExtent_));\n                if (moveStart) {\n                    this.dispatchEvent(new MapEvent(MapEventType.MOVESTART, this, previousFrameState));\n                    this.previousExtent_ = createOrUpdateEmpty(this.previousExtent_);\n                }\n            }\n            var idle = this.previousExtent_ &&\n                !frameState.viewHints[ViewHint.ANIMATING] &&\n                !frameState.viewHints[ViewHint.INTERACTING] &&\n                !equals(frameState.extent, this.previousExtent_);\n            if (idle) {\n                this.dispatchEvent(new MapEvent(MapEventType.MOVEEND, this, frameState));\n                clone(frameState.extent, this.previousExtent_);\n            }\n        }\n        this.dispatchEvent(new MapEvent(MapEventType.POSTRENDER, this, frameState));\n        setTimeout(this.handlePostRender.bind(this), 0);\n    };\n    /**\n     * Sets the layergroup of this map.\n     * @param {LayerGroup} layerGroup A layer group containing the layers in this map.\n     * @observable\n     * @api\n     */\n    PluggableMap.prototype.setLayerGroup = function (layerGroup) {\n        this.set(MapProperty.LAYERGROUP, layerGroup);\n    };\n    /**\n     * Set the size of this map.\n     * @param {import(\"./size.js\").Size|undefined} size The size in pixels of the map in the DOM.\n     * @observable\n     * @api\n     */\n    PluggableMap.prototype.setSize = function (size) {\n        this.set(MapProperty.SIZE, size);\n    };\n    /**\n     * Set the target element to render this map into.\n     * @param {HTMLElement|string|undefined} target The Element or id of the Element\n     *     that the map is rendered in.\n     * @observable\n     * @api\n     */\n    PluggableMap.prototype.setTarget = function (target) {\n        this.set(MapProperty.TARGET, target);\n    };\n    /**\n     * Set the view for this map.\n     * @param {View} view The view that controls this map.\n     * @observable\n     * @api\n     */\n    PluggableMap.prototype.setView = function (view) {\n        this.set(MapProperty.VIEW, view);\n    };\n    /**\n     * @param {import(\"./Feature.js\").default} feature Feature.\n     */\n    PluggableMap.prototype.skipFeature = function (feature) {\n        this.skippedFeatureUids_[getUid(feature)] = true;\n        this.render();\n    };\n    /**\n     * Force a recalculation of the map viewport size.  This should be called when\n     * third-party code changes the size of the map viewport.\n     * @api\n     */\n    PluggableMap.prototype.updateSize = function () {\n        var targetElement = this.getTargetElement();\n        if (!targetElement) {\n            this.setSize(undefined);\n        }\n        else {\n            var computedStyle = getComputedStyle(targetElement);\n            this.setSize([\n                targetElement.offsetWidth -\n                    parseFloat(computedStyle['borderLeftWidth']) -\n                    parseFloat(computedStyle['paddingLeft']) -\n                    parseFloat(computedStyle['paddingRight']) -\n                    parseFloat(computedStyle['borderRightWidth']),\n                targetElement.offsetHeight -\n                    parseFloat(computedStyle['borderTopWidth']) -\n                    parseFloat(computedStyle['paddingTop']) -\n                    parseFloat(computedStyle['paddingBottom']) -\n                    parseFloat(computedStyle['borderBottomWidth'])\n            ]);\n        }\n    };\n    /**\n     * @param {import(\"./Feature.js\").default} feature Feature.\n     */\n    PluggableMap.prototype.unskipFeature = function (feature) {\n        delete this.skippedFeatureUids_[getUid(feature)];\n        this.render();\n    };\n    return PluggableMap;\n}(BaseObject));\n/**\n * @param {MapOptions} options Map options.\n * @return {MapOptionsInternal} Internal map options.\n */\nfunction createOptionsInternal(options) {\n    /**\n     * @type {HTMLElement|Document}\n     */\n    var keyboardEventTarget = null;\n    if (options.keyboardEventTarget !== undefined) {\n        keyboardEventTarget = typeof options.keyboardEventTarget === 'string' ?\n            document.getElementById(options.keyboardEventTarget) :\n            options.keyboardEventTarget;\n    }\n    /**\n     * @type {Object<string, *>}\n     */\n    var values = {};\n    var layerGroup = options.layers && typeof /** @type {?} */ (options.layers).getLayers === 'function' ?\n        /** @type {LayerGroup} */ (options.layers) : new LayerGroup({ layers: /** @type {Collection} */ (options.layers) });\n    values[MapProperty.LAYERGROUP] = layerGroup;\n    values[MapProperty.TARGET] = options.target;\n    values[MapProperty.VIEW] = options.view !== undefined ?\n        options.view : new View();\n    var controls;\n    if (options.controls !== undefined) {\n        if (Array.isArray(options.controls)) {\n            controls = new Collection(options.controls.slice());\n        }\n        else {\n            assert(typeof /** @type {?} */ (options.controls).getArray === 'function', 47); // Expected `controls` to be an array or an `import(\"./Collection.js\").Collection`\n            controls = /** @type {Collection} */ (options.controls);\n        }\n    }\n    var interactions;\n    if (options.interactions !== undefined) {\n        if (Array.isArray(options.interactions)) {\n            interactions = new Collection(options.interactions.slice());\n        }\n        else {\n            assert(typeof /** @type {?} */ (options.interactions).getArray === 'function', 48); // Expected `interactions` to be an array or an `import(\"./Collection.js\").Collection`\n            interactions = /** @type {Collection} */ (options.interactions);\n        }\n    }\n    var overlays;\n    if (options.overlays !== undefined) {\n        if (Array.isArray(options.overlays)) {\n            overlays = new Collection(options.overlays.slice());\n        }\n        else {\n            assert(typeof /** @type {?} */ (options.overlays).getArray === 'function', 49); // Expected `overlays` to be an array or an `import(\"./Collection.js\").Collection`\n            overlays = options.overlays;\n        }\n    }\n    else {\n        overlays = new Collection();\n    }\n    return {\n        controls: controls,\n        interactions: interactions,\n        keyboardEventTarget: keyboardEventTarget,\n        overlays: overlays,\n        values: values\n    };\n}\nexport default PluggableMap;\n/**\n * @param  {Array<import(\"./layer/Base.js\").default>} layers Layers.\n * @return {boolean} Layers have sources that are still loading.\n */\nfunction getLoading(layers) {\n    for (var i = 0, ii = layers.length; i < ii; ++i) {\n        var layer = layers[i];\n        if (typeof /** @type {?} */ (layer).getLayers === 'function') {\n            return getLoading(/** @type {LayerGroup} */ (layer).getLayers().getArray());\n        }\n        else {\n            var source = /** @type {import(\"./layer/Layer.js\").default} */ (layer).getSource();\n            if (source && source.loading) {\n                return true;\n            }\n        }\n    }\n    return false;\n}\n//# sourceMappingURL=PluggableMap.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/control/Control\n */\nimport { VOID } from '../functions.js';\nimport MapEventType from '../MapEventType.js';\nimport BaseObject from '../Object.js';\nimport { removeNode } from '../dom.js';\nimport { listen, unlistenByKey } from '../events.js';\n/**\n * @typedef {Object} Options\n * @property {HTMLElement} [element] The element is the control's\n * container element. This only needs to be specified if you're developing\n * a custom control.\n * @property {function(import(\"../MapEvent.js\").default)} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {HTMLElement|string} [target] Specify a target if you want\n * the control to be rendered outside of the map's viewport.\n */\n/**\n * @classdesc\n * A control is a visible widget with a DOM element in a fixed position on the\n * screen. They can involve user input (buttons), or be informational only;\n * the position is determined using CSS. By default these are placed in the\n * container with CSS class name `ol-overlaycontainer-stopevent`, but can use\n * any outside DOM element.\n *\n * This is the base class for controls. You can use it for simple custom\n * controls by creating the element with listeners, creating an instance:\n * ```js\n * var myControl = new Control({element: myElement});\n * ```\n * and then adding this to the map.\n *\n * The main advantage of having this as a control rather than a simple separate\n * DOM element is that preventing propagation is handled for you. Controls\n * will also be objects in a {@link module:ol/Collection~Collection}, so you can use their methods.\n *\n * You can also extend this base for your own control class. See\n * examples/custom-controls for an example of how to do this.\n *\n * @api\n */\nvar Control = /** @class */ (function (_super) {\n    __extends(Control, _super);\n    /**\n     * @param {Options} options Control options.\n     */\n    function Control(options) {\n        var _this = _super.call(this) || this;\n        /**\n         * @protected\n         * @type {HTMLElement}\n         */\n        _this.element = options.element ? options.element : null;\n        /**\n         * @private\n         * @type {HTMLElement}\n         */\n        _this.target_ = null;\n        /**\n         * @private\n         * @type {import(\"../PluggableMap.js\").default}\n         */\n        _this.map_ = null;\n        /**\n         * @protected\n         * @type {!Array<import(\"../events.js\").EventsKey>}\n         */\n        _this.listenerKeys = [];\n        /**\n         * @type {function(import(\"../MapEvent.js\").default): void}\n         */\n        _this.render = options.render ? options.render : VOID;\n        if (options.target) {\n            _this.setTarget(options.target);\n        }\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    Control.prototype.disposeInternal = function () {\n        removeNode(this.element);\n        _super.prototype.disposeInternal.call(this);\n    };\n    /**\n     * Get the map associated with this control.\n     * @return {import(\"../PluggableMap.js\").default} Map.\n     * @api\n     */\n    Control.prototype.getMap = function () {\n        return this.map_;\n    };\n    /**\n     * Remove the control from its current map and attach it to the new map.\n     * Subclasses may set up event handlers to get notified about changes to\n     * the map here.\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     * @api\n     */\n    Control.prototype.setMap = function (map) {\n        if (this.map_) {\n            removeNode(this.element);\n        }\n        for (var i = 0, ii = this.listenerKeys.length; i < ii; ++i) {\n            unlistenByKey(this.listenerKeys[i]);\n        }\n        this.listenerKeys.length = 0;\n        this.map_ = map;\n        if (this.map_) {\n            var target = this.target_ ?\n                this.target_ : map.getOverlayContainerStopEvent();\n            target.appendChild(this.element);\n            if (this.render !== VOID) {\n                this.listenerKeys.push(listen(map, MapEventType.POSTRENDER, this.render, this));\n            }\n            map.render();\n        }\n    };\n    /**\n     * This function is used to set a target element for the control. It has no\n     * effect if it is called after the control has been added to the map (i.e.\n     * after `setMap` is called on the control). If no `target` is set in the\n     * options passed to the control constructor and if `setTarget` is not called\n     * then the control is added to the map's overlay container.\n     * @param {HTMLElement|string} target Target.\n     * @api\n     */\n    Control.prototype.setTarget = function (target) {\n        this.target_ = typeof target === 'string' ?\n            document.getElementById(target) :\n            target;\n    };\n    return Control;\n}(BaseObject));\nexport default Control;\n//# sourceMappingURL=Control.js.map","/**\n * @module ol/css\n */\n/**\n * The CSS class for hidden feature.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_HIDDEN = 'ol-hidden';\n/**\n * The CSS class that we'll give the DOM elements to have them selectable.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_SELECTABLE = 'ol-selectable';\n/**\n * The CSS class that we'll give the DOM elements to have them unselectable.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_UNSELECTABLE = 'ol-unselectable';\n/**\n * The CSS class for unsupported feature.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_UNSUPPORTED = 'ol-unsupported';\n/**\n * The CSS class for controls.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_CONTROL = 'ol-control';\n/**\n * The CSS class that we'll give the DOM elements that are collapsed, i.e.\n * to those elements which usually can be expanded.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_COLLAPSED = 'ol-collapsed';\n/**\n * Get the list of font families from a font spec.  Note that this doesn't work\n * for font families that have commas in them.\n * @param {string} The CSS font property.\n * @return {Object<string>} The font families (or null if the input spec is invalid).\n */\nexport var getFontFamilies = (function () {\n    var style;\n    var cache = {};\n    return function (font) {\n        if (!style) {\n            style = document.createElement('div').style;\n        }\n        if (!(font in cache)) {\n            style.font = font;\n            var family = style.fontFamily;\n            style.font = '';\n            if (!family) {\n                return null;\n            }\n            cache[font] = family.split(/,\\s?/);\n        }\n        return cache[font];\n    };\n})();\n//# sourceMappingURL=css.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/layer/Layer\n */\nimport { listen, unlistenByKey } from '../events.js';\nimport EventType from '../events/EventType.js';\nimport { getChangeEventType } from '../Object.js';\nimport BaseLayer from './Base.js';\nimport LayerProperty from './Property.js';\nimport { assign } from '../obj.js';\nimport RenderEventType from '../render/EventType.js';\nimport SourceState from '../source/State.js';\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {import(\"../source/Source.js\").default} [source] Source for this layer.  If not provided to the constructor,\n * the source can be set by calling {@link module:ol/layer/Layer#setSource layer.setSource(source)} after\n * construction.\n * @property {import(\"../PluggableMap.js\").default} [map] Map.\n */\n/**\n * @typedef {Object} State\n * @property {import(\"./Base.js\").default} layer\n * @property {number} opacity Opacity, the value is rounded to two digits to appear after the decimal point.\n * @property {SourceState} sourceState\n * @property {boolean} visible\n * @property {boolean} managed\n * @property {import(\"../extent.js\").Extent} [extent]\n * @property {number} zIndex\n * @property {number} maxResolution\n * @property {number} minResolution\n */\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * A visual representation of raster or vector map data.\n * Layers group together those properties that pertain to how the data is to be\n * displayed, irrespective of the source of that data.\n *\n * Layers are usually added to a map with {@link module:ol/Map#addLayer}. Components\n * like {@link module:ol/interaction/Select~Select} use unmanaged layers\n * internally. These unmanaged layers are associated with the map using\n * {@link module:ol/layer/Layer~Layer#setMap} instead.\n *\n * A generic `change` event is fired when the state of the source changes.\n *\n * @fires import(\"../render/Event.js\").RenderEvent#prerender\n * @fires import(\"../render/Event.js\").RenderEvent#postrender\n *\n * @template {import(\"../source/Source.js\").default} SourceType\n */\nvar Layer = /** @class */ (function (_super) {\n    __extends(Layer, _super);\n    /**\n     * @param {Options} options Layer options.\n     */\n    function Layer(options) {\n        var _this = this;\n        var baseOptions = assign({}, options);\n        delete baseOptions.source;\n        _this = _super.call(this, baseOptions) || this;\n        /**\n         * @private\n         * @type {?import(\"../events.js\").EventsKey}\n         */\n        _this.mapPrecomposeKey_ = null;\n        /**\n         * @private\n         * @type {?import(\"../events.js\").EventsKey}\n         */\n        _this.mapRenderKey_ = null;\n        /**\n         * @private\n         * @type {?import(\"../events.js\").EventsKey}\n         */\n        _this.sourceChangeKey_ = null;\n        /**\n         * @private\n         * @type {import(\"../renderer/Layer.js\").default}\n         */\n        _this.renderer_ = null;\n        if (options.map) {\n            _this.setMap(options.map);\n        }\n        listen(_this, getChangeEventType(LayerProperty.SOURCE), _this.handleSourcePropertyChange_, _this);\n        var source = options.source ? /** @type {SourceType} */ (options.source) : null;\n        _this.setSource(source);\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    Layer.prototype.getLayersArray = function (opt_array) {\n        var array = opt_array ? opt_array : [];\n        array.push(this);\n        return array;\n    };\n    /**\n     * @inheritDoc\n     */\n    Layer.prototype.getLayerStatesArray = function (opt_states) {\n        var states = opt_states ? opt_states : [];\n        states.push(this.getLayerState());\n        return states;\n    };\n    /**\n     * Get the layer source.\n     * @return {SourceType} The layer source (or `null` if not yet set).\n     * @observable\n     * @api\n     */\n    Layer.prototype.getSource = function () {\n        return /** @type {SourceType} */ (this.get(LayerProperty.SOURCE)) || null;\n    };\n    /**\n      * @inheritDoc\n      */\n    Layer.prototype.getSourceState = function () {\n        var source = this.getSource();\n        return !source ? SourceState.UNDEFINED : source.getState();\n    };\n    /**\n     * @private\n     */\n    Layer.prototype.handleSourceChange_ = function () {\n        this.changed();\n    };\n    /**\n     * @private\n     */\n    Layer.prototype.handleSourcePropertyChange_ = function () {\n        if (this.sourceChangeKey_) {\n            unlistenByKey(this.sourceChangeKey_);\n            this.sourceChangeKey_ = null;\n        }\n        var source = this.getSource();\n        if (source) {\n            this.sourceChangeKey_ = listen(source, EventType.CHANGE, this.handleSourceChange_, this);\n        }\n        this.changed();\n    };\n    /**\n     * In charge to manage the rendering of the layer. One layer type is\n     * bounded with one layer renderer.\n     * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     * @return {HTMLElement} The rendered element.\n     */\n    Layer.prototype.render = function (frameState) {\n        var layerRenderer = this.getRenderer();\n        var layerState = this.getLayerState();\n        if (layerRenderer.prepareFrame(frameState, layerState)) {\n            return layerRenderer.renderFrame(frameState, layerState);\n        }\n    };\n    /**\n     * Sets the layer to be rendered on top of other layers on a map. The map will\n     * not manage this layer in its layers collection, and the callback in\n     * {@link module:ol/Map#forEachLayerAtPixel} will receive `null` as layer. This\n     * is useful for temporary layers. To remove an unmanaged layer from the map,\n     * use `#setMap(null)`.\n     *\n     * To add the layer to a map and have it managed by the map, use\n     * {@link module:ol/Map#addLayer} instead.\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     * @api\n     */\n    Layer.prototype.setMap = function (map) {\n        if (this.mapPrecomposeKey_) {\n            unlistenByKey(this.mapPrecomposeKey_);\n            this.mapPrecomposeKey_ = null;\n        }\n        if (!map) {\n            this.changed();\n        }\n        if (this.mapRenderKey_) {\n            unlistenByKey(this.mapRenderKey_);\n            this.mapRenderKey_ = null;\n        }\n        if (map) {\n            this.mapPrecomposeKey_ = listen(map, RenderEventType.PRECOMPOSE, function (evt) {\n                var renderEvent = /** @type {import(\"../render/Event.js\").default} */ (evt);\n                renderEvent.frameState.layerStatesArray.push(this.getLayerState(false));\n            }, this);\n            this.mapRenderKey_ = listen(this, EventType.CHANGE, map.render, map);\n            this.changed();\n        }\n    };\n    /**\n     * Set the layer source.\n     * @param {SourceType} source The layer source.\n     * @observable\n     * @api\n     */\n    Layer.prototype.setSource = function (source) {\n        this.set(LayerProperty.SOURCE, source);\n    };\n    /**\n     * Get the renderer for this layer.\n     * @return {import(\"../renderer/Layer.js\").default} The layer renderer.\n     */\n    Layer.prototype.getRenderer = function () {\n        if (!this.renderer_) {\n            this.renderer_ = this.createRenderer();\n        }\n        return this.renderer_;\n    };\n    /**\n     * Create a renderer for this layer.\n     * @return {import(\"../renderer/Layer.js\").default} A layer renderer.\n     * @protected\n     */\n    Layer.prototype.createRenderer = function () {\n        return null;\n    };\n    return Layer;\n}(BaseLayer));\n/**\n * Return `true` if the layer is visible, and if the passed resolution is\n * between the layer's minResolution and maxResolution. The comparison is\n * inclusive for `minResolution` and exclusive for `maxResolution`.\n * @param {State} layerState Layer state.\n * @param {number} resolution Resolution.\n * @return {boolean} The layer is visible at the given resolution.\n */\nexport function visibleAtResolution(layerState, resolution) {\n    return layerState.visible && resolution >= layerState.minResolution &&\n        resolution < layerState.maxResolution;\n}\nexport default Layer;\n//# sourceMappingURL=Layer.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/control/Attribution\n */\nimport { equals } from '../array.js';\nimport Control from './Control.js';\nimport { CLASS_CONTROL, CLASS_UNSELECTABLE, CLASS_COLLAPSED } from '../css.js';\nimport { removeChildren, replaceNode } from '../dom.js';\nimport { listen } from '../events.js';\nimport EventType from '../events/EventType.js';\nimport { visibleAtResolution } from '../layer/Layer.js';\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-attribution'] CSS class name.\n * @property {HTMLElement|string} [target] Specify a target if you\n * want the control to be rendered outside of the map's\n * viewport.\n * @property {boolean} [collapsible] Specify if attributions can\n * be collapsed. If not specified, sources control this behavior with their\n * `attributionsCollapsible` setting.\n * @property {boolean} [collapsed=true] Specify if attributions should\n * be collapsed at startup.\n * @property {string} [tipLabel='Attributions'] Text label to use for the button tip.\n * @property {string} [label='i'] Text label to use for the\n * collapsed attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|HTMLElement} [collapseLabel='»'] Text label to use\n * for the expanded attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {function(import(\"../MapEvent.js\").default)} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n */\n/**\n * @classdesc\n * Control to show all the attributions associated with the layer sources\n * in the map. This control is one of the default controls included in maps.\n * By default it will show in the bottom right portion of the map, but this can\n * be changed by using a css selector for `.ol-attribution`.\n *\n * @api\n */\nvar Attribution = /** @class */ (function (_super) {\n    __extends(Attribution, _super);\n    /**\n     * @param {Options=} opt_options Attribution options.\n     */\n    function Attribution(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, {\n            element: document.createElement('div'),\n            render: options.render || render,\n            target: options.target\n        }) || this;\n        /**\n         * @private\n         * @type {HTMLElement}\n         */\n        _this.ulElement_ = document.createElement('ul');\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.collapsed_ = options.collapsed !== undefined ? options.collapsed : true;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.overrideCollapsible_ = options.collapsible !== undefined;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.collapsible_ = options.collapsible !== undefined ?\n            options.collapsible : true;\n        if (!_this.collapsible_) {\n            _this.collapsed_ = false;\n        }\n        var className = options.className !== undefined ? options.className : 'ol-attribution';\n        var tipLabel = options.tipLabel !== undefined ? options.tipLabel : 'Attributions';\n        var collapseLabel = options.collapseLabel !== undefined ? options.collapseLabel : '\\u00BB';\n        if (typeof collapseLabel === 'string') {\n            /**\n             * @private\n             * @type {HTMLElement}\n             */\n            _this.collapseLabel_ = document.createElement('span');\n            _this.collapseLabel_.textContent = collapseLabel;\n        }\n        else {\n            _this.collapseLabel_ = collapseLabel;\n        }\n        var label = options.label !== undefined ? options.label : 'i';\n        if (typeof label === 'string') {\n            /**\n             * @private\n             * @type {HTMLElement}\n             */\n            _this.label_ = document.createElement('span');\n            _this.label_.textContent = label;\n        }\n        else {\n            _this.label_ = label;\n        }\n        var activeLabel = (_this.collapsible_ && !_this.collapsed_) ?\n            _this.collapseLabel_ : _this.label_;\n        var button = document.createElement('button');\n        button.setAttribute('type', 'button');\n        button.title = tipLabel;\n        button.appendChild(activeLabel);\n        listen(button, EventType.CLICK, _this.handleClick_, _this);\n        var cssClasses = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL +\n            (_this.collapsed_ && _this.collapsible_ ? ' ' + CLASS_COLLAPSED : '') +\n            (_this.collapsible_ ? '' : ' ol-uncollapsible');\n        var element = _this.element;\n        element.className = cssClasses;\n        element.appendChild(_this.ulElement_);\n        element.appendChild(button);\n        /**\n         * A list of currently rendered resolutions.\n         * @type {Array<string>}\n         * @private\n         */\n        _this.renderedAttributions_ = [];\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.renderedVisible_ = true;\n        return _this;\n    }\n    /**\n     * Collect a list of visible attributions and set the collapsible state.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     * @return {Array<string>} Attributions.\n     * @private\n     */\n    Attribution.prototype.collectSourceAttributions_ = function (frameState) {\n        /**\n         * Used to determine if an attribution already exists.\n         * @type {!Object<string, boolean>}\n         */\n        var lookup = {};\n        /**\n         * A list of visible attributions.\n         * @type {Array<string>}\n         */\n        var visibleAttributions = [];\n        var layerStatesArray = frameState.layerStatesArray;\n        var resolution = frameState.viewState.resolution;\n        for (var i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n            var layerState = layerStatesArray[i];\n            if (!visibleAtResolution(layerState, resolution)) {\n                continue;\n            }\n            var source = /** @type {import(\"../layer/Layer.js\").default} */ (layerState.layer).getSource();\n            if (!source) {\n                continue;\n            }\n            var attributionGetter = source.getAttributions();\n            if (!attributionGetter) {\n                continue;\n            }\n            var attributions = attributionGetter(frameState);\n            if (!attributions) {\n                continue;\n            }\n            if (!this.overrideCollapsible_ && source.getAttributionsCollapsible() === false) {\n                this.setCollapsible(false);\n            }\n            if (Array.isArray(attributions)) {\n                for (var j = 0, jj = attributions.length; j < jj; ++j) {\n                    if (!(attributions[j] in lookup)) {\n                        visibleAttributions.push(attributions[j]);\n                        lookup[attributions[j]] = true;\n                    }\n                }\n            }\n            else {\n                if (!(attributions in lookup)) {\n                    visibleAttributions.push(attributions);\n                    lookup[attributions] = true;\n                }\n            }\n        }\n        return visibleAttributions;\n    };\n    /**\n     * @private\n     * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     */\n    Attribution.prototype.updateElement_ = function (frameState) {\n        if (!frameState) {\n            if (this.renderedVisible_) {\n                this.element.style.display = 'none';\n                this.renderedVisible_ = false;\n            }\n            return;\n        }\n        var attributions = this.collectSourceAttributions_(frameState);\n        var visible = attributions.length > 0;\n        if (this.renderedVisible_ != visible) {\n            this.element.style.display = visible ? '' : 'none';\n            this.renderedVisible_ = visible;\n        }\n        if (equals(attributions, this.renderedAttributions_)) {\n            return;\n        }\n        removeChildren(this.ulElement_);\n        // append the attributions\n        for (var i = 0, ii = attributions.length; i < ii; ++i) {\n            var element = document.createElement('li');\n            element.innerHTML = attributions[i];\n            this.ulElement_.appendChild(element);\n        }\n        this.renderedAttributions_ = attributions;\n    };\n    /**\n     * @param {MouseEvent} event The event to handle\n     * @private\n     */\n    Attribution.prototype.handleClick_ = function (event) {\n        event.preventDefault();\n        this.handleToggle_();\n    };\n    /**\n     * @private\n     */\n    Attribution.prototype.handleToggle_ = function () {\n        this.element.classList.toggle(CLASS_COLLAPSED);\n        if (this.collapsed_) {\n            replaceNode(this.collapseLabel_, this.label_);\n        }\n        else {\n            replaceNode(this.label_, this.collapseLabel_);\n        }\n        this.collapsed_ = !this.collapsed_;\n    };\n    /**\n     * Return `true` if the attribution is collapsible, `false` otherwise.\n     * @return {boolean} True if the widget is collapsible.\n     * @api\n     */\n    Attribution.prototype.getCollapsible = function () {\n        return this.collapsible_;\n    };\n    /**\n     * Set whether the attribution should be collapsible.\n     * @param {boolean} collapsible True if the widget is collapsible.\n     * @api\n     */\n    Attribution.prototype.setCollapsible = function (collapsible) {\n        if (this.collapsible_ === collapsible) {\n            return;\n        }\n        this.collapsible_ = collapsible;\n        this.element.classList.toggle('ol-uncollapsible');\n        if (!collapsible && this.collapsed_) {\n            this.handleToggle_();\n        }\n    };\n    /**\n     * Collapse or expand the attribution according to the passed parameter. Will\n     * not do anything if the attribution isn't collapsible or if the current\n     * collapsed state is already the one requested.\n     * @param {boolean} collapsed True if the widget is collapsed.\n     * @api\n     */\n    Attribution.prototype.setCollapsed = function (collapsed) {\n        if (!this.collapsible_ || this.collapsed_ === collapsed) {\n            return;\n        }\n        this.handleToggle_();\n    };\n    /**\n     * Return `true` when the attribution is currently collapsed or `false`\n     * otherwise.\n     * @return {boolean} True if the widget is collapsed.\n     * @api\n     */\n    Attribution.prototype.getCollapsed = function () {\n        return this.collapsed_;\n    };\n    return Attribution;\n}(Control));\n/**\n * Update the attribution element.\n * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n * @this {Attribution}\n * @api\n */\nexport function render(mapEvent) {\n    this.updateElement_(mapEvent.frameState);\n}\nexport default Attribution;\n//# sourceMappingURL=Attribution.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/control/Rotate\n */\nimport Control from './Control.js';\nimport { CLASS_CONTROL, CLASS_HIDDEN, CLASS_UNSELECTABLE } from '../css.js';\nimport { easeOut } from '../easing.js';\nimport { listen } from '../events.js';\nimport EventType from '../events/EventType.js';\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-rotate'] CSS class name.\n * @property {string|HTMLElement} [label='⇧'] Text label to use for the rotate button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Reset rotation'] Text label to use for the rotate tip.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {boolean} [autoHide=true] Hide the control when rotation is 0.\n * @property {function(import(\"../MapEvent.js\").default)} [render] Function called when the control should\n * be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {function()} [resetNorth] Function called when the control is clicked.\n * This will override the default `resetNorth`.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n/**\n * @classdesc\n * A button control to reset rotation to 0.\n * To style this control use css selector `.ol-rotate`. A `.ol-hidden` css\n * selector is added to the button when the rotation is 0.\n *\n * @api\n */\nvar Rotate = /** @class */ (function (_super) {\n    __extends(Rotate, _super);\n    /**\n     * @param {Options=} opt_options Rotate options.\n     */\n    function Rotate(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, {\n            element: document.createElement('div'),\n            render: options.render || render,\n            target: options.target\n        }) || this;\n        var className = options.className !== undefined ? options.className : 'ol-rotate';\n        var label = options.label !== undefined ? options.label : '\\u21E7';\n        /**\n         * @type {HTMLElement}\n         * @private\n         */\n        _this.label_ = null;\n        if (typeof label === 'string') {\n            _this.label_ = document.createElement('span');\n            _this.label_.className = 'ol-compass';\n            _this.label_.textContent = label;\n        }\n        else {\n            _this.label_ = label;\n            _this.label_.classList.add('ol-compass');\n        }\n        var tipLabel = options.tipLabel ? options.tipLabel : 'Reset rotation';\n        var button = document.createElement('button');\n        button.className = className + '-reset';\n        button.setAttribute('type', 'button');\n        button.title = tipLabel;\n        button.appendChild(_this.label_);\n        listen(button, EventType.CLICK, _this.handleClick_, _this);\n        var cssClasses = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n        var element = _this.element;\n        element.className = cssClasses;\n        element.appendChild(button);\n        _this.callResetNorth_ = options.resetNorth ? options.resetNorth : undefined;\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 250;\n        /**\n         * @type {boolean}\n         * @private\n         */\n        _this.autoHide_ = options.autoHide !== undefined ? options.autoHide : true;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.rotation_ = undefined;\n        if (_this.autoHide_) {\n            _this.element.classList.add(CLASS_HIDDEN);\n        }\n        return _this;\n    }\n    /**\n     * @param {MouseEvent} event The event to handle\n     * @private\n     */\n    Rotate.prototype.handleClick_ = function (event) {\n        event.preventDefault();\n        if (this.callResetNorth_ !== undefined) {\n            this.callResetNorth_();\n        }\n        else {\n            this.resetNorth_();\n        }\n    };\n    /**\n     * @private\n     */\n    Rotate.prototype.resetNorth_ = function () {\n        var map = this.getMap();\n        var view = map.getView();\n        if (!view) {\n            // the map does not have a view, so we can't act\n            // upon it\n            return;\n        }\n        if (view.getRotation() !== undefined) {\n            if (this.duration_ > 0) {\n                view.animate({\n                    rotation: 0,\n                    duration: this.duration_,\n                    easing: easeOut\n                });\n            }\n            else {\n                view.setRotation(0);\n            }\n        }\n    };\n    return Rotate;\n}(Control));\n/**\n * Update the rotate control element.\n * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n * @this {Rotate}\n * @api\n */\nexport function render(mapEvent) {\n    var frameState = mapEvent.frameState;\n    if (!frameState) {\n        return;\n    }\n    var rotation = frameState.viewState.rotation;\n    if (rotation != this.rotation_) {\n        var transform = 'rotate(' + rotation + 'rad)';\n        if (this.autoHide_) {\n            var contains = this.element.classList.contains(CLASS_HIDDEN);\n            if (!contains && rotation === 0) {\n                this.element.classList.add(CLASS_HIDDEN);\n            }\n            else if (contains && rotation !== 0) {\n                this.element.classList.remove(CLASS_HIDDEN);\n            }\n        }\n        this.label_.style.transform = transform;\n    }\n    this.rotation_ = rotation;\n}\nexport default Rotate;\n//# sourceMappingURL=Rotate.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/control/Zoom\n */\nimport { listen } from '../events.js';\nimport EventType from '../events/EventType.js';\nimport Control from './Control.js';\nimport { CLASS_CONTROL, CLASS_UNSELECTABLE } from '../css.js';\nimport { easeOut } from '../easing.js';\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {string} [className='ol-zoom'] CSS class name.\n * @property {string|HTMLElement} [zoomInLabel='+'] Text label to use for the zoom-in\n * button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|HTMLElement} [zoomOutLabel='-'] Text label to use for the zoom-out button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [zoomInTipLabel='Zoom in'] Text label to use for the button tip.\n * @property {string} [zoomOutTipLabel='Zoom out'] Text label to use for the button tip.\n * @property {number} [delta=1] The zoom delta applied on each click.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n/**\n * @classdesc\n * A control with 2 buttons, one for zoom in and one for zoom out.\n * This control is one of the default controls of a map. To style this control\n * use css selectors `.ol-zoom-in` and `.ol-zoom-out`.\n *\n * @api\n */\nvar Zoom = /** @class */ (function (_super) {\n    __extends(Zoom, _super);\n    /**\n     * @param {Options=} opt_options Zoom options.\n     */\n    function Zoom(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, {\n            element: document.createElement('div'),\n            target: options.target\n        }) || this;\n        var className = options.className !== undefined ? options.className : 'ol-zoom';\n        var delta = options.delta !== undefined ? options.delta : 1;\n        var zoomInLabel = options.zoomInLabel !== undefined ? options.zoomInLabel : '+';\n        var zoomOutLabel = options.zoomOutLabel !== undefined ? options.zoomOutLabel : '\\u2212';\n        var zoomInTipLabel = options.zoomInTipLabel !== undefined ?\n            options.zoomInTipLabel : 'Zoom in';\n        var zoomOutTipLabel = options.zoomOutTipLabel !== undefined ?\n            options.zoomOutTipLabel : 'Zoom out';\n        var inElement = document.createElement('button');\n        inElement.className = className + '-in';\n        inElement.setAttribute('type', 'button');\n        inElement.title = zoomInTipLabel;\n        inElement.appendChild(typeof zoomInLabel === 'string' ? document.createTextNode(zoomInLabel) : zoomInLabel);\n        listen(inElement, EventType.CLICK, _this.handleClick_.bind(_this, delta));\n        var outElement = document.createElement('button');\n        outElement.className = className + '-out';\n        outElement.setAttribute('type', 'button');\n        outElement.title = zoomOutTipLabel;\n        outElement.appendChild(typeof zoomOutLabel === 'string' ? document.createTextNode(zoomOutLabel) : zoomOutLabel);\n        listen(outElement, EventType.CLICK, _this.handleClick_.bind(_this, -delta));\n        var cssClasses = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n        var element = _this.element;\n        element.className = cssClasses;\n        element.appendChild(inElement);\n        element.appendChild(outElement);\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 250;\n        return _this;\n    }\n    /**\n     * @param {number} delta Zoom delta.\n     * @param {MouseEvent} event The event to handle\n     * @private\n     */\n    Zoom.prototype.handleClick_ = function (delta, event) {\n        event.preventDefault();\n        this.zoomByDelta_(delta);\n    };\n    /**\n     * @param {number} delta Zoom delta.\n     * @private\n     */\n    Zoom.prototype.zoomByDelta_ = function (delta) {\n        var map = this.getMap();\n        var view = map.getView();\n        if (!view) {\n            // the map does not have a view, so we can't act\n            // upon it\n            return;\n        }\n        var currentZoom = view.getZoom();\n        if (currentZoom !== undefined) {\n            var newZoom = view.getConstrainedZoom(currentZoom + delta);\n            if (this.duration_ > 0) {\n                if (view.getAnimating()) {\n                    view.cancelAnimations();\n                }\n                view.animate({\n                    zoom: newZoom,\n                    duration: this.duration_,\n                    easing: easeOut\n                });\n            }\n            else {\n                view.setZoom(newZoom);\n            }\n        }\n    };\n    return Zoom;\n}(Control));\nexport default Zoom;\n//# sourceMappingURL=Zoom.js.map","/**\n * @module ol/control/util\n */\nimport Collection from '../Collection.js';\nimport Attribution from './Attribution.js';\nimport Rotate from './Rotate.js';\nimport Zoom from './Zoom.js';\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [attribution=true] Include\n * {@link module:ol/control/Attribution~Attribution}.\n * @property {import(\"./Attribution.js\").Options} [attributionOptions]\n * Options for {@link module:ol/control/Attribution~Attribution}.\n * @property {boolean} [rotate=true] Include\n * {@link module:ol/control/Rotate~Rotate}.\n * @property {import(\"./Rotate.js\").Options} [rotateOptions] Options\n * for {@link module:ol/control/Rotate~Rotate}.\n * @property {boolean} [zoom] Include {@link module:ol/control/Zoom~Zoom}.\n * @property {import(\"./Zoom.js\").Options} [zoomOptions] Options for\n * {@link module:ol/control/Zoom~Zoom}.\n * @api\n */\n/**\n * Set of controls included in maps by default. Unless configured otherwise,\n * this returns a collection containing an instance of each of the following\n * controls:\n * * {@link module:ol/control/Zoom~Zoom}\n * * {@link module:ol/control/Rotate~Rotate}\n * * {@link module:ol/control/Attribution~Attribution}\n *\n * @param {DefaultsOptions=} opt_options\n * Defaults options.\n * @return {Collection<import(\"./Control.js\").default>}\n * Controls.\n * @function module:ol/control.defaults\n * @api\n */\nexport function defaults(opt_options) {\n    var options = opt_options ? opt_options : {};\n    var controls = new Collection();\n    var zoomControl = options.zoom !== undefined ? options.zoom : true;\n    if (zoomControl) {\n        controls.push(new Zoom(options.zoomOptions));\n    }\n    var rotateControl = options.rotate !== undefined ? options.rotate : true;\n    if (rotateControl) {\n        controls.push(new Rotate(options.rotateOptions));\n    }\n    var attributionControl = options.attribution !== undefined ?\n        options.attribution : true;\n    if (attributionControl) {\n        controls.push(new Attribution(options.attributionOptions));\n    }\n    return controls;\n}\n//# sourceMappingURL=util.js.map","/**\n * @module ol/interaction/Property\n */\n/**\n * @enum {string}\n */\nexport default {\n    ACTIVE: 'active'\n};\n//# sourceMappingURL=Property.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/Interaction\n */\nimport BaseObject from '../Object.js';\nimport { easeOut, linear } from '../easing.js';\nimport InteractionProperty from './Property.js';\n/**\n * Object literal with config options for interactions.\n * @typedef {Object} InteractionOptions\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} handleEvent\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. If the function returns a falsy value, propagation of\n * the event to other interactions in the map's interactions chain will be\n * prevented (this includes functions with no explicit return). The interactions\n * are traversed in reverse order of the interactions collection of the map.\n */\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * User actions that change the state of the map. Some are similar to controls,\n * but are not associated with a DOM element.\n * For example, {@link module:ol/interaction/KeyboardZoom~KeyboardZoom} is\n * functionally the same as {@link module:ol/control/Zoom~Zoom}, but triggered\n * by a keyboard event not a button element event.\n * Although interactions do not have a DOM element, some of them do render\n * vectors and so are visible on the screen.\n * @api\n */\nvar Interaction = /** @class */ (function (_super) {\n    __extends(Interaction, _super);\n    /**\n     * @param {InteractionOptions} options Options.\n     */\n    function Interaction(options) {\n        var _this = _super.call(this) || this;\n        if (options.handleEvent) {\n            _this.handleEvent = options.handleEvent;\n        }\n        /**\n         * @private\n         * @type {import(\"../PluggableMap.js\").default}\n         */\n        _this.map_ = null;\n        _this.setActive(true);\n        return _this;\n    }\n    /**\n     * Return whether the interaction is currently active.\n     * @return {boolean} `true` if the interaction is active, `false` otherwise.\n     * @observable\n     * @api\n     */\n    Interaction.prototype.getActive = function () {\n        return /** @type {boolean} */ (this.get(InteractionProperty.ACTIVE));\n    };\n    /**\n     * Get the map associated with this interaction.\n     * @return {import(\"../PluggableMap.js\").default} Map.\n     * @api\n     */\n    Interaction.prototype.getMap = function () {\n        return this.map_;\n    };\n    /**\n     * Handles the {@link module:ol/MapBrowserEvent map browser event}.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n     * @return {boolean} `false` to stop event propagation.\n     * @api\n     */\n    Interaction.prototype.handleEvent = function (mapBrowserEvent) {\n        return true;\n    };\n    /**\n     * Activate or deactivate the interaction.\n     * @param {boolean} active Active.\n     * @observable\n     * @api\n     */\n    Interaction.prototype.setActive = function (active) {\n        this.set(InteractionProperty.ACTIVE, active);\n    };\n    /**\n     * Remove the interaction from its current map and attach it to the new map.\n     * Subclasses may set up event handlers to get notified about changes to\n     * the map here.\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     */\n    Interaction.prototype.setMap = function (map) {\n        this.map_ = map;\n    };\n    return Interaction;\n}(BaseObject));\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {import(\"../coordinate.js\").Coordinate} delta Delta.\n * @param {number=} opt_duration Duration.\n */\nexport function pan(view, delta, opt_duration) {\n    var currentCenter = view.getCenter();\n    if (currentCenter) {\n        var center = [currentCenter[0] + delta[0], currentCenter[1] + delta[1]];\n        view.animate_({\n            duration: opt_duration !== undefined ? opt_duration : 250,\n            easing: linear,\n            center: view.getConstrainedCenter(center)\n        });\n    }\n}\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number} delta Delta from previous zoom level.\n * @param {import(\"../coordinate.js\").Coordinate=} opt_anchor Anchor coordinate.\n * @param {number=} opt_duration Duration.\n */\nexport function zoomByDelta(view, delta, opt_anchor, opt_duration) {\n    var currentZoom = view.getZoom();\n    if (currentZoom === undefined) {\n        return;\n    }\n    var newZoom = view.getConstrainedZoom(currentZoom + delta);\n    var newResolution = view.getResolutionForZoom(newZoom);\n    if (view.getAnimating()) {\n        view.cancelAnimations();\n    }\n    view.animate({\n        resolution: newResolution,\n        anchor: opt_anchor,\n        duration: opt_duration !== undefined ? opt_duration : 250,\n        easing: easeOut\n    });\n}\nexport default Interaction;\n//# sourceMappingURL=Interaction.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/DoubleClickZoom\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport Interaction, { zoomByDelta } from './Interaction.js';\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [delta=1] The zoom delta applied on each double click.\n */\n/**\n * @classdesc\n * Allows the user to zoom by double-clicking on the map.\n * @api\n */\nvar DoubleClickZoom = /** @class */ (function (_super) {\n    __extends(DoubleClickZoom, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function DoubleClickZoom(opt_options) {\n        var _this = _super.call(this, {\n            handleEvent: handleEvent\n        }) || this;\n        var options = opt_options ? opt_options : {};\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.delta_ = options.delta ? options.delta : 1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 250;\n        return _this;\n    }\n    return DoubleClickZoom;\n}(Interaction));\n/**\n * Handles the {@link module:ol/MapBrowserEvent map browser event} (if it was a\n * doubleclick) and eventually zooms the map.\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {DoubleClickZoom}\n */\nfunction handleEvent(mapBrowserEvent) {\n    var stopEvent = false;\n    if (mapBrowserEvent.type == MapBrowserEventType.DBLCLICK) {\n        var browserEvent = /** @type {MouseEvent} */ (mapBrowserEvent.originalEvent);\n        var map = mapBrowserEvent.map;\n        var anchor = mapBrowserEvent.coordinate;\n        var delta = browserEvent.shiftKey ? -this.delta_ : this.delta_;\n        var view = map.getView();\n        zoomByDelta(view, delta, anchor, this.duration_);\n        mapBrowserEvent.preventDefault();\n        stopEvent = true;\n    }\n    return !stopEvent;\n}\nexport default DoubleClickZoom;\n//# sourceMappingURL=DoubleClickZoom.js.map","/**\n * @module ol/events/condition\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport { assert } from '../asserts.js';\nimport { TRUE, FALSE } from '../functions.js';\nimport { WEBKIT, MAC } from '../has.js';\n/**\n * A function that takes an {@link module:ol/MapBrowserEvent} and returns a\n * `{boolean}`. If the condition is met, true should be returned.\n *\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default): boolean} Condition\n */\n/**\n * Return `true` if only the alt-key is pressed, `false` otherwise (e.g. when\n * additionally the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt key is pressed.\n * @api\n */\nexport var altKeyOnly = function (mapBrowserEvent) {\n    var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n    return (originalEvent.altKey &&\n        !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n        !originalEvent.shiftKey);\n};\n/**\n * Return `true` if only the alt-key and shift-key is pressed, `false` otherwise\n * (e.g. when additionally the platform-modifier-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt and shift keys are pressed.\n * @api\n */\nexport var altShiftKeysOnly = function (mapBrowserEvent) {\n    var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n    return (originalEvent.altKey &&\n        !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n        originalEvent.shiftKey);\n};\n/**\n * Return `true` if the map has the focus. This condition requires a map target\n * element with a `tabindex` attribute, e.g. `<div id=\"map\" tabindex=\"1\">`.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map has the focus.\n * @api\n */\nexport var focus = function (event) {\n    return event.target.getTargetElement() === document.activeElement;\n};\n/**\n * Return always true.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True.\n * @api\n */\nexport var always = TRUE;\n/**\n * Return `true` if the event is a `click` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `click` event.\n * @api\n */\nexport var click = function (mapBrowserEvent) {\n    return mapBrowserEvent.type == MapBrowserEventType.CLICK;\n};\n/**\n * Return `true` if the event has an \"action\"-producing mouse button.\n *\n * By definition, this includes left-click on windows/linux, and left-click\n * without the ctrl key on Macs.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} The result.\n */\nexport var mouseActionButton = function (mapBrowserEvent) {\n    var originalEvent = /** @type {MouseEvent} */ (mapBrowserEvent.originalEvent);\n    return originalEvent.button == 0 &&\n        !(WEBKIT && MAC && originalEvent.ctrlKey);\n};\n/**\n * Return always false.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} False.\n * @api\n */\nexport var never = FALSE;\n/**\n * Return `true` if the browser event is a `pointermove` event, `false`\n * otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the browser event is a `pointermove` event.\n * @api\n */\nexport var pointerMove = function (mapBrowserEvent) {\n    return mapBrowserEvent.type == 'pointermove';\n};\n/**\n * Return `true` if the event is a map `singleclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `singleclick` event.\n * @api\n */\nexport var singleClick = function (mapBrowserEvent) {\n    return mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK;\n};\n/**\n * Return `true` if the event is a map `dblclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `dblclick` event.\n * @api\n */\nexport var doubleClick = function (mapBrowserEvent) {\n    return mapBrowserEvent.type == MapBrowserEventType.DBLCLICK;\n};\n/**\n * Return `true` if no modifier key (alt-, shift- or platform-modifier-key) is\n * pressed.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if there no modifier keys are pressed.\n * @api\n */\nexport var noModifierKeys = function (mapBrowserEvent) {\n    var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n    return (!originalEvent.altKey &&\n        !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n        !originalEvent.shiftKey);\n};\n/**\n * Return `true` if only the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed, `false` otherwise (e.g. when additionally\n * the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the platform modifier key is pressed.\n * @api\n */\nexport var platformModifierKeyOnly = function (mapBrowserEvent) {\n    var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n    return !originalEvent.altKey &&\n        (MAC ? originalEvent.metaKey : originalEvent.ctrlKey) &&\n        !originalEvent.shiftKey;\n};\n/**\n * Return `true` if only the shift-key is pressed, `false` otherwise (e.g. when\n * additionally the alt-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the shift key is pressed.\n * @api\n */\nexport var shiftKeyOnly = function (mapBrowserEvent) {\n    var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n    return (!originalEvent.altKey &&\n        !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n        originalEvent.shiftKey);\n};\n/**\n * Return `true` if the target element is not editable, i.e. not a `<input>`-,\n * `<select>`- or `<textarea>`-element, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if the target element is not editable.\n * @api\n */\nexport var targetNotEditable = function (mapBrowserEvent) {\n    var target = mapBrowserEvent.originalEvent.target;\n    var tagName = /** @type {Element} */ (target).tagName;\n    return (tagName !== 'INPUT' &&\n        tagName !== 'SELECT' &&\n        tagName !== 'TEXTAREA');\n};\n/**\n * Return `true` if the event originates from a mouse device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a mouse device.\n * @api\n */\nexport var mouseOnly = function (mapBrowserEvent) {\n    var pointerEvent = /** @type {import(\"../MapBrowserPointerEvent\").default} */ (mapBrowserEvent).pointerEvent;\n    assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n    // see http://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n    return pointerEvent.pointerType == 'mouse';\n};\n/**\n * Return `true` if the event originates from a touchable device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a touchable device.\n * @api\n */\nexport var touchOnly = function (mapBrowserEvent) {\n    var pointerEvt = /** @type {import(\"../MapBrowserPointerEvent\").default} */ (mapBrowserEvent).pointerEvent;\n    assert(pointerEvt !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n    // see http://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n    return pointerEvt.pointerType === 'touch';\n};\n/**\n * Return `true` if the event originates from a digital pen.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a digital pen.\n * @api\n */\nexport var penOnly = function (mapBrowserEvent) {\n    var pointerEvt = /** @type {import(\"../MapBrowserPointerEvent\").default} */ (mapBrowserEvent).pointerEvent;\n    assert(pointerEvt !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n    // see http://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n    return pointerEvt.pointerType === 'pen';\n};\n/**\n * Return `true` if the event originates from a primary pointer in\n * contact with the surface or if the left mouse button is pressed.\n * See http://www.w3.org/TR/pointerevents/#button-states.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a primary pointer.\n * @api\n */\nexport var primaryAction = function (mapBrowserEvent) {\n    var pointerEvent = /** @type {import(\"../MapBrowserPointerEvent\").default} */ (mapBrowserEvent).pointerEvent;\n    assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n    return pointerEvent.isPrimary && pointerEvent.button === 0;\n};\n//# sourceMappingURL=condition.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/Pointer\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport Interaction from './Interaction.js';\nimport { getValues } from '../obj.js';\n/**\n * @typedef {Object} Options\n * @property {function(import(\"../MapBrowserPointerEvent.js\").default):boolean} [handleDownEvent]\n * Function handling \"down\" events. If the function returns `true` then a drag\n * sequence is started.\n * @property {function(import(\"../MapBrowserPointerEvent.js\").default)} [handleDragEvent]\n * Function handling \"drag\" events. This function is called on \"move\" events\n * during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleEvent]\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. The function may return `false` to prevent the\n * propagation of the event to other interactions in the map's interactions\n * chain.\n * @property {function(import(\"../MapBrowserPointerEvent.js\").default)} [handleMoveEvent]\n * Function handling \"move\" events. This function is called on \"move\" events,\n * also during a drag sequence (so during a drag sequence both the\n * `handleDragEvent` function and this function are called).\n * @property {function(import(\"../MapBrowserPointerEvent.js\").default):boolean} [handleUpEvent]\n *  Function handling \"up\" events. If the function returns `false` then the\n * current drag sequence is stopped.\n * @property {function(boolean):boolean} [stopDown]\n * Should the down event be propagated to other interactions, or should be\n * stopped?\n */\n/**\n * @classdesc\n * Base class that calls user-defined functions on `down`, `move` and `up`\n * events. This class also manages \"drag sequences\".\n *\n * When the `handleDownEvent` user function returns `true` a drag sequence is\n * started. During a drag sequence the `handleDragEvent` user function is\n * called on `move` events. The drag sequence ends when the `handleUpEvent`\n * user function is called and returns `false`.\n * @api\n */\nvar PointerInteraction = /** @class */ (function (_super) {\n    __extends(PointerInteraction, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function PointerInteraction(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options)) || this;\n        if (options.handleDownEvent) {\n            _this.handleDownEvent = options.handleDownEvent;\n        }\n        if (options.handleDragEvent) {\n            _this.handleDragEvent = options.handleDragEvent;\n        }\n        if (options.handleMoveEvent) {\n            _this.handleMoveEvent = options.handleMoveEvent;\n        }\n        if (options.handleUpEvent) {\n            _this.handleUpEvent = options.handleUpEvent;\n        }\n        if (options.stopDown) {\n            _this.stopDown = options.stopDown;\n        }\n        /**\n         * @type {boolean}\n         * @protected\n         */\n        _this.handlingDownUpSequence = false;\n        /**\n         * @type {!Object<string, import(\"../pointer/PointerEvent.js\").default>}\n         * @private\n         */\n        _this.trackedPointers_ = {};\n        /**\n         * @type {Array<import(\"../pointer/PointerEvent.js\").default>}\n         * @protected\n         */\n        _this.targetPointers = [];\n        return _this;\n    }\n    /**\n     * Handle pointer down events.\n     * @param {import(\"../MapBrowserPointerEvent.js\").default} mapBrowserEvent Event.\n     * @return {boolean} If the event was consumed.\n     * @protected\n     */\n    PointerInteraction.prototype.handleDownEvent = function (mapBrowserEvent) {\n        return false;\n    };\n    /**\n     * Handle pointer drag events.\n     * @param {import(\"../MapBrowserPointerEvent.js\").default} mapBrowserEvent Event.\n     * @protected\n     */\n    PointerInteraction.prototype.handleDragEvent = function (mapBrowserEvent) { };\n    /**\n     * Handles the {@link module:ol/MapBrowserEvent map browser event} and may call into\n     * other functions, if event sequences like e.g. 'drag' or 'down-up' etc. are\n     * detected.\n     * @override\n     * @api\n     */\n    PointerInteraction.prototype.handleEvent = function (mapBrowserEvent) {\n        if (!( /** @type {import(\"../MapBrowserPointerEvent.js\").default} */(mapBrowserEvent).pointerEvent)) {\n            return true;\n        }\n        var stopEvent = false;\n        this.updateTrackedPointers_(mapBrowserEvent);\n        if (this.handlingDownUpSequence) {\n            if (mapBrowserEvent.type == MapBrowserEventType.POINTERDRAG) {\n                this.handleDragEvent(mapBrowserEvent);\n            }\n            else if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n                var handledUp = this.handleUpEvent(mapBrowserEvent);\n                this.handlingDownUpSequence = handledUp && this.targetPointers.length > 0;\n            }\n        }\n        else {\n            if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n                var handled = this.handleDownEvent(mapBrowserEvent);\n                if (handled) {\n                    mapBrowserEvent.preventDefault();\n                }\n                this.handlingDownUpSequence = handled;\n                stopEvent = this.stopDown(handled);\n            }\n            else if (mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE) {\n                this.handleMoveEvent(mapBrowserEvent);\n            }\n        }\n        return !stopEvent;\n    };\n    /**\n     * Handle pointer move events.\n     * @param {import(\"../MapBrowserPointerEvent.js\").default} mapBrowserEvent Event.\n     * @protected\n     */\n    PointerInteraction.prototype.handleMoveEvent = function (mapBrowserEvent) { };\n    /**\n     * Handle pointer up events.\n     * @param {import(\"../MapBrowserPointerEvent.js\").default} mapBrowserEvent Event.\n     * @return {boolean} If the event was consumed.\n     * @protected\n     */\n    PointerInteraction.prototype.handleUpEvent = function (mapBrowserEvent) {\n        return false;\n    };\n    /**\n     * This function is used to determine if \"down\" events should be propagated\n     * to other interactions or should be stopped.\n     * @param {boolean} handled Was the event handled by the interaction?\n     * @return {boolean} Should the `down` event be stopped?\n     */\n    PointerInteraction.prototype.stopDown = function (handled) {\n        return handled;\n    };\n    /**\n     * @param {import(\"../MapBrowserPointerEvent.js\").default} mapBrowserEvent Event.\n     * @private\n     */\n    PointerInteraction.prototype.updateTrackedPointers_ = function (mapBrowserEvent) {\n        if (isPointerDraggingEvent(mapBrowserEvent)) {\n            var event_1 = mapBrowserEvent.pointerEvent;\n            var id = event_1.pointerId.toString();\n            if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n                delete this.trackedPointers_[id];\n            }\n            else if (mapBrowserEvent.type ==\n                MapBrowserEventType.POINTERDOWN) {\n                this.trackedPointers_[id] = event_1;\n            }\n            else if (id in this.trackedPointers_) {\n                // update only when there was a pointerdown event for this pointer\n                this.trackedPointers_[id] = event_1;\n            }\n            this.targetPointers = getValues(this.trackedPointers_);\n        }\n    };\n    return PointerInteraction;\n}(Interaction));\n/**\n * @param {Array<import(\"../pointer/PointerEvent.js\").default>} pointerEvents List of events.\n * @return {import(\"../pixel.js\").Pixel} Centroid pixel.\n */\nexport function centroid(pointerEvents) {\n    var length = pointerEvents.length;\n    var clientX = 0;\n    var clientY = 0;\n    for (var i = 0; i < length; i++) {\n        clientX += pointerEvents[i].clientX;\n        clientY += pointerEvents[i].clientY;\n    }\n    return [clientX / length, clientY / length];\n}\n/**\n * @param {import(\"../MapBrowserPointerEvent.js\").default} mapBrowserEvent Event.\n * @return {boolean} Whether the event is a pointerdown, pointerdrag\n *     or pointerup event.\n */\nfunction isPointerDraggingEvent(mapBrowserEvent) {\n    var type = mapBrowserEvent.type;\n    return type === MapBrowserEventType.POINTERDOWN ||\n        type === MapBrowserEventType.POINTERDRAG ||\n        type === MapBrowserEventType.POINTERUP;\n}\nexport default PointerInteraction;\n//# sourceMappingURL=Pointer.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/DragPan\n */\nimport { scale as scaleCoordinate, rotate as rotateCoordinate } from '../coordinate.js';\nimport { easeOut } from '../easing.js';\nimport { noModifierKeys } from '../events/condition.js';\nimport { FALSE } from '../functions.js';\nimport PointerInteraction, { centroid as centroidFromPointers } from './Pointer.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~noModifierKeys}.\n * @property {import(\"../Kinetic.js\").default} [kinetic] Kinetic inertia to apply to the pan.\n */\n/**\n * @classdesc\n * Allows the user to pan the map by dragging the map.\n * @api\n */\nvar DragPan = /** @class */ (function (_super) {\n    __extends(DragPan, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function DragPan(opt_options) {\n        var _this = _super.call(this, {\n            stopDown: FALSE\n        }) || this;\n        var options = opt_options ? opt_options : {};\n        /**\n         * @private\n         * @type {import(\"../Kinetic.js\").default|undefined}\n         */\n        _this.kinetic_ = options.kinetic;\n        /**\n         * @type {import(\"../pixel.js\").Pixel}\n         */\n        _this.lastCentroid = null;\n        /**\n         * @type {number}\n         */\n        _this.lastPointersCount_;\n        /**\n         * @type {boolean}\n         */\n        _this.panning_ = false;\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.condition_ = options.condition ? options.condition : noModifierKeys;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.noKinetic_ = false;\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    DragPan.prototype.handleDragEvent = function (mapBrowserEvent) {\n        if (!this.panning_) {\n            this.panning_ = true;\n            this.getMap().getView().beginInteraction();\n        }\n        var targetPointers = this.targetPointers;\n        var centroid = centroidFromPointers(targetPointers);\n        if (targetPointers.length == this.lastPointersCount_) {\n            if (this.kinetic_) {\n                this.kinetic_.update(centroid[0], centroid[1]);\n            }\n            if (this.lastCentroid) {\n                var delta = [\n                    this.lastCentroid[0] - centroid[0],\n                    centroid[1] - this.lastCentroid[1]\n                ];\n                var map = mapBrowserEvent.map;\n                var view = map.getView();\n                scaleCoordinate(delta, view.getResolution());\n                rotateCoordinate(delta, view.getRotation());\n                view.adjustCenter(delta);\n            }\n        }\n        else if (this.kinetic_) {\n            // reset so we don't overestimate the kinetic energy after\n            // after one finger down, tiny drag, second finger down\n            this.kinetic_.begin();\n        }\n        this.lastCentroid = centroid;\n        this.lastPointersCount_ = targetPointers.length;\n    };\n    /**\n     * @inheritDoc\n     */\n    DragPan.prototype.handleUpEvent = function (mapBrowserEvent) {\n        var map = mapBrowserEvent.map;\n        var view = map.getView();\n        if (this.targetPointers.length === 0) {\n            if (!this.noKinetic_ && this.kinetic_ && this.kinetic_.end()) {\n                var distance = this.kinetic_.getDistance();\n                var angle = this.kinetic_.getAngle();\n                var center = /** @type {!import(\"../coordinate.js\").Coordinate} */ (view.getCenter());\n                var centerpx = map.getPixelFromCoordinate(center);\n                var dest = map.getCoordinateFromPixel([\n                    centerpx[0] - distance * Math.cos(angle),\n                    centerpx[1] - distance * Math.sin(angle)\n                ]);\n                view.animate({\n                    center: view.getConstrainedCenter(dest),\n                    duration: 500,\n                    easing: easeOut\n                });\n            }\n            if (this.panning_) {\n                this.panning_ = false;\n                view.endInteraction();\n            }\n            return false;\n        }\n        else {\n            if (this.kinetic_) {\n                // reset so we don't overestimate the kinetic energy after\n                // after one finger up, tiny drag, second finger up\n                this.kinetic_.begin();\n            }\n            this.lastCentroid = null;\n            return true;\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    DragPan.prototype.handleDownEvent = function (mapBrowserEvent) {\n        if (this.targetPointers.length > 0 && this.condition_(mapBrowserEvent)) {\n            var map = mapBrowserEvent.map;\n            var view = map.getView();\n            this.lastCentroid = null;\n            // stop any current animation\n            if (view.getAnimating()) {\n                view.cancelAnimations();\n            }\n            if (this.kinetic_) {\n                this.kinetic_.begin();\n            }\n            // No kinetic as soon as more than one pointer on the screen is\n            // detected. This is to prevent nasty pans after pinch.\n            this.noKinetic_ = this.targetPointers.length > 1;\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    return DragPan;\n}(PointerInteraction));\nexport default DragPan;\n//# sourceMappingURL=DragPan.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/DragRotate\n */\nimport { disable } from '../rotationconstraint.js';\nimport { altShiftKeysOnly, mouseOnly, mouseActionButton } from '../events/condition.js';\nimport { FALSE } from '../functions.js';\nimport PointerInteraction from './Pointer.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an\n * {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~altShiftKeysOnly}.\n * @property {number} [duration=250] Animation duration in milliseconds.\n */\n/**\n * @classdesc\n * Allows the user to rotate the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the alt and shift keys are held down.\n *\n * This interaction is only supported for mouse devices.\n * @api\n */\nvar DragRotate = /** @class */ (function (_super) {\n    __extends(DragRotate, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function DragRotate(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, {\n            stopDown: FALSE\n        }) || this;\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.condition_ = options.condition ? options.condition : altShiftKeysOnly;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.lastAngle_ = undefined;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 250;\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    DragRotate.prototype.handleDragEvent = function (mapBrowserEvent) {\n        if (!mouseOnly(mapBrowserEvent)) {\n            return;\n        }\n        var map = mapBrowserEvent.map;\n        var view = map.getView();\n        if (view.getConstraints().rotation === disable) {\n            return;\n        }\n        var size = map.getSize();\n        var offset = mapBrowserEvent.pixel;\n        var theta = Math.atan2(size[1] / 2 - offset[1], offset[0] - size[0] / 2);\n        if (this.lastAngle_ !== undefined) {\n            var delta = theta - this.lastAngle_;\n            view.adjustRotation(-delta);\n        }\n        this.lastAngle_ = theta;\n    };\n    /**\n     * @inheritDoc\n     */\n    DragRotate.prototype.handleUpEvent = function (mapBrowserEvent) {\n        if (!mouseOnly(mapBrowserEvent)) {\n            return true;\n        }\n        var map = mapBrowserEvent.map;\n        var view = map.getView();\n        view.endInteraction(this.duration_);\n        return false;\n    };\n    /**\n     * @inheritDoc\n     */\n    DragRotate.prototype.handleDownEvent = function (mapBrowserEvent) {\n        if (!mouseOnly(mapBrowserEvent)) {\n            return false;\n        }\n        if (mouseActionButton(mapBrowserEvent) && this.condition_(mapBrowserEvent)) {\n            var map = mapBrowserEvent.map;\n            map.getView().beginInteraction();\n            this.lastAngle_ = undefined;\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    return DragRotate;\n}(PointerInteraction));\nexport default DragRotate;\n//# sourceMappingURL=DragRotate.js.map","/**\n * @module ol/render/Box\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport Disposable from '../Disposable.js';\nimport Polygon from '../geom/Polygon.js';\nvar RenderBox = /** @class */ (function (_super) {\n    __extends(RenderBox, _super);\n    /**\n     * @param {string} className CSS class name.\n     */\n    function RenderBox(className) {\n        var _this = _super.call(this) || this;\n        /**\n         * @type {import(\"../geom/Polygon.js\").default}\n         * @private\n         */\n        _this.geometry_ = null;\n        /**\n         * @type {HTMLDivElement}\n         * @private\n         */\n        _this.element_ = document.createElement('div');\n        _this.element_.style.position = 'absolute';\n        _this.element_.className = 'ol-box ' + className;\n        /**\n         * @private\n         * @type {import(\"../PluggableMap.js\").default}\n         */\n        _this.map_ = null;\n        /**\n         * @private\n         * @type {import(\"../pixel.js\").Pixel}\n         */\n        _this.startPixel_ = null;\n        /**\n         * @private\n         * @type {import(\"../pixel.js\").Pixel}\n         */\n        _this.endPixel_ = null;\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    RenderBox.prototype.disposeInternal = function () {\n        this.setMap(null);\n    };\n    /**\n     * @private\n     */\n    RenderBox.prototype.render_ = function () {\n        var startPixel = this.startPixel_;\n        var endPixel = this.endPixel_;\n        var px = 'px';\n        var style = this.element_.style;\n        style.left = Math.min(startPixel[0], endPixel[0]) + px;\n        style.top = Math.min(startPixel[1], endPixel[1]) + px;\n        style.width = Math.abs(endPixel[0] - startPixel[0]) + px;\n        style.height = Math.abs(endPixel[1] - startPixel[1]) + px;\n    };\n    /**\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     */\n    RenderBox.prototype.setMap = function (map) {\n        if (this.map_) {\n            this.map_.getOverlayContainer().removeChild(this.element_);\n            var style = this.element_.style;\n            style.left = style.top = style.width = style.height = 'inherit';\n        }\n        this.map_ = map;\n        if (this.map_) {\n            this.map_.getOverlayContainer().appendChild(this.element_);\n        }\n    };\n    /**\n     * @param {import(\"../pixel.js\").Pixel} startPixel Start pixel.\n     * @param {import(\"../pixel.js\").Pixel} endPixel End pixel.\n     */\n    RenderBox.prototype.setPixels = function (startPixel, endPixel) {\n        this.startPixel_ = startPixel;\n        this.endPixel_ = endPixel;\n        this.createOrUpdateGeometry();\n        this.render_();\n    };\n    /**\n     * Creates or updates the cached geometry.\n     */\n    RenderBox.prototype.createOrUpdateGeometry = function () {\n        var startPixel = this.startPixel_;\n        var endPixel = this.endPixel_;\n        var pixels = [\n            startPixel,\n            [startPixel[0], endPixel[1]],\n            endPixel,\n            [endPixel[0], startPixel[1]]\n        ];\n        var coordinates = pixels.map(this.map_.getCoordinateFromPixel, this.map_);\n        // close the polygon\n        coordinates[4] = coordinates[0].slice();\n        if (!this.geometry_) {\n            this.geometry_ = new Polygon([coordinates]);\n        }\n        else {\n            this.geometry_.setCoordinates([coordinates]);\n        }\n    };\n    /**\n     * @return {import(\"../geom/Polygon.js\").default} Geometry.\n     */\n    RenderBox.prototype.getGeometry = function () {\n        return this.geometry_;\n    };\n    return RenderBox;\n}(Disposable));\nexport default RenderBox;\n//# sourceMappingURL=Box.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/DragBox\n */\n// FIXME draw drag box\nimport Event from '../events/Event.js';\nimport { always, mouseOnly, mouseActionButton } from '../events/condition.js';\nimport { VOID } from '../functions.js';\nimport PointerInteraction from './Pointer.js';\nimport RenderBox from '../render/Box.js';\n/**\n * A function that takes a {@link module:ol/MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s and returns a `{boolean}`. If the condition is met,\n * true should be returned.\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default, import(\"../pixel.js\").Pixel, import(\"../pixel.js\").Pixel):boolean} EndCondition\n */\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragbox'] CSS class name for styling the box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link ol/events/condition~always}.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the default\n * `boxEndCondition` function.\n * @property {EndCondition} [boxEndCondition] A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s to indicate whether a `boxend` event should be fired.\n * Default is `true` if the area of the box is bigger than the `minArea` option.\n * @property {function(this:DragBox, import(\"../MapBrowserEvent.js\").default)} [onBoxEnd] Code to execute just\n * before `boxend` is fired.\n */\n/**\n * @enum {string}\n */\nvar DragBoxEventType = {\n    /**\n     * Triggered upon drag box start.\n     * @event DragBoxEvent#boxstart\n     * @api\n     */\n    BOXSTART: 'boxstart',\n    /**\n     * Triggered on drag when box is active.\n     * @event DragBoxEvent#boxdrag\n     * @api\n     */\n    BOXDRAG: 'boxdrag',\n    /**\n     * Triggered upon drag box end.\n     * @event DragBoxEvent#boxend\n     * @api\n     */\n    BOXEND: 'boxend'\n};\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/DragBox~DragBox} instances are instances of\n * this type.\n */\nvar DragBoxEvent = /** @class */ (function (_super) {\n    __extends(DragBoxEvent, _super);\n    /**\n     * @param {string} type The event type.\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate The event coordinate.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Originating event.\n     */\n    function DragBoxEvent(type, coordinate, mapBrowserEvent) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * The coordinate of the drag event.\n         * @const\n         * @type {import(\"../coordinate.js\").Coordinate}\n         * @api\n         */\n        _this.coordinate = coordinate;\n        /**\n         * @const\n         * @type {import(\"../MapBrowserEvent.js\").default}\n         * @api\n         */\n        _this.mapBrowserEvent = mapBrowserEvent;\n        return _this;\n    }\n    return DragBoxEvent;\n}(Event));\n/**\n * @classdesc\n * Allows the user to draw a vector box by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the shift or other key is held down. This is used, for example,\n * for zooming to a specific area of the map\n * (see {@link module:ol/interaction/DragZoom~DragZoom} and\n * {@link module:ol/interaction/DragRotateAndZoom}).\n *\n * This interaction is only supported for mouse devices.\n *\n * @fires DragBoxEvent\n * @api\n */\nvar DragBox = /** @class */ (function (_super) {\n    __extends(DragBox, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function DragBox(opt_options) {\n        var _this = _super.call(this) || this;\n        var options = opt_options ? opt_options : {};\n        /**\n         * @type {import(\"../render/Box.js\").default}\n         * @private\n         */\n        _this.box_ = new RenderBox(options.className || 'ol-dragbox');\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.minArea_ = options.minArea !== undefined ? options.minArea : 64;\n        /**\n         * Function to execute just before `onboxend` is fired\n         * @type {function(this:DragBox, import(\"../MapBrowserEvent.js\").default): void}\n         * @private\n         */\n        _this.onBoxEnd_ = options.onBoxEnd ? options.onBoxEnd : VOID;\n        /**\n         * @type {import(\"../pixel.js\").Pixel}\n         * @private\n         */\n        _this.startPixel_ = null;\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.condition_ = options.condition ? options.condition : always;\n        /**\n         * @private\n         * @type {EndCondition}\n         */\n        _this.boxEndCondition_ = options.boxEndCondition ?\n            options.boxEndCondition : _this.defaultBoxEndCondition;\n        return _this;\n    }\n    /**\n     * The default condition for determining whether the boxend event\n     * should fire.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent The originating MapBrowserEvent\n     *     leading to the box end.\n     * @param {import(\"../pixel.js\").Pixel} startPixel The starting pixel of the box.\n     * @param {import(\"../pixel.js\").Pixel} endPixel The end pixel of the box.\n     * @return {boolean} Whether or not the boxend condition should be fired.\n     */\n    DragBox.prototype.defaultBoxEndCondition = function (mapBrowserEvent, startPixel, endPixel) {\n        var width = endPixel[0] - startPixel[0];\n        var height = endPixel[1] - startPixel[1];\n        return width * width + height * height >= this.minArea_;\n    };\n    /**\n     * Returns geometry of last drawn box.\n     * @return {import(\"../geom/Polygon.js\").default} Geometry.\n     * @api\n     */\n    DragBox.prototype.getGeometry = function () {\n        return this.box_.getGeometry();\n    };\n    /**\n     * @inheritDoc\n     */\n    DragBox.prototype.handleDragEvent = function (mapBrowserEvent) {\n        if (!mouseOnly(mapBrowserEvent)) {\n            return;\n        }\n        this.box_.setPixels(this.startPixel_, mapBrowserEvent.pixel);\n        this.dispatchEvent(new DragBoxEvent(DragBoxEventType.BOXDRAG, mapBrowserEvent.coordinate, mapBrowserEvent));\n    };\n    /**\n     * @inheritDoc\n     */\n    DragBox.prototype.handleUpEvent = function (mapBrowserEvent) {\n        if (!mouseOnly(mapBrowserEvent)) {\n            return true;\n        }\n        this.box_.setMap(null);\n        if (this.boxEndCondition_(mapBrowserEvent, this.startPixel_, mapBrowserEvent.pixel)) {\n            this.onBoxEnd_(mapBrowserEvent);\n            this.dispatchEvent(new DragBoxEvent(DragBoxEventType.BOXEND, mapBrowserEvent.coordinate, mapBrowserEvent));\n        }\n        return false;\n    };\n    /**\n     * @inheritDoc\n     */\n    DragBox.prototype.handleDownEvent = function (mapBrowserEvent) {\n        if (!mouseOnly(mapBrowserEvent)) {\n            return false;\n        }\n        if (mouseActionButton(mapBrowserEvent) &&\n            this.condition_(mapBrowserEvent)) {\n            this.startPixel_ = mapBrowserEvent.pixel;\n            this.box_.setMap(mapBrowserEvent.map);\n            this.box_.setPixels(this.startPixel_, this.startPixel_);\n            this.dispatchEvent(new DragBoxEvent(DragBoxEventType.BOXSTART, mapBrowserEvent.coordinate, mapBrowserEvent));\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    return DragBox;\n}(PointerInteraction));\nexport default DragBox;\n//# sourceMappingURL=DragBox.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/DragZoom\n */\nimport { easeOut } from '../easing.js';\nimport { shiftKeyOnly } from '../events/condition.js';\nimport { createOrUpdateFromCoordinates, getBottomLeft, getCenter, getTopRight, scaleFromCenter } from '../extent.js';\nimport DragBox from './DragBox.js';\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragzoom'] CSS class name for styling the\n * box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~shiftKeyOnly}.\n * @property {number} [duration=200] Animation duration in milliseconds.\n * @property {boolean} [out=false] Use interaction for zooming out.\n */\n/**\n * @classdesc\n * Allows the user to zoom the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when a key, shift by default, is held down.\n *\n * To change the style of the box, use CSS and the `.ol-dragzoom` selector, or\n * your custom one configured with `className`.\n * @api\n */\nvar DragZoom = /** @class */ (function (_super) {\n    __extends(DragZoom, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function DragZoom(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        var condition = options.condition ? options.condition : shiftKeyOnly;\n        _this = _super.call(this, {\n            condition: condition,\n            className: options.className || 'ol-dragzoom',\n            onBoxEnd: onBoxEnd\n        }) || this;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 200;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.out_ = options.out !== undefined ? options.out : false;\n        return _this;\n    }\n    return DragZoom;\n}(DragBox));\n/**\n * @this {DragZoom}\n */\nfunction onBoxEnd() {\n    var map = this.getMap();\n    var view = /** @type {!import(\"../View.js\").default} */ (map.getView());\n    var size = /** @type {!import(\"../size.js\").Size} */ (map.getSize());\n    var extent = this.getGeometry().getExtent();\n    if (this.out_) {\n        var mapExtent = view.calculateExtent(size);\n        var boxPixelExtent = createOrUpdateFromCoordinates([\n            map.getPixelFromCoordinate(getBottomLeft(extent)),\n            map.getPixelFromCoordinate(getTopRight(extent))\n        ]);\n        var factor = view.getResolutionForExtent(boxPixelExtent, size);\n        scaleFromCenter(mapExtent, 1 / factor);\n        extent = mapExtent;\n    }\n    var resolution = view.getConstrainedResolution(view.getResolutionForExtent(extent, size));\n    var center = view.getConstrainedCenter(getCenter(extent), resolution);\n    view.animate({\n        resolution: resolution,\n        center: center,\n        duration: this.duration_,\n        easing: easeOut\n    });\n}\nexport default DragZoom;\n//# sourceMappingURL=DragZoom.js.map","/**\n * @module ol/events/KeyCode\n */\n/**\n * @enum {number}\n * @const\n */\nexport default {\n    LEFT: 37,\n    UP: 38,\n    RIGHT: 39,\n    DOWN: 40\n};\n//# sourceMappingURL=KeyCode.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/KeyboardPan\n */\nimport { rotate as rotateCoordinate } from '../coordinate.js';\nimport EventType from '../events/EventType.js';\nimport KeyCode from '../events/KeyCode.js';\nimport { noModifierKeys, targetNotEditable } from '../events/condition.js';\nimport Interaction, { pan } from './Interaction.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition~noModifierKeys} and\n * {@link module:ol/events/condition~targetNotEditable}.\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {number} [pixelDelta=128] The amount of pixels to pan on each key\n * press.\n */\n/**\n * @classdesc\n * Allows the user to pan the map using keyboard arrows.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}.\n * @api\n */\nvar KeyboardPan = /** @class */ (function (_super) {\n    __extends(KeyboardPan, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function KeyboardPan(opt_options) {\n        var _this = _super.call(this, {\n            handleEvent: handleEvent\n        }) || this;\n        var options = opt_options || {};\n        /**\n         * @private\n         * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Browser event.\n         * @return {boolean} Combined condition result.\n         */\n        _this.defaultCondition_ = function (mapBrowserEvent) {\n            return noModifierKeys(mapBrowserEvent) &&\n                targetNotEditable(mapBrowserEvent);\n        };\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.condition_ = options.condition !== undefined ?\n            options.condition : _this.defaultCondition_;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 100;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.pixelDelta_ = options.pixelDelta !== undefined ?\n            options.pixelDelta : 128;\n        return _this;\n    }\n    return KeyboardPan;\n}(Interaction));\n/**\n * Handles the {@link module:ol/MapBrowserEvent map browser event} if it was a\n * `KeyEvent`, and decides the direction to pan to (if an arrow key was\n * pressed).\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {KeyboardPan}\n */\nfunction handleEvent(mapBrowserEvent) {\n    var stopEvent = false;\n    if (mapBrowserEvent.type == EventType.KEYDOWN) {\n        var keyEvent = /** @type {KeyboardEvent} */ (mapBrowserEvent.originalEvent);\n        var keyCode = keyEvent.keyCode;\n        if (this.condition_(mapBrowserEvent) &&\n            (keyCode == KeyCode.DOWN ||\n                keyCode == KeyCode.LEFT ||\n                keyCode == KeyCode.RIGHT ||\n                keyCode == KeyCode.UP)) {\n            var map = mapBrowserEvent.map;\n            var view = map.getView();\n            var mapUnitsDelta = view.getResolution() * this.pixelDelta_;\n            var deltaX = 0, deltaY = 0;\n            if (keyCode == KeyCode.DOWN) {\n                deltaY = -mapUnitsDelta;\n            }\n            else if (keyCode == KeyCode.LEFT) {\n                deltaX = -mapUnitsDelta;\n            }\n            else if (keyCode == KeyCode.RIGHT) {\n                deltaX = mapUnitsDelta;\n            }\n            else {\n                deltaY = mapUnitsDelta;\n            }\n            var delta = [deltaX, deltaY];\n            rotateCoordinate(delta, view.getRotation());\n            pan(view, delta, this.duration_);\n            mapBrowserEvent.preventDefault();\n            stopEvent = true;\n        }\n    }\n    return !stopEvent;\n}\nexport default KeyboardPan;\n//# sourceMappingURL=KeyboardPan.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/KeyboardZoom\n */\nimport EventType from '../events/EventType.js';\nimport { targetNotEditable } from '../events/condition.js';\nimport Interaction, { zoomByDelta } from './Interaction.js';\n/**\n * @typedef {Object} Options\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition~targetNotEditable}.\n * @property {number} [delta=1] The zoom level delta on each key press.\n */\n/**\n * @classdesc\n * Allows the user to zoom the map using keyboard + and -.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardPan~KeyboardPan}.\n * @api\n */\nvar KeyboardZoom = /** @class */ (function (_super) {\n    __extends(KeyboardZoom, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function KeyboardZoom(opt_options) {\n        var _this = _super.call(this, {\n            handleEvent: handleEvent\n        }) || this;\n        var options = opt_options ? opt_options : {};\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.condition_ = options.condition ? options.condition : targetNotEditable;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.delta_ = options.delta ? options.delta : 1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 100;\n        return _this;\n    }\n    return KeyboardZoom;\n}(Interaction));\n/**\n * Handles the {@link module:ol/MapBrowserEvent map browser event} if it was a\n * `KeyEvent`, and decides whether to zoom in or out (depending on whether the\n * key pressed was '+' or '-').\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {KeyboardZoom}\n */\nfunction handleEvent(mapBrowserEvent) {\n    var stopEvent = false;\n    if (mapBrowserEvent.type == EventType.KEYDOWN ||\n        mapBrowserEvent.type == EventType.KEYPRESS) {\n        var keyEvent = /** @type {KeyboardEvent} */ (mapBrowserEvent.originalEvent);\n        var charCode = keyEvent.charCode;\n        if (this.condition_(mapBrowserEvent) &&\n            (charCode == '+'.charCodeAt(0) || charCode == '-'.charCodeAt(0))) {\n            var map = mapBrowserEvent.map;\n            var delta = (charCode == '+'.charCodeAt(0)) ? this.delta_ : -this.delta_;\n            var view = map.getView();\n            zoomByDelta(view, delta, undefined, this.duration_);\n            mapBrowserEvent.preventDefault();\n            stopEvent = true;\n        }\n    }\n    return !stopEvent;\n}\nexport default KeyboardZoom;\n//# sourceMappingURL=KeyboardZoom.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/MouseWheelZoom\n */\nimport { always } from '../events/condition.js';\nimport EventType from '../events/EventType.js';\nimport { DEVICE_PIXEL_RATIO, FIREFOX, SAFARI } from '../has.js';\nimport Interaction, { zoomByDelta } from './Interaction.js';\nimport { clamp } from '../math.js';\n/**\n * @enum {string}\n */\nexport var Mode = {\n    TRACKPAD: 'trackpad',\n    WHEEL: 'wheel'\n};\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition~always}.\n * @property {number} [maxDelta=1] Maximum mouse wheel delta.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [timeout=80] Mouse wheel timeout duration in milliseconds.\n * @property {boolean} [useAnchor=true] Enable zooming using the mouse's\n * location as the anchor. When set to `false`, zooming in and out will zoom to\n * the center of the screen instead of zooming on the mouse's location.\n */\n/**\n * @classdesc\n * Allows the user to zoom the map by scrolling the mouse wheel.\n * @api\n */\nvar MouseWheelZoom = /** @class */ (function (_super) {\n    __extends(MouseWheelZoom, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function MouseWheelZoom(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options)) || this;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.totalDelta_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.lastDelta_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDelta_ = options.maxDelta !== undefined ? options.maxDelta : 1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 250;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.timeout_ = options.timeout !== undefined ? options.timeout : 80;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.useAnchor_ = options.useAnchor !== undefined ? options.useAnchor : true;\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.condition_ = options.condition ? options.condition : always;\n        /**\n         * @private\n         * @type {?import(\"../coordinate.js\").Coordinate}\n         */\n        _this.lastAnchor_ = null;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.startTime_ = undefined;\n        /**\n         * @private\n         * @type {?}\n         */\n        _this.timeoutId_;\n        /**\n         * @private\n         * @type {Mode|undefined}\n         */\n        _this.mode_ = undefined;\n        /**\n         * Trackpad events separated by this delay will be considered separate\n         * interactions.\n         * @type {number}\n         */\n        _this.trackpadEventGap_ = 400;\n        /**\n         * @type {?}\n         */\n        _this.trackpadTimeoutId_;\n        /**\n         * The number of delta values per zoom level\n         * @private\n         * @type {number}\n         */\n        _this.trackpadDeltaPerZoom_ = 300;\n        return _this;\n    }\n    /**\n     * @private\n     */\n    MouseWheelZoom.prototype.endInteraction_ = function () {\n        this.trackpadTimeoutId_ = undefined;\n        var view = this.getMap().getView();\n        view.endInteraction(undefined, Math.sign(this.lastDelta_), this.lastAnchor_);\n    };\n    /**\n     * Handles the {@link module:ol/MapBrowserEvent map browser event} (if it was a mousewheel-event) and eventually\n     * zooms the map.\n     * @override\n     */\n    MouseWheelZoom.prototype.handleEvent = function (mapBrowserEvent) {\n        if (!this.condition_(mapBrowserEvent)) {\n            return true;\n        }\n        var type = mapBrowserEvent.type;\n        if (type !== EventType.WHEEL && type !== EventType.MOUSEWHEEL) {\n            return true;\n        }\n        mapBrowserEvent.preventDefault();\n        var map = mapBrowserEvent.map;\n        var wheelEvent = /** @type {WheelEvent} */ (mapBrowserEvent.originalEvent);\n        if (this.useAnchor_) {\n            this.lastAnchor_ = mapBrowserEvent.coordinate;\n        }\n        // Delta normalisation inspired by\n        // https://github.com/mapbox/mapbox-gl-js/blob/001c7b9/js/ui/handler/scroll_zoom.js\n        var delta;\n        if (mapBrowserEvent.type == EventType.WHEEL) {\n            delta = wheelEvent.deltaY;\n            if (FIREFOX &&\n                wheelEvent.deltaMode === WheelEvent.DOM_DELTA_PIXEL) {\n                delta /= DEVICE_PIXEL_RATIO;\n            }\n            if (wheelEvent.deltaMode === WheelEvent.DOM_DELTA_LINE) {\n                delta *= 40;\n            }\n        }\n        else if (mapBrowserEvent.type == EventType.MOUSEWHEEL) {\n            delta = -wheelEvent.wheelDeltaY;\n            if (SAFARI) {\n                delta /= 3;\n            }\n        }\n        if (delta === 0) {\n            return false;\n        }\n        else {\n            this.lastDelta_ = delta;\n        }\n        var now = Date.now();\n        if (this.startTime_ === undefined) {\n            this.startTime_ = now;\n        }\n        if (!this.mode_ || now - this.startTime_ > this.trackpadEventGap_) {\n            this.mode_ = Math.abs(delta) < 4 ?\n                Mode.TRACKPAD :\n                Mode.WHEEL;\n        }\n        if (this.mode_ === Mode.TRACKPAD) {\n            var view = map.getView();\n            if (this.trackpadTimeoutId_) {\n                clearTimeout(this.trackpadTimeoutId_);\n            }\n            else {\n                view.beginInteraction();\n            }\n            this.trackpadTimeoutId_ = setTimeout(this.endInteraction_.bind(this), this.trackpadEventGap_);\n            view.adjustZoom(-delta / this.trackpadDeltaPerZoom_, this.lastAnchor_);\n            this.startTime_ = now;\n            return false;\n        }\n        this.totalDelta_ += delta;\n        var timeLeft = Math.max(this.timeout_ - (now - this.startTime_), 0);\n        clearTimeout(this.timeoutId_);\n        this.timeoutId_ = setTimeout(this.handleWheelZoom_.bind(this, map), timeLeft);\n        return false;\n    };\n    /**\n     * @private\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     */\n    MouseWheelZoom.prototype.handleWheelZoom_ = function (map) {\n        var view = map.getView();\n        if (view.getAnimating()) {\n            view.cancelAnimations();\n        }\n        var delta = clamp(this.totalDelta_, -this.maxDelta_, this.maxDelta_);\n        zoomByDelta(view, -delta, this.lastAnchor_, this.duration_);\n        this.mode_ = undefined;\n        this.totalDelta_ = 0;\n        this.lastAnchor_ = null;\n        this.startTime_ = undefined;\n        this.timeoutId_ = undefined;\n    };\n    /**\n     * Enable or disable using the mouse's location as an anchor when zooming\n     * @param {boolean} useAnchor true to zoom to the mouse's location, false\n     * to zoom to the center of the map\n     * @api\n     */\n    MouseWheelZoom.prototype.setMouseAnchor = function (useAnchor) {\n        this.useAnchor_ = useAnchor;\n        if (!useAnchor) {\n            this.lastAnchor_ = null;\n        }\n    };\n    return MouseWheelZoom;\n}(Interaction));\nexport default MouseWheelZoom;\n//# sourceMappingURL=MouseWheelZoom.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/PinchRotate\n */\nimport { FALSE } from '../functions.js';\nimport PointerInteraction, { centroid as centroidFromPointers } from './Pointer.js';\nimport { disable } from '../rotationconstraint.js';\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] The duration of the animation in\n * milliseconds.\n * @property {number} [threshold=0.3] Minimal angle in radians to start a rotation.\n */\n/**\n * @classdesc\n * Allows the user to rotate the map by twisting with two fingers\n * on a touch screen.\n * @api\n */\nvar PinchRotate = /** @class */ (function (_super) {\n    __extends(PinchRotate, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function PinchRotate(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        var pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (options);\n        if (!pointerOptions.stopDown) {\n            pointerOptions.stopDown = FALSE;\n        }\n        _this = _super.call(this, pointerOptions) || this;\n        /**\n         * @private\n         * @type {import(\"../coordinate.js\").Coordinate}\n         */\n        _this.anchor_ = null;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.lastAngle_ = undefined;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.rotating_ = false;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.rotationDelta_ = 0.0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.threshold_ = options.threshold !== undefined ? options.threshold : 0.3;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 250;\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    PinchRotate.prototype.handleDragEvent = function (mapBrowserEvent) {\n        var rotationDelta = 0.0;\n        var touch0 = this.targetPointers[0];\n        var touch1 = this.targetPointers[1];\n        // angle between touches\n        var angle = Math.atan2(touch1.clientY - touch0.clientY, touch1.clientX - touch0.clientX);\n        if (this.lastAngle_ !== undefined) {\n            var delta = angle - this.lastAngle_;\n            this.rotationDelta_ += delta;\n            if (!this.rotating_ &&\n                Math.abs(this.rotationDelta_) > this.threshold_) {\n                this.rotating_ = true;\n            }\n            rotationDelta = delta;\n        }\n        this.lastAngle_ = angle;\n        var map = mapBrowserEvent.map;\n        var view = map.getView();\n        if (view.getConstraints().rotation === disable) {\n            return;\n        }\n        // rotate anchor point.\n        // FIXME: should be the intersection point between the lines:\n        //     touch0,touch1 and previousTouch0,previousTouch1\n        var viewportPosition = map.getViewport().getBoundingClientRect();\n        var centroid = centroidFromPointers(this.targetPointers);\n        centroid[0] -= viewportPosition.left;\n        centroid[1] -= viewportPosition.top;\n        this.anchor_ = map.getCoordinateFromPixel(centroid);\n        // rotate\n        if (this.rotating_) {\n            map.render();\n            view.adjustRotation(rotationDelta, this.anchor_);\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    PinchRotate.prototype.handleUpEvent = function (mapBrowserEvent) {\n        if (this.targetPointers.length < 2) {\n            var map = mapBrowserEvent.map;\n            var view = map.getView();\n            view.endInteraction(this.duration_);\n            return false;\n        }\n        else {\n            return true;\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    PinchRotate.prototype.handleDownEvent = function (mapBrowserEvent) {\n        if (this.targetPointers.length >= 2) {\n            var map = mapBrowserEvent.map;\n            this.anchor_ = null;\n            this.lastAngle_ = undefined;\n            this.rotating_ = false;\n            this.rotationDelta_ = 0.0;\n            if (!this.handlingDownUpSequence) {\n                map.getView().beginInteraction();\n            }\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    return PinchRotate;\n}(PointerInteraction));\nexport default PinchRotate;\n//# sourceMappingURL=PinchRotate.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/PinchZoom\n */\nimport { FALSE } from '../functions.js';\nimport PointerInteraction, { centroid as centroidFromPointers } from './Pointer.js';\n/**\n * @typedef {Object} Options\n * @property {number} [duration=400] Animation duration in milliseconds.\n */\n/**\n * @classdesc\n * Allows the user to zoom the map by pinching with two fingers\n * on a touch screen.\n * @api\n */\nvar PinchZoom = /** @class */ (function (_super) {\n    __extends(PinchZoom, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function PinchZoom(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        var pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (options);\n        if (!pointerOptions.stopDown) {\n            pointerOptions.stopDown = FALSE;\n        }\n        _this = _super.call(this, pointerOptions) || this;\n        /**\n         * @private\n         * @type {import(\"../coordinate.js\").Coordinate}\n         */\n        _this.anchor_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 400;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.lastDistance_ = undefined;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.lastScaleDelta_ = 1;\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    PinchZoom.prototype.handleDragEvent = function (mapBrowserEvent) {\n        var scaleDelta = 1.0;\n        var touch0 = this.targetPointers[0];\n        var touch1 = this.targetPointers[1];\n        var dx = touch0.clientX - touch1.clientX;\n        var dy = touch0.clientY - touch1.clientY;\n        // distance between touches\n        var distance = Math.sqrt(dx * dx + dy * dy);\n        if (this.lastDistance_ !== undefined) {\n            scaleDelta = this.lastDistance_ / distance;\n        }\n        this.lastDistance_ = distance;\n        var map = mapBrowserEvent.map;\n        var view = map.getView();\n        if (scaleDelta != 1.0) {\n            this.lastScaleDelta_ = scaleDelta;\n        }\n        // scale anchor point.\n        var viewportPosition = map.getViewport().getBoundingClientRect();\n        var centroid = centroidFromPointers(this.targetPointers);\n        centroid[0] -= viewportPosition.left;\n        centroid[1] -= viewportPosition.top;\n        this.anchor_ = map.getCoordinateFromPixel(centroid);\n        // scale, bypass the resolution constraint\n        map.render();\n        view.adjustResolution(scaleDelta, this.anchor_);\n    };\n    /**\n     * @inheritDoc\n     */\n    PinchZoom.prototype.handleUpEvent = function (mapBrowserEvent) {\n        if (this.targetPointers.length < 2) {\n            var map = mapBrowserEvent.map;\n            var view = map.getView();\n            var direction = this.lastScaleDelta_ > 1 ? 1 : -1;\n            view.endInteraction(this.duration_, direction);\n            return false;\n        }\n        else {\n            return true;\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    PinchZoom.prototype.handleDownEvent = function (mapBrowserEvent) {\n        if (this.targetPointers.length >= 2) {\n            var map = mapBrowserEvent.map;\n            this.anchor_ = null;\n            this.lastDistance_ = undefined;\n            this.lastScaleDelta_ = 1;\n            if (!this.handlingDownUpSequence) {\n                map.getView().beginInteraction();\n            }\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    return PinchZoom;\n}(PointerInteraction));\nexport default PinchZoom;\n//# sourceMappingURL=PinchZoom.js.map","/**\n * @module ol/interaction\n */\nimport Collection from './Collection.js';\nimport Kinetic from './Kinetic.js';\nimport DoubleClickZoom from './interaction/DoubleClickZoom.js';\nimport DragPan from './interaction/DragPan.js';\nimport DragRotate from './interaction/DragRotate.js';\nimport DragZoom from './interaction/DragZoom.js';\nimport KeyboardPan from './interaction/KeyboardPan.js';\nimport KeyboardZoom from './interaction/KeyboardZoom.js';\nimport MouseWheelZoom from './interaction/MouseWheelZoom.js';\nimport PinchRotate from './interaction/PinchRotate.js';\nimport PinchZoom from './interaction/PinchZoom.js';\nimport { focus } from './events/condition.js';\nexport { default as DoubleClickZoom } from './interaction/DoubleClickZoom.js';\nexport { default as DragAndDrop } from './interaction/DragAndDrop.js';\nexport { default as DragBox } from './interaction/DragBox.js';\nexport { default as DragPan } from './interaction/DragPan.js';\nexport { default as DragRotate } from './interaction/DragRotate.js';\nexport { default as DragRotateAndZoom } from './interaction/DragRotateAndZoom.js';\nexport { default as DragZoom } from './interaction/DragZoom.js';\nexport { default as Draw } from './interaction/Draw.js';\nexport { default as Extent } from './interaction/Extent.js';\nexport { default as Interaction } from './interaction/Interaction.js';\nexport { default as KeyboardPan } from './interaction/KeyboardPan.js';\nexport { default as KeyboardZoom } from './interaction/KeyboardZoom.js';\nexport { default as Modify } from './interaction/Modify.js';\nexport { default as MouseWheelZoom } from './interaction/MouseWheelZoom.js';\nexport { default as PinchRotate } from './interaction/PinchRotate.js';\nexport { default as PinchZoom } from './interaction/PinchZoom.js';\nexport { default as Pointer } from './interaction/Pointer.js';\nexport { default as Select } from './interaction/Select.js';\nexport { default as Snap } from './interaction/Snap.js';\nexport { default as Translate } from './interaction/Translate.js';\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [altShiftDragRotate=true] Whether Alt-Shift-drag rotate is\n * desired.\n * @property {boolean} [onFocusOnly=false] Interact only when the map has the\n * focus. This affects the `MouseWheelZoom` and `DragPan` interactions and is\n * useful when page scroll is desired for maps that do not have the browser's\n * focus.\n * @property {boolean} [doubleClickZoom=true] Whether double click zoom is\n * desired.\n * @property {boolean} [keyboard=true] Whether keyboard interaction is desired.\n * @property {boolean} [mouseWheelZoom=true] Whether mousewheel zoom is desired.\n * @property {boolean} [shiftDragZoom=true] Whether Shift-drag zoom is desired.\n * @property {boolean} [dragPan=true] Whether drag pan is desired.\n * @property {boolean} [pinchRotate=true] Whether pinch rotate is desired.\n * @property {boolean} [pinchZoom=true] Whether pinch zoom is desired.\n * @property {number} [zoomDelta] Zoom level delta when using keyboard or double click zoom.\n * @property {number} [zoomDuration] Duration of the zoom animation in\n * milliseconds.\n */\n/**\n * Set of interactions included in maps by default. Specific interactions can be\n * excluded by setting the appropriate option to false in the constructor\n * options, but the order of the interactions is fixed.  If you want to specify\n * a different order for interactions, you will need to create your own\n * {@link module:ol/interaction/Interaction} instances and insert\n * them into a {@link module:ol/Collection} in the order you want\n * before creating your {@link module:ol/Map~Map} instance. Changing the order can\n * be of interest if the event propagation needs to be stopped at a point.\n * The default set of interactions, in sequence, is:\n * * {@link module:ol/interaction/DragRotate~DragRotate}\n * * {@link module:ol/interaction/DoubleClickZoom~DoubleClickZoom}\n * * {@link module:ol/interaction/DragPan~DragPan}\n * * {@link module:ol/interaction/PinchRotate~PinchRotate}\n * * {@link module:ol/interaction/PinchZoom~PinchZoom}\n * * {@link module:ol/interaction/KeyboardPan~KeyboardPan}\n * * {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}\n * * {@link module:ol/interaction/MouseWheelZoom~MouseWheelZoom}\n * * {@link module:ol/interaction/DragZoom~DragZoom}\n *\n * @param {DefaultsOptions=} opt_options Defaults options.\n * @return {import(\"./Collection.js\").default<import(\"./interaction/Interaction.js\").default>}\n * A collection of interactions to be used with the {@link module:ol/Map~Map}\n * constructor's `interactions` option.\n * @api\n */\nexport function defaults(opt_options) {\n    var options = opt_options ? opt_options : {};\n    var interactions = new Collection();\n    var kinetic = new Kinetic(-0.005, 0.05, 100);\n    var altShiftDragRotate = options.altShiftDragRotate !== undefined ?\n        options.altShiftDragRotate : true;\n    if (altShiftDragRotate) {\n        interactions.push(new DragRotate());\n    }\n    var doubleClickZoom = options.doubleClickZoom !== undefined ?\n        options.doubleClickZoom : true;\n    if (doubleClickZoom) {\n        interactions.push(new DoubleClickZoom({\n            delta: options.zoomDelta,\n            duration: options.zoomDuration\n        }));\n    }\n    var dragPan = options.dragPan !== undefined ? options.dragPan : true;\n    if (dragPan) {\n        interactions.push(new DragPan({\n            condition: options.onFocusOnly ? focus : undefined,\n            kinetic: kinetic\n        }));\n    }\n    var pinchRotate = options.pinchRotate !== undefined ? options.pinchRotate :\n        true;\n    if (pinchRotate) {\n        interactions.push(new PinchRotate());\n    }\n    var pinchZoom = options.pinchZoom !== undefined ? options.pinchZoom : true;\n    if (pinchZoom) {\n        interactions.push(new PinchZoom({\n            duration: options.zoomDuration\n        }));\n    }\n    var keyboard = options.keyboard !== undefined ? options.keyboard : true;\n    if (keyboard) {\n        interactions.push(new KeyboardPan());\n        interactions.push(new KeyboardZoom({\n            delta: options.zoomDelta,\n            duration: options.zoomDuration\n        }));\n    }\n    var mouseWheelZoom = options.mouseWheelZoom !== undefined ?\n        options.mouseWheelZoom : true;\n    if (mouseWheelZoom) {\n        interactions.push(new MouseWheelZoom({\n            condition: options.onFocusOnly ? focus : undefined,\n            duration: options.zoomDuration\n        }));\n    }\n    var shiftDragZoom = options.shiftDragZoom !== undefined ?\n        options.shiftDragZoom : true;\n    if (shiftDragZoom) {\n        interactions.push(new DragZoom({\n            duration: options.zoomDuration\n        }));\n    }\n    return interactions;\n}\n//# sourceMappingURL=interaction.js.map","/**\n * @module ol/render/Event\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport Event from '../events/Event.js';\nvar RenderEvent = /** @class */ (function (_super) {\n    __extends(RenderEvent, _super);\n    /**\n     * @param {import(\"./EventType.js\").default} type Type.\n     * @param {import(\"../transform.js\").Transform=} opt_inversePixelTransform Transform for\n     *     CSS pixels to rendered pixels.\n     * @param {import(\"../PluggableMap.js\").FrameState=} opt_frameState Frame state.\n     * @param {?CanvasRenderingContext2D=} opt_context Context.\n     * @param {?import(\"../webgl/Helper.js\").default=} opt_glContext WebGL Context.\n     */\n    function RenderEvent(type, opt_inversePixelTransform, opt_frameState, opt_context, opt_glContext) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * Transform from CSS pixels (relative to the top-left corner of the map viewport)\n         * to rendered pixels on this event's `context`.\n         * @type {import(\"../transform.js\").Transform|undefined}\n         * @api\n         */\n        _this.inversePixelTransform = opt_inversePixelTransform;\n        /**\n         * An object representing the current render frame state.\n         * @type {import(\"../PluggableMap.js\").FrameState|undefined}\n         * @api\n         */\n        _this.frameState = opt_frameState;\n        /**\n         * Canvas context. Only available when a Canvas renderer is used, null\n         * otherwise.\n         * @type {CanvasRenderingContext2D|null|undefined}\n         * @api\n         */\n        _this.context = opt_context;\n        /**\n         * WebGL context. Only available when a WebGL renderer is used, null\n         * otherwise.\n         * @type {import(\"../webgl/Helper.js\").default|null|undefined}\n         * @api\n         */\n        _this.glContext = opt_glContext;\n        return _this;\n    }\n    return RenderEvent;\n}(Event));\nexport default RenderEvent;\n//# sourceMappingURL=Event.js.map","/**\n * @module ol/color\n */\nimport { assert } from './asserts.js';\nimport { clamp } from './math.js';\n/**\n * A color represented as a short array [red, green, blue, alpha].\n * red, green, and blue should be integers in the range 0..255 inclusive.\n * alpha should be a float in the range 0..1 inclusive. If no alpha value is\n * given then `1` will be used.\n * @typedef {Array<number>} Color\n * @api\n */\n/**\n * This RegExp matches # followed by 3, 4, 6, or 8 hex digits.\n * @const\n * @type {RegExp}\n * @private\n */\nvar HEX_COLOR_RE_ = /^#([a-f0-9]{3}|[a-f0-9]{4}(?:[a-f0-9]{2}){0,2})$/i;\n/**\n * Regular expression for matching potential named color style strings.\n * @const\n * @type {RegExp}\n * @private\n */\nvar NAMED_COLOR_RE_ = /^([a-z]*)$/i;\n/**\n * Return the color as an rgba string.\n * @param {Color|string} color Color.\n * @return {string} Rgba string.\n * @api\n */\nexport function asString(color) {\n    if (typeof color === 'string') {\n        return color;\n    }\n    else {\n        return toString(color);\n    }\n}\n/**\n * Return named color as an rgba string.\n * @param {string} color Named color.\n * @return {string} Rgb string.\n */\nfunction fromNamed(color) {\n    var el = document.createElement('div');\n    el.style.color = color;\n    if (el.style.color !== '') {\n        document.body.appendChild(el);\n        var rgb = getComputedStyle(el).color;\n        document.body.removeChild(el);\n        return rgb;\n    }\n    else {\n        return '';\n    }\n}\n/**\n * @param {string} s String.\n * @return {Color} Color.\n */\nexport var fromString = (function () {\n    // We maintain a small cache of parsed strings.  To provide cheap LRU-like\n    // semantics, whenever the cache grows too large we simply delete an\n    // arbitrary 25% of the entries.\n    /**\n     * @const\n     * @type {number}\n     */\n    var MAX_CACHE_SIZE = 1024;\n    /**\n     * @type {Object<string, Color>}\n     */\n    var cache = {};\n    /**\n     * @type {number}\n     */\n    var cacheSize = 0;\n    return (\n    /**\n     * @param {string} s String.\n     * @return {Color} Color.\n     */\n    function (s) {\n        var color;\n        if (cache.hasOwnProperty(s)) {\n            color = cache[s];\n        }\n        else {\n            if (cacheSize >= MAX_CACHE_SIZE) {\n                var i = 0;\n                for (var key in cache) {\n                    if ((i++ & 3) === 0) {\n                        delete cache[key];\n                        --cacheSize;\n                    }\n                }\n            }\n            color = fromStringInternal_(s);\n            cache[s] = color;\n            ++cacheSize;\n        }\n        return color;\n    });\n})();\n/**\n * Return the color as an array. This function maintains a cache of calculated\n * arrays which means the result should not be modified.\n * @param {Color|string} color Color.\n * @return {Color} Color.\n * @api\n */\nexport function asArray(color) {\n    if (Array.isArray(color)) {\n        return color;\n    }\n    else {\n        return fromString(color);\n    }\n}\n/**\n * @param {string} s String.\n * @private\n * @return {Color} Color.\n */\nfunction fromStringInternal_(s) {\n    var r, g, b, a, color;\n    if (NAMED_COLOR_RE_.exec(s)) {\n        s = fromNamed(s);\n    }\n    if (HEX_COLOR_RE_.exec(s)) { // hex\n        var n = s.length - 1; // number of hex digits\n        var d = // number of digits per channel\n         void 0; // number of digits per channel\n        if (n <= 4) {\n            d = 1;\n        }\n        else {\n            d = 2;\n        }\n        var hasAlpha = n === 4 || n === 8;\n        r = parseInt(s.substr(1 + 0 * d, d), 16);\n        g = parseInt(s.substr(1 + 1 * d, d), 16);\n        b = parseInt(s.substr(1 + 2 * d, d), 16);\n        if (hasAlpha) {\n            a = parseInt(s.substr(1 + 3 * d, d), 16);\n        }\n        else {\n            a = 255;\n        }\n        if (d == 1) {\n            r = (r << 4) + r;\n            g = (g << 4) + g;\n            b = (b << 4) + b;\n            if (hasAlpha) {\n                a = (a << 4) + a;\n            }\n        }\n        color = [r, g, b, a / 255];\n    }\n    else if (s.indexOf('rgba(') == 0) { // rgba()\n        color = s.slice(5, -1).split(',').map(Number);\n        normalize(color);\n    }\n    else if (s.indexOf('rgb(') == 0) { // rgb()\n        color = s.slice(4, -1).split(',').map(Number);\n        color.push(1);\n        normalize(color);\n    }\n    else {\n        assert(false, 14); // Invalid color\n    }\n    return color;\n}\n/**\n * TODO this function is only used in the test, we probably shouldn't export it\n * @param {Color} color Color.\n * @return {Color} Clamped color.\n */\nexport function normalize(color) {\n    color[0] = clamp((color[0] + 0.5) | 0, 0, 255);\n    color[1] = clamp((color[1] + 0.5) | 0, 0, 255);\n    color[2] = clamp((color[2] + 0.5) | 0, 0, 255);\n    color[3] = clamp(color[3], 0, 1);\n    return color;\n}\n/**\n * @param {Color} color Color.\n * @return {string} String.\n */\nexport function toString(color) {\n    var r = color[0];\n    if (r != (r | 0)) {\n        r = (r + 0.5) | 0;\n    }\n    var g = color[1];\n    if (g != (g | 0)) {\n        g = (g + 0.5) | 0;\n    }\n    var b = color[2];\n    if (b != (b | 0)) {\n        b = (b + 0.5) | 0;\n    }\n    var a = color[3] === undefined ? 1 : color[3];\n    return 'rgba(' + r + ',' + g + ',' + b + ',' + a + ')';\n}\n//# sourceMappingURL=color.js.map","/**\n * @module ol/style/IconImageCache\n */\nimport { asString } from '../color.js';\n/**\n * @classdesc\n * Singleton class. Available through {@link module:ol/style/IconImageCache~shared}.\n */\nvar IconImageCache = /** @class */ (function () {\n    function IconImageCache() {\n        /**\n        * @type {!Object<string, import(\"./IconImage.js\").default>}\n        * @private\n        */\n        this.cache_ = {};\n        /**\n        * @type {number}\n        * @private\n        */\n        this.cacheSize_ = 0;\n        /**\n        * @type {number}\n        * @private\n        */\n        this.maxCacheSize_ = 32;\n    }\n    /**\n    * FIXME empty description for jsdoc\n    */\n    IconImageCache.prototype.clear = function () {\n        this.cache_ = {};\n        this.cacheSize_ = 0;\n    };\n    /**\n     * @return {boolean} Can expire cache.\n     */\n    IconImageCache.prototype.canExpireCache = function () {\n        return this.cacheSize_ > this.maxCacheSize_;\n    };\n    /**\n    * FIXME empty description for jsdoc\n    */\n    IconImageCache.prototype.expire = function () {\n        if (this.canExpireCache()) {\n            var i = 0;\n            for (var key in this.cache_) {\n                var iconImage = this.cache_[key];\n                if ((i++ & 3) === 0 && !iconImage.hasListener()) {\n                    delete this.cache_[key];\n                    --this.cacheSize_;\n                }\n            }\n        }\n    };\n    /**\n    * @param {string} src Src.\n    * @param {?string} crossOrigin Cross origin.\n    * @param {import(\"../color.js\").Color} color Color.\n    * @return {import(\"./IconImage.js\").default} Icon image.\n    */\n    IconImageCache.prototype.get = function (src, crossOrigin, color) {\n        var key = getKey(src, crossOrigin, color);\n        return key in this.cache_ ? this.cache_[key] : null;\n    };\n    /**\n    * @param {string} src Src.\n    * @param {?string} crossOrigin Cross origin.\n    * @param {import(\"../color.js\").Color} color Color.\n    * @param {import(\"./IconImage.js\").default} iconImage Icon image.\n    */\n    IconImageCache.prototype.set = function (src, crossOrigin, color, iconImage) {\n        var key = getKey(src, crossOrigin, color);\n        this.cache_[key] = iconImage;\n        ++this.cacheSize_;\n    };\n    /**\n    * Set the cache size of the icon cache. Default is `32`. Change this value when\n    * your map uses more than 32 different icon images and you are not caching icon\n    * styles on the application level.\n    * @param {number} maxCacheSize Cache max size.\n    * @api\n    */\n    IconImageCache.prototype.setSize = function (maxCacheSize) {\n        this.maxCacheSize_ = maxCacheSize;\n        this.expire();\n    };\n    return IconImageCache;\n}());\n/**\n * @param {string} src Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {string} Cache key.\n */\nfunction getKey(src, crossOrigin, color) {\n    var colorString = color ? asString(color) : 'null';\n    return crossOrigin + ':' + src + ':' + colorString;\n}\nexport default IconImageCache;\n/**\n * The {@link module:ol/style/IconImageCache~IconImageCache} for\n * {@link module:ol/style/Icon~Icon} images.\n * @api\n */\nexport var shared = new IconImageCache();\n//# sourceMappingURL=IconImageCache.js.map","/**\n * @module ol/colorlike\n */\nimport { toString } from './color.js';\n/**\n * A type accepted by CanvasRenderingContext2D.fillStyle\n * or CanvasRenderingContext2D.strokeStyle.\n * Represents a color, pattern, or gradient. The origin for patterns and\n * gradients as fill style is an increment of 512 css pixels from map coordinate\n * `[0, 0]`. For seamless repeat patterns, width and height of the pattern image\n * must be a factor of two (2, 4, 8, ..., 512).\n *\n * @typedef {string|CanvasPattern|CanvasGradient} ColorLike\n * @api\n */\n/**\n * @param {import(\"./color.js\").Color|ColorLike} color Color.\n * @return {ColorLike} The color as an {@link ol/colorlike~ColorLike}.\n * @api\n */\nexport function asColorLike(color) {\n    if (Array.isArray(color)) {\n        return toString(color);\n    }\n    else {\n        return color;\n    }\n}\n//# sourceMappingURL=colorlike.js.map","/**\n * @module ol/render/VectorContext\n */\n/**\n * @classdesc\n * Context for drawing geometries.  A vector context is available on render\n * events and does not need to be constructed directly.\n * @api\n */\nvar VectorContext = /** @class */ (function () {\n    function VectorContext() {\n    }\n    /**\n     * Render a geometry with a custom renderer.\n     *\n     * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     * @param {Function} renderer Renderer.\n     */\n    VectorContext.prototype.drawCustom = function (geometry, feature, renderer) { };\n    /**\n     * Render a geometry.\n     *\n     * @param {import(\"../geom/Geometry.js\").default} geometry The geometry to render.\n     */\n    VectorContext.prototype.drawGeometry = function (geometry) { };\n    /**\n     * Set the rendering style.\n     *\n     * @param {import(\"../style/Style.js\").default} style The rendering style.\n     */\n    VectorContext.prototype.setStyle = function (style) { };\n    /**\n     * @param {import(\"../geom/Circle.js\").default} circleGeometry Circle geometry.\n     * @param {import(\"../Feature.js\").default} feature Feature.\n     */\n    VectorContext.prototype.drawCircle = function (circleGeometry, feature) { };\n    /**\n     * @param {import(\"../Feature.js\").default} feature Feature.\n     * @param {import(\"../style/Style.js\").default} style Style.\n     */\n    VectorContext.prototype.drawFeature = function (feature, style) { };\n    /**\n     * @param {import(\"../geom/GeometryCollection.js\").default} geometryCollectionGeometry Geometry collection.\n     * @param {import(\"../Feature.js\").default} feature Feature.\n     */\n    VectorContext.prototype.drawGeometryCollection = function (geometryCollectionGeometry, feature) { };\n    /**\n     * @param {import(\"../geom/LineString.js\").default|import(\"./Feature.js\").default} lineStringGeometry Line string geometry.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     */\n    VectorContext.prototype.drawLineString = function (lineStringGeometry, feature) { };\n    /**\n     * @param {import(\"../geom/MultiLineString.js\").default|import(\"./Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     */\n    VectorContext.prototype.drawMultiLineString = function (multiLineStringGeometry, feature) { };\n    /**\n     * @param {import(\"../geom/MultiPoint.js\").default|import(\"./Feature.js\").default} multiPointGeometry MultiPoint geometry.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     */\n    VectorContext.prototype.drawMultiPoint = function (multiPointGeometry, feature) { };\n    /**\n     * @param {import(\"../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     */\n    VectorContext.prototype.drawMultiPolygon = function (multiPolygonGeometry, feature) { };\n    /**\n     * @param {import(\"../geom/Point.js\").default|import(\"./Feature.js\").default} pointGeometry Point geometry.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     */\n    VectorContext.prototype.drawPoint = function (pointGeometry, feature) { };\n    /**\n     * @param {import(\"../geom/Polygon.js\").default|import(\"./Feature.js\").default} polygonGeometry Polygon geometry.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     */\n    VectorContext.prototype.drawPolygon = function (polygonGeometry, feature) { };\n    /**\n     * @param {import(\"../geom/Geometry.js\").default|import(\"./Feature.js\").default} geometry Geometry.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     */\n    VectorContext.prototype.drawText = function (geometry, feature) { };\n    /**\n     * @param {import(\"../style/Fill.js\").default} fillStyle Fill style.\n     * @param {import(\"../style/Stroke.js\").default} strokeStyle Stroke style.\n     */\n    VectorContext.prototype.setFillStrokeStyle = function (fillStyle, strokeStyle) { };\n    /**\n     * @param {import(\"../style/Image.js\").default} imageStyle Image style.\n     * @param {import(\"./canvas.js\").DeclutterGroup=} opt_declutterGroup Declutter.\n     */\n    VectorContext.prototype.setImageStyle = function (imageStyle, opt_declutterGroup) { };\n    /**\n     * @param {import(\"../style/Text.js\").default} textStyle Text style.\n     * @param {import(\"./canvas.js\").DeclutterGroup=} opt_declutterGroup Declutter.\n     */\n    VectorContext.prototype.setTextStyle = function (textStyle, opt_declutterGroup) { };\n    return VectorContext;\n}());\nexport default VectorContext;\n//# sourceMappingURL=VectorContext.js.map","/**\n * @module ol/structs/LRUCache\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { assert } from '../asserts.js';\nimport EventTarget from '../events/Target.js';\nimport EventType from '../events/EventType.js';\n/**\n * @typedef {Object} Entry\n * @property {string} key_\n * @property {Object} newer\n * @property {Object} older\n * @property {*} value_\n */\n/**\n * @classdesc\n * Implements a Least-Recently-Used cache where the keys do not conflict with\n * Object's properties (e.g. 'hasOwnProperty' is not allowed as a key). Expiring\n * items from the cache is the responsibility of the user.\n *\n * @fires import(\"../events/Event.js\").Event\n * @template T\n */\nvar LRUCache = /** @class */ (function (_super) {\n    __extends(LRUCache, _super);\n    /**\n     * @param {number=} opt_highWaterMark High water mark.\n     */\n    function LRUCache(opt_highWaterMark) {\n        var _this = _super.call(this) || this;\n        /**\n         * @type {number}\n         */\n        _this.highWaterMark = opt_highWaterMark !== undefined ? opt_highWaterMark : 2048;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.count_ = 0;\n        /**\n         * @private\n         * @type {!Object<string, Entry>}\n         */\n        _this.entries_ = {};\n        /**\n         * @private\n         * @type {?Entry}\n         */\n        _this.oldest_ = null;\n        /**\n         * @private\n         * @type {?Entry}\n         */\n        _this.newest_ = null;\n        return _this;\n    }\n    /**\n     * @return {boolean} Can expire cache.\n     */\n    LRUCache.prototype.canExpireCache = function () {\n        return this.getCount() > this.highWaterMark;\n    };\n    /**\n     * FIXME empty description for jsdoc\n     */\n    LRUCache.prototype.clear = function () {\n        this.count_ = 0;\n        this.entries_ = {};\n        this.oldest_ = null;\n        this.newest_ = null;\n        this.dispatchEvent(EventType.CLEAR);\n    };\n    /**\n     * @param {string} key Key.\n     * @return {boolean} Contains key.\n     */\n    LRUCache.prototype.containsKey = function (key) {\n        return this.entries_.hasOwnProperty(key);\n    };\n    /**\n     * @param {function(T, string, LRUCache): ?} f The function\n     *     to call for every entry from the oldest to the newer. This function takes\n     *     3 arguments (the entry value, the entry key and the LRUCache object).\n     *     The return value is ignored.\n     */\n    LRUCache.prototype.forEach = function (f) {\n        var entry = this.oldest_;\n        while (entry) {\n            f(entry.value_, entry.key_, this);\n            entry = entry.newer;\n        }\n    };\n    /**\n     * @param {string} key Key.\n     * @param {*=} opt_options Options (reserverd for subclasses).\n     * @return {T} Value.\n     */\n    LRUCache.prototype.get = function (key, opt_options) {\n        var entry = this.entries_[key];\n        assert(entry !== undefined, 15); // Tried to get a value for a key that does not exist in the cache\n        if (entry === this.newest_) {\n            return entry.value_;\n        }\n        else if (entry === this.oldest_) {\n            this.oldest_ = /** @type {Entry} */ (this.oldest_.newer);\n            this.oldest_.older = null;\n        }\n        else {\n            entry.newer.older = entry.older;\n            entry.older.newer = entry.newer;\n        }\n        entry.newer = null;\n        entry.older = this.newest_;\n        this.newest_.newer = entry;\n        this.newest_ = entry;\n        return entry.value_;\n    };\n    /**\n     * Remove an entry from the cache.\n     * @param {string} key The entry key.\n     * @return {T} The removed entry.\n     */\n    LRUCache.prototype.remove = function (key) {\n        var entry = this.entries_[key];\n        assert(entry !== undefined, 15); // Tried to get a value for a key that does not exist in the cache\n        if (entry === this.newest_) {\n            this.newest_ = /** @type {Entry} */ (entry.older);\n            if (this.newest_) {\n                this.newest_.newer = null;\n            }\n        }\n        else if (entry === this.oldest_) {\n            this.oldest_ = /** @type {Entry} */ (entry.newer);\n            if (this.oldest_) {\n                this.oldest_.older = null;\n            }\n        }\n        else {\n            entry.newer.older = entry.older;\n            entry.older.newer = entry.newer;\n        }\n        delete this.entries_[key];\n        --this.count_;\n        return entry.value_;\n    };\n    /**\n     * @return {number} Count.\n     */\n    LRUCache.prototype.getCount = function () {\n        return this.count_;\n    };\n    /**\n     * @return {Array<string>} Keys.\n     */\n    LRUCache.prototype.getKeys = function () {\n        var keys = new Array(this.count_);\n        var i = 0;\n        var entry;\n        for (entry = this.newest_; entry; entry = entry.older) {\n            keys[i++] = entry.key_;\n        }\n        return keys;\n    };\n    /**\n     * @return {Array<T>} Values.\n     */\n    LRUCache.prototype.getValues = function () {\n        var values = new Array(this.count_);\n        var i = 0;\n        var entry;\n        for (entry = this.newest_; entry; entry = entry.older) {\n            values[i++] = entry.value_;\n        }\n        return values;\n    };\n    /**\n     * @return {T} Last value.\n     */\n    LRUCache.prototype.peekLast = function () {\n        return this.oldest_.value_;\n    };\n    /**\n     * @return {string} Last key.\n     */\n    LRUCache.prototype.peekLastKey = function () {\n        return this.oldest_.key_;\n    };\n    /**\n     * Get the key of the newest item in the cache.  Throws if the cache is empty.\n     * @return {string} The newest key.\n     */\n    LRUCache.prototype.peekFirstKey = function () {\n        return this.newest_.key_;\n    };\n    /**\n     * @return {T} value Value.\n     */\n    LRUCache.prototype.pop = function () {\n        var entry = this.oldest_;\n        delete this.entries_[entry.key_];\n        if (entry.newer) {\n            entry.newer.older = null;\n        }\n        this.oldest_ = /** @type {Entry} */ (entry.newer);\n        if (!this.oldest_) {\n            this.newest_ = null;\n        }\n        --this.count_;\n        return entry.value_;\n    };\n    /**\n     * @param {string} key Key.\n     * @param {T} value Value.\n     */\n    LRUCache.prototype.replace = function (key, value) {\n        this.get(key); // update `newest_`\n        this.entries_[key].value_ = value;\n    };\n    /**\n     * @param {string} key Key.\n     * @param {T} value Value.\n     */\n    LRUCache.prototype.set = function (key, value) {\n        assert(!(key in this.entries_), 16); // Tried to set a value for a key that is used already\n        var entry = {\n            key_: key,\n            newer: null,\n            older: this.newest_,\n            value_: value\n        };\n        if (!this.newest_) {\n            this.oldest_ = entry;\n        }\n        else {\n            this.newest_.newer = entry;\n        }\n        this.newest_ = entry;\n        this.entries_[key] = entry;\n        ++this.count_;\n    };\n    /**\n     * Set a maximum number of entries for the cache.\n     * @param {number} size Cache size.\n     * @api\n     */\n    LRUCache.prototype.setSize = function (size) {\n        this.highWaterMark = size;\n    };\n    return LRUCache;\n}(EventTarget));\nexport default LRUCache;\n//# sourceMappingURL=LRUCache.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { getUid } from '../../util.js';\nimport LRUCache from '../../structs/LRUCache.js';\n/**\n * @module ol/render/canvas/LabelCache\n */\n/**\n * @classdesc\n * Cache of pre-rendered labels.\n * @fires import(\"../events/Event.js\").Event\n */\nvar LabelCache = /** @class */ (function (_super) {\n    __extends(LabelCache, _super);\n    /**\n     * @inheritDoc\n     */\n    function LabelCache(opt_highWaterMark) {\n        var _this = _super.call(this, opt_highWaterMark) || this;\n        _this.consumers = {};\n        return _this;\n    }\n    LabelCache.prototype.clear = function () {\n        _super.prototype.clear.call(this);\n        this.consumers = {};\n    };\n    /**\n     * @override\n     * @param {string} key Label key.\n     * @param {import(\"./Executor.js\").default} consumer Label consumer.\n     * @return {HTMLCanvasElement} Label.\n     */\n    LabelCache.prototype.get = function (key, consumer) {\n        var canvas = _super.prototype.get.call(this, key);\n        var consumerId = getUid(consumer);\n        if (!(consumerId in this.consumers)) {\n            this.consumers[consumerId] = {};\n        }\n        this.consumers[consumerId][key] = true;\n        return canvas;\n    };\n    LabelCache.prototype.prune = function () {\n        outer: while (this.canExpireCache()) {\n            var key = this.peekLastKey();\n            for (var consumerId in this.consumers) {\n                if (key in this.consumers[consumerId]) {\n                    break outer;\n                }\n            }\n            var canvas = this.pop();\n            canvas.width = canvas.height = 0;\n            for (var consumerId in this.consumers) {\n                delete this.consumers[consumerId][key];\n            }\n        }\n    };\n    /**\n     * @param {import(\"./Executor.js\").default} consumer Label consumer.\n     */\n    LabelCache.prototype.release = function (consumer) {\n        delete this.consumers[getUid(consumer)];\n    };\n    return LabelCache;\n}(LRUCache));\nexport default LabelCache;\n//# sourceMappingURL=LabelCache.js.map","/**\n * @module ol/render/canvas\n */\nimport { getFontFamilies } from '../css.js';\nimport { createCanvasContext2D } from '../dom.js';\nimport { clear } from '../obj.js';\nimport { create as createTransform } from '../transform.js';\nimport LabelCache from './canvas/LabelCache.js';\n/**\n * @typedef {Object} FillState\n * @property {import(\"../colorlike.js\").ColorLike} fillStyle\n */\n/**\n * @typedef {Object} FillStrokeState\n * @property {import(\"../colorlike.js\").ColorLike} [currentFillStyle]\n * @property {import(\"../colorlike.js\").ColorLike} [currentStrokeStyle]\n * @property {string} [currentLineCap]\n * @property {Array<number>} currentLineDash\n * @property {number} [currentLineDashOffset]\n * @property {string} [currentLineJoin]\n * @property {number} [currentLineWidth]\n * @property {number} [currentMiterLimit]\n * @property {number} [lastStroke]\n * @property {import(\"../colorlike.js\").ColorLike} [fillStyle]\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle]\n * @property {string} [lineCap]\n * @property {Array<number>} lineDash\n * @property {number} [lineDashOffset]\n * @property {string} [lineJoin]\n * @property {number} [lineWidth]\n * @property {number} [miterLimit]\n */\n/**\n * @typedef {Object} StrokeState\n * @property {string} lineCap\n * @property {Array<number>} lineDash\n * @property {number} lineDashOffset\n * @property {string} lineJoin\n * @property {number} lineWidth\n * @property {number} miterLimit\n * @property {import(\"../colorlike.js\").ColorLike} strokeStyle\n */\n/**\n * @typedef {Object} TextState\n * @property {string} font\n * @property {string} [textAlign]\n * @property {string} textBaseline\n * @property {string} [placement]\n * @property {number} [maxAngle]\n * @property {boolean} [overflow]\n * @property {import(\"../style/Fill.js\").default} [backgroundFill]\n * @property {import(\"../style/Stroke.js\").default} [backgroundStroke]\n * @property {number} [scale]\n * @property {Array<number>} [padding]\n */\n/**\n * Container for decluttered replay instructions that need to be rendered or\n * omitted together, i.e. when styles render both an image and text, or for the\n * characters that form text along lines. The basic elements of this array are\n * `[minX, minY, maxX, maxY, count]`, where the first four entries are the\n * rendered extent of the group in pixel space. `count` is the number of styles\n * in the group, i.e. 2 when an image and a text are grouped, or 1 otherwise.\n * In addition to these four elements, declutter instruction arrays (i.e. the\n * arguments to {@link module:ol/render/canvas~drawImage} are appended to the array.\n * @typedef {Array<*>} DeclutterGroup\n */\n/**\n * @const\n * @type {string}\n */\nexport var defaultFont = '10px sans-serif';\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport var defaultFillStyle = '#000';\n/**\n * @const\n * @type {string}\n */\nexport var defaultLineCap = 'round';\n/**\n * @const\n * @type {Array<number>}\n */\nexport var defaultLineDash = [];\n/**\n * @const\n * @type {number}\n */\nexport var defaultLineDashOffset = 0;\n/**\n * @const\n * @type {string}\n */\nexport var defaultLineJoin = 'round';\n/**\n * @const\n * @type {number}\n */\nexport var defaultMiterLimit = 10;\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport var defaultStrokeStyle = '#000';\n/**\n * @const\n * @type {string}\n */\nexport var defaultTextAlign = 'center';\n/**\n * @const\n * @type {string}\n */\nexport var defaultTextBaseline = 'middle';\n/**\n * @const\n * @type {Array<number>}\n */\nexport var defaultPadding = [0, 0, 0, 0];\n/**\n * @const\n * @type {number}\n */\nexport var defaultLineWidth = 1;\n/**\n * The label cache for text rendering. To change the default cache size of 2048\n * entries, use {@link module:ol/structs/LRUCache#setSize}.\n * @type {LabelCache}\n * @api\n */\nexport var labelCache = new LabelCache();\n/**\n * @type {!Object<string, number>}\n */\nexport var checkedFonts = {};\n/**\n * @type {CanvasRenderingContext2D}\n */\nvar measureContext = null;\n/**\n * @type {!Object<string, number>}\n */\nexport var textHeights = {};\n/**\n * Clears the label cache when a font becomes available.\n * @param {string} fontSpec CSS font spec.\n */\nexport var checkFont = (function () {\n    var retries = 60;\n    var checked = checkedFonts;\n    var size = '32px ';\n    var referenceFonts = ['monospace', 'serif'];\n    var len = referenceFonts.length;\n    var text = 'wmytzilWMYTZIL@#/&?$%10\\uF013';\n    var interval, referenceWidth;\n    function isAvailable(font) {\n        var context = getMeasureContext();\n        // Check weight ranges according to\n        // https://developer.mozilla.org/en-US/docs/Web/CSS/font-weight#Fallback_weights\n        for (var weight = 100; weight <= 700; weight += 300) {\n            var fontWeight = weight + ' ';\n            var available = true;\n            for (var i = 0; i < len; ++i) {\n                var referenceFont = referenceFonts[i];\n                context.font = fontWeight + size + referenceFont;\n                referenceWidth = context.measureText(text).width;\n                if (font != referenceFont) {\n                    context.font = fontWeight + size + font + ',' + referenceFont;\n                    var width = context.measureText(text).width;\n                    // If width and referenceWidth are the same, then the fallback was used\n                    // instead of the font we wanted, so the font is not available.\n                    available = available && width != referenceWidth;\n                }\n            }\n            if (available) {\n                // Consider font available when it is available in one weight range.\n                //FIXME With this we miss rare corner cases, so we should consider\n                //FIXME checking availability for each requested weight range.\n                return true;\n            }\n        }\n        return false;\n    }\n    function check() {\n        var done = true;\n        for (var font in checked) {\n            if (checked[font] < retries) {\n                if (isAvailable(font)) {\n                    checked[font] = retries;\n                    clear(textHeights);\n                    // Make sure that loaded fonts are picked up by Safari\n                    measureContext = null;\n                    labelCache.clear();\n                }\n                else {\n                    ++checked[font];\n                    done = false;\n                }\n            }\n        }\n        if (done) {\n            clearInterval(interval);\n            interval = undefined;\n        }\n    }\n    return function (fontSpec) {\n        var fontFamilies = getFontFamilies(fontSpec);\n        if (!fontFamilies) {\n            return;\n        }\n        for (var i = 0, ii = fontFamilies.length; i < ii; ++i) {\n            var fontFamily = fontFamilies[i];\n            if (!(fontFamily in checked)) {\n                checked[fontFamily] = retries;\n                if (!isAvailable(fontFamily)) {\n                    checked[fontFamily] = 0;\n                    if (interval === undefined) {\n                        interval = setInterval(check, 32);\n                    }\n                }\n            }\n        }\n    };\n})();\n/**\n * @return {CanvasRenderingContext2D} Measure context.\n */\nfunction getMeasureContext() {\n    if (!measureContext) {\n        measureContext = createCanvasContext2D(1, 1);\n    }\n    return measureContext;\n}\n/**\n * @param {string} font Font to use for measuring.\n * @return {import(\"../size.js\").Size} Measurement.\n */\nexport var measureTextHeight = (function () {\n    var div;\n    var heights = textHeights;\n    return function (font) {\n        var height = heights[font];\n        if (height == undefined) {\n            if (!div) {\n                div = document.createElement('div');\n                div.innerHTML = 'M';\n                div.style.margin = div.style.padding = '0 !important';\n                div.style.position = 'absolute !important';\n                div.style.left = '-99999px !important';\n            }\n            div.style.font = font;\n            document.body.appendChild(div);\n            height = heights[font] = div.offsetHeight;\n            document.body.removeChild(div);\n        }\n        return height;\n    };\n})();\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {number} Width.\n */\nexport function measureTextWidth(font, text) {\n    var measureContext = getMeasureContext();\n    if (font != measureContext.font) {\n        measureContext.font = font;\n    }\n    return measureContext.measureText(text).width;\n}\n/**\n * Measure text width using a cache.\n * @param {string} font The font.\n * @param {string} text The text to measure.\n * @param {Object<string, number>} cache A lookup of cached widths by text.\n * @returns {number} The text width.\n */\nexport function measureAndCacheTextWidth(font, text, cache) {\n    if (text in cache) {\n        return cache[text];\n    }\n    var width = cache[text] = measureTextWidth(font, text);\n    return width;\n}\n/**\n * @param {string} font Font to use for measuring.\n * @param {Array<string>} lines Lines to measure.\n * @param {Array<number>} widths Array will be populated with the widths of\n * each line.\n * @return {number} Width of the whole text.\n */\nexport function measureTextWidths(font, lines, widths) {\n    var numLines = lines.length;\n    var width = 0;\n    for (var i = 0; i < numLines; ++i) {\n        var currentWidth = measureTextWidth(font, lines[i]);\n        width = Math.max(width, currentWidth);\n        widths.push(currentWidth);\n    }\n    return width;\n}\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {number} offsetX X offset.\n * @param {number} offsetY Y offset.\n */\nexport function rotateAtOffset(context, rotation, offsetX, offsetY) {\n    if (rotation !== 0) {\n        context.translate(offsetX, offsetY);\n        context.rotate(rotation);\n        context.translate(-offsetX, -offsetY);\n    }\n}\nexport var resetTransform = createTransform();\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {import(\"../transform.js\").Transform|null} transform Transform.\n * @param {number} opacity Opacity.\n * @param {HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} image Image.\n * @param {number} originX Origin X.\n * @param {number} originY Origin Y.\n * @param {number} w Width.\n * @param {number} h Height.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} scale Scale.\n */\nexport function drawImage(context, transform, opacity, image, originX, originY, w, h, x, y, scale) {\n    var alpha;\n    if (opacity != 1) {\n        alpha = context.globalAlpha;\n        context.globalAlpha = alpha * opacity;\n    }\n    if (transform) {\n        context.setTransform.apply(context, transform);\n    }\n    context.drawImage(image, originX, originY, w, h, x, y, w * scale, h * scale);\n    if (alpha) {\n        context.globalAlpha = alpha;\n    }\n    if (transform) {\n        context.setTransform.apply(context, resetTransform);\n    }\n}\n//# sourceMappingURL=canvas.js.map","/**\n * @module ol/render/canvas/Immediate\n */\n// FIXME test, especially polygons with holes and multipolygons\n// FIXME need to handle large thick features (where pixel size matters)\n// FIXME add offset and end to ol/geom/flat/transform~transform2D?\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { equals } from '../../array.js';\nimport { asColorLike } from '../../colorlike.js';\nimport { intersects } from '../../extent.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport { transformGeom2D } from '../../geom/SimpleGeometry.js';\nimport { transform2D } from '../../geom/flat/transform.js';\nimport VectorContext from '../VectorContext.js';\nimport { defaultTextAlign, defaultFillStyle, defaultLineCap, defaultLineDash, defaultLineDashOffset, defaultLineJoin, defaultLineWidth, defaultMiterLimit, defaultStrokeStyle, defaultTextBaseline, defaultFont } from '../canvas.js';\nimport { create as createTransform, compose as composeTransform } from '../../transform.js';\n/**\n * @classdesc\n * A concrete subclass of {@link module:ol/render/VectorContext} that implements\n * direct rendering of features and geometries to an HTML5 Canvas context.\n * Instances of this class are created internally by the library and\n * provided to application code as vectorContext member of the\n * {@link module:ol/render/Event~RenderEvent} object associated with postcompose, precompose and\n * render events emitted by layers and maps.\n */\nvar CanvasImmediateRenderer = /** @class */ (function (_super) {\n    __extends(CanvasImmediateRenderer, _super);\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../../extent.js\").Extent} extent Extent.\n     * @param {import(\"../../transform.js\").Transform} transform Transform.\n     * @param {number} viewRotation View rotation.\n     */\n    function CanvasImmediateRenderer(context, pixelRatio, extent, transform, viewRotation) {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {CanvasRenderingContext2D}\n         */\n        _this.context_ = context;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.pixelRatio_ = pixelRatio;\n        /**\n         * @private\n         * @type {import(\"../../extent.js\").Extent}\n         */\n        _this.extent_ = extent;\n        /**\n         * @private\n         * @type {import(\"../../transform.js\").Transform}\n         */\n        _this.transform_ = transform;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.viewRotation_ = viewRotation;\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").FillState}\n         */\n        _this.contextFillState_ = null;\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").StrokeState}\n         */\n        _this.contextStrokeState_ = null;\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").TextState}\n         */\n        _this.contextTextState_ = null;\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").FillState}\n         */\n        _this.fillState_ = null;\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").StrokeState}\n         */\n        _this.strokeState_ = null;\n        /**\n         * @private\n         * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n         */\n        _this.image_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.imageAnchorX_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.imageAnchorY_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.imageHeight_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.imageOpacity_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.imageOriginX_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.imageOriginY_ = 0;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.imageRotateWithView_ = false;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.imageRotation_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.imageScale_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.imageWidth_ = 0;\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.text_ = '';\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.textOffsetX_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.textOffsetY_ = 0;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.textRotateWithView_ = false;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.textRotation_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.textScale_ = 0;\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").FillState}\n         */\n        _this.textFillState_ = null;\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").StrokeState}\n         */\n        _this.textStrokeState_ = null;\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").TextState}\n         */\n        _this.textState_ = null;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.pixelCoordinates_ = [];\n        /**\n         * @private\n         * @type {import(\"../../transform.js\").Transform}\n         */\n        _this.tmpLocalTransform_ = createTransform();\n        return _this;\n    }\n    /**\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     * @param {number} offset Offset.\n     * @param {number} end End.\n     * @param {number} stride Stride.\n     * @private\n     */\n    CanvasImmediateRenderer.prototype.drawImages_ = function (flatCoordinates, offset, end, stride) {\n        if (!this.image_) {\n            return;\n        }\n        var pixelCoordinates = transform2D(flatCoordinates, offset, end, 2, this.transform_, this.pixelCoordinates_);\n        var context = this.context_;\n        var localTransform = this.tmpLocalTransform_;\n        var alpha = context.globalAlpha;\n        if (this.imageOpacity_ != 1) {\n            context.globalAlpha = alpha * this.imageOpacity_;\n        }\n        var rotation = this.imageRotation_;\n        if (this.imageRotateWithView_) {\n            rotation += this.viewRotation_;\n        }\n        for (var i = 0, ii = pixelCoordinates.length; i < ii; i += 2) {\n            var x = pixelCoordinates[i] - this.imageAnchorX_;\n            var y = pixelCoordinates[i + 1] - this.imageAnchorY_;\n            if (rotation !== 0 || this.imageScale_ != 1) {\n                var centerX = x + this.imageAnchorX_;\n                var centerY = y + this.imageAnchorY_;\n                composeTransform(localTransform, centerX, centerY, this.imageScale_, this.imageScale_, rotation, -centerX, -centerY);\n                context.setTransform.apply(context, localTransform);\n            }\n            context.drawImage(this.image_, this.imageOriginX_, this.imageOriginY_, this.imageWidth_, this.imageHeight_, x, y, this.imageWidth_, this.imageHeight_);\n        }\n        if (rotation !== 0 || this.imageScale_ != 1) {\n            context.setTransform(1, 0, 0, 1, 0, 0);\n        }\n        if (this.imageOpacity_ != 1) {\n            context.globalAlpha = alpha;\n        }\n    };\n    /**\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     * @param {number} offset Offset.\n     * @param {number} end End.\n     * @param {number} stride Stride.\n     * @private\n     */\n    CanvasImmediateRenderer.prototype.drawText_ = function (flatCoordinates, offset, end, stride) {\n        if (!this.textState_ || this.text_ === '') {\n            return;\n        }\n        if (this.textFillState_) {\n            this.setContextFillState_(this.textFillState_);\n        }\n        if (this.textStrokeState_) {\n            this.setContextStrokeState_(this.textStrokeState_);\n        }\n        this.setContextTextState_(this.textState_);\n        var pixelCoordinates = transform2D(flatCoordinates, offset, end, stride, this.transform_, this.pixelCoordinates_);\n        var context = this.context_;\n        var rotation = this.textRotation_;\n        if (this.textRotateWithView_) {\n            rotation += this.viewRotation_;\n        }\n        for (; offset < end; offset += stride) {\n            var x = pixelCoordinates[offset] + this.textOffsetX_;\n            var y = pixelCoordinates[offset + 1] + this.textOffsetY_;\n            if (rotation !== 0 || this.textScale_ != 1) {\n                var localTransform = composeTransform(this.tmpLocalTransform_, x, y, this.textScale_, this.textScale_, rotation, -x, -y);\n                context.setTransform.apply(context, localTransform);\n            }\n            if (this.textStrokeState_) {\n                context.strokeText(this.text_, x, y);\n            }\n            if (this.textFillState_) {\n                context.fillText(this.text_, x, y);\n            }\n        }\n        if (rotation !== 0 || this.textScale_ != 1) {\n            context.setTransform(1, 0, 0, 1, 0, 0);\n        }\n    };\n    /**\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     * @param {number} offset Offset.\n     * @param {number} end End.\n     * @param {number} stride Stride.\n     * @param {boolean} close Close.\n     * @private\n     * @return {number} end End.\n     */\n    CanvasImmediateRenderer.prototype.moveToLineTo_ = function (flatCoordinates, offset, end, stride, close) {\n        var context = this.context_;\n        var pixelCoordinates = transform2D(flatCoordinates, offset, end, stride, this.transform_, this.pixelCoordinates_);\n        context.moveTo(pixelCoordinates[0], pixelCoordinates[1]);\n        var length = pixelCoordinates.length;\n        if (close) {\n            length -= 2;\n        }\n        for (var i = 2; i < length; i += 2) {\n            context.lineTo(pixelCoordinates[i], pixelCoordinates[i + 1]);\n        }\n        if (close) {\n            context.closePath();\n        }\n        return end;\n    };\n    /**\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     * @param {number} offset Offset.\n     * @param {Array<number>} ends Ends.\n     * @param {number} stride Stride.\n     * @private\n     * @return {number} End.\n     */\n    CanvasImmediateRenderer.prototype.drawRings_ = function (flatCoordinates, offset, ends, stride) {\n        for (var i = 0, ii = ends.length; i < ii; ++i) {\n            offset = this.moveToLineTo_(flatCoordinates, offset, ends[i], stride, true);\n        }\n        return offset;\n    };\n    /**\n     * Render a circle geometry into the canvas.  Rendering is immediate and uses\n     * the current fill and stroke styles.\n     *\n     * @param {import(\"../../geom/Circle.js\").default} geometry Circle geometry.\n     * @override\n     * @api\n     */\n    CanvasImmediateRenderer.prototype.drawCircle = function (geometry) {\n        if (!intersects(this.extent_, geometry.getExtent())) {\n            return;\n        }\n        if (this.fillState_ || this.strokeState_) {\n            if (this.fillState_) {\n                this.setContextFillState_(this.fillState_);\n            }\n            if (this.strokeState_) {\n                this.setContextStrokeState_(this.strokeState_);\n            }\n            var pixelCoordinates = transformGeom2D(geometry, this.transform_, this.pixelCoordinates_);\n            var dx = pixelCoordinates[2] - pixelCoordinates[0];\n            var dy = pixelCoordinates[3] - pixelCoordinates[1];\n            var radius = Math.sqrt(dx * dx + dy * dy);\n            var context = this.context_;\n            context.beginPath();\n            context.arc(pixelCoordinates[0], pixelCoordinates[1], radius, 0, 2 * Math.PI);\n            if (this.fillState_) {\n                context.fill();\n            }\n            if (this.strokeState_) {\n                context.stroke();\n            }\n        }\n        if (this.text_ !== '') {\n            this.drawText_(geometry.getCenter(), 0, 2, 2);\n        }\n    };\n    /**\n     * Set the rendering style.  Note that since this is an immediate rendering API,\n     * any `zIndex` on the provided style will be ignored.\n     *\n     * @param {import(\"../../style/Style.js\").default} style The rendering style.\n     * @override\n     * @api\n     */\n    CanvasImmediateRenderer.prototype.setStyle = function (style) {\n        this.setFillStrokeStyle(style.getFill(), style.getStroke());\n        this.setImageStyle(style.getImage());\n        this.setTextStyle(style.getText());\n    };\n    /**\n     * Render a geometry into the canvas.  Call\n     * {@link module:ol/render/canvas/Immediate#setStyle} first to set the rendering style.\n     *\n     * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry The geometry to render.\n     * @override\n     * @api\n     */\n    CanvasImmediateRenderer.prototype.drawGeometry = function (geometry) {\n        var type = geometry.getType();\n        switch (type) {\n            case GeometryType.POINT:\n                this.drawPoint(/** @type {import(\"../../geom/Point.js\").default} */ (geometry));\n                break;\n            case GeometryType.LINE_STRING:\n                this.drawLineString(/** @type {import(\"../../geom/LineString.js\").default} */ (geometry));\n                break;\n            case GeometryType.POLYGON:\n                this.drawPolygon(/** @type {import(\"../../geom/Polygon.js\").default} */ (geometry));\n                break;\n            case GeometryType.MULTI_POINT:\n                this.drawMultiPoint(/** @type {import(\"../../geom/MultiPoint.js\").default} */ (geometry));\n                break;\n            case GeometryType.MULTI_LINE_STRING:\n                this.drawMultiLineString(/** @type {import(\"../../geom/MultiLineString.js\").default} */ (geometry));\n                break;\n            case GeometryType.MULTI_POLYGON:\n                this.drawMultiPolygon(/** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry));\n                break;\n            case GeometryType.GEOMETRY_COLLECTION:\n                this.drawGeometryCollection(/** @type {import(\"../../geom/GeometryCollection.js\").default} */ (geometry));\n                break;\n            case GeometryType.CIRCLE:\n                this.drawCircle(/** @type {import(\"../../geom/Circle.js\").default} */ (geometry));\n                break;\n            default:\n        }\n    };\n    /**\n     * Render a feature into the canvas.  Note that any `zIndex` on the provided\n     * style will be ignored - features are rendered immediately in the order that\n     * this method is called.  If you need `zIndex` support, you should be using an\n     * {@link module:ol/layer/Vector~VectorLayer} instead.\n     *\n     * @param {import(\"../../Feature.js\").default} feature Feature.\n     * @param {import(\"../../style/Style.js\").default} style Style.\n     * @override\n     * @api\n     */\n    CanvasImmediateRenderer.prototype.drawFeature = function (feature, style) {\n        var geometry = style.getGeometryFunction()(feature);\n        if (!geometry || !intersects(this.extent_, geometry.getExtent())) {\n            return;\n        }\n        this.setStyle(style);\n        this.drawGeometry(geometry);\n    };\n    /**\n     * Render a GeometryCollection to the canvas.  Rendering is immediate and\n     * uses the current styles appropriate for each geometry in the collection.\n     *\n     * @param {import(\"../../geom/GeometryCollection.js\").default} geometry Geometry collection.\n     * @override\n     */\n    CanvasImmediateRenderer.prototype.drawGeometryCollection = function (geometry) {\n        var geometries = geometry.getGeometriesArray();\n        for (var i = 0, ii = geometries.length; i < ii; ++i) {\n            this.drawGeometry(geometries[i]);\n        }\n    };\n    /**\n     * Render a Point geometry into the canvas.  Rendering is immediate and uses\n     * the current style.\n     *\n     * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} geometry Point geometry.\n     * @override\n     */\n    CanvasImmediateRenderer.prototype.drawPoint = function (geometry) {\n        var flatCoordinates = geometry.getFlatCoordinates();\n        var stride = geometry.getStride();\n        if (this.image_) {\n            this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n        }\n        if (this.text_ !== '') {\n            this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n        }\n    };\n    /**\n     * Render a MultiPoint geometry  into the canvas.  Rendering is immediate and\n     * uses the current style.\n     *\n     * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} geometry MultiPoint geometry.\n     * @override\n     */\n    CanvasImmediateRenderer.prototype.drawMultiPoint = function (geometry) {\n        var flatCoordinates = geometry.getFlatCoordinates();\n        var stride = geometry.getStride();\n        if (this.image_) {\n            this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n        }\n        if (this.text_ !== '') {\n            this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n        }\n    };\n    /**\n     * Render a LineString into the canvas.  Rendering is immediate and uses\n     * the current style.\n     *\n     * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} geometry LineString geometry.\n     * @override\n     */\n    CanvasImmediateRenderer.prototype.drawLineString = function (geometry) {\n        if (!intersects(this.extent_, geometry.getExtent())) {\n            return;\n        }\n        if (this.strokeState_) {\n            this.setContextStrokeState_(this.strokeState_);\n            var context = this.context_;\n            var flatCoordinates = geometry.getFlatCoordinates();\n            context.beginPath();\n            this.moveToLineTo_(flatCoordinates, 0, flatCoordinates.length, geometry.getStride(), false);\n            context.stroke();\n        }\n        if (this.text_ !== '') {\n            var flatMidpoint = geometry.getFlatMidpoint();\n            this.drawText_(flatMidpoint, 0, 2, 2);\n        }\n    };\n    /**\n     * Render a MultiLineString geometry into the canvas.  Rendering is immediate\n     * and uses the current style.\n     *\n     * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} geometry MultiLineString geometry.\n     * @override\n     */\n    CanvasImmediateRenderer.prototype.drawMultiLineString = function (geometry) {\n        var geometryExtent = geometry.getExtent();\n        if (!intersects(this.extent_, geometryExtent)) {\n            return;\n        }\n        if (this.strokeState_) {\n            this.setContextStrokeState_(this.strokeState_);\n            var context = this.context_;\n            var flatCoordinates = geometry.getFlatCoordinates();\n            var offset = 0;\n            var ends = /** @type {Array<number>} */ (geometry.getEnds());\n            var stride = geometry.getStride();\n            context.beginPath();\n            for (var i = 0, ii = ends.length; i < ii; ++i) {\n                offset = this.moveToLineTo_(flatCoordinates, offset, ends[i], stride, false);\n            }\n            context.stroke();\n        }\n        if (this.text_ !== '') {\n            var flatMidpoints = geometry.getFlatMidpoints();\n            this.drawText_(flatMidpoints, 0, flatMidpoints.length, 2);\n        }\n    };\n    /**\n     * Render a Polygon geometry into the canvas.  Rendering is immediate and uses\n     * the current style.\n     *\n     * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} geometry Polygon geometry.\n     * @override\n     */\n    CanvasImmediateRenderer.prototype.drawPolygon = function (geometry) {\n        if (!intersects(this.extent_, geometry.getExtent())) {\n            return;\n        }\n        if (this.strokeState_ || this.fillState_) {\n            if (this.fillState_) {\n                this.setContextFillState_(this.fillState_);\n            }\n            if (this.strokeState_) {\n                this.setContextStrokeState_(this.strokeState_);\n            }\n            var context = this.context_;\n            context.beginPath();\n            this.drawRings_(geometry.getOrientedFlatCoordinates(), 0, /** @type {Array<number>} */ (geometry.getEnds()), geometry.getStride());\n            if (this.fillState_) {\n                context.fill();\n            }\n            if (this.strokeState_) {\n                context.stroke();\n            }\n        }\n        if (this.text_ !== '') {\n            var flatInteriorPoint = geometry.getFlatInteriorPoint();\n            this.drawText_(flatInteriorPoint, 0, 2, 2);\n        }\n    };\n    /**\n     * Render MultiPolygon geometry into the canvas.  Rendering is immediate and\n     * uses the current style.\n     * @param {import(\"../../geom/MultiPolygon.js\").default} geometry MultiPolygon geometry.\n     * @override\n     */\n    CanvasImmediateRenderer.prototype.drawMultiPolygon = function (geometry) {\n        if (!intersects(this.extent_, geometry.getExtent())) {\n            return;\n        }\n        if (this.strokeState_ || this.fillState_) {\n            if (this.fillState_) {\n                this.setContextFillState_(this.fillState_);\n            }\n            if (this.strokeState_) {\n                this.setContextStrokeState_(this.strokeState_);\n            }\n            var context = this.context_;\n            var flatCoordinates = geometry.getOrientedFlatCoordinates();\n            var offset = 0;\n            var endss = geometry.getEndss();\n            var stride = geometry.getStride();\n            context.beginPath();\n            for (var i = 0, ii = endss.length; i < ii; ++i) {\n                var ends = endss[i];\n                offset = this.drawRings_(flatCoordinates, offset, ends, stride);\n            }\n            if (this.fillState_) {\n                context.fill();\n            }\n            if (this.strokeState_) {\n                context.stroke();\n            }\n        }\n        if (this.text_ !== '') {\n            var flatInteriorPoints = geometry.getFlatInteriorPoints();\n            this.drawText_(flatInteriorPoints, 0, flatInteriorPoints.length, 2);\n        }\n    };\n    /**\n     * @param {import(\"../canvas.js\").FillState} fillState Fill state.\n     * @private\n     */\n    CanvasImmediateRenderer.prototype.setContextFillState_ = function (fillState) {\n        var context = this.context_;\n        var contextFillState = this.contextFillState_;\n        if (!contextFillState) {\n            context.fillStyle = fillState.fillStyle;\n            this.contextFillState_ = {\n                fillStyle: fillState.fillStyle\n            };\n        }\n        else {\n            if (contextFillState.fillStyle != fillState.fillStyle) {\n                contextFillState.fillStyle = context.fillStyle = fillState.fillStyle;\n            }\n        }\n    };\n    /**\n     * @param {import(\"../canvas.js\").StrokeState} strokeState Stroke state.\n     * @private\n     */\n    CanvasImmediateRenderer.prototype.setContextStrokeState_ = function (strokeState) {\n        var context = this.context_;\n        var contextStrokeState = this.contextStrokeState_;\n        if (!contextStrokeState) {\n            context.lineCap = /** @type {CanvasLineCap} */ (strokeState.lineCap);\n            if (context.setLineDash) {\n                context.setLineDash(strokeState.lineDash);\n                context.lineDashOffset = strokeState.lineDashOffset;\n            }\n            context.lineJoin = /** @type {CanvasLineJoin} */ (strokeState.lineJoin);\n            context.lineWidth = strokeState.lineWidth;\n            context.miterLimit = strokeState.miterLimit;\n            context.strokeStyle = strokeState.strokeStyle;\n            this.contextStrokeState_ = {\n                lineCap: strokeState.lineCap,\n                lineDash: strokeState.lineDash,\n                lineDashOffset: strokeState.lineDashOffset,\n                lineJoin: strokeState.lineJoin,\n                lineWidth: strokeState.lineWidth,\n                miterLimit: strokeState.miterLimit,\n                strokeStyle: strokeState.strokeStyle\n            };\n        }\n        else {\n            if (contextStrokeState.lineCap != strokeState.lineCap) {\n                contextStrokeState.lineCap = context.lineCap = /** @type {CanvasLineCap} */ (strokeState.lineCap);\n            }\n            if (context.setLineDash) {\n                if (!equals(contextStrokeState.lineDash, strokeState.lineDash)) {\n                    context.setLineDash(contextStrokeState.lineDash = strokeState.lineDash);\n                }\n                if (contextStrokeState.lineDashOffset != strokeState.lineDashOffset) {\n                    contextStrokeState.lineDashOffset = context.lineDashOffset =\n                        strokeState.lineDashOffset;\n                }\n            }\n            if (contextStrokeState.lineJoin != strokeState.lineJoin) {\n                contextStrokeState.lineJoin = context.lineJoin = /** @type {CanvasLineJoin} */ (strokeState.lineJoin);\n            }\n            if (contextStrokeState.lineWidth != strokeState.lineWidth) {\n                contextStrokeState.lineWidth = context.lineWidth = strokeState.lineWidth;\n            }\n            if (contextStrokeState.miterLimit != strokeState.miterLimit) {\n                contextStrokeState.miterLimit = context.miterLimit =\n                    strokeState.miterLimit;\n            }\n            if (contextStrokeState.strokeStyle != strokeState.strokeStyle) {\n                contextStrokeState.strokeStyle = context.strokeStyle =\n                    strokeState.strokeStyle;\n            }\n        }\n    };\n    /**\n     * @param {import(\"../canvas.js\").TextState} textState Text state.\n     * @private\n     */\n    CanvasImmediateRenderer.prototype.setContextTextState_ = function (textState) {\n        var context = this.context_;\n        var contextTextState = this.contextTextState_;\n        var textAlign = textState.textAlign ?\n            textState.textAlign : defaultTextAlign;\n        if (!contextTextState) {\n            context.font = textState.font;\n            context.textAlign = /** @type {CanvasTextAlign} */ (textAlign);\n            context.textBaseline = /** @type {CanvasTextBaseline} */ (textState.textBaseline);\n            this.contextTextState_ = {\n                font: textState.font,\n                textAlign: textAlign,\n                textBaseline: textState.textBaseline\n            };\n        }\n        else {\n            if (contextTextState.font != textState.font) {\n                contextTextState.font = context.font = textState.font;\n            }\n            if (contextTextState.textAlign != textAlign) {\n                contextTextState.textAlign = context.textAlign = /** @type {CanvasTextAlign} */ (textAlign);\n            }\n            if (contextTextState.textBaseline != textState.textBaseline) {\n                contextTextState.textBaseline = context.textBaseline =\n                    /** @type {CanvasTextBaseline} */ (textState.textBaseline);\n            }\n        }\n    };\n    /**\n     * Set the fill and stroke style for subsequent draw operations.  To clear\n     * either fill or stroke styles, pass null for the appropriate parameter.\n     *\n     * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n     * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n     * @override\n     */\n    CanvasImmediateRenderer.prototype.setFillStrokeStyle = function (fillStyle, strokeStyle) {\n        if (!fillStyle) {\n            this.fillState_ = null;\n        }\n        else {\n            var fillStyleColor = fillStyle.getColor();\n            this.fillState_ = {\n                fillStyle: asColorLike(fillStyleColor ?\n                    fillStyleColor : defaultFillStyle)\n            };\n        }\n        if (!strokeStyle) {\n            this.strokeState_ = null;\n        }\n        else {\n            var strokeStyleColor = strokeStyle.getColor();\n            var strokeStyleLineCap = strokeStyle.getLineCap();\n            var strokeStyleLineDash = strokeStyle.getLineDash();\n            var strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n            var strokeStyleLineJoin = strokeStyle.getLineJoin();\n            var strokeStyleWidth = strokeStyle.getWidth();\n            var strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n            this.strokeState_ = {\n                lineCap: strokeStyleLineCap !== undefined ?\n                    strokeStyleLineCap : defaultLineCap,\n                lineDash: strokeStyleLineDash ?\n                    strokeStyleLineDash : defaultLineDash,\n                lineDashOffset: strokeStyleLineDashOffset ?\n                    strokeStyleLineDashOffset : defaultLineDashOffset,\n                lineJoin: strokeStyleLineJoin !== undefined ?\n                    strokeStyleLineJoin : defaultLineJoin,\n                lineWidth: this.pixelRatio_ * (strokeStyleWidth !== undefined ?\n                    strokeStyleWidth : defaultLineWidth),\n                miterLimit: strokeStyleMiterLimit !== undefined ?\n                    strokeStyleMiterLimit : defaultMiterLimit,\n                strokeStyle: asColorLike(strokeStyleColor ?\n                    strokeStyleColor : defaultStrokeStyle)\n            };\n        }\n    };\n    /**\n     * Set the image style for subsequent draw operations.  Pass null to remove\n     * the image style.\n     *\n     * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n     * @override\n     */\n    CanvasImmediateRenderer.prototype.setImageStyle = function (imageStyle) {\n        if (!imageStyle) {\n            this.image_ = null;\n        }\n        else {\n            var imageAnchor = imageStyle.getAnchor();\n            // FIXME pixel ratio\n            var imageImage = imageStyle.getImage(1);\n            var imageOrigin = imageStyle.getOrigin();\n            var imageSize = imageStyle.getSize();\n            this.imageAnchorX_ = imageAnchor[0];\n            this.imageAnchorY_ = imageAnchor[1];\n            this.imageHeight_ = imageSize[1];\n            this.image_ = imageImage;\n            this.imageOpacity_ = imageStyle.getOpacity();\n            this.imageOriginX_ = imageOrigin[0];\n            this.imageOriginY_ = imageOrigin[1];\n            this.imageRotateWithView_ = imageStyle.getRotateWithView();\n            this.imageRotation_ = imageStyle.getRotation();\n            this.imageScale_ = imageStyle.getScale() * this.pixelRatio_;\n            this.imageWidth_ = imageSize[0];\n        }\n    };\n    /**\n     * Set the text style for subsequent draw operations.  Pass null to\n     * remove the text style.\n     *\n     * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n     * @override\n     */\n    CanvasImmediateRenderer.prototype.setTextStyle = function (textStyle) {\n        if (!textStyle) {\n            this.text_ = '';\n        }\n        else {\n            var textFillStyle = textStyle.getFill();\n            if (!textFillStyle) {\n                this.textFillState_ = null;\n            }\n            else {\n                var textFillStyleColor = textFillStyle.getColor();\n                this.textFillState_ = {\n                    fillStyle: asColorLike(textFillStyleColor ?\n                        textFillStyleColor : defaultFillStyle)\n                };\n            }\n            var textStrokeStyle = textStyle.getStroke();\n            if (!textStrokeStyle) {\n                this.textStrokeState_ = null;\n            }\n            else {\n                var textStrokeStyleColor = textStrokeStyle.getColor();\n                var textStrokeStyleLineCap = textStrokeStyle.getLineCap();\n                var textStrokeStyleLineDash = textStrokeStyle.getLineDash();\n                var textStrokeStyleLineDashOffset = textStrokeStyle.getLineDashOffset();\n                var textStrokeStyleLineJoin = textStrokeStyle.getLineJoin();\n                var textStrokeStyleWidth = textStrokeStyle.getWidth();\n                var textStrokeStyleMiterLimit = textStrokeStyle.getMiterLimit();\n                this.textStrokeState_ = {\n                    lineCap: textStrokeStyleLineCap !== undefined ?\n                        textStrokeStyleLineCap : defaultLineCap,\n                    lineDash: textStrokeStyleLineDash ?\n                        textStrokeStyleLineDash : defaultLineDash,\n                    lineDashOffset: textStrokeStyleLineDashOffset ?\n                        textStrokeStyleLineDashOffset : defaultLineDashOffset,\n                    lineJoin: textStrokeStyleLineJoin !== undefined ?\n                        textStrokeStyleLineJoin : defaultLineJoin,\n                    lineWidth: textStrokeStyleWidth !== undefined ?\n                        textStrokeStyleWidth : defaultLineWidth,\n                    miterLimit: textStrokeStyleMiterLimit !== undefined ?\n                        textStrokeStyleMiterLimit : defaultMiterLimit,\n                    strokeStyle: asColorLike(textStrokeStyleColor ?\n                        textStrokeStyleColor : defaultStrokeStyle)\n                };\n            }\n            var textFont = textStyle.getFont();\n            var textOffsetX = textStyle.getOffsetX();\n            var textOffsetY = textStyle.getOffsetY();\n            var textRotateWithView = textStyle.getRotateWithView();\n            var textRotation = textStyle.getRotation();\n            var textScale = textStyle.getScale();\n            var textText = textStyle.getText();\n            var textTextAlign = textStyle.getTextAlign();\n            var textTextBaseline = textStyle.getTextBaseline();\n            this.textState_ = {\n                font: textFont !== undefined ?\n                    textFont : defaultFont,\n                textAlign: textTextAlign !== undefined ?\n                    textTextAlign : defaultTextAlign,\n                textBaseline: textTextBaseline !== undefined ?\n                    textTextBaseline : defaultTextBaseline\n            };\n            this.text_ = textText !== undefined ? textText : '';\n            this.textOffsetX_ =\n                textOffsetX !== undefined ? (this.pixelRatio_ * textOffsetX) : 0;\n            this.textOffsetY_ =\n                textOffsetY !== undefined ? (this.pixelRatio_ * textOffsetY) : 0;\n            this.textRotateWithView_ = textRotateWithView !== undefined ? textRotateWithView : false;\n            this.textRotation_ = textRotation !== undefined ? textRotation : 0;\n            this.textScale_ = this.pixelRatio_ * (textScale !== undefined ?\n                textScale : 1);\n        }\n    };\n    return CanvasImmediateRenderer;\n}(VectorContext));\nexport default CanvasImmediateRenderer;\n//# sourceMappingURL=Immediate.js.map","/**\n * @module ol/render\n */\nimport { DEVICE_PIXEL_RATIO } from './has.js';\nimport { apply as applyTransform, create as createTransform, multiply as multiplyTransform, scale as scaleTransform } from './transform.js';\nimport CanvasImmediateRenderer from './render/canvas/Immediate.js';\n/**\n * @typedef {Object} State\n * @property {CanvasRenderingContext2D} context Canvas context that the layer is being rendered to.\n * @property {import(\"./Feature.js\").FeatureLike} feature\n * @property {import(\"./geom/SimpleGeometry.js\").default} geometry\n * @property {number} pixelRatio Pixel ratio used by the layer renderer.\n * @property {number} resolution Resolution that the render batch was created and optimized for.\n * This is not the view's resolution that is being rendered.\n * @property {number} rotation Rotation of the rendered layer in radians.\n */\n/**\n * A function to be used when sorting features before rendering.\n * It takes two instances of {@link module:ol/Feature} or\n * {@link module:ol/render/Feature} and returns a `{number}`.\n *\n * @typedef {function(import(\"./Feature.js\").FeatureLike, import(\"./Feature.js\").FeatureLike):number} OrderFunction\n */\n/**\n * @typedef {Object} ToContextOptions\n * @property {import(\"./size.js\").Size} [size] Desired size of the canvas in css\n * pixels. When provided, both canvas and css size will be set according to the\n * `pixelRatio`. If not provided, the current canvas and css sizes will not be\n * altered.\n * @property {number} [pixelRatio=window.devicePixelRatio] Pixel ratio (canvas\n * pixel to css pixel ratio) for the canvas.\n */\n/**\n * Binds a Canvas Immediate API to a canvas context, to allow drawing geometries\n * to the context's canvas.\n *\n * The units for geometry coordinates are css pixels relative to the top left\n * corner of the canvas element.\n * ```js\n * import {toContext} from 'ol/render';\n * import Fill from 'ol/style/Fill';\n * import Polygon from 'ol/geom/Polygon';\n *\n * var canvas = document.createElement('canvas');\n * var render = toContext(canvas.getContext('2d'),\n *     { size: [100, 100] });\n * render.setFillStrokeStyle(new Fill({ color: blue }));\n * render.drawPolygon(\n *     new Polygon([[[0, 0], [100, 100], [100, 0], [0, 0]]]));\n * ```\n *\n * @param {CanvasRenderingContext2D} context Canvas context.\n * @param {ToContextOptions=} opt_options Options.\n * @return {CanvasImmediateRenderer} Canvas Immediate.\n * @api\n */\nexport function toContext(context, opt_options) {\n    var canvas = context.canvas;\n    var options = opt_options ? opt_options : {};\n    var pixelRatio = options.pixelRatio || DEVICE_PIXEL_RATIO;\n    var size = options.size;\n    if (size) {\n        canvas.width = size[0] * pixelRatio;\n        canvas.height = size[1] * pixelRatio;\n        canvas.style.width = size[0] + 'px';\n        canvas.style.height = size[1] + 'px';\n    }\n    var extent = [0, 0, canvas.width, canvas.height];\n    var transform = scaleTransform(createTransform(), pixelRatio, pixelRatio);\n    return new CanvasImmediateRenderer(context, pixelRatio, extent, transform, 0);\n}\n/**\n * Gets a vector context for drawing to the event's canvas.\n * @param {import(\"./render/Event.js\").default} event Render event.\n * @returns {CanvasImmediateRenderer} Vector context.\n * @api\n */\nexport function getVectorContext(event) {\n    var frameState = event.frameState;\n    var transform = multiplyTransform(event.inversePixelTransform.slice(), frameState.coordinateToPixelTransform);\n    return new CanvasImmediateRenderer(event.context, frameState.pixelRatio, frameState.extent, transform, frameState.viewState.rotation);\n}\n/**\n * Gets the pixel of the event's canvas context from the map viewport's CSS pixel.\n * @param {import(\"./render/Event.js\").default} event Render event.\n * @param {import(\"./pixel.js\").Pixel} pixel CSS pixel relative to the top-left\n * corner of the map viewport.\n * @returns {import(\"./pixel.js\").Pixel} Pixel on the event's canvas context.\n * @api\n */\nexport function getRenderPixel(event, pixel) {\n    var result = pixel.slice(0);\n    applyTransform(event.inversePixelTransform.slice(), result);\n    return result;\n}\n/**\n * @param {import(\"./PluggableMap.js\").FrameState} frameState Frame state.\n * @param {?} declutterTree Declutter tree.\n * @returns {?} Declutter tree.\n */\nexport function renderDeclutterItems(frameState, declutterTree) {\n    if (declutterTree) {\n        declutterTree.clear();\n    }\n    var items = frameState.declutterItems;\n    for (var z = items.length - 1; z >= 0; --z) {\n        var zIndexItems = items[z];\n        for (var i = 0, ii = zIndexItems.length; i < ii; i += 3) {\n            declutterTree = zIndexItems[i].renderDeclutter(zIndexItems[i + 1], zIndexItems[i + 2], declutterTree);\n        }\n    }\n    items.length = 0;\n    return declutterTree;\n}\n//# sourceMappingURL=render.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/renderer/Map\n */\nimport { abstract, getUid } from '../util.js';\nimport Disposable from '../Disposable.js';\nimport { listen, unlistenByKey } from '../events.js';\nimport EventType from '../events/EventType.js';\nimport { getWidth } from '../extent.js';\nimport { TRUE } from '../functions.js';\nimport { visibleAtResolution } from '../layer/Layer.js';\nimport { shared as iconImageCache } from '../style/IconImageCache.js';\nimport { compose as composeTransform, makeInverse } from '../transform.js';\nimport { renderDeclutterItems } from '../render.js';\n/**\n * @abstract\n */\nvar MapRenderer = /** @class */ (function (_super) {\n    __extends(MapRenderer, _super);\n    /**\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     */\n    function MapRenderer(map) {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {import(\"../PluggableMap.js\").default}\n         */\n        _this.map_ = map;\n        /**\n         * @private\n         */\n        _this.declutterTree_ = null;\n        /**\n         * @private\n         * @type {!Object<string, import(\"./Layer.js\").default>}\n         */\n        _this.layerRenderers_ = {};\n        /**\n         * @private\n         * @type {Object<string, import(\"../events.js\").EventsKey>}\n         */\n        _this.layerRendererListeners_ = {};\n        return _this;\n    }\n    /**\n     * @abstract\n     * @param {import(\"../render/EventType.js\").default} type Event type.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     */\n    MapRenderer.prototype.dispatchRenderEvent = function (type, frameState) {\n        abstract();\n    };\n    /**\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n     * @protected\n     */\n    MapRenderer.prototype.calculateMatrices2D = function (frameState) {\n        var viewState = frameState.viewState;\n        var coordinateToPixelTransform = frameState.coordinateToPixelTransform;\n        var pixelToCoordinateTransform = frameState.pixelToCoordinateTransform;\n        composeTransform(coordinateToPixelTransform, frameState.size[0] / 2, frameState.size[1] / 2, 1 / viewState.resolution, -1 / viewState.resolution, -viewState.rotation, -viewState.center[0], -viewState.center[1]);\n        makeInverse(pixelToCoordinateTransform, coordinateToPixelTransform);\n    };\n    /**\n     * Removes all layer renderers.\n     */\n    MapRenderer.prototype.removeLayerRenderers = function () {\n        for (var key in this.layerRenderers_) {\n            this.removeLayerRendererByKey_(key).dispose();\n        }\n    };\n    /**\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @param {function(this: S, import(\"../Feature.js\").FeatureLike,\n     *     import(\"../layer/Layer.js\").default): T} callback Feature callback.\n     * @param {S} thisArg Value to use as `this` when executing `callback`.\n     * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n     *     function, only layers which are visible and for which this function\n     *     returns `true` will be tested for features.  By default, all visible\n     *     layers will be tested.\n     * @param {U} thisArg2 Value to use as `this` when executing `layerFilter`.\n     * @return {T|undefined} Callback result.\n     * @template S,T,U\n     */\n    MapRenderer.prototype.forEachFeatureAtCoordinate = function (coordinate, frameState, hitTolerance, callback, thisArg, layerFilter, thisArg2) {\n        var result;\n        var viewState = frameState.viewState;\n        var viewResolution = viewState.resolution;\n        /**\n         * @param {boolean} managed Managed layer.\n         * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n         * @param {import(\"../layer/Layer.js\").default} layer Layer.\n         * @return {?} Callback result.\n         */\n        function forEachFeatureAtCoordinate(managed, feature, layer) {\n            if (!(getUid(feature) in frameState.skippedFeatureUids && !managed)) {\n                return callback.call(thisArg, feature, managed ? layer : null);\n            }\n        }\n        var projection = viewState.projection;\n        var translatedCoordinate = coordinate;\n        if (projection.canWrapX()) {\n            var projectionExtent = projection.getExtent();\n            var worldWidth = getWidth(projectionExtent);\n            var x = coordinate[0];\n            if (x < projectionExtent[0] || x > projectionExtent[2]) {\n                var worldsAway = Math.ceil((projectionExtent[0] - x) / worldWidth);\n                translatedCoordinate = [x + worldWidth * worldsAway, coordinate[1]];\n            }\n        }\n        var layerStates = frameState.layerStatesArray;\n        var numLayers = layerStates.length;\n        var declutteredFeatures;\n        if (this.declutterTree_) {\n            declutteredFeatures = this.declutterTree_.all().map(function (entry) {\n                return entry.value;\n            });\n        }\n        var i;\n        for (i = numLayers - 1; i >= 0; --i) {\n            var layerState = layerStates[i];\n            var layer = /** @type {import(\"../layer/Layer.js\").default} */ (layerState.layer);\n            if (visibleAtResolution(layerState, viewResolution) && layerFilter.call(thisArg2, layer)) {\n                var layerRenderer = this.getLayerRenderer(layer);\n                var source = layer.getSource();\n                if (layerRenderer && source) {\n                    var callback_1 = forEachFeatureAtCoordinate.bind(null, layerState.managed);\n                    result = layerRenderer.forEachFeatureAtCoordinate(source.getWrapX() ? translatedCoordinate : coordinate, frameState, hitTolerance, callback_1, declutteredFeatures);\n                }\n                if (result) {\n                    return result;\n                }\n            }\n        }\n        return undefined;\n    };\n    /**\n     * @abstract\n     * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @param {function(this: S, import(\"../layer/Layer.js\").default, (Uint8ClampedArray|Uint8Array)): T} callback Layer\n     *     callback.\n     * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n     *     function, only layers which are visible and for which this function\n     *     returns `true` will be tested for features.  By default, all visible\n     *     layers will be tested.\n     * @return {T|undefined} Callback result.\n     * @template S,T,U\n     */\n    MapRenderer.prototype.forEachLayerAtPixel = function (pixel, frameState, hitTolerance, callback, layerFilter) {\n        return abstract();\n    };\n    /**\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n     *     function, only layers which are visible and for which this function\n     *     returns `true` will be tested for features.  By default, all visible\n     *     layers will be tested.\n     * @param {U} thisArg Value to use as `this` when executing `layerFilter`.\n     * @return {boolean} Is there a feature at the given coordinate?\n     * @template U\n     */\n    MapRenderer.prototype.hasFeatureAtCoordinate = function (coordinate, frameState, hitTolerance, layerFilter, thisArg) {\n        var hasFeature = this.forEachFeatureAtCoordinate(coordinate, frameState, hitTolerance, TRUE, this, layerFilter, thisArg);\n        return hasFeature !== undefined;\n    };\n    /**\n     * @param {import(\"../layer/Layer.js\").default} layer Layer.\n     * @protected\n     * @return {import(\"./Layer.js\").default} Layer renderer. May return null.\n     */\n    MapRenderer.prototype.getLayerRenderer = function (layer) {\n        var layerKey = getUid(layer);\n        if (layerKey in this.layerRenderers_) {\n            return this.layerRenderers_[layerKey];\n        }\n        var renderer = layer.getRenderer();\n        if (!renderer) {\n            return null;\n        }\n        this.layerRenderers_[layerKey] = renderer;\n        this.layerRendererListeners_[layerKey] = listen(renderer, EventType.CHANGE, this.handleLayerRendererChange_, this);\n        return renderer;\n    };\n    /**\n     * @protected\n     * @return {Object<string, import(\"./Layer.js\").default>} Layer renderers.\n     */\n    MapRenderer.prototype.getLayerRenderers = function () {\n        return this.layerRenderers_;\n    };\n    /**\n     * @return {import(\"../PluggableMap.js\").default} Map.\n     */\n    MapRenderer.prototype.getMap = function () {\n        return this.map_;\n    };\n    /**\n     * Handle changes in a layer renderer.\n     * @private\n     */\n    MapRenderer.prototype.handleLayerRendererChange_ = function () {\n        this.map_.render();\n    };\n    /**\n     * @param {string} layerKey Layer key.\n     * @return {import(\"./Layer.js\").default} Layer renderer.\n     * @private\n     */\n    MapRenderer.prototype.removeLayerRendererByKey_ = function (layerKey) {\n        var layerRenderer = this.layerRenderers_[layerKey];\n        delete this.layerRenderers_[layerKey];\n        unlistenByKey(this.layerRendererListeners_[layerKey]);\n        delete this.layerRendererListeners_[layerKey];\n        return layerRenderer;\n    };\n    /**\n     * Render.\n     * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     */\n    MapRenderer.prototype.renderFrame = function (frameState) {\n        this.declutterTree_ = renderDeclutterItems(frameState, this.declutterTree_);\n    };\n    /**\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     * @protected\n     */\n    MapRenderer.prototype.scheduleExpireIconCache = function (frameState) {\n        if (iconImageCache.canExpireCache()) {\n            frameState.postRenderFunctions.push(expireIconCache);\n        }\n    };\n    /**\n     * @param {!import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     * @protected\n     */\n    MapRenderer.prototype.scheduleRemoveUnusedLayerRenderers = function (frameState) {\n        var layerStatesMap = getLayerStatesMap(frameState.layerStatesArray);\n        var _loop_1 = function (layerKey) {\n            if (!(layerKey in layerStatesMap)) {\n                frameState.postRenderFunctions.push(function () {\n                    this.removeLayerRendererByKey_(layerKey).dispose();\n                }.bind(this_1));\n            }\n        };\n        var this_1 = this;\n        for (var layerKey in this.layerRenderers_) {\n            _loop_1(layerKey);\n        }\n    };\n    return MapRenderer;\n}(Disposable));\n/**\n * @param {import(\"../PluggableMap.js\").default} map Map.\n * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n */\nfunction expireIconCache(map, frameState) {\n    iconImageCache.expire();\n}\n/**\n * @param {Array<import(\"../layer/Layer.js\").State>} layerStatesArray Layer states array.\n * @return {Object<string, import(\"../layer/Layer.js\").State>} States mapped by layer uid.\n */\nfunction getLayerStatesMap(layerStatesArray) {\n    return layerStatesArray.reduce(function (acc, state) {\n        acc[getUid(state.layer)] = state;\n        return acc;\n    }, {});\n}\nexport default MapRenderer;\n//# sourceMappingURL=Map.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/renderer/Composite\n */\nimport { CLASS_UNSELECTABLE } from '../css.js';\nimport { visibleAtResolution } from '../layer/Layer.js';\nimport RenderEvent from '../render/Event.js';\nimport RenderEventType from '../render/EventType.js';\nimport MapRenderer from './Map.js';\nimport SourceState from '../source/State.js';\nimport { replaceChildren } from '../dom.js';\n/**\n * @classdesc\n * Canvas map renderer.\n * @api\n */\nvar CompositeMapRenderer = /** @class */ (function (_super) {\n    __extends(CompositeMapRenderer, _super);\n    /**\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     */\n    function CompositeMapRenderer(map) {\n        var _this = _super.call(this, map) || this;\n        /**\n         * @private\n         * @type {HTMLDivElement}\n         */\n        _this.element_ = document.createElement('div');\n        var style = _this.element_.style;\n        style.position = 'absolute';\n        style.width = '100%';\n        style.height = '100%';\n        style.zIndex = '0';\n        _this.element_.className = CLASS_UNSELECTABLE + ' ol-layers';\n        var container = map.getViewport();\n        container.insertBefore(_this.element_, container.firstChild || null);\n        /**\n         * @private\n         * @type {Array<HTMLElement>}\n         */\n        _this.children_ = [];\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.renderedVisible_ = true;\n        return _this;\n    }\n    /**\n     * @param {import(\"../render/EventType.js\").default} type Event type.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     */\n    CompositeMapRenderer.prototype.dispatchRenderEvent = function (type, frameState) {\n        var map = this.getMap();\n        if (map.hasListener(type)) {\n            var event_1 = new RenderEvent(type, undefined, frameState);\n            map.dispatchEvent(event_1);\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    CompositeMapRenderer.prototype.renderFrame = function (frameState) {\n        if (!frameState) {\n            if (this.renderedVisible_) {\n                this.element_.style.display = 'none';\n                this.renderedVisible_ = false;\n            }\n            return;\n        }\n        this.calculateMatrices2D(frameState);\n        this.dispatchRenderEvent(RenderEventType.PRECOMPOSE, frameState);\n        var layerStatesArray = frameState.layerStatesArray;\n        var viewResolution = frameState.viewState.resolution;\n        this.children_.length = 0;\n        for (var i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n            var layerState = layerStatesArray[i];\n            if (!visibleAtResolution(layerState, viewResolution) || layerState.sourceState != SourceState.READY) {\n                continue;\n            }\n            var layer = layerState.layer;\n            var element = layer.render(frameState);\n            if (element) {\n                var zIndex = layerState.zIndex;\n                if (zIndex !== element.style.zIndex) {\n                    element.style.zIndex = zIndex === Infinity ? Number.MAX_SAFE_INTEGER : zIndex;\n                }\n                this.children_.push(element);\n            }\n        }\n        _super.prototype.renderFrame.call(this, frameState);\n        replaceChildren(this.element_, this.children_);\n        this.dispatchRenderEvent(RenderEventType.POSTCOMPOSE, frameState);\n        if (!this.renderedVisible_) {\n            this.element_.style.display = '';\n            this.renderedVisible_ = true;\n        }\n        this.scheduleRemoveUnusedLayerRenderers(frameState);\n        this.scheduleExpireIconCache(frameState);\n    };\n    /**\n     * @inheritDoc\n     */\n    CompositeMapRenderer.prototype.forEachLayerAtPixel = function (pixel, frameState, hitTolerance, callback, layerFilter) {\n        var viewState = frameState.viewState;\n        var viewResolution = viewState.resolution;\n        var layerStates = frameState.layerStatesArray;\n        var numLayers = layerStates.length;\n        for (var i = numLayers - 1; i >= 0; --i) {\n            var layerState = layerStates[i];\n            var layer = layerState.layer;\n            if (visibleAtResolution(layerState, viewResolution) && layerFilter(layer)) {\n                var layerRenderer = this.getLayerRenderer(layer);\n                if (!layerRenderer) {\n                    continue;\n                }\n                var data = layerRenderer.getDataAtPixel(pixel, frameState, hitTolerance);\n                if (data) {\n                    var result = callback(layer, data);\n                    if (result) {\n                        return result;\n                    }\n                }\n            }\n        }\n        return undefined;\n    };\n    return CompositeMapRenderer;\n}(MapRenderer));\nexport default CompositeMapRenderer;\n//# sourceMappingURL=Composite.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/Map\n */\nimport PluggableMap from './PluggableMap.js';\nimport { defaults as defaultControls } from './control/util.js';\nimport { defaults as defaultInteractions } from './interaction.js';\nimport { assign } from './obj.js';\nimport CompositeMapRenderer from './renderer/Composite.js';\n/**\n * @classdesc\n * The map is the core component of OpenLayers. For a map to render, a view,\n * one or more layers, and a target container are needed:\n *\n *     import Map from 'ol/Map';\n *     import View from 'ol/View';\n *     import TileLayer from 'ol/layer/Tile';\n *     import OSM from 'ol/source/OSM';\n *\n *     var map = new Map({\n *       view: new View({\n *         center: [0, 0],\n *         zoom: 1\n *       }),\n *       layers: [\n *         new TileLayer({\n *           source: new OSM()\n *         })\n *       ],\n *       target: 'map'\n *     });\n *\n * The above snippet creates a map using a {@link module:ol/layer/Tile} to\n * display {@link module:ol/source/OSM~OSM} OSM data and render it to a DOM\n * element with the id `map`.\n *\n * The constructor places a viewport container (with CSS class name\n * `ol-viewport`) in the target element (see `getViewport()`), and then two\n * further elements within the viewport: one with CSS class name\n * `ol-overlaycontainer-stopevent` for controls and some overlays, and one with\n * CSS class name `ol-overlaycontainer` for other overlays (see the `stopEvent`\n * option of {@link module:ol/Overlay~Overlay} for the difference). The map\n * itself is placed in a further element within the viewport.\n *\n * Layers are stored as a {@link module:ol/Collection~Collection} in\n * layerGroups. A top-level group is provided by the library. This is what is\n * accessed by `getLayerGroup` and `setLayerGroup`. Layers entered in the\n * options are added to this group, and `addLayer` and `removeLayer` change the\n * layer collection in the group. `getLayers` is a convenience function for\n * `getLayerGroup().getLayers()`. Note that {@link module:ol/layer/Group~Group}\n * is a subclass of {@link module:ol/layer/Base}, so layers entered in the\n * options or added with `addLayer` can be groups, which can contain further\n * groups, and so on.\n *\n * @api\n */\nvar Map = /** @class */ (function (_super) {\n    __extends(Map, _super);\n    /**\n     * @param {import(\"./PluggableMap.js\").MapOptions} options Map options.\n     */\n    function Map(options) {\n        var _this = this;\n        options = assign({}, options);\n        if (!options.controls) {\n            options.controls = defaultControls();\n        }\n        if (!options.interactions) {\n            options.interactions = defaultInteractions();\n        }\n        _this = _super.call(this, options) || this;\n        return _this;\n    }\n    Map.prototype.createRenderer = function () {\n        return new CompositeMapRenderer(this);\n    };\n    return Map;\n}(PluggableMap));\nexport default Map;\n//# sourceMappingURL=Map.js.map","/**\n * @module ol/OverlayPositioning\n */\n/**\n * Overlay position: `'bottom-left'`, `'bottom-center'`,  `'bottom-right'`,\n * `'center-left'`, `'center-center'`, `'center-right'`, `'top-left'`,\n * `'top-center'`, `'top-right'`\n * @enum {string}\n */\nexport default {\n    BOTTOM_LEFT: 'bottom-left',\n    BOTTOM_CENTER: 'bottom-center',\n    BOTTOM_RIGHT: 'bottom-right',\n    CENTER_LEFT: 'center-left',\n    CENTER_CENTER: 'center-center',\n    CENTER_RIGHT: 'center-right',\n    TOP_LEFT: 'top-left',\n    TOP_CENTER: 'top-center',\n    TOP_RIGHT: 'top-right'\n};\n//# sourceMappingURL=OverlayPositioning.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/Overlay\n */\nimport MapEventType from './MapEventType.js';\nimport BaseObject, { getChangeEventType } from './Object.js';\nimport OverlayPositioning from './OverlayPositioning.js';\nimport { CLASS_SELECTABLE } from './css.js';\nimport { removeNode, removeChildren, outerWidth, outerHeight } from './dom.js';\nimport { listen, unlistenByKey } from './events.js';\nimport { containsExtent } from './extent.js';\n/**\n * @typedef {Object} Options\n * @property {number|string} [id] Set the overlay id. The overlay id can be used\n * with the {@link module:ol/Map~Map#getOverlayById} method.\n * @property {HTMLElement} [element] The overlay element.\n * @property {Array<number>} [offset=[0, 0]] Offsets in pixels used when positioning\n * the overlay. The first element in the\n * array is the horizontal offset. A positive value shifts the overlay right.\n * The second element in the array is the vertical offset. A positive value\n * shifts the overlay down.\n * @property {import(\"./coordinate.js\").Coordinate} [position] The overlay position\n * in map projection.\n * @property {OverlayPositioning} [positioning='top-left'] Defines how\n * the overlay is actually positioned with respect to its `position` property.\n * Possible values are `'bottom-left'`, `'bottom-center'`, `'bottom-right'`,\n * `'center-left'`, `'center-center'`, `'center-right'`, `'top-left'`,\n * `'top-center'`, and `'top-right'`.\n * @property {boolean} [stopEvent=true] Whether event propagation to the map\n * viewport should be stopped. If `true` the overlay is placed in the same\n * container as that of the controls (CSS class name\n * `ol-overlaycontainer-stopevent`); if `false` it is placed in the container\n * with CSS class name specified by the `className` property.\n * @property {boolean} [insertFirst=true] Whether the overlay is inserted first\n * in the overlay container, or appended. If the overlay is placed in the same\n * container as that of the controls (see the `stopEvent` option) you will\n * probably set `insertFirst` to `true` so the overlay is displayed below the\n * controls.\n * @property {boolean} [autoPan=false] If set to `true` the map is panned when\n * calling `setPosition`, so that the overlay is entirely visible in the current\n * viewport.\n * @property {PanOptions} [autoPanAnimation] The\n * animation options used to pan the overlay into view. This animation is only\n * used when `autoPan` is enabled. A `duration` and `easing` may be provided to\n * customize the animation.\n * @property {number} [autoPanMargin=20] The margin (in pixels) between the\n * overlay and the borders of the map when autopanning.\n * @property {string} [className='ol-overlay-container ol-selectable'] CSS class\n * name.\n */\n/**\n * @typedef {Object} PanOptions\n * @property {number} [duration=1000] The duration of the animation in\n * milliseconds.\n * @property {function(number):number} [easing] The easing function to use. Can\n * be one from {@link module:ol/easing} or a custom function.\n * Default is {@link module:ol/easing~inAndOut}.\n */\n/**\n * @enum {string}\n * @protected\n */\nvar Property = {\n    ELEMENT: 'element',\n    MAP: 'map',\n    OFFSET: 'offset',\n    POSITION: 'position',\n    POSITIONING: 'positioning'\n};\n/**\n * @classdesc\n * An element to be displayed over the map and attached to a single map\n * location.  Like {@link module:ol/control/Control~Control}, Overlays are\n * visible widgets. Unlike Controls, they are not in a fixed position on the\n * screen, but are tied to a geographical coordinate, so panning the map will\n * move an Overlay but not a Control.\n *\n * Example:\n *\n *     import Overlay from 'ol/Overlay';\n *\n *     var popup = new Overlay({\n *       element: document.getElementById('popup')\n *     });\n *     popup.setPosition(coordinate);\n *     map.addOverlay(popup);\n *\n * @api\n */\nvar Overlay = /** @class */ (function (_super) {\n    __extends(Overlay, _super);\n    /**\n     * @param {Options} options Overlay options.\n     */\n    function Overlay(options) {\n        var _this = _super.call(this) || this;\n        /**\n         * @protected\n         * @type {Options}\n         */\n        _this.options = options;\n        /**\n         * @protected\n         * @type {number|string|undefined}\n         */\n        _this.id = options.id;\n        /**\n         * @protected\n         * @type {boolean}\n         */\n        _this.insertFirst = options.insertFirst !== undefined ?\n            options.insertFirst : true;\n        /**\n         * @protected\n         * @type {boolean}\n         */\n        _this.stopEvent = options.stopEvent !== undefined ? options.stopEvent : true;\n        /**\n         * @protected\n         * @type {HTMLElement}\n         */\n        _this.element = document.createElement('div');\n        _this.element.className = options.className !== undefined ?\n            options.className : 'ol-overlay-container ' + CLASS_SELECTABLE;\n        _this.element.style.position = 'absolute';\n        /**\n         * @protected\n         * @type {boolean}\n         */\n        _this.autoPan = options.autoPan !== undefined ? options.autoPan : false;\n        /**\n         * @protected\n         * @type {PanOptions}\n         */\n        _this.autoPanAnimation = options.autoPanAnimation || /** @type {PanOptions} */ ({});\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.autoPanMargin = options.autoPanMargin !== undefined ?\n            options.autoPanMargin : 20;\n        /**\n         * @protected\n         * @type {{bottom_: string,\n         *         left_: string,\n         *         right_: string,\n         *         top_: string,\n         *         visible: boolean}}\n         */\n        _this.rendered = {\n            bottom_: '',\n            left_: '',\n            right_: '',\n            top_: '',\n            visible: true\n        };\n        /**\n         * @protected\n         * @type {?import(\"./events.js\").EventsKey}\n         */\n        _this.mapPostrenderListenerKey = null;\n        listen(_this, getChangeEventType(Property.ELEMENT), _this.handleElementChanged, _this);\n        listen(_this, getChangeEventType(Property.MAP), _this.handleMapChanged, _this);\n        listen(_this, getChangeEventType(Property.OFFSET), _this.handleOffsetChanged, _this);\n        listen(_this, getChangeEventType(Property.POSITION), _this.handlePositionChanged, _this);\n        listen(_this, getChangeEventType(Property.POSITIONING), _this.handlePositioningChanged, _this);\n        if (options.element !== undefined) {\n            _this.setElement(options.element);\n        }\n        _this.setOffset(options.offset !== undefined ? options.offset : [0, 0]);\n        _this.setPositioning(options.positioning !== undefined ?\n            /** @type {OverlayPositioning} */ (options.positioning) :\n            OverlayPositioning.TOP_LEFT);\n        if (options.position !== undefined) {\n            _this.setPosition(options.position);\n        }\n        return _this;\n    }\n    /**\n     * Get the DOM element of this overlay.\n     * @return {HTMLElement|undefined} The Element containing the overlay.\n     * @observable\n     * @api\n     */\n    Overlay.prototype.getElement = function () {\n        return /** @type {HTMLElement|undefined} */ (this.get(Property.ELEMENT));\n    };\n    /**\n     * Get the overlay identifier which is set on constructor.\n     * @return {number|string|undefined} Id.\n     * @api\n     */\n    Overlay.prototype.getId = function () {\n        return this.id;\n    };\n    /**\n     * Get the map associated with this overlay.\n     * @return {import(\"./PluggableMap.js\").default|undefined} The map that the\n     * overlay is part of.\n     * @observable\n     * @api\n     */\n    Overlay.prototype.getMap = function () {\n        return (\n        /** @type {import(\"./PluggableMap.js\").default|undefined} */ (this.get(Property.MAP)));\n    };\n    /**\n     * Get the offset of this overlay.\n     * @return {Array<number>} The offset.\n     * @observable\n     * @api\n     */\n    Overlay.prototype.getOffset = function () {\n        return /** @type {Array<number>} */ (this.get(Property.OFFSET));\n    };\n    /**\n     * Get the current position of this overlay.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} The spatial point that the overlay is\n     *     anchored at.\n     * @observable\n     * @api\n     */\n    Overlay.prototype.getPosition = function () {\n        return (\n        /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (this.get(Property.POSITION)));\n    };\n    /**\n     * Get the current positioning of this overlay.\n     * @return {OverlayPositioning} How the overlay is positioned\n     *     relative to its point on the map.\n     * @observable\n     * @api\n     */\n    Overlay.prototype.getPositioning = function () {\n        return (\n        /** @type {OverlayPositioning} */ (this.get(Property.POSITIONING)));\n    };\n    /**\n     * @protected\n     */\n    Overlay.prototype.handleElementChanged = function () {\n        removeChildren(this.element);\n        var element = this.getElement();\n        if (element) {\n            this.element.appendChild(element);\n        }\n    };\n    /**\n     * @protected\n     */\n    Overlay.prototype.handleMapChanged = function () {\n        if (this.mapPostrenderListenerKey) {\n            removeNode(this.element);\n            unlistenByKey(this.mapPostrenderListenerKey);\n            this.mapPostrenderListenerKey = null;\n        }\n        var map = this.getMap();\n        if (map) {\n            this.mapPostrenderListenerKey = listen(map, MapEventType.POSTRENDER, this.render, this);\n            this.updatePixelPosition();\n            var container = this.stopEvent ?\n                map.getOverlayContainerStopEvent() : map.getOverlayContainer();\n            if (this.insertFirst) {\n                container.insertBefore(this.element, container.childNodes[0] || null);\n            }\n            else {\n                container.appendChild(this.element);\n            }\n        }\n    };\n    /**\n     * @protected\n     */\n    Overlay.prototype.render = function () {\n        this.updatePixelPosition();\n    };\n    /**\n     * @protected\n     */\n    Overlay.prototype.handleOffsetChanged = function () {\n        this.updatePixelPosition();\n    };\n    /**\n     * @protected\n     */\n    Overlay.prototype.handlePositionChanged = function () {\n        this.updatePixelPosition();\n        if (this.get(Property.POSITION) && this.autoPan) {\n            this.panIntoView();\n        }\n    };\n    /**\n     * @protected\n     */\n    Overlay.prototype.handlePositioningChanged = function () {\n        this.updatePixelPosition();\n    };\n    /**\n     * Set the DOM element to be associated with this overlay.\n     * @param {HTMLElement|undefined} element The Element containing the overlay.\n     * @observable\n     * @api\n     */\n    Overlay.prototype.setElement = function (element) {\n        this.set(Property.ELEMENT, element);\n    };\n    /**\n     * Set the map to be associated with this overlay.\n     * @param {import(\"./PluggableMap.js\").default|undefined} map The map that the\n     * overlay is part of.\n     * @observable\n     * @api\n     */\n    Overlay.prototype.setMap = function (map) {\n        this.set(Property.MAP, map);\n    };\n    /**\n     * Set the offset for this overlay.\n     * @param {Array<number>} offset Offset.\n     * @observable\n     * @api\n     */\n    Overlay.prototype.setOffset = function (offset) {\n        this.set(Property.OFFSET, offset);\n    };\n    /**\n     * Set the position for this overlay. If the position is `undefined` the\n     * overlay is hidden.\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} position The spatial point that the overlay\n     *     is anchored at.\n     * @observable\n     * @api\n     */\n    Overlay.prototype.setPosition = function (position) {\n        this.set(Property.POSITION, position);\n    };\n    /**\n     * Pan the map so that the overlay is entirely visible in the current viewport\n     * (if necessary).\n     * @protected\n     */\n    Overlay.prototype.panIntoView = function () {\n        var map = this.getMap();\n        if (!map || !map.getTargetElement()) {\n            return;\n        }\n        var mapRect = this.getRect(map.getTargetElement(), map.getSize());\n        var element = this.getElement();\n        var overlayRect = this.getRect(element, [outerWidth(element), outerHeight(element)]);\n        var margin = this.autoPanMargin;\n        if (!containsExtent(mapRect, overlayRect)) {\n            // the overlay is not completely inside the viewport, so pan the map\n            var offsetLeft = overlayRect[0] - mapRect[0];\n            var offsetRight = mapRect[2] - overlayRect[2];\n            var offsetTop = overlayRect[1] - mapRect[1];\n            var offsetBottom = mapRect[3] - overlayRect[3];\n            var delta = [0, 0];\n            if (offsetLeft < 0) {\n                // move map to the left\n                delta[0] = offsetLeft - margin;\n            }\n            else if (offsetRight < 0) {\n                // move map to the right\n                delta[0] = Math.abs(offsetRight) + margin;\n            }\n            if (offsetTop < 0) {\n                // move map up\n                delta[1] = offsetTop - margin;\n            }\n            else if (offsetBottom < 0) {\n                // move map down\n                delta[1] = Math.abs(offsetBottom) + margin;\n            }\n            if (delta[0] !== 0 || delta[1] !== 0) {\n                var center = /** @type {import(\"./coordinate.js\").Coordinate} */ (map.getView().getCenter());\n                var centerPx = map.getPixelFromCoordinate(center);\n                var newCenterPx = [\n                    centerPx[0] + delta[0],\n                    centerPx[1] + delta[1]\n                ];\n                map.getView().animate({\n                    center: map.getCoordinateFromPixel(newCenterPx),\n                    duration: this.autoPanAnimation.duration,\n                    easing: this.autoPanAnimation.easing\n                });\n            }\n        }\n    };\n    /**\n     * Get the extent of an element relative to the document\n     * @param {HTMLElement|undefined} element The element.\n     * @param {import(\"./size.js\").Size|undefined} size The size of the element.\n     * @return {import(\"./extent.js\").Extent} The extent.\n     * @protected\n     */\n    Overlay.prototype.getRect = function (element, size) {\n        var box = element.getBoundingClientRect();\n        var offsetX = box.left + window.pageXOffset;\n        var offsetY = box.top + window.pageYOffset;\n        return [\n            offsetX,\n            offsetY,\n            offsetX + size[0],\n            offsetY + size[1]\n        ];\n    };\n    /**\n     * Set the positioning for this overlay.\n     * @param {OverlayPositioning} positioning how the overlay is\n     *     positioned relative to its point on the map.\n     * @observable\n     * @api\n     */\n    Overlay.prototype.setPositioning = function (positioning) {\n        this.set(Property.POSITIONING, positioning);\n    };\n    /**\n     * Modify the visibility of the element.\n     * @param {boolean} visible Element visibility.\n     * @protected\n     */\n    Overlay.prototype.setVisible = function (visible) {\n        if (this.rendered.visible !== visible) {\n            this.element.style.display = visible ? '' : 'none';\n            this.rendered.visible = visible;\n        }\n    };\n    /**\n     * Update pixel position.\n     * @protected\n     */\n    Overlay.prototype.updatePixelPosition = function () {\n        var map = this.getMap();\n        var position = this.getPosition();\n        if (!map || !map.isRendered() || !position) {\n            this.setVisible(false);\n            return;\n        }\n        var pixel = map.getPixelFromCoordinate(position);\n        var mapSize = map.getSize();\n        this.updateRenderedPosition(pixel, mapSize);\n    };\n    /**\n     * @param {import(\"./pixel.js\").Pixel} pixel The pixel location.\n     * @param {import(\"./size.js\").Size|undefined} mapSize The map size.\n     * @protected\n     */\n    Overlay.prototype.updateRenderedPosition = function (pixel, mapSize) {\n        var style = this.element.style;\n        var offset = this.getOffset();\n        var positioning = this.getPositioning();\n        this.setVisible(true);\n        var offsetX = offset[0];\n        var offsetY = offset[1];\n        if (positioning == OverlayPositioning.BOTTOM_RIGHT ||\n            positioning == OverlayPositioning.CENTER_RIGHT ||\n            positioning == OverlayPositioning.TOP_RIGHT) {\n            if (this.rendered.left_ !== '') {\n                this.rendered.left_ = style.left = '';\n            }\n            var right = Math.round(mapSize[0] - pixel[0] - offsetX) + 'px';\n            if (this.rendered.right_ != right) {\n                this.rendered.right_ = style.right = right;\n            }\n        }\n        else {\n            if (this.rendered.right_ !== '') {\n                this.rendered.right_ = style.right = '';\n            }\n            if (positioning == OverlayPositioning.BOTTOM_CENTER ||\n                positioning == OverlayPositioning.CENTER_CENTER ||\n                positioning == OverlayPositioning.TOP_CENTER) {\n                offsetX -= this.element.offsetWidth / 2;\n            }\n            var left = Math.round(pixel[0] + offsetX) + 'px';\n            if (this.rendered.left_ != left) {\n                this.rendered.left_ = style.left = left;\n            }\n        }\n        if (positioning == OverlayPositioning.BOTTOM_LEFT ||\n            positioning == OverlayPositioning.BOTTOM_CENTER ||\n            positioning == OverlayPositioning.BOTTOM_RIGHT) {\n            if (this.rendered.top_ !== '') {\n                this.rendered.top_ = style.top = '';\n            }\n            var bottom = Math.round(mapSize[1] - pixel[1] - offsetY) + 'px';\n            if (this.rendered.bottom_ != bottom) {\n                this.rendered.bottom_ = style.bottom = bottom;\n            }\n        }\n        else {\n            if (this.rendered.bottom_ !== '') {\n                this.rendered.bottom_ = style.bottom = '';\n            }\n            if (positioning == OverlayPositioning.CENTER_LEFT ||\n                positioning == OverlayPositioning.CENTER_CENTER ||\n                positioning == OverlayPositioning.CENTER_RIGHT) {\n                offsetY -= this.element.offsetHeight / 2;\n            }\n            var top_1 = Math.round(pixel[1] + offsetY) + 'px';\n            if (this.rendered.top_ != top_1) {\n                this.rendered.top_ = style.top = top_1;\n            }\n        }\n    };\n    /**\n     * returns the options this Overlay has been created with\n     * @return {Options} overlay options\n     */\n    Overlay.prototype.getOptions = function () {\n        return this.options;\n    };\n    return Overlay;\n}(BaseObject));\nexport default Overlay;\n//# sourceMappingURL=Overlay.js.map","/**\n * @module ol/format/FormatType\n */\n/**\n * @enum {string}\n */\nexport default {\n    ARRAY_BUFFER: 'arraybuffer',\n    JSON: 'json',\n    TEXT: 'text',\n    XML: 'xml'\n};\n//# sourceMappingURL=FormatType.js.map","/**\n * @module ol/featureloader\n */\nimport { VOID } from './functions.js';\nimport FormatType from './format/FormatType.js';\n/**\n * {@link module:ol/source/Vector} sources use a function of this type to\n * load features.\n *\n * This function takes an {@link module:ol/extent~Extent} representing the area to be loaded,\n * a `{number}` representing the resolution (map units per pixel) and an\n * {@link module:ol/proj/Projection} for the projection  as\n * arguments. `this` within the function is bound to the\n * {@link module:ol/source/Vector} it's called from.\n *\n * The function is responsible for loading the features and adding them to the\n * source.\n * @typedef {function(this:(import(\"./source/Vector\").default|import(\"./VectorTile.js\").default), import(\"./extent.js\").Extent, number,\n *                    import(\"./proj/Projection.js\").default): void} FeatureLoader\n * @api\n */\n/**\n * {@link module:ol/source/Vector} sources use a function of this type to\n * get the url to load features from.\n *\n * This function takes an {@link module:ol/extent~Extent} representing the area\n * to be loaded, a `{number}` representing the resolution (map units per pixel)\n * and an {@link module:ol/proj/Projection} for the projection  as\n * arguments and returns a `{string}` representing the URL.\n * @typedef {function(import(\"./extent.js\").Extent, number, import(\"./proj/Projection.js\").default): string} FeatureUrlFunction\n * @api\n */\n/**\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @param {function(this:import(\"./VectorTile.js\").default, Array<import(\"./Feature.js\").default>, import(\"./proj/Projection.js\").default, import(\"./extent.js\").Extent): void|function(this:import(\"./source/Vector\").default, Array<import(\"./Feature.js\").default>): void} success\n *     Function called with the loaded features and optionally with the data\n *     projection. Called with the vector tile or source as `this`.\n * @param {function(this:import(\"./VectorTile.js\").default): void|function(this:import(\"./source/Vector\").default): void} failure\n *     Function called when loading failed. Called with the vector tile or\n *     source as `this`.\n * @return {FeatureLoader} The feature loader.\n */\nexport function loadFeaturesXhr(url, format, success, failure) {\n    return (\n    /**\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @this {import(\"./source/Vector\").default|import(\"./VectorTile.js\").default}\n     */\n    function (extent, resolution, projection) {\n        var xhr = new XMLHttpRequest();\n        xhr.open('GET', typeof url === 'function' ? url(extent, resolution, projection) : url, true);\n        if (format.getType() == FormatType.ARRAY_BUFFER) {\n            xhr.responseType = 'arraybuffer';\n        }\n        /**\n         * @param {Event} event Event.\n         * @private\n         */\n        xhr.onload = function (event) {\n            // status will be 0 for file:// urls\n            if (!xhr.status || xhr.status >= 200 && xhr.status < 300) {\n                var type = format.getType();\n                /** @type {Document|Node|Object|string|undefined} */\n                var source = void 0;\n                if (type == FormatType.JSON || type == FormatType.TEXT) {\n                    source = xhr.responseText;\n                }\n                else if (type == FormatType.XML) {\n                    source = xhr.responseXML;\n                    if (!source) {\n                        source = new DOMParser().parseFromString(xhr.responseText, 'application/xml');\n                    }\n                }\n                else if (type == FormatType.ARRAY_BUFFER) {\n                    source = /** @type {ArrayBuffer} */ (xhr.response);\n                }\n                if (source) {\n                    success.call(this, format.readFeatures(source, {\n                        extent: extent,\n                        featureProjection: projection\n                    }), format.readProjection(source));\n                }\n                else {\n                    failure.call(this);\n                }\n            }\n            else {\n                failure.call(this);\n            }\n        }.bind(this);\n        /**\n         * @private\n         */\n        xhr.onerror = function () {\n            failure.call(this);\n        }.bind(this);\n        xhr.send();\n    });\n}\n/**\n * Create an XHR feature loader for a `url` and `format`. The feature loader\n * loads features (with XHR), parses the features, and adds them to the\n * vector source.\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @return {FeatureLoader} The feature loader.\n * @api\n */\nexport function xhr(url, format) {\n    return loadFeaturesXhr(url, format, \n    /**\n     * @param {Array<import(\"./Feature.js\").default>} features The loaded features.\n     * @param {import(\"./proj/Projection.js\").default} dataProjection Data\n     * projection.\n     * @this {import(\"./source/Vector\").default|import(\"./VectorTile.js\").default}\n     */\n    function (features, dataProjection) {\n        var sourceOrTile = /** @type {?} */ (this);\n        if (typeof sourceOrTile.addFeatures === 'function') {\n            /** @type {import(\"./source/Vector\").default} */ (sourceOrTile).addFeatures(features);\n        }\n    }, /* FIXME handle error */ VOID);\n}\n//# sourceMappingURL=featureloader.js.map","/**\n * @module ol/loadingstrategy\n */\n/**\n * Strategy function for loading all features with a single request.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function all(extent, resolution) {\n    return [[-Infinity, -Infinity, Infinity, Infinity]];\n}\n/**\n * Strategy function for loading features based on the view's extent and\n * resolution.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function bbox(extent, resolution) {\n    return [extent];\n}\n/**\n * Creates a strategy function for loading features based on a tile grid.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {function(import(\"./extent.js\").Extent, number): Array<import(\"./extent.js\").Extent>} Loading strategy.\n * @api\n */\nexport function tile(tileGrid) {\n    return (\n    /**\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @return {Array<import(\"./extent.js\").Extent>} Extents.\n     */\n    function (extent, resolution) {\n        var z = tileGrid.getZForResolution(resolution);\n        var tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n        /** @type {Array<import(\"./extent.js\").Extent>} */\n        var extents = [];\n        /** @type {import(\"./tilecoord.js\").TileCoord} */\n        var tileCoord = [z, 0, 0];\n        for (tileCoord[1] = tileRange.minX; tileCoord[1] <= tileRange.maxX; ++tileCoord[1]) {\n            for (tileCoord[2] = tileRange.minY; tileCoord[2] <= tileRange.maxY; ++tileCoord[2]) {\n                extents.push(tileGrid.getTileCoordExtent(tileCoord));\n            }\n        }\n        return extents;\n    });\n}\n//# sourceMappingURL=loadingstrategy.js.map","/**\n * @module ol/TileRange\n */\n/**\n * A representation of a contiguous block of tiles.  A tile range is specified\n * by its min/max tile coordinates and is inclusive of coordinates.\n */\nvar TileRange = /** @class */ (function () {\n    /**\n     * @param {number} minX Minimum X.\n     * @param {number} maxX Maximum X.\n     * @param {number} minY Minimum Y.\n     * @param {number} maxY Maximum Y.\n     */\n    function TileRange(minX, maxX, minY, maxY) {\n        /**\n         * @type {number}\n         */\n        this.minX = minX;\n        /**\n         * @type {number}\n         */\n        this.maxX = maxX;\n        /**\n         * @type {number}\n         */\n        this.minY = minY;\n        /**\n         * @type {number}\n         */\n        this.maxY = maxY;\n    }\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @return {boolean} Contains tile coordinate.\n     */\n    TileRange.prototype.contains = function (tileCoord) {\n        return this.containsXY(tileCoord[1], tileCoord[2]);\n    };\n    /**\n     * @param {TileRange} tileRange Tile range.\n     * @return {boolean} Contains.\n     */\n    TileRange.prototype.containsTileRange = function (tileRange) {\n        return this.minX <= tileRange.minX && tileRange.maxX <= this.maxX &&\n            this.minY <= tileRange.minY && tileRange.maxY <= this.maxY;\n    };\n    /**\n     * @param {number} x Tile coordinate x.\n     * @param {number} y Tile coordinate y.\n     * @return {boolean} Contains coordinate.\n     */\n    TileRange.prototype.containsXY = function (x, y) {\n        return this.minX <= x && x <= this.maxX && this.minY <= y && y <= this.maxY;\n    };\n    /**\n     * @param {TileRange} tileRange Tile range.\n     * @return {boolean} Equals.\n     */\n    TileRange.prototype.equals = function (tileRange) {\n        return this.minX == tileRange.minX && this.minY == tileRange.minY &&\n            this.maxX == tileRange.maxX && this.maxY == tileRange.maxY;\n    };\n    /**\n     * @param {TileRange} tileRange Tile range.\n     */\n    TileRange.prototype.extend = function (tileRange) {\n        if (tileRange.minX < this.minX) {\n            this.minX = tileRange.minX;\n        }\n        if (tileRange.maxX > this.maxX) {\n            this.maxX = tileRange.maxX;\n        }\n        if (tileRange.minY < this.minY) {\n            this.minY = tileRange.minY;\n        }\n        if (tileRange.maxY > this.maxY) {\n            this.maxY = tileRange.maxY;\n        }\n    };\n    /**\n     * @return {number} Height.\n     */\n    TileRange.prototype.getHeight = function () {\n        return this.maxY - this.minY + 1;\n    };\n    /**\n     * @return {import(\"./size.js\").Size} Size.\n     */\n    TileRange.prototype.getSize = function () {\n        return [this.getWidth(), this.getHeight()];\n    };\n    /**\n     * @return {number} Width.\n     */\n    TileRange.prototype.getWidth = function () {\n        return this.maxX - this.minX + 1;\n    };\n    /**\n     * @param {TileRange} tileRange Tile range.\n     * @return {boolean} Intersects.\n     */\n    TileRange.prototype.intersects = function (tileRange) {\n        return this.minX <= tileRange.maxX &&\n            this.maxX >= tileRange.minX &&\n            this.minY <= tileRange.maxY &&\n            this.maxY >= tileRange.minY;\n    };\n    return TileRange;\n}());\n/**\n * @param {number} minX Minimum X.\n * @param {number} maxX Maximum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxY Maximum Y.\n * @param {TileRange=} tileRange TileRange.\n * @return {TileRange} Tile range.\n */\nexport function createOrUpdate(minX, maxX, minY, maxY, tileRange) {\n    if (tileRange !== undefined) {\n        tileRange.minX = minX;\n        tileRange.maxX = maxX;\n        tileRange.minY = minY;\n        tileRange.maxY = maxY;\n        return tileRange;\n    }\n    else {\n        return new TileRange(minX, maxX, minY, maxY);\n    }\n}\nexport default TileRange;\n//# sourceMappingURL=TileRange.js.map","/**\n * @module ol/tilecoord\n */\n/**\n * An array of three numbers representing the location of a tile in a tile\n * grid. The order is `z` (zoom level), `x` (column), and `y` (row).\n * @typedef {Array<number>} TileCoord\n * @api\n */\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {TileCoord=} opt_tileCoord Tile coordinate.\n * @return {TileCoord} Tile coordinate.\n */\nexport function createOrUpdate(z, x, y, opt_tileCoord) {\n    if (opt_tileCoord !== undefined) {\n        opt_tileCoord[0] = z;\n        opt_tileCoord[1] = x;\n        opt_tileCoord[2] = y;\n        return opt_tileCoord;\n    }\n    else {\n        return [z, x, y];\n    }\n}\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {string} Key.\n */\nexport function getKeyZXY(z, x, y) {\n    return z + '/' + x + '/' + y;\n}\n/**\n * Get the key for a tile coord.\n * @param {TileCoord} tileCoord The tile coord.\n * @return {string} Key.\n */\nexport function getKey(tileCoord) {\n    return getKeyZXY(tileCoord[0], tileCoord[1], tileCoord[2]);\n}\n/**\n * Get a tile coord given a key.\n * @param {string} key The tile coord key.\n * @return {TileCoord} The tile coord.\n */\nexport function fromKey(key) {\n    return key.split('/').map(Number);\n}\n/**\n * @param {TileCoord} tileCoord Tile coord.\n * @return {number} Hash.\n */\nexport function hash(tileCoord) {\n    return (tileCoord[1] << tileCoord[0]) + tileCoord[2];\n}\n/**\n * @param {TileCoord} tileCoord Tile coordinate.\n * @param {!import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {boolean} Tile coordinate is within extent and zoom level range.\n */\nexport function withinExtentAndZ(tileCoord, tileGrid) {\n    var z = tileCoord[0];\n    var x = tileCoord[1];\n    var y = tileCoord[2];\n    if (tileGrid.getMinZoom() > z || z > tileGrid.getMaxZoom()) {\n        return false;\n    }\n    var extent = tileGrid.getExtent();\n    var tileRange;\n    if (!extent) {\n        tileRange = tileGrid.getFullTileRange(z);\n    }\n    else {\n        tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n    }\n    if (!tileRange) {\n        return true;\n    }\n    else {\n        return tileRange.containsXY(x, y);\n    }\n}\n//# sourceMappingURL=tilecoord.js.map","/**\n * @module ol/tilegrid/TileGrid\n */\nimport { DEFAULT_TILE_SIZE } from './common.js';\nimport { assert } from '../asserts.js';\nimport TileRange, { createOrUpdate as createOrUpdateTileRange } from '../TileRange.js';\nimport { isSorted, linearFindNearest } from '../array.js';\nimport { createOrUpdate, getTopLeft } from '../extent.js';\nimport { clamp } from '../math.js';\nimport { toSize } from '../size.js';\nimport { createOrUpdate as createOrUpdateTileCoord } from '../tilecoord.js';\n/**\n * @private\n * @type {import(\"../tilecoord.js\").TileCoord}\n */\nvar tmpTileCoord = [0, 0, 0];\n/**\n * @typedef {Object} Options\n * @property {import(\"../extent.js\").Extent} [extent] Extent for the tile grid. No tiles outside this\n * extent will be requested by {@link module:ol/source/Tile} sources. When no `origin` or\n * `origins` are configured, the `origin` will be set to the top-left corner of the extent.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {import(\"../coordinate.js\").Coordinate} [origin] The tile grid origin, i.e. where the `x`\n * and `y` axes meet (`[z, 0, 0]`). Tile coordinates increase left to right and upwards. If not\n * specified, `extent` or `origins` must be provided.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} [origins] Tile grid origins, i.e. where\n * the `x` and `y` axes meet (`[z, 0, 0]`), for each zoom level. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * origin. Tile coordinates increase left to right and upwards. If not specified, `extent` or\n * `origin` must be provided.\n * @property {!Array<number>} resolutions Resolutions. The array index of each resolution needs\n * to match the zoom level. This means that even if a `minZoom` is configured, the resolutions\n * array will have a length of `maxZoom + 1`.\n * @property {Array<import(\"../size.js\").Size>} [sizes] Sizes.\n * @property {number|import(\"../size.js\").Size} [tileSize] Tile size.\n * Default is `[256, 256]`.\n * @property {Array<import(\"../size.js\").Size>} [tileSizes] Tile sizes. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * tile size.\n */\n/**\n * @classdesc\n * Base class for setting the grid pattern for sources accessing tiled-image\n * servers.\n * @api\n */\nvar TileGrid = /** @class */ (function () {\n    /**\n     * @param {Options} options Tile grid options.\n     */\n    function TileGrid(options) {\n        /**\n         * @protected\n         * @type {number}\n         */\n        this.minZoom = options.minZoom !== undefined ? options.minZoom : 0;\n        /**\n         * @private\n         * @type {!Array<number>}\n         */\n        this.resolutions_ = options.resolutions;\n        assert(isSorted(this.resolutions_, function (a, b) {\n            return b - a;\n        }, true), 17); // `resolutions` must be sorted in descending order\n        // check if we've got a consistent zoom factor and origin\n        var zoomFactor;\n        if (!options.origins) {\n            for (var i = 0, ii = this.resolutions_.length - 1; i < ii; ++i) {\n                if (!zoomFactor) {\n                    zoomFactor = this.resolutions_[i] / this.resolutions_[i + 1];\n                }\n                else {\n                    if (this.resolutions_[i] / this.resolutions_[i + 1] !== zoomFactor) {\n                        zoomFactor = undefined;\n                        break;\n                    }\n                }\n            }\n        }\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        this.zoomFactor_ = zoomFactor;\n        /**\n         * @protected\n         * @type {number}\n         */\n        this.maxZoom = this.resolutions_.length - 1;\n        /**\n         * @private\n         * @type {import(\"../coordinate.js\").Coordinate}\n         */\n        this.origin_ = options.origin !== undefined ? options.origin : null;\n        /**\n         * @private\n         * @type {Array<import(\"../coordinate.js\").Coordinate>}\n         */\n        this.origins_ = null;\n        if (options.origins !== undefined) {\n            this.origins_ = options.origins;\n            assert(this.origins_.length == this.resolutions_.length, 20); // Number of `origins` and `resolutions` must be equal\n        }\n        var extent = options.extent;\n        if (extent !== undefined &&\n            !this.origin_ && !this.origins_) {\n            this.origin_ = getTopLeft(extent);\n        }\n        assert((!this.origin_ && this.origins_) || (this.origin_ && !this.origins_), 18); // Either `origin` or `origins` must be configured, never both\n        /**\n         * @private\n         * @type {Array<number|import(\"../size.js\").Size>}\n         */\n        this.tileSizes_ = null;\n        if (options.tileSizes !== undefined) {\n            this.tileSizes_ = options.tileSizes;\n            assert(this.tileSizes_.length == this.resolutions_.length, 19); // Number of `tileSizes` and `resolutions` must be equal\n        }\n        /**\n         * @private\n         * @type {number|import(\"../size.js\").Size}\n         */\n        this.tileSize_ = options.tileSize !== undefined ?\n            options.tileSize :\n            !this.tileSizes_ ? DEFAULT_TILE_SIZE : null;\n        assert((!this.tileSize_ && this.tileSizes_) ||\n            (this.tileSize_ && !this.tileSizes_), 22); // Either `tileSize` or `tileSizes` must be configured, never both\n        /**\n         * @private\n         * @type {import(\"../extent.js\").Extent}\n         */\n        this.extent_ = extent !== undefined ? extent : null;\n        /**\n         * @private\n         * @type {Array<import(\"../TileRange.js\").default>}\n         */\n        this.fullTileRanges_ = null;\n        /**\n         * @private\n         * @type {import(\"../size.js\").Size}\n         */\n        this.tmpSize_ = [0, 0];\n        if (options.sizes !== undefined) {\n            this.fullTileRanges_ = options.sizes.map(function (size, z) {\n                var tileRange = new TileRange(Math.min(0, size[0]), Math.max(size[0] - 1, -1), Math.min(0, size[1]), Math.max(size[1] - 1, -1));\n                return tileRange;\n            }, this);\n        }\n        else if (extent) {\n            this.calculateTileRanges_(extent);\n        }\n    }\n    /**\n     * Call a function with each tile coordinate for a given extent and zoom level.\n     *\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {number} zoom Integer zoom level.\n     * @param {function(import(\"../tilecoord.js\").TileCoord): void} callback Function called with each tile coordinate.\n     * @api\n     */\n    TileGrid.prototype.forEachTileCoord = function (extent, zoom, callback) {\n        var tileRange = this.getTileRangeForExtentAndZ(extent, zoom);\n        for (var i = tileRange.minX, ii = tileRange.maxX; i <= ii; ++i) {\n            for (var j = tileRange.minY, jj = tileRange.maxY; j <= jj; ++j) {\n                callback([zoom, i, j]);\n            }\n        }\n    };\n    /**\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @param {function(number, import(\"../TileRange.js\").default): boolean} callback Callback.\n     * @param {import(\"../TileRange.js\").default=} opt_tileRange Temporary import(\"../TileRange.js\").default object.\n     * @param {import(\"../extent.js\").Extent=} opt_extent Temporary import(\"../extent.js\").Extent object.\n     * @return {boolean} Callback succeeded.\n     */\n    TileGrid.prototype.forEachTileCoordParentTileRange = function (tileCoord, callback, opt_tileRange, opt_extent) {\n        var tileRange, x, y;\n        var tileCoordExtent = null;\n        var z = tileCoord[0] - 1;\n        if (this.zoomFactor_ === 2) {\n            x = tileCoord[1];\n            y = tileCoord[2];\n        }\n        else {\n            tileCoordExtent = this.getTileCoordExtent(tileCoord, opt_extent);\n        }\n        while (z >= this.minZoom) {\n            if (this.zoomFactor_ === 2) {\n                x = Math.floor(x / 2);\n                y = Math.floor(y / 2);\n                tileRange = createOrUpdateTileRange(x, x, y, y, opt_tileRange);\n            }\n            else {\n                tileRange = this.getTileRangeForExtentAndZ(tileCoordExtent, z, opt_tileRange);\n            }\n            if (callback(z, tileRange)) {\n                return true;\n            }\n            --z;\n        }\n        return false;\n    };\n    /**\n     * Get the extent for this tile grid, if it was configured.\n     * @return {import(\"../extent.js\").Extent} Extent.\n     * @api\n     */\n    TileGrid.prototype.getExtent = function () {\n        return this.extent_;\n    };\n    /**\n     * Get the maximum zoom level for the grid.\n     * @return {number} Max zoom.\n     * @api\n     */\n    TileGrid.prototype.getMaxZoom = function () {\n        return this.maxZoom;\n    };\n    /**\n     * Get the minimum zoom level for the grid.\n     * @return {number} Min zoom.\n     * @api\n     */\n    TileGrid.prototype.getMinZoom = function () {\n        return this.minZoom;\n    };\n    /**\n     * Get the origin for the grid at the given zoom level.\n     * @param {number} z Integer zoom level.\n     * @return {import(\"../coordinate.js\").Coordinate} Origin.\n     * @api\n     */\n    TileGrid.prototype.getOrigin = function (z) {\n        if (this.origin_) {\n            return this.origin_;\n        }\n        else {\n            return this.origins_[z];\n        }\n    };\n    /**\n     * Get the resolution for the given zoom level.\n     * @param {number} z Integer zoom level.\n     * @return {number} Resolution.\n     * @api\n     */\n    TileGrid.prototype.getResolution = function (z) {\n        return this.resolutions_[z];\n    };\n    /**\n     * Get the list of resolutions for the tile grid.\n     * @return {Array<number>} Resolutions.\n     * @api\n     */\n    TileGrid.prototype.getResolutions = function () {\n        return this.resolutions_;\n    };\n    /**\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @param {import(\"../TileRange.js\").default=} opt_tileRange Temporary import(\"../TileRange.js\").default object.\n     * @param {import(\"../extent.js\").Extent=} opt_extent Temporary import(\"../extent.js\").Extent object.\n     * @return {import(\"../TileRange.js\").default} Tile range.\n     */\n    TileGrid.prototype.getTileCoordChildTileRange = function (tileCoord, opt_tileRange, opt_extent) {\n        if (tileCoord[0] < this.maxZoom) {\n            if (this.zoomFactor_ === 2) {\n                var minX = tileCoord[1] * 2;\n                var minY = tileCoord[2] * 2;\n                return createOrUpdateTileRange(minX, minX + 1, minY, minY + 1, opt_tileRange);\n            }\n            var tileCoordExtent = this.getTileCoordExtent(tileCoord, opt_extent);\n            return this.getTileRangeForExtentAndZ(tileCoordExtent, tileCoord[0] + 1, opt_tileRange);\n        }\n        return null;\n    };\n    /**\n     * Get the extent for a tile range.\n     * @param {number} z Integer zoom level.\n     * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n     * @param {import(\"../extent.js\").Extent=} opt_extent Temporary import(\"../extent.js\").Extent object.\n     * @return {import(\"../extent.js\").Extent} Extent.\n     */\n    TileGrid.prototype.getTileRangeExtent = function (z, tileRange, opt_extent) {\n        var origin = this.getOrigin(z);\n        var resolution = this.getResolution(z);\n        var tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n        var minX = origin[0] + tileRange.minX * tileSize[0] * resolution;\n        var maxX = origin[0] + (tileRange.maxX + 1) * tileSize[0] * resolution;\n        var minY = origin[1] + tileRange.minY * tileSize[1] * resolution;\n        var maxY = origin[1] + (tileRange.maxY + 1) * tileSize[1] * resolution;\n        return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n    };\n    /**\n     * Get a tile range for the given extent and integer zoom level.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {number} z Integer zoom level.\n     * @param {import(\"../TileRange.js\").default=} opt_tileRange Temporary tile range object.\n     * @return {import(\"../TileRange.js\").default} Tile range.\n     */\n    TileGrid.prototype.getTileRangeForExtentAndZ = function (extent, z, opt_tileRange) {\n        var tileCoord = tmpTileCoord;\n        this.getTileCoordForXYAndZ_(extent[0], extent[3], z, false, tileCoord);\n        var minX = tileCoord[1];\n        var minY = tileCoord[2];\n        this.getTileCoordForXYAndZ_(extent[2], extent[1], z, true, tileCoord);\n        return createOrUpdateTileRange(minX, tileCoord[1], minY, tileCoord[2], opt_tileRange);\n    };\n    /**\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @return {import(\"../coordinate.js\").Coordinate} Tile center.\n     */\n    TileGrid.prototype.getTileCoordCenter = function (tileCoord) {\n        var origin = this.getOrigin(tileCoord[0]);\n        var resolution = this.getResolution(tileCoord[0]);\n        var tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n        return [\n            origin[0] + (tileCoord[1] + 0.5) * tileSize[0] * resolution,\n            origin[1] - (tileCoord[2] + 0.5) * tileSize[1] * resolution\n        ];\n    };\n    /**\n     * Get the extent of a tile coordinate.\n     *\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @param {import(\"../extent.js\").Extent=} opt_extent Temporary extent object.\n     * @return {import(\"../extent.js\").Extent} Extent.\n     * @api\n     */\n    TileGrid.prototype.getTileCoordExtent = function (tileCoord, opt_extent) {\n        var origin = this.getOrigin(tileCoord[0]);\n        var resolution = this.getResolution(tileCoord[0]);\n        var tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n        var minX = origin[0] + tileCoord[1] * tileSize[0] * resolution;\n        var minY = origin[1] - (tileCoord[2] + 1) * tileSize[1] * resolution;\n        var maxX = minX + tileSize[0] * resolution;\n        var maxY = minY + tileSize[1] * resolution;\n        return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n    };\n    /**\n     * Get the tile coordinate for the given map coordinate and resolution.  This\n     * method considers that coordinates that intersect tile boundaries should be\n     * assigned the higher tile coordinate.\n     *\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {number} resolution Resolution.\n     * @param {import(\"../tilecoord.js\").TileCoord=} opt_tileCoord Destination import(\"../tilecoord.js\").TileCoord object.\n     * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n     * @api\n     */\n    TileGrid.prototype.getTileCoordForCoordAndResolution = function (coordinate, resolution, opt_tileCoord) {\n        return this.getTileCoordForXYAndResolution_(coordinate[0], coordinate[1], resolution, false, opt_tileCoord);\n    };\n    /**\n     * Note that this method should not be called for resolutions that correspond\n     * to an integer zoom level.  Instead call the `getTileCoordForXYAndZ_` method.\n     * @param {number} x X.\n     * @param {number} y Y.\n     * @param {number} resolution Resolution (for a non-integer zoom level).\n     * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n     *     intersections go to the higher tile coordinate, let edge intersections\n     *     go to the lower tile coordinate.\n     * @param {import(\"../tilecoord.js\").TileCoord=} opt_tileCoord Temporary import(\"../tilecoord.js\").TileCoord object.\n     * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n     * @private\n     */\n    TileGrid.prototype.getTileCoordForXYAndResolution_ = function (x, y, resolution, reverseIntersectionPolicy, opt_tileCoord) {\n        var z = this.getZForResolution(resolution);\n        var scale = resolution / this.getResolution(z);\n        var origin = this.getOrigin(z);\n        var tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n        var adjustX = reverseIntersectionPolicy ? 0.5 : 0;\n        var adjustY = reverseIntersectionPolicy ? 0.5 : 0;\n        var xFromOrigin = Math.floor((x - origin[0]) / resolution + adjustX);\n        var yFromOrigin = Math.floor((origin[1] - y) / resolution + adjustY);\n        var tileCoordX = scale * xFromOrigin / tileSize[0];\n        var tileCoordY = scale * yFromOrigin / tileSize[1];\n        if (reverseIntersectionPolicy) {\n            tileCoordX = Math.ceil(tileCoordX) - 1;\n            tileCoordY = Math.ceil(tileCoordY) - 1;\n        }\n        else {\n            tileCoordX = Math.floor(tileCoordX);\n            tileCoordY = Math.floor(tileCoordY);\n        }\n        return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n    };\n    /**\n     * Although there is repetition between this method and `getTileCoordForXYAndResolution_`,\n     * they should have separate implementations.  This method is for integer zoom\n     * levels.  The other method should only be called for resolutions corresponding\n     * to non-integer zoom levels.\n     * @param {number} x Map x coordinate.\n     * @param {number} y Map y coordinate.\n     * @param {number} z Integer zoom level.\n     * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n     *     intersections go to the higher tile coordinate, let edge intersections\n     *     go to the lower tile coordinate.\n     * @param {import(\"../tilecoord.js\").TileCoord=} opt_tileCoord Temporary import(\"../tilecoord.js\").TileCoord object.\n     * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n     * @private\n     */\n    TileGrid.prototype.getTileCoordForXYAndZ_ = function (x, y, z, reverseIntersectionPolicy, opt_tileCoord) {\n        var origin = this.getOrigin(z);\n        var resolution = this.getResolution(z);\n        var tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n        var adjustX = reverseIntersectionPolicy ? 0.5 : 0;\n        var adjustY = reverseIntersectionPolicy ? 0.5 : 0;\n        var xFromOrigin = Math.floor((x - origin[0]) / resolution + adjustX);\n        var yFromOrigin = Math.floor((origin[1] - y) / resolution + adjustY);\n        var tileCoordX = xFromOrigin / tileSize[0];\n        var tileCoordY = yFromOrigin / tileSize[1];\n        if (reverseIntersectionPolicy) {\n            tileCoordX = Math.ceil(tileCoordX) - 1;\n            tileCoordY = Math.ceil(tileCoordY) - 1;\n        }\n        else {\n            tileCoordX = Math.floor(tileCoordX);\n            tileCoordY = Math.floor(tileCoordY);\n        }\n        return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n    };\n    /**\n     * Get a tile coordinate given a map coordinate and zoom level.\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {number} z Zoom level.\n     * @param {import(\"../tilecoord.js\").TileCoord=} opt_tileCoord Destination import(\"../tilecoord.js\").TileCoord object.\n     * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n     * @api\n     */\n    TileGrid.prototype.getTileCoordForCoordAndZ = function (coordinate, z, opt_tileCoord) {\n        return this.getTileCoordForXYAndZ_(coordinate[0], coordinate[1], z, false, opt_tileCoord);\n    };\n    /**\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @return {number} Tile resolution.\n     */\n    TileGrid.prototype.getTileCoordResolution = function (tileCoord) {\n        return this.resolutions_[tileCoord[0]];\n    };\n    /**\n     * Get the tile size for a zoom level. The type of the return value matches the\n     * `tileSize` or `tileSizes` that the tile grid was configured with. To always\n     * get an `import(\"../size.js\").Size`, run the result through `import(\"../size.js\").Size.toSize()`.\n     * @param {number} z Z.\n     * @return {number|import(\"../size.js\").Size} Tile size.\n     * @api\n     */\n    TileGrid.prototype.getTileSize = function (z) {\n        if (this.tileSize_) {\n            return this.tileSize_;\n        }\n        else {\n            return this.tileSizes_[z];\n        }\n    };\n    /**\n     * @param {number} z Zoom level.\n     * @return {import(\"../TileRange.js\").default} Extent tile range for the specified zoom level.\n     */\n    TileGrid.prototype.getFullTileRange = function (z) {\n        if (!this.fullTileRanges_) {\n            return null;\n        }\n        else {\n            return this.fullTileRanges_[z];\n        }\n    };\n    /**\n     * @param {number} resolution Resolution.\n     * @param {number=} opt_direction If 0, the nearest resolution will be used.\n     *     If 1, the nearest lower resolution will be used. If -1, the nearest\n     *     higher resolution will be used. Default is 0.\n     * @return {number} Z.\n     * @api\n     */\n    TileGrid.prototype.getZForResolution = function (resolution, opt_direction) {\n        var z = linearFindNearest(this.resolutions_, resolution, opt_direction || 0);\n        return clamp(z, this.minZoom, this.maxZoom);\n    };\n    /**\n     * @param {!import(\"../extent.js\").Extent} extent Extent for this tile grid.\n     * @private\n     */\n    TileGrid.prototype.calculateTileRanges_ = function (extent) {\n        var length = this.resolutions_.length;\n        var fullTileRanges = new Array(length);\n        for (var z = this.minZoom; z < length; ++z) {\n            fullTileRanges[z] = this.getTileRangeForExtentAndZ(extent, z);\n        }\n        this.fullTileRanges_ = fullTileRanges;\n    };\n    return TileGrid;\n}());\nexport default TileGrid;\n//# sourceMappingURL=TileGrid.js.map","/**\n * @module ol/tilegrid\n */\nimport { DEFAULT_MAX_ZOOM, DEFAULT_TILE_SIZE } from './tilegrid/common.js';\nimport { toSize } from './size.js';\nimport { containsCoordinate, createOrUpdate, getCorner, getHeight, getWidth } from './extent.js';\nimport Corner from './extent/Corner.js';\nimport { get as getProjection, METERS_PER_UNIT } from './proj.js';\nimport Units from './proj/Units.js';\nimport TileGrid from './tilegrid/TileGrid.js';\n/**\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {!TileGrid} Default tile grid for the\n * passed projection.\n */\nexport function getForProjection(projection) {\n    var tileGrid = projection.getDefaultTileGrid();\n    if (!tileGrid) {\n        tileGrid = createForProjection(projection);\n        projection.setDefaultTileGrid(tileGrid);\n    }\n    return tileGrid;\n}\n/**\n * @param {TileGrid} tileGrid Tile grid.\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {import(\"./tilecoord.js\").TileCoord} Tile coordinate.\n */\nexport function wrapX(tileGrid, tileCoord, projection) {\n    var z = tileCoord[0];\n    var center = tileGrid.getTileCoordCenter(tileCoord);\n    var projectionExtent = extentFromProjection(projection);\n    if (!containsCoordinate(projectionExtent, center)) {\n        var worldWidth = getWidth(projectionExtent);\n        var worldsAway = Math.ceil((projectionExtent[0] - center[0]) / worldWidth);\n        center[0] += worldWidth * worldsAway;\n        return tileGrid.getTileCoordForCoordAndZ(center, z);\n    }\n    else {\n        return tileCoord;\n    }\n}\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number=} opt_maxZoom Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size=} opt_tileSize Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {Corner=} opt_corner Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForExtent(extent, opt_maxZoom, opt_tileSize, opt_corner) {\n    var corner = opt_corner !== undefined ? opt_corner : Corner.TOP_LEFT;\n    var resolutions = resolutionsFromExtent(extent, opt_maxZoom, opt_tileSize);\n    return new TileGrid({\n        extent: extent,\n        origin: getCorner(extent, corner),\n        resolutions: resolutions,\n        tileSize: opt_tileSize\n    });\n}\n/**\n * @typedef {Object} XYZOptions\n * @property {import(\"./extent.js\").Extent} [extent] Extent for the tile grid. The origin for an XYZ tile grid is the\n * top-left corner of the extent. The zero level of the grid is defined by the resolution at which one tile fits in the\n * provided extent. If not provided, the extent of the EPSG:3857 projection is used.\n * @property {number} [maxZoom] Maximum zoom. The default is `42`. This determines the number of levels\n * in the grid set. For example, a `maxZoom` of 21 means there are 22 levels in the grid set.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {number|import(\"./size.js\").Size} [tileSize=[256, 256]] Tile size in pixels.\n */\n/**\n * Creates a tile grid with a standard XYZ tiling scheme.\n * @param {XYZOptions=} opt_options Tile grid options.\n * @return {!TileGrid} Tile grid instance.\n * @api\n */\nexport function createXYZ(opt_options) {\n    /** @type {XYZOptions} */\n    var xyzOptions = opt_options || {};\n    var extent = xyzOptions.extent || getProjection('EPSG:3857').getExtent();\n    /** @type {import(\"./tilegrid/TileGrid.js\").Options} */\n    var gridOptions = {\n        extent: extent,\n        minZoom: xyzOptions.minZoom,\n        tileSize: xyzOptions.tileSize,\n        resolutions: resolutionsFromExtent(extent, xyzOptions.maxZoom, xyzOptions.tileSize)\n    };\n    return new TileGrid(gridOptions);\n}\n/**\n * Create a resolutions array from an extent.  A zoom factor of 2 is assumed.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number=} opt_maxZoom Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size=} opt_tileSize Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @return {!Array<number>} Resolutions array.\n */\nfunction resolutionsFromExtent(extent, opt_maxZoom, opt_tileSize) {\n    var maxZoom = opt_maxZoom !== undefined ?\n        opt_maxZoom : DEFAULT_MAX_ZOOM;\n    var height = getHeight(extent);\n    var width = getWidth(extent);\n    var tileSize = toSize(opt_tileSize !== undefined ?\n        opt_tileSize : DEFAULT_TILE_SIZE);\n    var maxResolution = Math.max(width / tileSize[0], height / tileSize[1]);\n    var length = maxZoom + 1;\n    var resolutions = new Array(length);\n    for (var z = 0; z < length; ++z) {\n        resolutions[z] = maxResolution / Math.pow(2, z);\n    }\n    return resolutions;\n}\n/**\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @param {number=} opt_maxZoom Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size=} opt_tileSize Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {Corner=} opt_corner Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForProjection(projection, opt_maxZoom, opt_tileSize, opt_corner) {\n    var extent = extentFromProjection(projection);\n    return createForExtent(extent, opt_maxZoom, opt_tileSize, opt_corner);\n}\n/**\n * Generate a tile grid extent from a projection.  If the projection has an\n * extent, it is used.  If not, a global extent is assumed.\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @return {import(\"./extent.js\").Extent} Extent.\n */\nexport function extentFromProjection(projection) {\n    projection = getProjection(projection);\n    var extent = projection.getExtent();\n    if (!extent) {\n        var half = 180 * METERS_PER_UNIT[Units.DEGREES] / projection.getMetersPerUnit();\n        extent = createOrUpdate(-half, -half, half, half);\n    }\n    return extent;\n}\n//# sourceMappingURL=tilegrid.js.map","/**\n * @module ol/webgl\n */\n/**\n * Constants taken from goog.webgl\n */\n/**\n * @const\n * @type {number}\n */\nexport var ONE = 1;\n/**\n * @const\n * @type {number}\n */\nexport var SRC_ALPHA = 0x0302;\n/**\n * @const\n * @type {number}\n */\nexport var COLOR_ATTACHMENT0 = 0x8CE0;\n/**\n * @const\n * @type {number}\n */\nexport var COLOR_BUFFER_BIT = 0x00004000;\n/**\n * @const\n * @type {number}\n */\nexport var TRIANGLES = 0x0004;\n/**\n * @const\n * @type {number}\n */\nexport var TRIANGLE_STRIP = 0x0005;\n/**\n * @const\n * @type {number}\n */\nexport var ONE_MINUS_SRC_ALPHA = 0x0303;\n/**\n * Used by {@link module:ol/webgl/Helper~WebGLHelper} for buffers containing vertices data, such as\n * position, color, texture coordinate, etc. These vertices are then referenced by an index buffer\n * to be drawn on screen (see {@link module:ol/webgl.ELEMENT_ARRAY_BUFFER}).\n * @const\n * @type {number}\n * @api\n */\nexport var ARRAY_BUFFER = 0x8892;\n/**\n * Used by {@link module:ol/webgl/Helper~WebGLHelper} for buffers containing indices data.\n * Index buffers are essentially lists of references to vertices defined in a vertex buffer\n * (see {@link module:ol/webgl.ARRAY_BUFFER}), and define the primitives (triangles) to be drawn.\n * @const\n * @type {number}\n * @api\n */\nexport var ELEMENT_ARRAY_BUFFER = 0x8893;\n/**\n * Used by {link module:ol/webgl/Buffer~WebGLArrayBuffer}.\n * @const\n * @type {number}\n * @api\n */\nexport var STREAM_DRAW = 0x88E0;\n/**\n * Used by {link module:ol/webgl/Buffer~WebGLArrayBuffer}.\n * @const\n * @type {number}\n * @api\n */\nexport var STATIC_DRAW = 0x88E4;\n/**\n * Used by {link module:ol/webgl/Buffer~WebGLArrayBuffer}.\n * @const\n * @type {number}\n * @api\n */\nexport var DYNAMIC_DRAW = 0x88E8;\n/**\n * @const\n * @type {number}\n */\nexport var CULL_FACE = 0x0B44;\n/**\n * @const\n * @type {number}\n */\nexport var BLEND = 0x0BE2;\n/**\n * @const\n * @type {number}\n */\nexport var STENCIL_TEST = 0x0B90;\n/**\n * @const\n * @type {number}\n */\nexport var DEPTH_TEST = 0x0B71;\n/**\n * @const\n * @type {number}\n */\nexport var SCISSOR_TEST = 0x0C11;\n/**\n * @const\n * @type {number}\n */\nexport var UNSIGNED_BYTE = 0x1401;\n/**\n * @const\n * @type {number}\n */\nexport var UNSIGNED_SHORT = 0x1403;\n/**\n * @const\n * @type {number}\n */\nexport var UNSIGNED_INT = 0x1405;\n/**\n * @const\n * @type {number}\n */\nexport var FLOAT = 0x1406;\n/**\n * @const\n * @type {number}\n */\nexport var RGBA = 0x1908;\n/**\n * @const\n * @type {number}\n */\nexport var FRAGMENT_SHADER = 0x8B30;\n/**\n * @const\n * @type {number}\n */\nexport var VERTEX_SHADER = 0x8B31;\n/**\n * @const\n * @type {number}\n */\nexport var LINK_STATUS = 0x8B82;\n/**\n * @const\n * @type {number}\n */\nexport var LINEAR = 0x2601;\n/**\n * @const\n * @type {number}\n */\nexport var TEXTURE_MAG_FILTER = 0x2800;\n/**\n * @const\n * @type {number}\n */\nexport var TEXTURE_MIN_FILTER = 0x2801;\n/**\n * @const\n * @type {number}\n */\nexport var TEXTURE_WRAP_S = 0x2802;\n/**\n * @const\n * @type {number}\n */\nexport var TEXTURE_WRAP_T = 0x2803;\n/**\n * @const\n * @type {number}\n */\nexport var TEXTURE_2D = 0x0DE1;\n/**\n * @const\n * @type {number}\n */\nexport var TEXTURE0 = 0x84C0;\n/**\n * @const\n * @type {number}\n */\nexport var CLAMP_TO_EDGE = 0x812F;\n/**\n * @const\n * @type {number}\n */\nexport var COMPILE_STATUS = 0x8B81;\n/**\n * @const\n * @type {number}\n */\nexport var FRAMEBUFFER = 0x8D40;\n/** end of goog.webgl constants\n */\n/**\n * @const\n * @type {Array<string>}\n */\nvar CONTEXT_IDS = [\n    'experimental-webgl',\n    'webgl',\n    'webkit-3d',\n    'moz-webgl'\n];\n/**\n * @param {HTMLCanvasElement} canvas Canvas.\n * @param {Object=} opt_attributes Attributes.\n * @return {WebGLRenderingContext} WebGL rendering context.\n */\nexport function getContext(canvas, opt_attributes) {\n    var ii = CONTEXT_IDS.length;\n    for (var i = 0; i < ii; ++i) {\n        try {\n            var context = canvas.getContext(CONTEXT_IDS[i], opt_attributes);\n            if (context) {\n                return /** @type {!WebGLRenderingContext} */ (context);\n            }\n        }\n        catch (e) {\n            // pass\n        }\n    }\n    return null;\n}\n/**\n * Include debuggable shader sources.  Default is `true`. This should be set to\n * `false` for production builds.\n * @type {boolean}\n */\nexport var DEBUG = true;\n/**\n * The maximum supported WebGL texture size in pixels. If WebGL is not\n * supported, the value is set to `undefined`.\n * @type {number|undefined}\n */\nvar MAX_TEXTURE_SIZE; // value is set below\n/**\n * List of supported WebGL extensions.\n * @type {Array<string>}\n */\nvar EXTENSIONS; // value is set below\n/**\n * True if both OpenLayers and browser support WebGL.\n * @type {boolean}\n * @api\n */\nvar HAS = false;\n//TODO Remove side effects\nif (typeof window !== 'undefined' && 'WebGLRenderingContext' in window) {\n    try {\n        var canvas = document.createElement('canvas');\n        var gl = getContext(canvas);\n        if (gl) {\n            HAS = true;\n            MAX_TEXTURE_SIZE = /** @type {number} */ (gl.getParameter(gl.MAX_TEXTURE_SIZE));\n            EXTENSIONS = gl.getSupportedExtensions();\n        }\n    }\n    catch (e) {\n        // pass\n    }\n}\nexport { HAS, MAX_TEXTURE_SIZE, EXTENSIONS };\n//# sourceMappingURL=webgl.js.map","/**\n * @module ol/xml\n */\nimport { extend } from './array.js';\n/**\n * When using {@link module:ol/xml~makeChildAppender} or\n * {@link module:ol/xml~makeSimpleNodeFactory}, the top `objectStack` item needs\n * to have this structure.\n * @typedef {Object} NodeStackItem\n * @property {Node} node\n */\n/**\n * @typedef {function(Element, Array<*>): void} Parser\n */\n/**\n * @typedef {function(Element, *, Array<*>): void} Serializer\n */\n/**\n * This document should be used when creating nodes for XML serializations. This\n * document is also used by {@link module:ol/xml~createElementNS}\n * @const\n * @type {Document}\n */\nexport var DOCUMENT = document.implementation.createDocument('', '', null);\n/**\n * @type {string}\n */\nexport var XML_SCHEMA_INSTANCE_URI = 'http://www.w3.org/2001/XMLSchema-instance';\n/**\n * @param {string} namespaceURI Namespace URI.\n * @param {string} qualifiedName Qualified name.\n * @return {Element} Node.\n */\nexport function createElementNS(namespaceURI, qualifiedName) {\n    return DOCUMENT.createElementNS(namespaceURI, qualifiedName);\n}\n/**\n * Recursively grab all text content of child nodes into a single string.\n * @param {Node} node Node.\n * @param {boolean} normalizeWhitespace Normalize whitespace: remove all line\n * breaks.\n * @return {string} All text content.\n * @api\n */\nexport function getAllTextContent(node, normalizeWhitespace) {\n    return getAllTextContent_(node, normalizeWhitespace, []).join('');\n}\n/**\n * Recursively grab all text content of child nodes into a single string.\n * @param {Node} node Node.\n * @param {boolean} normalizeWhitespace Normalize whitespace: remove all line\n * breaks.\n * @param {Array<string>} accumulator Accumulator.\n * @private\n * @return {Array<string>} Accumulator.\n */\nexport function getAllTextContent_(node, normalizeWhitespace, accumulator) {\n    if (node.nodeType == Node.CDATA_SECTION_NODE ||\n        node.nodeType == Node.TEXT_NODE) {\n        if (normalizeWhitespace) {\n            accumulator.push(String(node.nodeValue).replace(/(\\r\\n|\\r|\\n)/g, ''));\n        }\n        else {\n            accumulator.push(node.nodeValue);\n        }\n    }\n    else {\n        var n = void 0;\n        for (n = node.firstChild; n; n = n.nextSibling) {\n            getAllTextContent_(n, normalizeWhitespace, accumulator);\n        }\n    }\n    return accumulator;\n}\n/**\n * @param {Object} object Object.\n * @return {boolean} Is a document.\n */\nexport function isDocument(object) {\n    return 'documentElement' in object;\n}\n/**\n * @param {Element} node Node.\n * @param {?string} namespaceURI Namespace URI.\n * @param {string} name Attribute name.\n * @return {string} Value\n */\nexport function getAttributeNS(node, namespaceURI, name) {\n    return node.getAttributeNS(namespaceURI, name) || '';\n}\n/**\n * Parse an XML string to an XML Document.\n * @param {string} xml XML.\n * @return {Document} Document.\n * @api\n */\nexport function parse(xml) {\n    return new DOMParser().parseFromString(xml, 'application/xml');\n}\n/**\n * Make an array extender function for extending the array at the top of the\n * object stack.\n * @param {function(this: T, Node, Array<*>): (Array<*>|undefined)} valueReader Value reader.\n * @param {T=} opt_this The object to use as `this` in `valueReader`.\n * @return {Parser} Parser.\n * @template T\n */\nexport function makeArrayExtender(valueReader, opt_this) {\n    return (\n    /**\n     * @param {Node} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     */\n    function (node, objectStack) {\n        var value = valueReader.call(opt_this !== undefined ? opt_this : this, node, objectStack);\n        if (value !== undefined) {\n            var array = /** @type {Array<*>} */ (objectStack[objectStack.length - 1]);\n            extend(array, value);\n        }\n    });\n}\n/**\n * Make an array pusher function for pushing to the array at the top of the\n * object stack.\n * @param {function(this: T, Element, Array<*>): *} valueReader Value reader.\n * @param {T=} opt_this The object to use as `this` in `valueReader`.\n * @return {Parser} Parser.\n * @template T\n */\nexport function makeArrayPusher(valueReader, opt_this) {\n    return (\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     */\n    function (node, objectStack) {\n        var value = valueReader.call(opt_this !== undefined ? opt_this : this, node, objectStack);\n        if (value !== undefined) {\n            var array = /** @type {Array<*>} */ (objectStack[objectStack.length - 1]);\n            array.push(value);\n        }\n    });\n}\n/**\n * Make an object stack replacer function for replacing the object at the\n * top of the stack.\n * @param {function(this: T, Node, Array<*>): *} valueReader Value reader.\n * @param {T=} opt_this The object to use as `this` in `valueReader`.\n * @return {Parser} Parser.\n * @template T\n */\nexport function makeReplacer(valueReader, opt_this) {\n    return (\n    /**\n     * @param {Node} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     */\n    function (node, objectStack) {\n        var value = valueReader.call(opt_this !== undefined ? opt_this : this, node, objectStack);\n        if (value !== undefined) {\n            objectStack[objectStack.length - 1] = value;\n        }\n    });\n}\n/**\n * Make an object property pusher function for adding a property to the\n * object at the top of the stack.\n * @param {function(this: T, Element, Array<*>): *} valueReader Value reader.\n * @param {string=} opt_property Property.\n * @param {T=} opt_this The object to use as `this` in `valueReader`.\n * @return {Parser} Parser.\n * @template T\n */\nexport function makeObjectPropertyPusher(valueReader, opt_property, opt_this) {\n    return (\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     */\n    function (node, objectStack) {\n        var value = valueReader.call(opt_this !== undefined ? opt_this : this, node, objectStack);\n        if (value !== undefined) {\n            var object = /** @type {!Object} */ (objectStack[objectStack.length - 1]);\n            var property = opt_property !== undefined ? opt_property : node.localName;\n            var array = void 0;\n            if (property in object) {\n                array = object[property];\n            }\n            else {\n                array = object[property] = [];\n            }\n            array.push(value);\n        }\n    });\n}\n/**\n * Make an object property setter function.\n * @param {function(this: T, Element, Array<*>): *} valueReader Value reader.\n * @param {string=} opt_property Property.\n * @param {T=} opt_this The object to use as `this` in `valueReader`.\n * @return {Parser} Parser.\n * @template T\n */\nexport function makeObjectPropertySetter(valueReader, opt_property, opt_this) {\n    return (\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     */\n    function (node, objectStack) {\n        var value = valueReader.call(opt_this !== undefined ? opt_this : this, node, objectStack);\n        if (value !== undefined) {\n            var object = /** @type {!Object} */ (objectStack[objectStack.length - 1]);\n            var property = opt_property !== undefined ? opt_property : node.localName;\n            object[property] = value;\n        }\n    });\n}\n/**\n * Create a serializer that appends nodes written by its `nodeWriter` to its\n * designated parent. The parent is the `node` of the\n * {@link module:ol/xml~NodeStackItem} at the top of the `objectStack`.\n * @param {function(this: T, Node, V, Array<*>): void} nodeWriter Node writer.\n * @param {T=} opt_this The object to use as `this` in `nodeWriter`.\n * @return {Serializer} Serializer.\n * @template T, V\n */\nexport function makeChildAppender(nodeWriter, opt_this) {\n    return function (node, value, objectStack) {\n        nodeWriter.call(opt_this !== undefined ? opt_this : this, node, value, objectStack);\n        var parent = /** @type {NodeStackItem} */ (objectStack[objectStack.length - 1]);\n        var parentNode = parent.node;\n        parentNode.appendChild(node);\n    };\n}\n/**\n * Create a serializer that calls the provided `nodeWriter` from\n * {@link module:ol/xml~serialize}. This can be used by the parent writer to have the\n * 'nodeWriter' called with an array of values when the `nodeWriter` was\n * designed to serialize a single item. An example would be a LineString\n * geometry writer, which could be reused for writing MultiLineString\n * geometries.\n * @param {function(this: T, Element, V, Array<*>): void} nodeWriter Node writer.\n * @param {T=} opt_this The object to use as `this` in `nodeWriter`.\n * @return {Serializer} Serializer.\n * @template T, V\n */\nexport function makeArraySerializer(nodeWriter, opt_this) {\n    var serializersNS, nodeFactory;\n    return function (node, value, objectStack) {\n        if (serializersNS === undefined) {\n            serializersNS = {};\n            var serializers = {};\n            serializers[node.localName] = nodeWriter;\n            serializersNS[node.namespaceURI] = serializers;\n            nodeFactory = makeSimpleNodeFactory(node.localName);\n        }\n        serialize(serializersNS, nodeFactory, value, objectStack);\n    };\n}\n/**\n * Create a node factory which can use the `opt_keys` passed to\n * {@link module:ol/xml~serialize} or {@link module:ol/xml~pushSerializeAndPop} as node names,\n * or a fixed node name. The namespace of the created nodes can either be fixed,\n * or the parent namespace will be used.\n * @param {string=} opt_nodeName Fixed node name which will be used for all\n *     created nodes. If not provided, the 3rd argument to the resulting node\n *     factory needs to be provided and will be the nodeName.\n * @param {string=} opt_namespaceURI Fixed namespace URI which will be used for\n *     all created nodes. If not provided, the namespace of the parent node will\n *     be used.\n * @return {function(*, Array<*>, string=): (Node|undefined)} Node factory.\n */\nexport function makeSimpleNodeFactory(opt_nodeName, opt_namespaceURI) {\n    var fixedNodeName = opt_nodeName;\n    return (\n    /**\n     * @param {*} value Value.\n     * @param {Array<*>} objectStack Object stack.\n     * @param {string=} opt_nodeName Node name.\n     * @return {Node} Node.\n     */\n    function (value, objectStack, opt_nodeName) {\n        var context = /** @type {NodeStackItem} */ (objectStack[objectStack.length - 1]);\n        var node = context.node;\n        var nodeName = fixedNodeName;\n        if (nodeName === undefined) {\n            nodeName = opt_nodeName;\n        }\n        var namespaceURI = opt_namespaceURI !== undefined ? opt_namespaceURI : node.namespaceURI;\n        return createElementNS(namespaceURI, /** @type {string} */ (nodeName));\n    });\n}\n/**\n * A node factory that creates a node using the parent's `namespaceURI` and the\n * `nodeName` passed by {@link module:ol/xml~serialize} or\n * {@link module:ol/xml~pushSerializeAndPop} to the node factory.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nexport var OBJECT_PROPERTY_NODE_FACTORY = makeSimpleNodeFactory();\n/**\n * Create an array of `values` to be used with {@link module:ol/xml~serialize} or\n * {@link module:ol/xml~pushSerializeAndPop}, where `orderedKeys` has to be provided as\n * `opt_key` argument.\n * @param {Object<string, V>} object Key-value pairs for the sequence. Keys can\n *     be a subset of the `orderedKeys`.\n * @param {Array<string>} orderedKeys Keys in the order of the sequence.\n * @return {Array<V>} Values in the order of the sequence. The resulting array\n *     has the same length as the `orderedKeys` array. Values that are not\n *     present in `object` will be `undefined` in the resulting array.\n * @template V\n */\nexport function makeSequence(object, orderedKeys) {\n    var length = orderedKeys.length;\n    var sequence = new Array(length);\n    for (var i = 0; i < length; ++i) {\n        sequence[i] = object[orderedKeys[i]];\n    }\n    return sequence;\n}\n/**\n * Create a namespaced structure, using the same values for each namespace.\n * This can be used as a starting point for versioned parsers, when only a few\n * values are version specific.\n * @param {Array<string>} namespaceURIs Namespace URIs.\n * @param {T} structure Structure.\n * @param {Object<string, T>=} opt_structureNS Namespaced structure to add to.\n * @return {Object<string, T>} Namespaced structure.\n * @template T\n */\nexport function makeStructureNS(namespaceURIs, structure, opt_structureNS) {\n    /**\n     * @type {Object<string, T>}\n     */\n    var structureNS = opt_structureNS !== undefined ? opt_structureNS : {};\n    var i, ii;\n    for (i = 0, ii = namespaceURIs.length; i < ii; ++i) {\n        structureNS[namespaceURIs[i]] = structure;\n    }\n    return structureNS;\n}\n/**\n * Parse a node using the parsers and object stack.\n * @param {Object<string, Object<string, Parser>>} parsersNS\n *     Parsers by namespace.\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @param {*=} opt_this The object to use as `this`.\n */\nexport function parseNode(parsersNS, node, objectStack, opt_this) {\n    var n;\n    for (n = node.firstElementChild; n; n = n.nextElementSibling) {\n        var parsers = parsersNS[n.namespaceURI];\n        if (parsers !== undefined) {\n            var parser = parsers[n.localName];\n            if (parser !== undefined) {\n                parser.call(opt_this, n, objectStack);\n            }\n        }\n    }\n}\n/**\n * Push an object on top of the stack, parse and return the popped object.\n * @param {T} object Object.\n * @param {Object<string, Object<string, Parser>>} parsersNS\n *     Parsers by namespace.\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @param {*=} opt_this The object to use as `this`.\n * @return {T} Object.\n * @template T\n */\nexport function pushParseAndPop(object, parsersNS, node, objectStack, opt_this) {\n    objectStack.push(object);\n    parseNode(parsersNS, node, objectStack, opt_this);\n    return /** @type {T} */ (objectStack.pop());\n}\n/**\n * Walk through an array of `values` and call a serializer for each value.\n * @param {Object<string, Object<string, Serializer>>} serializersNS\n *     Namespaced serializers.\n * @param {function(this: T, *, Array<*>, (string|undefined)): (Node|undefined)} nodeFactory\n *     Node factory. The `nodeFactory` creates the node whose namespace and name\n *     will be used to choose a node writer from `serializersNS`. This\n *     separation allows us to decide what kind of node to create, depending on\n *     the value we want to serialize. An example for this would be different\n *     geometry writers based on the geometry type.\n * @param {Array<*>} values Values to serialize. An example would be an array\n *     of {@link module:ol/Feature~Feature} instances.\n * @param {Array<*>} objectStack Node stack.\n * @param {Array<string>=} opt_keys Keys of the `values`. Will be passed to the\n *     `nodeFactory`. This is used for serializing object literals where the\n *     node name relates to the property key. The array length of `opt_keys` has\n *     to match the length of `values`. For serializing a sequence, `opt_keys`\n *     determines the order of the sequence.\n * @param {T=} opt_this The object to use as `this` for the node factory and\n *     serializers.\n * @template T\n */\nexport function serialize(serializersNS, nodeFactory, values, objectStack, opt_keys, opt_this) {\n    var length = (opt_keys !== undefined ? opt_keys : values).length;\n    var value, node;\n    for (var i = 0; i < length; ++i) {\n        value = values[i];\n        if (value !== undefined) {\n            node = nodeFactory.call(opt_this !== undefined ? opt_this : this, value, objectStack, opt_keys !== undefined ? opt_keys[i] : undefined);\n            if (node !== undefined) {\n                serializersNS[node.namespaceURI][node.localName]\n                    .call(opt_this, node, value, objectStack);\n            }\n        }\n    }\n}\n/**\n * @param {O} object Object.\n * @param {Object<string, Object<string, Serializer>>} serializersNS\n *     Namespaced serializers.\n * @param {function(this: T, *, Array<*>, (string|undefined)): (Node|undefined)} nodeFactory\n *     Node factory. The `nodeFactory` creates the node whose namespace and name\n *     will be used to choose a node writer from `serializersNS`. This\n *     separation allows us to decide what kind of node to create, depending on\n *     the value we want to serialize. An example for this would be different\n *     geometry writers based on the geometry type.\n * @param {Array<*>} values Values to serialize. An example would be an array\n *     of {@link module:ol/Feature~Feature} instances.\n * @param {Array<*>} objectStack Node stack.\n * @param {Array<string>=} opt_keys Keys of the `values`. Will be passed to the\n *     `nodeFactory`. This is used for serializing object literals where the\n *     node name relates to the property key. The array length of `opt_keys` has\n *     to match the length of `values`. For serializing a sequence, `opt_keys`\n *     determines the order of the sequence.\n * @param {T=} opt_this The object to use as `this` for the node factory and\n *     serializers.\n * @return {O|undefined} Object.\n * @template O, T\n */\nexport function pushSerializeAndPop(object, serializersNS, nodeFactory, values, objectStack, opt_keys, opt_this) {\n    objectStack.push(object);\n    serialize(serializersNS, nodeFactory, values, objectStack, opt_keys, opt_this);\n    return /** @type {O|undefined} */ (objectStack.pop());\n}\n//# sourceMappingURL=xml.js.map","/**\n * @module ol/webgl/Buffer\n */\nimport { STATIC_DRAW, STREAM_DRAW, DYNAMIC_DRAW } from '../webgl.js';\n/**\n * Used to describe the intended usage for the data: `STATIC_DRAW`, `STREAM_DRAW`\n * or `DYNAMIC_DRAW`.\n * @enum {number}\n */\nexport var BufferUsage = {\n    STATIC_DRAW: STATIC_DRAW,\n    STREAM_DRAW: STREAM_DRAW,\n    DYNAMIC_DRAW: DYNAMIC_DRAW\n};\n/**\n * @classdesc\n * Object used to store an array of data as well as usage information for that data.\n * See the documentation of [WebGLRenderingContext.bufferData](https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/bufferData) for more info.\n * @api\n */\nvar WebGLArrayBuffer = /** @class */ (function () {\n    /**\n     * @param {Array<number>=} opt_arr Array.\n     * @param {number=} opt_usage Usage, either `STATIC_DRAW`, `STREAM_DRAW` or `DYNAMIC_DRAW`. Default is `DYNAMIC_DRAW`.\n     */\n    function WebGLArrayBuffer(opt_arr, opt_usage) {\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        this.arr_ = opt_arr !== undefined ? opt_arr : [];\n        /**\n         * @private\n         * @type {number}\n         */\n        this.usage_ = opt_usage !== undefined ? opt_usage : BufferUsage.STATIC_DRAW;\n    }\n    /**\n     * @return {Array<number>} Array.\n     */\n    WebGLArrayBuffer.prototype.getArray = function () {\n        return this.arr_;\n    };\n    /**\n     * @return {number} Usage.\n     */\n    WebGLArrayBuffer.prototype.getUsage = function () {\n        return this.usage_;\n    };\n    return WebGLArrayBuffer;\n}());\nexport default WebGLArrayBuffer;\n//# sourceMappingURL=Buffer.js.map","/**\n * @module ol/webgl/ContextEventType\n */\n/**\n * @enum {string}\n */\nexport default {\n    LOST: 'webglcontextlost',\n    RESTORED: 'webglcontextrestored'\n};\n//# sourceMappingURL=ContextEventType.js.map","/**\n * @module ol/vec/mat4\n */\n/**\n * @return {Array<number>} 4x4 matrix representing a 3D identity transform.\n */\nexport function create() {\n    return [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1];\n}\n/**\n * @param {Array<number>} mat4 Flattened 4x4 matrix receiving the result.\n * @param {import(\"../transform.js\").Transform} transform Transformation matrix.\n * @return {Array<number>} 2D transformation matrix as flattened 4x4 matrix.\n */\nexport function fromTransform(mat4, transform) {\n    mat4[0] = transform[0];\n    mat4[1] = transform[1];\n    mat4[4] = transform[2];\n    mat4[5] = transform[3];\n    mat4[12] = transform[4];\n    mat4[13] = transform[5];\n    return mat4;\n}\n//# sourceMappingURL=mat4.js.map","/**\n * @module ol/webgl/PostProcessingPass\n */\nvar DEFAULT_VERTEX_SHADER = \"\\n  precision mediump float;\\n  \\n  attribute vec2 a_position;\\n  varying vec2 v_texCoord;\\n  varying vec2 v_screenCoord;\\n  \\n  uniform vec2 u_screenSize;\\n   \\n  void main() {\\n    v_texCoord = a_position * 0.5 + 0.5;\\n    v_screenCoord = v_texCoord * u_screenSize;\\n    gl_Position = vec4(a_position, 0.0, 1.0);\\n  }\\n\";\nvar DEFAULT_FRAGMENT_SHADER = \"\\n  precision mediump float;\\n   \\n  uniform sampler2D u_image;\\n   \\n  varying vec2 v_texCoord;\\n  varying vec2 v_screenCoord;\\n   \\n  void main() {\\n    gl_FragColor = texture2D(u_image, v_texCoord);\\n  }\\n\";\n/**\n * @typedef {Object} Options\n * @property {WebGLRenderingContext} webGlContext WebGL context; mandatory.\n * @property {number} [scaleRatio] Scale ratio; if < 1, the post process will render to a texture smaller than\n * the main canvas that will then be sampled up (useful for saving resource on blur steps).\n * @property {string} [vertexShader] Vertex shader source\n * @property {string} [fragmentShader] Fragment shader source\n * @property {Object.<string,import(\"./Helper\").UniformValue>} [uniforms] Uniform definitions for the post process step\n */\n/**\n * @typedef {Object} UniformInternalDescription\n * @property {import(\"./Helper\").UniformValue} value Value\n * @property {number} location Location\n * @property {WebGLTexture} [texture] Texture\n * @private\n */\n/**\n * @classdesc\n * This class is used to define Post Processing passes with custom shaders and uniforms.\n * This is used internally by {@link module:ol/webgl/Helper~WebGLHelper}.\n *\n * Please note that the final output on the DOM canvas is expected to have premultiplied alpha, which means that\n * a pixel which is 100% red with an opacity of 50% must have a color of (r=0.5, g=0, b=0, a=0.5).\n * Failing to provide pixel colors with premultiplied alpha will result in render anomalies.\n *\n * The default post-processing pass does *not* multiply color values with alpha value, it expects color values to be\n * premultiplied.\n *\n * Default shaders are shown hereafter:\n *\n * * Vertex shader:\n *\n *   ```\n *   precision mediump float;\n *\n *   attribute vec2 a_position;\n *   varying vec2 v_texCoord;\n *   varying vec2 v_screenCoord;\n *\n *   uniform vec2 u_screenSize;\n *\n *   void main() {\n *     v_texCoord = a_position * 0.5 + 0.5;\n *     v_screenCoord = v_texCoord * u_screenSize;\n *     gl_Position = vec4(a_position, 0.0, 1.0);\n *   }\n *   ```\n *\n * * Fragment shader:\n *\n *   ```\n *   precision mediump float;\n *\n *   uniform sampler2D u_image;\n *\n *   varying vec2 v_texCoord;\n *   varying vec2 v_screenCoord;\n *\n *   void main() {\n *     gl_FragColor = texture2D(u_image, v_texCoord);\n *   }\n *   ```\n *\n * @api\n */\nvar WebGLPostProcessingPass = /** @class */ (function () {\n    /**\n     * @param {Options=} options Options.\n     */\n    function WebGLPostProcessingPass(options) {\n        this.gl_ = options.webGlContext;\n        var gl = this.gl_;\n        this.scaleRatio_ = options.scaleRatio || 1;\n        this.renderTargetTexture_ = gl.createTexture();\n        this.renderTargetTextureSize_ = null;\n        this.frameBuffer_ = gl.createFramebuffer();\n        // compile the program for the frame buffer\n        // TODO: make compilation errors show up\n        var vertexShader = gl.createShader(gl.VERTEX_SHADER);\n        gl.shaderSource(vertexShader, options.vertexShader || DEFAULT_VERTEX_SHADER);\n        gl.compileShader(vertexShader);\n        var fragmentShader = gl.createShader(gl.FRAGMENT_SHADER);\n        gl.shaderSource(fragmentShader, options.fragmentShader || DEFAULT_FRAGMENT_SHADER);\n        gl.compileShader(fragmentShader);\n        this.renderTargetProgram_ = gl.createProgram();\n        gl.attachShader(this.renderTargetProgram_, vertexShader);\n        gl.attachShader(this.renderTargetProgram_, fragmentShader);\n        gl.linkProgram(this.renderTargetProgram_);\n        // bind the vertices buffer for the frame buffer\n        this.renderTargetVerticesBuffer_ = gl.createBuffer();\n        var verticesArray = [\n            -1, -1,\n            1, -1,\n            -1, 1,\n            1, -1,\n            1, 1,\n            -1, 1\n        ];\n        gl.bindBuffer(gl.ARRAY_BUFFER, this.renderTargetVerticesBuffer_);\n        gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(verticesArray), gl.STATIC_DRAW);\n        this.renderTargetAttribLocation_ = gl.getAttribLocation(this.renderTargetProgram_, 'a_position');\n        this.renderTargetUniformLocation_ = gl.getUniformLocation(this.renderTargetProgram_, 'u_screenSize');\n        this.renderTargetTextureLocation_ = gl.getUniformLocation(this.renderTargetProgram_, 'u_image');\n        /**\n         * Holds info about custom uniforms used in the post processing pass\n         * @type {Array<UniformInternalDescription>}\n         * @private\n         */\n        this.uniforms_ = [];\n        options.uniforms && Object.keys(options.uniforms).forEach(function (name) {\n            this.uniforms_.push({\n                value: options.uniforms[name],\n                location: gl.getUniformLocation(this.renderTargetProgram_, name)\n            });\n        }.bind(this));\n    }\n    /**\n     * Get the WebGL rendering context\n     * @return {WebGLRenderingContext} The rendering context.\n     * @api\n     */\n    WebGLPostProcessingPass.prototype.getGL = function () {\n        return this.gl_;\n    };\n    /**\n     * Initialize the render target texture of the post process, make sure it is at the\n     * right size and bind it as a render target for the next draw calls.\n     * The last step to be initialized will be the one where the primitives are rendered.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState current frame state\n     * @api\n     */\n    WebGLPostProcessingPass.prototype.init = function (frameState) {\n        var gl = this.getGL();\n        var canvas = gl.canvas;\n        var size = frameState.size;\n        // rendering goes to my buffer\n        gl.bindFramebuffer(gl.FRAMEBUFFER, this.getFrameBuffer());\n        gl.viewport(0, 0, canvas.width * this.scaleRatio_, canvas.height * this.scaleRatio_);\n        // if size has changed: adjust canvas & render target texture\n        if (!this.renderTargetTextureSize_ ||\n            this.renderTargetTextureSize_[0] !== size[0] || this.renderTargetTextureSize_[1] !== size[1]) {\n            this.renderTargetTextureSize_ = size;\n            // create a new texture\n            var level = 0;\n            var internalFormat = gl.RGBA;\n            var border = 0;\n            var format = gl.RGBA;\n            var type = gl.UNSIGNED_BYTE;\n            var data = null;\n            gl.bindTexture(gl.TEXTURE_2D, this.renderTargetTexture_);\n            gl.texImage2D(gl.TEXTURE_2D, level, internalFormat, canvas.width * this.scaleRatio_, canvas.height * this.scaleRatio_, border, format, type, data);\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n            // bind the texture to the framebuffer\n            gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, this.renderTargetTexture_, 0);\n        }\n    };\n    /**\n     * Render to the next postprocessing pass (or to the canvas if final pass).\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState current frame state\n     * @param {WebGLPostProcessingPass} [nextPass] Next pass, optional\n     * @api\n     */\n    WebGLPostProcessingPass.prototype.apply = function (frameState, nextPass) {\n        var gl = this.getGL();\n        var canvas = gl.canvas;\n        gl.bindFramebuffer(gl.FRAMEBUFFER, nextPass ? nextPass.getFrameBuffer() : null);\n        gl.activeTexture(gl.TEXTURE0);\n        gl.bindTexture(gl.TEXTURE_2D, this.renderTargetTexture_);\n        // render the frame buffer to the canvas\n        gl.clearColor(0.0, 0.0, 0.0, 0.0);\n        gl.clear(gl.COLOR_BUFFER_BIT);\n        gl.enable(gl.BLEND);\n        gl.blendFunc(gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\n        gl.viewport(0, 0, canvas.width, canvas.height);\n        gl.bindBuffer(gl.ARRAY_BUFFER, this.renderTargetVerticesBuffer_);\n        gl.useProgram(this.renderTargetProgram_);\n        gl.enableVertexAttribArray(this.renderTargetAttribLocation_);\n        gl.vertexAttribPointer(this.renderTargetAttribLocation_, 2, gl.FLOAT, false, 0, 0);\n        gl.uniform2f(this.renderTargetUniformLocation_, canvas.width, canvas.height);\n        gl.uniform1i(this.renderTargetTextureLocation_, 0);\n        this.applyUniforms(frameState);\n        gl.drawArrays(gl.TRIANGLES, 0, 6);\n    };\n    /**\n     * @returns {WebGLFramebuffer} Frame buffer\n     * @api\n     */\n    WebGLPostProcessingPass.prototype.getFrameBuffer = function () {\n        return this.frameBuffer_;\n    };\n    /**\n     * Sets the custom uniforms based on what was given in the constructor.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     * @private\n     */\n    WebGLPostProcessingPass.prototype.applyUniforms = function (frameState) {\n        var gl = this.getGL();\n        var value;\n        var textureSlot = 1;\n        this.uniforms_.forEach(function (uniform) {\n            value = typeof uniform.value === 'function' ? uniform.value(frameState) : uniform.value;\n            // apply value based on type\n            if (value instanceof HTMLCanvasElement || value instanceof ImageData) {\n                // create a texture & put data\n                if (!uniform.texture) {\n                    uniform.texture = gl.createTexture();\n                }\n                gl.activeTexture(gl[\"TEXTURE\" + textureSlot]);\n                gl.bindTexture(gl.TEXTURE_2D, uniform.texture);\n                gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n                gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n                gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n                if (value instanceof ImageData) {\n                    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, value.width, value.height, 0, gl.UNSIGNED_BYTE, new Uint8Array(value.data));\n                }\n                else {\n                    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, value);\n                }\n                // fill texture slots\n                gl.uniform1i(uniform.location, textureSlot++);\n            }\n            else if (Array.isArray(value)) {\n                switch (value.length) {\n                    case 2:\n                        gl.uniform2f(uniform.location, value[0], value[1]);\n                        return;\n                    case 3:\n                        gl.uniform3f(uniform.location, value[0], value[1], value[2]);\n                        return;\n                    case 4:\n                        gl.uniform4f(uniform.location, value[0], value[1], value[2], value[3]);\n                        return;\n                    default: return;\n                }\n            }\n            else if (typeof value === 'number') {\n                gl.uniform1f(uniform.location, value);\n            }\n        });\n    };\n    return WebGLPostProcessingPass;\n}());\nexport default WebGLPostProcessingPass;\n//# sourceMappingURL=PostProcessingPass.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/webgl/Helper\n */\nimport { getUid } from '../util.js';\nimport { EXTENSIONS as WEBGL_EXTENSIONS } from '../webgl.js';\nimport Disposable from '../Disposable.js';\nimport { includes } from '../array.js';\nimport { listen, unlistenAll } from '../events.js';\nimport { clear } from '../obj.js';\nimport { ARRAY_BUFFER, ELEMENT_ARRAY_BUFFER, TEXTURE_2D, TEXTURE_WRAP_S, TEXTURE_WRAP_T } from '../webgl.js';\nimport ContextEventType from '../webgl/ContextEventType.js';\nimport { create as createTransform, reset as resetTransform, rotate as rotateTransform, scale as scaleTransform, translate as translateTransform } from '../transform';\nimport { create, fromTransform } from '../vec/mat4';\nimport WebGLPostProcessingPass from './PostProcessingPass';\nimport { getContext } from '../webgl';\n/**\n * @typedef {Object} BufferCacheEntry\n * @property {import(\"./Buffer.js\").default} buffer\n * @property {WebGLBuffer} webGlBuffer\n */\n/**\n * Shader types, either `FRAGMENT_SHADER` or `VERTEX_SHADER`.\n * @enum {number}\n */\nexport var ShaderType = {\n    FRAGMENT_SHADER: 0x8B30,\n    VERTEX_SHADER: 0x8B31\n};\n/**\n * Uniform names used in the default shaders: `PROJECTION_MATRIX`, `OFFSET_SCALE_MATRIX`.\n * and `OFFSET_ROTATION_MATRIX`.\n * @enum {string}\n */\nexport var DefaultUniform = {\n    PROJECTION_MATRIX: 'u_projectionMatrix',\n    OFFSET_SCALE_MATRIX: 'u_offsetScaleMatrix',\n    OFFSET_ROTATION_MATRIX: 'u_offsetRotateMatrix'\n};\n/**\n * Attribute names used in the default shaders: `POSITION`, `TEX_COORD`, `OPACITY`,\n * `ROTATE_WITH_VIEW`, `OFFSETS` and `COLOR`\n * @enum {string}\n */\nexport var DefaultAttrib = {\n    POSITION: 'a_position',\n    TEX_COORD: 'a_texCoord',\n    OPACITY: 'a_opacity',\n    ROTATE_WITH_VIEW: 'a_rotateWithView',\n    OFFSETS: 'a_offsets',\n    COLOR: 'a_color'\n};\n/**\n * @typedef {number|Array<number>|HTMLCanvasElement|HTMLImageElement|ImageData} UniformLiteralValue\n */\n/**\n * Uniform value can be a number, array of numbers (2 to 4), canvas element or a callback returning\n * one of the previous types.\n * @typedef {UniformLiteralValue|function(import(\"../PluggableMap.js\").FrameState):UniformLiteralValue} UniformValue\n */\n/**\n * @typedef {Object} PostProcessesOptions\n * @property {number} [scaleRatio] Scale ratio; if < 1, the post process will render to a texture smaller than\n * the main canvas which will then be sampled up (useful for saving resource on blur steps).\n * @property {string} [vertexShader] Vertex shader source\n * @property {string} [fragmentShader] Fragment shader source\n * @property {Object.<string,UniformValue>} [uniforms] Uniform definitions for the post process step\n */\n/**\n * @typedef {Object} Options\n * @property {Object.<string,UniformValue>} [uniforms] Uniform definitions; property names must match the uniform\n * names in the provided or default shaders.\n * @property {Array<PostProcessesOptions>} [postProcesses] Post-processes definitions\n */\n/**\n * @typedef {Object} UniformInternalDescription\n * @property {string} name Name\n * @property {UniformValue=} value Value\n * @property {WebGLTexture} [texture] Texture\n * @private\n */\n/**\n * @classdesc\n * This class is intended to provide low-level functions related to WebGL rendering, so that accessing\n * directly the WebGL API should not be required anymore.\n *\n * Several operations are handled by the `WebGLHelper` class:\n *\n * ### Define custom shaders and uniforms\n *\n *   *Shaders* are low-level programs executed on the GPU and written in GLSL. There are two types of shaders:\n *\n *   Vertex shaders are used to manipulate the position and attribute of *vertices* of rendered primitives (ie. corners of a square).\n *   Outputs are:\n *\n *   * `gl_Position`: position of the vertex in screen space\n *\n *   * Varyings usually prefixed with `v_` are passed on to the fragment shader\n *\n *   Fragment shaders are used to control the actual color of the pixels drawn on screen. Their only output is `gl_FragColor`.\n *\n *   Both shaders can take *uniforms* or *attributes* as input. Attributes are explained later. Uniforms are common, read-only values that\n *   can be changed at every frame and can be of type float, arrays of float or images.\n *\n *   Shaders must be compiled and assembled into a program like so:\n *   ```js\n *   // here we simply create two shaders and assemble them in a program which is then used\n *   // for subsequent rendering calls\n *   const vertexShader = new WebGLVertex(VERTEX_SHADER);\n *   const fragmentShader = new WebGLFragment(FRAGMENT_SHADER);\n *   this.program = this.context.getProgram(fragmentShader, vertexShader);\n *   this.context.useProgram(this.program);\n *   ```\n *\n *   Uniforms are defined using the `uniforms` option and can either be explicit values or callbacks taking the frame state as argument.\n *   You can also change their value along the way like so:\n *   ```js\n *   this.context.setUniformFloatValue('u_value', valueAsNumber);\n *   ```\n *\n * ### Defining post processing passes\n *\n *   *Post processing* describes the act of rendering primitives to a texture, and then rendering this texture to the final canvas\n *   while applying special effects in screen space.\n *   Typical uses are: blurring, color manipulation, depth of field, filtering...\n *\n *   The `WebGLHelper` class offers the possibility to define post processes at creation time using the `postProcesses` option.\n *   A post process step accepts the following options:\n *\n *   * `fragmentShader` and `vertexShader`: text literals in GLSL language that will be compiled and used in the post processing step.\n *   * `uniforms`: uniforms can be defined for the post processing steps just like for the main render.\n *   * `scaleRatio`: allows using an intermediate texture smaller or higher than the final canvas in the post processing step.\n *     This is typically used in blur steps to reduce the performance overhead by using an already downsampled texture as input.\n *\n *   The {@link module:ol/webgl/PostProcessingPass~WebGLPostProcessingPass} class is used internally, refer to its documentation for more info.\n *\n * ### Binding WebGL buffers and flushing data into them\n *\n *   Data that must be passed to the GPU has to be transferred using {@link module:ol/webgl/Buffer~WebGLArrayBuffer} objects.\n *   A buffer has to be created only once, but must be bound every time the buffer content will be used for rendering.\n *   This is done using {@link bindBuffer}.\n *   When the buffer's array content has changed, the new data has to be flushed to the GPU memory; this is done using\n *   {@link flushBufferData}. Note: this operation is expensive and should be done as infrequently as possible.\n *\n *   When binding an array buffer, a `target` parameter must be given: it should be either {@link module:ol/webgl.ARRAY_BUFFER}\n *   (if the buffer contains vertices data) or {@link module:ol/webgl.ELEMENT_ARRAY_BUFFER} (if the buffer contains indices data).\n *\n *   Examples below:\n *   ```js\n *   // at initialization phase\n *   this.verticesBuffer = new WebGLArrayBuffer([], DYNAMIC_DRAW);\n *   this.indicesBuffer = new WebGLArrayBuffer([], DYNAMIC_DRAW);\n *\n *   // when array values have changed\n *   this.context.flushBufferData(ARRAY_BUFFER, this.verticesBuffer);\n *   this.context.flushBufferData(ELEMENT_ARRAY_BUFFER, this.indicesBuffer);\n *\n *   // at rendering phase\n *   this.context.bindBuffer(ARRAY_BUFFER, this.verticesBuffer);\n *   this.context.bindBuffer(ELEMENT_ARRAY_BUFFER, this.indicesBuffer);\n *   ```\n *\n * ### Specifying attributes\n *\n *   The GPU only receives the data as arrays of numbers. These numbers must be handled differently depending on what it describes (position, texture coordinate...).\n *   Attributes are used to specify these uses. Use {@link enableAttributeArray} and either\n *   the default attribute names in {@link module:ol/webgl/Helper.DefaultAttrib} or custom ones.\n *\n *   Please note that you will have to specify the type and offset of the attributes in the data array. You can refer to the documentation of [WebGLRenderingContext.vertexAttribPointer](https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/vertexAttribPointer) for more explanation.\n *   ```js\n *   // here we indicate that the data array has the following structure:\n *   // [posX, posY, offsetX, offsetY, texCoordU, texCoordV, posX, posY, ...]\n *   let bytesPerFloat = Float32Array.BYTES_PER_ELEMENT;\n *   this.context.enableAttributeArray(DefaultAttrib.POSITION, 2, FLOAT, bytesPerFloat * 6, 0);\n *   this.context.enableAttributeArray(DefaultAttrib.OFFSETS, 2, FLOAT, bytesPerFloat * 6, bytesPerFloat * 2);\n *   this.context.enableAttributeArray(DefaultAttrib.TEX_COORD, 2, FLOAT, bytesPerFloat * 6, bytesPerFloat * 4);\n *   ```\n *\n * ### Rendering primitives\n *\n *   Once all the steps above have been achieved, rendering primitives to the screen is done using {@link prepareDraw}, {@link drawElements} and {@link finalizeDraw}.\n *   ```js\n *   // frame preparation step\n *   this.context.prepareDraw(frameState);\n *\n *   // call this for every data array that has to be rendered on screen\n *   this.context.drawElements(0, this.indicesBuffer.getArray().length);\n *\n *   // finalize the rendering by applying post processes\n *   this.context.finalizeDraw(frameState);\n *   ```\n *\n * For an example usage of this class, refer to {@link module:ol/renderer/webgl/PointsLayer~WebGLPointsLayerRenderer}.\n *\n *\n * @api\n */\nvar WebGLHelper = /** @class */ (function (_super) {\n    __extends(WebGLHelper, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function WebGLHelper(opt_options) {\n        var _this = _super.call(this) || this;\n        var options = opt_options || {};\n        /**\n         * @private\n         * @type {HTMLCanvasElement}\n         */\n        _this.canvas_ = document.createElement('canvas');\n        _this.canvas_.style.position = 'absolute';\n        /**\n         * @private\n         * @type {WebGLRenderingContext}\n         */\n        _this.gl_ = getContext(_this.canvas_);\n        var gl = _this.getGL();\n        /**\n         * @private\n         * @type {!Object<string, BufferCacheEntry>}\n         */\n        _this.bufferCache_ = {};\n        /**\n         * @private\n         * @type {!Array<WebGLShader>}\n         */\n        _this.shaderCache_ = [];\n        /**\n         * @private\n         * @type {!Array<WebGLProgram>}\n         */\n        _this.programCache_ = [];\n        /**\n         * @private\n         * @type {WebGLProgram}\n         */\n        _this.currentProgram_ = null;\n        /**\n         * @type {boolean}\n         */\n        _this.hasOESElementIndexUint = includes(WEBGL_EXTENSIONS, 'OES_element_index_uint');\n        // use the OES_element_index_uint extension if available\n        if (_this.hasOESElementIndexUint) {\n            gl.getExtension('OES_element_index_uint');\n        }\n        listen(_this.canvas_, ContextEventType.LOST, _this.handleWebGLContextLost, _this);\n        listen(_this.canvas_, ContextEventType.RESTORED, _this.handleWebGLContextRestored, _this);\n        /**\n         * @private\n         * @type {import(\"../transform.js\").Transform}\n         */\n        _this.projectionMatrix_ = createTransform();\n        /**\n         * @private\n         * @type {import(\"../transform.js\").Transform}\n         */\n        _this.offsetRotateMatrix_ = createTransform();\n        /**\n         * @private\n         * @type {import(\"../transform.js\").Transform}\n         */\n        _this.offsetScaleMatrix_ = createTransform();\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.tmpMat4_ = create();\n        /**\n         * @private\n         * @type {Object.<string, WebGLUniformLocation>}\n         */\n        _this.uniformLocations_ = {};\n        /**\n         * @private\n         * @type {Object.<string, number>}\n         */\n        _this.attribLocations_ = {};\n        /**\n         * Holds info about custom uniforms used in the post processing pass.\n         * If the uniform is a texture, the WebGL Texture object will be stored here.\n         * @type {Array<UniformInternalDescription>}\n         * @private\n         */\n        _this.uniforms_ = [];\n        if (options.uniforms) {\n            for (var name_1 in options.uniforms) {\n                _this.uniforms_.push({\n                    name: name_1,\n                    value: options.uniforms[name_1]\n                });\n            }\n        }\n        /**\n         * An array of PostProcessingPass objects is kept in this variable, built from the steps provided in the\n         * options. If no post process was given, a default one is used (so as not to have to make an exception to\n         * the frame buffer logic).\n         * @type {Array<WebGLPostProcessingPass>}\n         * @private\n         */\n        _this.postProcessPasses_ = options.postProcesses ? options.postProcesses.map(function (options) {\n            return new WebGLPostProcessingPass({\n                webGlContext: gl,\n                scaleRatio: options.scaleRatio,\n                vertexShader: options.vertexShader,\n                fragmentShader: options.fragmentShader,\n                uniforms: options.uniforms\n            });\n        }) : [new WebGLPostProcessingPass({ webGlContext: gl })];\n        /**\n         * @type {string|null}\n         * @private\n         */\n        _this.shaderCompileErrors_ = null;\n        return _this;\n    }\n    /**\n     * Just bind the buffer if it's in the cache. Otherwise create\n     * the WebGL buffer, bind it, populate it, and add an entry to\n     * the cache.\n     * @param {number} target Target, either ARRAY_BUFFER or ELEMENT_ARRAY_BUFFER.\n     * @param {import(\"./Buffer\").default} buffer Buffer.\n     * @api\n     */\n    WebGLHelper.prototype.bindBuffer = function (target, buffer) {\n        var gl = this.getGL();\n        var bufferKey = getUid(buffer);\n        var bufferCache = this.bufferCache_[bufferKey];\n        if (!bufferCache) {\n            var webGlBuffer = gl.createBuffer();\n            bufferCache = this.bufferCache_[bufferKey] = {\n                buffer: buffer,\n                webGlBuffer: webGlBuffer\n            };\n        }\n        gl.bindBuffer(target, bufferCache.webGlBuffer);\n    };\n    /**\n     * Update the data contained in the buffer array; this is required for the\n     * new data to be rendered\n     * @param {number} target Target, either ARRAY_BUFFER or ELEMENT_ARRAY_BUFFER.\n     * @param {import(\"./Buffer\").default} buffer Buffer.\n     * @api\n     */\n    WebGLHelper.prototype.flushBufferData = function (target, buffer) {\n        var gl = this.getGL();\n        var arr = buffer.getArray();\n        this.bindBuffer(target, buffer);\n        var /** @type {ArrayBufferView} */ arrayBuffer;\n        if (target == ARRAY_BUFFER) {\n            arrayBuffer = new Float32Array(arr);\n        }\n        else if (target == ELEMENT_ARRAY_BUFFER) {\n            arrayBuffer = this.hasOESElementIndexUint ?\n                new Uint32Array(arr) : new Uint16Array(arr);\n        }\n        gl.bufferData(target, arrayBuffer, buffer.getUsage());\n    };\n    /**\n     * @param {import(\"./Buffer.js\").default} buf Buffer.\n     */\n    WebGLHelper.prototype.deleteBuffer = function (buf) {\n        var gl = this.getGL();\n        var bufferKey = getUid(buf);\n        var bufferCacheEntry = this.bufferCache_[bufferKey];\n        if (!gl.isContextLost()) {\n            gl.deleteBuffer(bufferCacheEntry.buffer);\n        }\n        delete this.bufferCache_[bufferKey];\n    };\n    /**\n     * @inheritDoc\n     */\n    WebGLHelper.prototype.disposeInternal = function () {\n        unlistenAll(this.canvas_);\n        var gl = this.getGL();\n        if (!gl.isContextLost()) {\n            for (var key in this.bufferCache_) {\n                gl.deleteBuffer(this.bufferCache_[key].buffer);\n            }\n            for (var key in this.programCache_) {\n                gl.deleteProgram(this.programCache_[key]);\n            }\n            for (var key in this.shaderCache_) {\n                gl.deleteShader(this.shaderCache_[key]);\n            }\n        }\n    };\n    /**\n     * Clear the buffer & set the viewport to draw.\n     * Post process passes will be initialized here, the first one being bound as a render target for\n     * subsequent draw calls.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState current frame state\n     * @api\n     */\n    WebGLHelper.prototype.prepareDraw = function (frameState) {\n        var gl = this.getGL();\n        var canvas = this.getCanvas();\n        var size = frameState.size;\n        var pixelRatio = frameState.pixelRatio;\n        canvas.width = size[0] * pixelRatio;\n        canvas.height = size[1] * pixelRatio;\n        canvas.style.width = size[0] + 'px';\n        canvas.style.height = size[1] + 'px';\n        gl.useProgram(this.currentProgram_);\n        // loop backwards in post processes list\n        for (var i = this.postProcessPasses_.length - 1; i >= 0; i--) {\n            this.postProcessPasses_[i].init(frameState);\n        }\n        gl.bindTexture(gl.TEXTURE_2D, null);\n        gl.clearColor(0.0, 0.0, 0.0, 0.0);\n        gl.clear(gl.COLOR_BUFFER_BIT);\n        gl.enable(gl.BLEND);\n        gl.blendFunc(gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\n        this.applyFrameState(frameState);\n        this.applyUniforms(frameState);\n    };\n    /**\n     * Execute a draw call based on the currently bound program, texture, buffers, attributes.\n     * @param {number} start Start index.\n     * @param {number} end End index.\n     * @api\n     */\n    WebGLHelper.prototype.drawElements = function (start, end) {\n        var gl = this.getGL();\n        var elementType = this.hasOESElementIndexUint ?\n            gl.UNSIGNED_INT : gl.UNSIGNED_SHORT;\n        var elementSize = this.hasOESElementIndexUint ? 4 : 2;\n        var numItems = end - start;\n        var offsetInBytes = start * elementSize;\n        gl.drawElements(gl.TRIANGLES, numItems, elementType, offsetInBytes);\n    };\n    /**\n     * Apply the successive post process passes which will eventually render to the actual canvas.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState current frame state\n     * @api\n     */\n    WebGLHelper.prototype.finalizeDraw = function (frameState) {\n        // apply post processes using the next one as target\n        for (var i = 0; i < this.postProcessPasses_.length; i++) {\n            this.postProcessPasses_[i].apply(frameState, this.postProcessPasses_[i + 1] || null);\n        }\n    };\n    /**\n     * @return {HTMLCanvasElement} Canvas.\n     * @api\n     */\n    WebGLHelper.prototype.getCanvas = function () {\n        return this.canvas_;\n    };\n    /**\n     * Get the WebGL rendering context\n     * @return {WebGLRenderingContext} The rendering context.\n     * @api\n     */\n    WebGLHelper.prototype.getGL = function () {\n        return this.gl_;\n    };\n    /**\n     * Sets the default matrix uniforms for a given frame state. This is called internally in `prepareDraw`.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     * @private\n     */\n    WebGLHelper.prototype.applyFrameState = function (frameState) {\n        var size = frameState.size;\n        var rotation = frameState.viewState.rotation;\n        var resolution = frameState.viewState.resolution;\n        var center = frameState.viewState.center;\n        // set the \"uniform\" values (coordinates 0,0 are the center of the view)\n        var projectionMatrix = resetTransform(this.projectionMatrix_);\n        scaleTransform(projectionMatrix, 2 / (resolution * size[0]), 2 / (resolution * size[1]));\n        rotateTransform(projectionMatrix, -rotation);\n        translateTransform(projectionMatrix, -center[0], -center[1]);\n        var offsetScaleMatrix = resetTransform(this.offsetScaleMatrix_);\n        scaleTransform(offsetScaleMatrix, 2 / size[0], 2 / size[1]);\n        var offsetRotateMatrix = resetTransform(this.offsetRotateMatrix_);\n        if (rotation !== 0) {\n            rotateTransform(offsetRotateMatrix, -rotation);\n        }\n        this.setUniformMatrixValue(DefaultUniform.PROJECTION_MATRIX, fromTransform(this.tmpMat4_, projectionMatrix));\n        this.setUniformMatrixValue(DefaultUniform.OFFSET_SCALE_MATRIX, fromTransform(this.tmpMat4_, offsetScaleMatrix));\n        this.setUniformMatrixValue(DefaultUniform.OFFSET_ROTATION_MATRIX, fromTransform(this.tmpMat4_, offsetRotateMatrix));\n    };\n    /**\n     * Sets the custom uniforms based on what was given in the constructor. This is called internally in `prepareDraw`.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     * @private\n     */\n    WebGLHelper.prototype.applyUniforms = function (frameState) {\n        var gl = this.getGL();\n        var value;\n        var textureSlot = 0;\n        this.uniforms_.forEach(function (uniform) {\n            value = typeof uniform.value === 'function' ? uniform.value(frameState) : uniform.value;\n            // apply value based on type\n            if (value instanceof HTMLCanvasElement || value instanceof HTMLImageElement || value instanceof ImageData) {\n                // create a texture & put data\n                if (!uniform.texture) {\n                    uniform.texture = gl.createTexture();\n                }\n                gl.activeTexture(gl[\"TEXTURE\" + textureSlot]);\n                gl.bindTexture(gl.TEXTURE_2D, uniform.texture);\n                gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n                gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n                gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n                gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, value);\n                // fill texture slots by increasing index\n                gl.uniform1i(this.getUniformLocation(uniform.name), textureSlot++);\n            }\n            else if (Array.isArray(value)) {\n                switch (value.length) {\n                    case 2:\n                        gl.uniform2f(this.getUniformLocation(uniform.name), value[0], value[1]);\n                        return;\n                    case 3:\n                        gl.uniform3f(this.getUniformLocation(uniform.name), value[0], value[1], value[2]);\n                        return;\n                    case 4:\n                        gl.uniform4f(this.getUniformLocation(uniform.name), value[0], value[1], value[2], value[3]);\n                        return;\n                    default:\n                        return;\n                }\n            }\n            else if (typeof value === 'number') {\n                gl.uniform1f(this.getUniformLocation(uniform.name), value);\n            }\n        }.bind(this));\n    };\n    /**\n     * Use a program.  If the program is already in use, this will return `false`.\n     * @param {WebGLProgram} program Program.\n     * @return {boolean} Changed.\n     * @api\n     */\n    WebGLHelper.prototype.useProgram = function (program) {\n        if (program == this.currentProgram_) {\n            return false;\n        }\n        else {\n            var gl = this.getGL();\n            gl.useProgram(program);\n            this.currentProgram_ = program;\n            this.uniformLocations_ = {};\n            this.attribLocations_ = {};\n            return true;\n        }\n    };\n    /**\n     * Will attempt to compile a vertex or fragment shader based on source\n     * On error, the shader will be returned but\n     * `gl.getShaderParameter(shader, gl.COMPILE_STATUS)` will return `true`\n     * Use `gl.getShaderInfoLog(shader)` to have details\n     * @param {string} source Shader source\n     * @param {ShaderType} type VERTEX_SHADER or FRAGMENT_SHADER\n     * @return {WebGLShader} Shader object\n     */\n    WebGLHelper.prototype.compileShader = function (source, type) {\n        var gl = this.getGL();\n        var shader = gl.createShader(type);\n        gl.shaderSource(shader, source);\n        gl.compileShader(shader);\n        this.shaderCache_.push(shader);\n        return shader;\n    };\n    /**\n     * Create a program for a vertex and fragment shader. The shaders compilation may have failed:\n     * use `WebGLHelper.getShaderCompileErrors()`to have details if any.\n     * @param {string} fragmentShaderSource Fragment shader source.\n     * @param {string} vertexShaderSource Vertex shader source.\n     * @return {WebGLProgram} Program\n     * @api\n     */\n    WebGLHelper.prototype.getProgram = function (fragmentShaderSource, vertexShaderSource) {\n        var gl = this.getGL();\n        var fragmentShader = this.compileShader(fragmentShaderSource, gl.FRAGMENT_SHADER);\n        var vertexShader = this.compileShader(vertexShaderSource, gl.VERTEX_SHADER);\n        this.shaderCompileErrors_ = null;\n        if (gl.getShaderInfoLog(fragmentShader)) {\n            this.shaderCompileErrors_ =\n                \"Fragment shader compilation failed:\\n\" + gl.getShaderInfoLog(fragmentShader);\n        }\n        if (gl.getShaderInfoLog(vertexShader)) {\n            this.shaderCompileErrors_ = (this.shaderCompileErrors_ || '') +\n                (\"Vertex shader compilation failed:\\n\" + gl.getShaderInfoLog(vertexShader));\n        }\n        var program = gl.createProgram();\n        gl.attachShader(program, fragmentShader);\n        gl.attachShader(program, vertexShader);\n        gl.linkProgram(program);\n        this.programCache_.push(program);\n        return program;\n    };\n    /**\n     * Will return the last shader compilation errors. If no error happened, will return null;\n     * @return {string|null} Errors description, or null if last compilation was successful\n     * @api\n     */\n    WebGLHelper.prototype.getShaderCompileErrors = function () {\n        return this.shaderCompileErrors_;\n    };\n    /**\n     * Will get the location from the shader or the cache\n     * @param {string} name Uniform name\n     * @return {WebGLUniformLocation} uniformLocation\n     * @api\n     */\n    WebGLHelper.prototype.getUniformLocation = function (name) {\n        if (this.uniformLocations_[name] === undefined) {\n            this.uniformLocations_[name] = this.getGL().getUniformLocation(this.currentProgram_, name);\n        }\n        return this.uniformLocations_[name];\n    };\n    /**\n     * Will get the location from the shader or the cache\n     * @param {string} name Attribute name\n     * @return {number} attribLocation\n     * @api\n     */\n    WebGLHelper.prototype.getAttributeLocation = function (name) {\n        if (this.attribLocations_[name] === undefined) {\n            this.attribLocations_[name] = this.getGL().getAttribLocation(this.currentProgram_, name);\n        }\n        return this.attribLocations_[name];\n    };\n    /**\n     * Give a value for a standard float uniform\n     * @param {string} uniform Uniform name\n     * @param {number} value Value\n     * @api\n     */\n    WebGLHelper.prototype.setUniformFloatValue = function (uniform, value) {\n        this.getGL().uniform1f(this.getUniformLocation(uniform), value);\n    };\n    /**\n     * Give a value for a standard matrix4 uniform\n     * @param {string} uniform Uniform name\n     * @param {Array<number>} value Matrix value\n     * @api\n     */\n    WebGLHelper.prototype.setUniformMatrixValue = function (uniform, value) {\n        this.getGL().uniformMatrix4fv(this.getUniformLocation(uniform), false, value);\n    };\n    /**\n     * Will set the currently bound buffer to an attribute of the shader program\n     * @param {string} attribName Attribute name\n     * @param {number} size Number of components per attributes\n     * @param {number} type UNSIGNED_INT, UNSIGNED_BYTE, UNSIGNED_SHORT or FLOAT\n     * @param {number} stride Stride in bytes (0 means attribs are packed)\n     * @param {number} offset Offset in bytes\n     * @api\n     */\n    WebGLHelper.prototype.enableAttributeArray = function (attribName, size, type, stride, offset) {\n        var location = this.getAttributeLocation(attribName);\n        // the attribute has not been found in the shaders; do not enable it\n        if (location < 0) {\n            return;\n        }\n        this.getGL().enableVertexAttribArray(location);\n        this.getGL().vertexAttribPointer(location, size, type, false, stride, offset);\n    };\n    /**\n     * WebGL context was lost\n     * @private\n     */\n    WebGLHelper.prototype.handleWebGLContextLost = function () {\n        clear(this.bufferCache_);\n        clear(this.shaderCache_);\n        clear(this.programCache_);\n        this.currentProgram_ = null;\n    };\n    /**\n     * WebGL context was restored\n     * @private\n     */\n    WebGLHelper.prototype.handleWebGLContextRestored = function () {\n    };\n    // TODO: shutdown program\n    /**\n     * TODO: these are not used and should be reworked\n     * @param {number=} opt_wrapS wrapS.\n     * @param {number=} opt_wrapT wrapT.\n     * @return {WebGLTexture} The texture.\n     */\n    WebGLHelper.prototype.createTextureInternal = function (opt_wrapS, opt_wrapT) {\n        var gl = this.getGL();\n        var texture = gl.createTexture();\n        gl.bindTexture(gl.TEXTURE_2D, texture);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n        if (opt_wrapS !== undefined) {\n            gl.texParameteri(TEXTURE_2D, TEXTURE_WRAP_S, opt_wrapS);\n        }\n        if (opt_wrapT !== undefined) {\n            gl.texParameteri(TEXTURE_2D, TEXTURE_WRAP_T, opt_wrapT);\n        }\n        return texture;\n    };\n    /**\n     * TODO: these are not used and should be reworked\n     * @param {number} width Width.\n     * @param {number} height Height.\n     * @param {number=} opt_wrapS wrapS.\n     * @param {number=} opt_wrapT wrapT.\n     * @return {WebGLTexture} The texture.\n     */\n    WebGLHelper.prototype.createEmptyTexture = function (width, height, opt_wrapS, opt_wrapT) {\n        var gl = this.getGL();\n        var texture = this.createTextureInternal(opt_wrapS, opt_wrapT);\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, width, height, 0, gl.RGBA, gl.UNSIGNED_BYTE, null);\n        return texture;\n    };\n    /**\n     * TODO: these are not used and should be reworked\n     * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\n     * @param {number=} opt_wrapS wrapS.\n     * @param {number=} opt_wrapT wrapT.\n     * @return {WebGLTexture} The texture.\n     */\n    WebGLHelper.prototype.createTexture = function (image, opt_wrapS, opt_wrapT) {\n        var gl = this.getGL();\n        var texture = this.createTextureInternal(opt_wrapS, opt_wrapT);\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, image);\n        return texture;\n    };\n    return WebGLHelper;\n}(Disposable));\nexport default WebGLHelper;\n//# sourceMappingURL=Helper.js.map","/**\n * @module ol/tilegrid/WMTS\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { find } from '../array.js';\nimport { get as getProjection } from '../proj.js';\nimport TileGrid from './TileGrid.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"../extent.js\").Extent} [extent] Extent for the tile grid. No tiles\n * outside this extent will be requested by {@link module:ol/source/Tile} sources.\n * When no `origin` or `origins` are configured, the `origin` will be set to the\n * top-left corner of the extent.\n * @property {import(\"../coordinate.js\").Coordinate} [origin] The tile grid origin, i.e.\n * where the `x` and `y` axes meet (`[z, 0, 0]`). Tile coordinates increase left\n * to right and upwards. If not specified, `extent` or `origins` must be provided.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} [origins] Tile grid origins,\n * i.e. where the `x` and `y` axes meet (`[z, 0, 0]`), for each zoom level. If\n * given, the array length should match the length of the `resolutions` array, i.e.\n * each resolution can have a different origin. Tile coordinates increase left to\n * right and upwards. If not specified, `extent` or `origin` must be provided.\n * @property {!Array<number>} resolutions Resolutions. The array index of each\n * resolution needs to match the zoom level. This means that even if a `minZoom`\n * is configured, the resolutions array will have a length of `maxZoom + 1`\n * @property {!Array<string>} matrixIds matrix IDs. The length of this array needs\n * to match the length of the `resolutions` array.\n * @property {Array<import(\"../size.js\").Size>} [sizes] Number of tile rows and columns\n * of the grid for each zoom level. The values here are the `TileMatrixWidth` and\n * `TileMatrixHeight` advertised in the GetCapabilities response of the WMTS, and\n * define the grid's extent together with the `origin`.\n * An `extent` can be configured in addition, and will further limit the extent for\n * which tile requests are made by sources. If the bottom-left corner of\n * the `extent` is used as `origin` or `origins`, then the `y` value must be\n * negative because OpenLayers tile coordinates use the top left as the origin.\n * @property {number|import(\"../size.js\").Size} [tileSize] Tile size.\n * @property {Array<import(\"../size.js\").Size>} [tileSizes] Tile sizes. The length of\n * this array needs to match the length of the `resolutions` array.\n * @property {Array<number>} [widths] Number of tile columns that cover the grid's\n * extent for each zoom level. Only required when used with a source that has `wrapX`\n * set to `true`, and only when the grid's origin differs from the one of the\n * projection's extent. The array length has to match the length of the `resolutions`\n * array, i.e. each resolution will have a matching entry here.\n */\n/**\n * @classdesc\n * Set the grid pattern for sources accessing WMTS tiled-image servers.\n * @api\n */\nvar WMTSTileGrid = /** @class */ (function (_super) {\n    __extends(WMTSTileGrid, _super);\n    /**\n     * @param {Options} options WMTS options.\n     */\n    function WMTSTileGrid(options) {\n        var _this = _super.call(this, {\n            extent: options.extent,\n            origin: options.origin,\n            origins: options.origins,\n            resolutions: options.resolutions,\n            tileSize: options.tileSize,\n            tileSizes: options.tileSizes,\n            sizes: options.sizes\n        }) || this;\n        /**\n         * @private\n         * @type {!Array<string>}\n         */\n        _this.matrixIds_ = options.matrixIds;\n        return _this;\n    }\n    /**\n     * @param {number} z Z.\n     * @return {string} MatrixId..\n     */\n    WMTSTileGrid.prototype.getMatrixId = function (z) {\n        return this.matrixIds_[z];\n    };\n    /**\n     * Get the list of matrix identifiers.\n     * @return {Array<string>} MatrixIds.\n     * @api\n     */\n    WMTSTileGrid.prototype.getMatrixIds = function () {\n        return this.matrixIds_;\n    };\n    return WMTSTileGrid;\n}(TileGrid));\nexport default WMTSTileGrid;\n/**\n * Create a tile grid from a WMTS capabilities matrix set and an\n * optional TileMatrixSetLimits.\n * @param {Object} matrixSet An object representing a matrixSet in the\n *     capabilities document.\n * @param {import(\"../extent.js\").Extent=} opt_extent An optional extent to restrict the tile\n *     ranges the server provides.\n * @param {Array<Object>=} opt_matrixLimits An optional object representing\n *     the available matrices for tileGrid.\n * @return {WMTSTileGrid} WMTS tileGrid instance.\n * @api\n */\nexport function createFromCapabilitiesMatrixSet(matrixSet, opt_extent, opt_matrixLimits) {\n    /** @type {!Array<number>} */\n    var resolutions = [];\n    /** @type {!Array<string>} */\n    var matrixIds = [];\n    /** @type {!Array<import(\"../coordinate.js\").Coordinate>} */\n    var origins = [];\n    /** @type {!Array<import(\"../size.js\").Size>} */\n    var tileSizes = [];\n    /** @type {!Array<import(\"../size.js\").Size>} */\n    var sizes = [];\n    var matrixLimits = opt_matrixLimits !== undefined ? opt_matrixLimits : [];\n    var supportedCRSPropName = 'SupportedCRS';\n    var matrixIdsPropName = 'TileMatrix';\n    var identifierPropName = 'Identifier';\n    var scaleDenominatorPropName = 'ScaleDenominator';\n    var topLeftCornerPropName = 'TopLeftCorner';\n    var tileWidthPropName = 'TileWidth';\n    var tileHeightPropName = 'TileHeight';\n    var code = matrixSet[supportedCRSPropName];\n    var projection = getProjection(code.replace(/urn:ogc:def:crs:(\\w+):(.*:)?(\\w+)$/, '$1:$3')) ||\n        getProjection(code);\n    var metersPerUnit = projection.getMetersPerUnit();\n    // swap origin x and y coordinates if axis orientation is lat/long\n    var switchOriginXY = projection.getAxisOrientation().substr(0, 2) == 'ne';\n    matrixSet[matrixIdsPropName].sort(function (a, b) {\n        return b[scaleDenominatorPropName] - a[scaleDenominatorPropName];\n    });\n    matrixSet[matrixIdsPropName].forEach(function (elt) {\n        var matrixAvailable;\n        // use of matrixLimits to filter TileMatrices from GetCapabilities\n        // TileMatrixSet from unavailable matrix levels.\n        if (matrixLimits.length > 0) {\n            matrixAvailable = find(matrixLimits, function (elt_ml) {\n                if (elt[identifierPropName] == elt_ml[matrixIdsPropName]) {\n                    return true;\n                }\n                // Fallback for tileMatrix identifiers that don't get prefixed\n                // by their tileMatrixSet identifiers.\n                if (elt[identifierPropName].indexOf(':') === -1) {\n                    return matrixSet[identifierPropName] + ':' + elt[identifierPropName] === elt_ml[matrixIdsPropName];\n                }\n                return false;\n            });\n        }\n        else {\n            matrixAvailable = true;\n        }\n        if (matrixAvailable) {\n            matrixIds.push(elt[identifierPropName]);\n            var resolution = elt[scaleDenominatorPropName] * 0.28E-3 / metersPerUnit;\n            var tileWidth = elt[tileWidthPropName];\n            var tileHeight = elt[tileHeightPropName];\n            if (switchOriginXY) {\n                origins.push([elt[topLeftCornerPropName][1],\n                    elt[topLeftCornerPropName][0]]);\n            }\n            else {\n                origins.push(elt[topLeftCornerPropName]);\n            }\n            resolutions.push(resolution);\n            tileSizes.push(tileWidth == tileHeight ?\n                tileWidth : [tileWidth, tileHeight]);\n            sizes.push([elt['MatrixWidth'], elt['MatrixHeight']]);\n        }\n    });\n    return new WMTSTileGrid({\n        extent: opt_extent,\n        origins: origins,\n        resolutions: resolutions,\n        matrixIds: matrixIds,\n        tileSizes: tileSizes,\n        sizes: sizes\n    });\n}\n//# sourceMappingURL=WMTS.js.map","/**\n * @module ol/ImageState\n */\n/**\n * @enum {number}\n */\nexport default {\n    IDLE: 0,\n    LOADING: 1,\n    LOADED: 2,\n    ERROR: 3\n};\n//# sourceMappingURL=ImageState.js.map","/**\n * @module ol/style/Image\n */\nimport { abstract } from '../util.js';\n/**\n * @typedef {Object} Options\n * @property {number} opacity\n * @property {boolean} rotateWithView\n * @property {number} rotation\n * @property {number} scale\n */\n/**\n * @classdesc\n * A base class used for creating subclasses and not instantiated in\n * apps. Base class for {@link module:ol/style/Icon~Icon}, {@link module:ol/style/Circle~CircleStyle} and\n * {@link module:ol/style/RegularShape~RegularShape}.\n * @abstract\n * @api\n */\nvar ImageStyle = /** @class */ (function () {\n    /**\n     * @param {Options} options Options.\n     */\n    function ImageStyle(options) {\n        /**\n         * @private\n         * @type {number}\n         */\n        this.opacity_ = options.opacity;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        this.rotateWithView_ = options.rotateWithView;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.rotation_ = options.rotation;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.scale_ = options.scale;\n    }\n    /**\n     * Clones the style.\n     * @return {ImageStyle} The cloned style.\n     * @api\n     */\n    ImageStyle.prototype.clone = function () {\n        return new ImageStyle({\n            opacity: this.getOpacity(),\n            scale: this.getScale(),\n            rotation: this.getRotation(),\n            rotateWithView: this.getRotateWithView()\n        });\n    };\n    /**\n     * Get the symbolizer opacity.\n     * @return {number} Opacity.\n     * @api\n     */\n    ImageStyle.prototype.getOpacity = function () {\n        return this.opacity_;\n    };\n    /**\n     * Determine whether the symbolizer rotates with the map.\n     * @return {boolean} Rotate with map.\n     * @api\n     */\n    ImageStyle.prototype.getRotateWithView = function () {\n        return this.rotateWithView_;\n    };\n    /**\n     * Get the symoblizer rotation.\n     * @return {number} Rotation.\n     * @api\n     */\n    ImageStyle.prototype.getRotation = function () {\n        return this.rotation_;\n    };\n    /**\n     * Get the symbolizer scale.\n     * @return {number} Scale.\n     * @api\n     */\n    ImageStyle.prototype.getScale = function () {\n        return this.scale_;\n    };\n    /**\n     * Get the anchor point in pixels. The anchor determines the center point for the\n     * symbolizer.\n     * @abstract\n     * @return {Array<number>} Anchor.\n     */\n    ImageStyle.prototype.getAnchor = function () {\n        return abstract();\n    };\n    /**\n     * Get the image element for the symbolizer.\n     * @abstract\n     * @param {number} pixelRatio Pixel ratio.\n     * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\n     */\n    ImageStyle.prototype.getImage = function (pixelRatio) {\n        return abstract();\n    };\n    /**\n     * @abstract\n     * @param {number} pixelRatio Pixel ratio.\n     * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\n     */\n    ImageStyle.prototype.getHitDetectionImage = function (pixelRatio) {\n        return abstract();\n    };\n    /**\n     * @abstract\n     * @return {import(\"../ImageState.js\").default} Image state.\n     */\n    ImageStyle.prototype.getImageState = function () {\n        return abstract();\n    };\n    /**\n     * @abstract\n     * @return {import(\"../size.js\").Size} Image size.\n     */\n    ImageStyle.prototype.getImageSize = function () {\n        return abstract();\n    };\n    /**\n     * @abstract\n     * @return {import(\"../size.js\").Size} Size of the hit-detection image.\n     */\n    ImageStyle.prototype.getHitDetectionImageSize = function () {\n        return abstract();\n    };\n    /**\n     * Get the origin of the symbolizer.\n     * @abstract\n     * @return {Array<number>} Origin.\n     */\n    ImageStyle.prototype.getOrigin = function () {\n        return abstract();\n    };\n    /**\n     * Get the size of the symbolizer (in pixels).\n     * @abstract\n     * @return {import(\"../size.js\").Size} Size.\n     */\n    ImageStyle.prototype.getSize = function () {\n        return abstract();\n    };\n    /**\n     * Set the opacity.\n     *\n     * @param {number} opacity Opacity.\n     * @api\n     */\n    ImageStyle.prototype.setOpacity = function (opacity) {\n        this.opacity_ = opacity;\n    };\n    /**\n     * Set whether to rotate the style with the view.\n     *\n     * @param {boolean} rotateWithView Rotate with map.\n     * @api\n     */\n    ImageStyle.prototype.setRotateWithView = function (rotateWithView) {\n        this.rotateWithView_ = rotateWithView;\n    };\n    /**\n     * Set the rotation.\n     *\n     * @param {number} rotation Rotation.\n     * @api\n     */\n    ImageStyle.prototype.setRotation = function (rotation) {\n        this.rotation_ = rotation;\n    };\n    /**\n     * Set the scale.\n     *\n     * @param {number} scale Scale.\n     * @api\n     */\n    ImageStyle.prototype.setScale = function (scale) {\n        this.scale_ = scale;\n    };\n    /**\n     * @abstract\n     * @param {function(this: T, import(\"../events/Event.js\").default): void} listener Listener function.\n     * @param {T} thisArg Value to use as `this` when executing `listener`.\n     * @return {import(\"../events.js\").EventsKey|undefined} Listener key.\n     * @template T\n     */\n    ImageStyle.prototype.listenImageChange = function (listener, thisArg) {\n        return abstract();\n    };\n    /**\n     * Load not yet loaded URI.\n     * @abstract\n     */\n    ImageStyle.prototype.load = function () {\n        abstract();\n    };\n    /**\n     * @abstract\n     * @param {function(this: T, import(\"../events/Event.js\").default): void} listener Listener function.\n     * @param {T} thisArg Value to use as `this` when executing `listener`.\n     * @template T\n     */\n    ImageStyle.prototype.unlistenImageChange = function (listener, thisArg) {\n        abstract();\n    };\n    return ImageStyle;\n}());\nexport default ImageStyle;\n//# sourceMappingURL=Image.js.map","/**\n * @module ol/style/RegularShape\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { asColorLike } from '../colorlike.js';\nimport { createCanvasContext2D } from '../dom.js';\nimport ImageState from '../ImageState.js';\nimport { defaultStrokeStyle, defaultFillStyle, defaultLineCap, defaultLineWidth, defaultLineJoin, defaultMiterLimit } from '../render/canvas.js';\nimport ImageStyle from './Image.js';\n/**\n * Specify radius for regular polygons, or radius1 and radius2 for stars.\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} points Number of points for stars and regular polygons. In case of a polygon, the number of points\n * is the number of sides.\n * @property {number} [radius] Radius of a regular polygon.\n * @property {number} [radius1] Outer radius of a star.\n * @property {number} [radius2] Inner radius of a star.\n * @property {number} [angle=0] Shape's angle in radians. A value of 0 will have one of the shape's point facing up.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view.\n */\n/**\n * @typedef {Object} RenderOptions\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle]\n * @property {number} strokeWidth\n * @property {number} size\n * @property {string} lineCap\n * @property {Array<number>} lineDash\n * @property {number} lineDashOffset\n * @property {string} lineJoin\n * @property {number} miterLimit\n */\n/**\n * @classdesc\n * Set regular shape style for vector features. The resulting shape will be\n * a regular polygon when `radius` is provided, or a star when `radius1` and\n * `radius2` are provided.\n * @api\n */\nvar RegularShape = /** @class */ (function (_super) {\n    __extends(RegularShape, _super);\n    /**\n     * @param {Options} options Options.\n     */\n    function RegularShape(options) {\n        var _this = this;\n        /**\n         * @type {boolean}\n         */\n        var rotateWithView = options.rotateWithView !== undefined ?\n            options.rotateWithView : false;\n        _this = _super.call(this, {\n            opacity: 1,\n            rotateWithView: rotateWithView,\n            rotation: options.rotation !== undefined ? options.rotation : 0,\n            scale: 1\n        }) || this;\n        /**\n         * @private\n         * @type {HTMLCanvasElement}\n         */\n        _this.canvas_ = null;\n        /**\n         * @private\n         * @type {HTMLCanvasElement}\n         */\n        _this.hitDetectionCanvas_ = null;\n        /**\n         * @private\n         * @type {import(\"./Fill.js\").default}\n         */\n        _this.fill_ = options.fill !== undefined ? options.fill : null;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.origin_ = [0, 0];\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.points_ = options.points;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.radius_ = /** @type {number} */ (options.radius !== undefined ?\n            options.radius : options.radius1);\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.radius2_ = options.radius2;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.angle_ = options.angle !== undefined ? options.angle : 0;\n        /**\n         * @private\n         * @type {import(\"./Stroke.js\").default}\n         */\n        _this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.anchor_ = null;\n        /**\n         * @private\n         * @type {import(\"../size.js\").Size}\n         */\n        _this.size_ = null;\n        /**\n         * @private\n         * @type {import(\"../size.js\").Size}\n         */\n        _this.imageSize_ = null;\n        /**\n         * @private\n         * @type {import(\"../size.js\").Size}\n         */\n        _this.hitDetectionImageSize_ = null;\n        _this.render_();\n        return _this;\n    }\n    /**\n     * Clones the style.\n     * @return {RegularShape} The cloned style.\n     * @api\n     */\n    RegularShape.prototype.clone = function () {\n        var style = new RegularShape({\n            fill: this.getFill() ? this.getFill().clone() : undefined,\n            points: this.getPoints(),\n            radius: this.getRadius(),\n            radius2: this.getRadius2(),\n            angle: this.getAngle(),\n            stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n            rotation: this.getRotation(),\n            rotateWithView: this.getRotateWithView()\n        });\n        style.setOpacity(this.getOpacity());\n        style.setScale(this.getScale());\n        return style;\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    RegularShape.prototype.getAnchor = function () {\n        return this.anchor_;\n    };\n    /**\n     * Get the angle used in generating the shape.\n     * @return {number} Shape's rotation in radians.\n     * @api\n     */\n    RegularShape.prototype.getAngle = function () {\n        return this.angle_;\n    };\n    /**\n     * Get the fill style for the shape.\n     * @return {import(\"./Fill.js\").default} Fill style.\n     * @api\n     */\n    RegularShape.prototype.getFill = function () {\n        return this.fill_;\n    };\n    /**\n     * @inheritDoc\n     */\n    RegularShape.prototype.getHitDetectionImage = function (pixelRatio) {\n        return this.hitDetectionCanvas_;\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    RegularShape.prototype.getImage = function (pixelRatio) {\n        return this.canvas_;\n    };\n    /**\n     * @inheritDoc\n     */\n    RegularShape.prototype.getImageSize = function () {\n        return this.imageSize_;\n    };\n    /**\n     * @inheritDoc\n     */\n    RegularShape.prototype.getHitDetectionImageSize = function () {\n        return this.hitDetectionImageSize_;\n    };\n    /**\n     * @inheritDoc\n     */\n    RegularShape.prototype.getImageState = function () {\n        return ImageState.LOADED;\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    RegularShape.prototype.getOrigin = function () {\n        return this.origin_;\n    };\n    /**\n     * Get the number of points for generating the shape.\n     * @return {number} Number of points for stars and regular polygons.\n     * @api\n     */\n    RegularShape.prototype.getPoints = function () {\n        return this.points_;\n    };\n    /**\n     * Get the (primary) radius for the shape.\n     * @return {number} Radius.\n     * @api\n     */\n    RegularShape.prototype.getRadius = function () {\n        return this.radius_;\n    };\n    /**\n     * Get the secondary radius for the shape.\n     * @return {number|undefined} Radius2.\n     * @api\n     */\n    RegularShape.prototype.getRadius2 = function () {\n        return this.radius2_;\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    RegularShape.prototype.getSize = function () {\n        return this.size_;\n    };\n    /**\n     * Get the stroke style for the shape.\n     * @return {import(\"./Stroke.js\").default} Stroke style.\n     * @api\n     */\n    RegularShape.prototype.getStroke = function () {\n        return this.stroke_;\n    };\n    /**\n     * @inheritDoc\n     */\n    RegularShape.prototype.listenImageChange = function (listener, thisArg) {\n        return undefined;\n    };\n    /**\n     * @inheritDoc\n     */\n    RegularShape.prototype.load = function () { };\n    /**\n     * @inheritDoc\n     */\n    RegularShape.prototype.unlistenImageChange = function (listener, thisArg) { };\n    /**\n     * @protected\n     */\n    RegularShape.prototype.render_ = function () {\n        var lineCap = '';\n        var lineJoin = '';\n        var miterLimit = 0;\n        var lineDash = null;\n        var lineDashOffset = 0;\n        var strokeStyle;\n        var strokeWidth = 0;\n        if (this.stroke_) {\n            strokeStyle = this.stroke_.getColor();\n            if (strokeStyle === null) {\n                strokeStyle = defaultStrokeStyle;\n            }\n            strokeStyle = asColorLike(strokeStyle);\n            strokeWidth = this.stroke_.getWidth();\n            if (strokeWidth === undefined) {\n                strokeWidth = defaultLineWidth;\n            }\n            lineDash = this.stroke_.getLineDash();\n            lineDashOffset = this.stroke_.getLineDashOffset();\n            lineJoin = this.stroke_.getLineJoin();\n            if (lineJoin === undefined) {\n                lineJoin = defaultLineJoin;\n            }\n            lineCap = this.stroke_.getLineCap();\n            if (lineCap === undefined) {\n                lineCap = defaultLineCap;\n            }\n            miterLimit = this.stroke_.getMiterLimit();\n            if (miterLimit === undefined) {\n                miterLimit = defaultMiterLimit;\n            }\n        }\n        var size = 2 * (this.radius_ + strokeWidth) + 1;\n        /** @type {RenderOptions} */\n        var renderOptions = {\n            strokeStyle: strokeStyle,\n            strokeWidth: strokeWidth,\n            size: size,\n            lineCap: lineCap,\n            lineDash: lineDash,\n            lineDashOffset: lineDashOffset,\n            lineJoin: lineJoin,\n            miterLimit: miterLimit\n        };\n        var context = createCanvasContext2D(size, size);\n        this.canvas_ = context.canvas;\n        // canvas.width and height are rounded to the closest integer\n        size = this.canvas_.width;\n        var imageSize = size;\n        this.draw_(renderOptions, context, 0, 0);\n        this.createHitDetectionCanvas_(renderOptions);\n        this.anchor_ = [size / 2, size / 2];\n        this.size_ = [size, size];\n        this.imageSize_ = [imageSize, imageSize];\n    };\n    /**\n     * @private\n     * @param {RenderOptions} renderOptions Render options.\n     * @param {CanvasRenderingContext2D} context The rendering context.\n     * @param {number} x The origin for the symbol (x).\n     * @param {number} y The origin for the symbol (y).\n     */\n    RegularShape.prototype.draw_ = function (renderOptions, context, x, y) {\n        var i, angle0, radiusC;\n        // reset transform\n        context.setTransform(1, 0, 0, 1, 0, 0);\n        // then move to (x, y)\n        context.translate(x, y);\n        context.beginPath();\n        var points = this.points_;\n        if (points === Infinity) {\n            context.arc(renderOptions.size / 2, renderOptions.size / 2, this.radius_, 0, 2 * Math.PI, true);\n        }\n        else {\n            var radius2 = (this.radius2_ !== undefined) ? this.radius2_\n                : this.radius_;\n            if (radius2 !== this.radius_) {\n                points = 2 * points;\n            }\n            for (i = 0; i <= points; i++) {\n                angle0 = i * 2 * Math.PI / points - Math.PI / 2 + this.angle_;\n                radiusC = i % 2 === 0 ? this.radius_ : radius2;\n                context.lineTo(renderOptions.size / 2 + radiusC * Math.cos(angle0), renderOptions.size / 2 + radiusC * Math.sin(angle0));\n            }\n        }\n        if (this.fill_) {\n            var color = this.fill_.getColor();\n            if (color === null) {\n                color = defaultFillStyle;\n            }\n            context.fillStyle = asColorLike(color);\n            context.fill();\n        }\n        if (this.stroke_) {\n            context.strokeStyle = renderOptions.strokeStyle;\n            context.lineWidth = renderOptions.strokeWidth;\n            if (context.setLineDash && renderOptions.lineDash) {\n                context.setLineDash(renderOptions.lineDash);\n                context.lineDashOffset = renderOptions.lineDashOffset;\n            }\n            context.lineCap = /** @type {CanvasLineCap} */ (renderOptions.lineCap);\n            context.lineJoin = /** @type {CanvasLineJoin} */ (renderOptions.lineJoin);\n            context.miterLimit = renderOptions.miterLimit;\n            context.stroke();\n        }\n        context.closePath();\n    };\n    /**\n     * @private\n     * @param {RenderOptions} renderOptions Render options.\n     */\n    RegularShape.prototype.createHitDetectionCanvas_ = function (renderOptions) {\n        this.hitDetectionImageSize_ = [renderOptions.size, renderOptions.size];\n        if (this.fill_) {\n            this.hitDetectionCanvas_ = this.canvas_;\n            return;\n        }\n        // if no fill style is set, create an extra hit-detection image with a\n        // default fill style\n        var context = createCanvasContext2D(renderOptions.size, renderOptions.size);\n        this.hitDetectionCanvas_ = context.canvas;\n        this.drawHitDetectionCanvas_(renderOptions, context, 0, 0);\n    };\n    /**\n     * @private\n     * @param {RenderOptions} renderOptions Render options.\n     * @param {CanvasRenderingContext2D} context The context.\n     * @param {number} x The origin for the symbol (x).\n     * @param {number} y The origin for the symbol (y).\n     */\n    RegularShape.prototype.drawHitDetectionCanvas_ = function (renderOptions, context, x, y) {\n        // reset transform\n        context.setTransform(1, 0, 0, 1, 0, 0);\n        // then move to (x, y)\n        context.translate(x, y);\n        context.beginPath();\n        var points = this.points_;\n        if (points === Infinity) {\n            context.arc(renderOptions.size / 2, renderOptions.size / 2, this.radius_, 0, 2 * Math.PI, true);\n        }\n        else {\n            var radius2 = (this.radius2_ !== undefined) ? this.radius2_\n                : this.radius_;\n            if (radius2 !== this.radius_) {\n                points = 2 * points;\n            }\n            var i = void 0, radiusC = void 0, angle0 = void 0;\n            for (i = 0; i <= points; i++) {\n                angle0 = i * 2 * Math.PI / points - Math.PI / 2 + this.angle_;\n                radiusC = i % 2 === 0 ? this.radius_ : radius2;\n                context.lineTo(renderOptions.size / 2 + radiusC * Math.cos(angle0), renderOptions.size / 2 + radiusC * Math.sin(angle0));\n            }\n        }\n        context.fillStyle = defaultFillStyle;\n        context.fill();\n        if (this.stroke_) {\n            context.strokeStyle = renderOptions.strokeStyle;\n            context.lineWidth = renderOptions.strokeWidth;\n            if (renderOptions.lineDash) {\n                context.setLineDash(renderOptions.lineDash);\n                context.lineDashOffset = renderOptions.lineDashOffset;\n            }\n            context.stroke();\n        }\n        context.closePath();\n    };\n    return RegularShape;\n}(ImageStyle));\nexport default RegularShape;\n//# sourceMappingURL=RegularShape.js.map","/**\n * @module ol/style/Circle\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport RegularShape from './RegularShape.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} radius Circle radius.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n */\n/**\n * @classdesc\n * Set circle style for vector features.\n * @api\n */\nvar CircleStyle = /** @class */ (function (_super) {\n    __extends(CircleStyle, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function CircleStyle(opt_options) {\n        var _this = this;\n        var options = opt_options || /** @type {Options} */ ({});\n        _this = _super.call(this, {\n            points: Infinity,\n            fill: options.fill,\n            radius: options.radius,\n            stroke: options.stroke\n        }) || this;\n        return _this;\n    }\n    /**\n    * Clones the style.\n    * @return {CircleStyle} The cloned style.\n    * @override\n    * @api\n    */\n    CircleStyle.prototype.clone = function () {\n        var style = new CircleStyle({\n            fill: this.getFill() ? this.getFill().clone() : undefined,\n            stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n            radius: this.getRadius()\n        });\n        style.setOpacity(this.getOpacity());\n        style.setScale(this.getScale());\n        return style;\n    };\n    /**\n    * Set the circle radius.\n    *\n    * @param {number} radius Circle radius.\n    * @api\n    */\n    CircleStyle.prototype.setRadius = function (radius) {\n        this.radius_ = radius;\n    };\n    return CircleStyle;\n}(RegularShape));\nexport default CircleStyle;\n//# sourceMappingURL=Circle.js.map","/**\n * @module ol/style/Fill\n */\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [color=null] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n */\n/**\n * @classdesc\n * Set fill style for vector features.\n * @api\n */\nvar Fill = /** @class */ (function () {\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function Fill(opt_options) {\n        var options = opt_options || {};\n        /**\n         * @private\n         * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike}\n         */\n        this.color_ = options.color !== undefined ? options.color : null;\n    }\n    /**\n     * Clones the style. The color is not cloned if it is an {@link module:ol/colorlike~ColorLike}.\n     * @return {Fill} The cloned style.\n     * @api\n     */\n    Fill.prototype.clone = function () {\n        var color = this.getColor();\n        return new Fill({\n            color: Array.isArray(color) ? color.slice() : color || undefined\n        });\n    };\n    /**\n     * Get the fill color.\n     * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} Color.\n     * @api\n     */\n    Fill.prototype.getColor = function () {\n        return this.color_;\n    };\n    /**\n     * Set the color.\n     *\n     * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} color Color.\n     * @api\n     */\n    Fill.prototype.setColor = function (color) {\n        this.color_ = color;\n    };\n    return Fill;\n}());\nexport default Fill;\n//# sourceMappingURL=Fill.js.map","/**\n * @module ol/style/IconAnchorUnits\n */\n/**\n * Icon anchor units. One of 'fraction', 'pixels'.\n * @enum {string}\n */\nexport default {\n    FRACTION: 'fraction',\n    PIXELS: 'pixels'\n};\n//# sourceMappingURL=IconAnchorUnits.js.map","/**\n * @module ol/style/IconImage\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { createCanvasContext2D } from '../dom.js';\nimport { listenOnce, unlistenByKey } from '../events.js';\nimport EventTarget from '../events/Target.js';\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport { shared as iconImageCache } from './IconImageCache.js';\nvar IconImage = /** @class */ (function (_super) {\n    __extends(IconImage, _super);\n    /**\n     * @param {HTMLImageElement|HTMLCanvasElement} image Image.\n     * @param {string|undefined} src Src.\n     * @param {import(\"../size.js\").Size} size Size.\n     * @param {?string} crossOrigin Cross origin.\n     * @param {import(\"../ImageState.js\").default} imageState Image state.\n     * @param {import(\"../color.js\").Color} color Color.\n     */\n    function IconImage(image, src, size, crossOrigin, imageState, color) {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {HTMLImageElement|HTMLCanvasElement}\n         */\n        _this.hitDetectionImage_ = null;\n        /**\n         * @private\n         * @type {HTMLImageElement|HTMLCanvasElement}\n         */\n        _this.image_ = !image ? new Image() : image;\n        if (crossOrigin !== null) {\n            /** @type {HTMLImageElement} */ (_this.image_).crossOrigin = crossOrigin;\n        }\n        /**\n         * @private\n         * @type {HTMLCanvasElement}\n         */\n        _this.canvas_ = color ? document.createElement('canvas') : null;\n        /**\n         * @private\n         * @type {import(\"../color.js\").Color}\n         */\n        _this.color_ = color;\n        /**\n         * @private\n         * @type {Array<import(\"../events.js\").EventsKey>}\n         */\n        _this.imageListenerKeys_ = null;\n        /**\n         * @private\n         * @type {import(\"../ImageState.js\").default}\n         */\n        _this.imageState_ = imageState;\n        /**\n         * @private\n         * @type {import(\"../size.js\").Size}\n         */\n        _this.size_ = size;\n        /**\n         * @private\n         * @type {string|undefined}\n         */\n        _this.src_ = src;\n        /**\n         * @private\n         * @type {boolean|undefined}\n         */\n        _this.tainted_;\n        return _this;\n    }\n    /**\n     * @private\n     * @return {boolean} The image canvas is tainted.\n     */\n    IconImage.prototype.isTainted_ = function () {\n        if (this.tainted_ === undefined && this.imageState_ === ImageState.LOADED) {\n            this.tainted_ = false;\n            var context = createCanvasContext2D(1, 1);\n            try {\n                context.drawImage(this.image_, 0, 0);\n                context.getImageData(0, 0, 1, 1);\n            }\n            catch (e) {\n                this.tainted_ = true;\n            }\n        }\n        return this.tainted_ === true;\n    };\n    /**\n     * @private\n     */\n    IconImage.prototype.dispatchChangeEvent_ = function () {\n        this.dispatchEvent(EventType.CHANGE);\n    };\n    /**\n     * @private\n     */\n    IconImage.prototype.handleImageError_ = function () {\n        this.imageState_ = ImageState.ERROR;\n        this.unlistenImage_();\n        this.dispatchChangeEvent_();\n    };\n    /**\n     * @private\n     */\n    IconImage.prototype.handleImageLoad_ = function () {\n        this.imageState_ = ImageState.LOADED;\n        if (this.size_) {\n            this.image_.width = this.size_[0];\n            this.image_.height = this.size_[1];\n        }\n        this.size_ = [this.image_.width, this.image_.height];\n        this.unlistenImage_();\n        this.replaceColor_();\n        this.dispatchChangeEvent_();\n    };\n    /**\n     * @param {number} pixelRatio Pixel ratio.\n     * @return {HTMLImageElement|HTMLCanvasElement} Image or Canvas element.\n     */\n    IconImage.prototype.getImage = function (pixelRatio) {\n        return this.canvas_ ? this.canvas_ : this.image_;\n    };\n    /**\n     * @return {import(\"../ImageState.js\").default} Image state.\n     */\n    IconImage.prototype.getImageState = function () {\n        return this.imageState_;\n    };\n    /**\n     * @param {number} pixelRatio Pixel ratio.\n     * @return {HTMLImageElement|HTMLCanvasElement} Image element.\n     */\n    IconImage.prototype.getHitDetectionImage = function (pixelRatio) {\n        if (!this.hitDetectionImage_) {\n            if (this.isTainted_()) {\n                var width = this.size_[0];\n                var height = this.size_[1];\n                var context = createCanvasContext2D(width, height);\n                context.fillRect(0, 0, width, height);\n                this.hitDetectionImage_ = context.canvas;\n            }\n            else {\n                this.hitDetectionImage_ = this.image_;\n            }\n        }\n        return this.hitDetectionImage_;\n    };\n    /**\n     * @return {import(\"../size.js\").Size} Image size.\n     */\n    IconImage.prototype.getSize = function () {\n        return this.size_;\n    };\n    /**\n     * @return {string|undefined} Image src.\n     */\n    IconImage.prototype.getSrc = function () {\n        return this.src_;\n    };\n    /**\n     * Load not yet loaded URI.\n     */\n    IconImage.prototype.load = function () {\n        if (this.imageState_ == ImageState.IDLE) {\n            this.imageState_ = ImageState.LOADING;\n            this.imageListenerKeys_ = [\n                listenOnce(this.image_, EventType.ERROR, this.handleImageError_, this),\n                listenOnce(this.image_, EventType.LOAD, this.handleImageLoad_, this)\n            ];\n            try {\n                /** @type {HTMLImageElement} */ (this.image_).src = this.src_;\n            }\n            catch (e) {\n                this.handleImageError_();\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    IconImage.prototype.replaceColor_ = function () {\n        if (!this.color_ || this.isTainted_()) {\n            return;\n        }\n        this.canvas_.width = this.image_.width;\n        this.canvas_.height = this.image_.height;\n        var ctx = this.canvas_.getContext('2d');\n        ctx.drawImage(this.image_, 0, 0);\n        var imgData = ctx.getImageData(0, 0, this.image_.width, this.image_.height);\n        var data = imgData.data;\n        var r = this.color_[0] / 255.0;\n        var g = this.color_[1] / 255.0;\n        var b = this.color_[2] / 255.0;\n        for (var i = 0, ii = data.length; i < ii; i += 4) {\n            data[i] *= r;\n            data[i + 1] *= g;\n            data[i + 2] *= b;\n        }\n        ctx.putImageData(imgData, 0, 0);\n    };\n    /**\n     * Discards event handlers which listen for load completion or errors.\n     *\n     * @private\n     */\n    IconImage.prototype.unlistenImage_ = function () {\n        this.imageListenerKeys_.forEach(unlistenByKey);\n        this.imageListenerKeys_ = null;\n    };\n    return IconImage;\n}(EventTarget));\n/**\n * @param {HTMLImageElement|HTMLCanvasElement} image Image.\n * @param {string} src Src.\n * @param {import(\"../size.js\").Size} size Size.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../ImageState.js\").default} imageState Image state.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {IconImage} Icon image.\n */\nexport function get(image, src, size, crossOrigin, imageState, color) {\n    var iconImage = iconImageCache.get(src, crossOrigin, color);\n    if (!iconImage) {\n        iconImage = new IconImage(image, src, size, crossOrigin, imageState, color);\n        iconImageCache.set(src, crossOrigin, color, iconImage);\n    }\n    return iconImage;\n}\nexport default IconImage;\n//# sourceMappingURL=IconImage.js.map","/**\n * @module ol/style/IconOrigin\n */\n/**\n * Icon origin. One of 'bottom-left', 'bottom-right', 'top-left', 'top-right'.\n * @enum {string}\n */\nexport default {\n    BOTTOM_LEFT: 'bottom-left',\n    BOTTOM_RIGHT: 'bottom-right',\n    TOP_LEFT: 'top-left',\n    TOP_RIGHT: 'top-right'\n};\n//# sourceMappingURL=IconOrigin.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/style/Icon\n */\nimport { getUid } from '../util.js';\nimport ImageState from '../ImageState.js';\nimport { assert } from '../asserts.js';\nimport { asArray } from '../color.js';\nimport { listen, unlisten } from '../events.js';\nimport EventType from '../events/EventType.js';\nimport IconAnchorUnits from './IconAnchorUnits.js';\nimport { get as getIconImage } from './IconImage.js';\nimport IconOrigin from './IconOrigin.js';\nimport ImageStyle from './Image.js';\n/**\n * @typedef {Object} Options\n * @property {Array<number>} [anchor=[0.5, 0.5]] Anchor. Default value is the icon center.\n * @property {import(\"./IconOrigin.js\").default} [anchorOrigin='top-left'] Origin of the anchor: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {import(\"./IconAnchorUnits.js\").default} [anchorXUnits='fraction'] Units in which the anchor x value is\n * specified. A value of `'fraction'` indicates the x value is a fraction of the icon. A value of `'pixels'` indicates\n * the x value in pixels.\n * @property {import(\"./IconAnchorUnits.js\").default} [anchorYUnits='fraction'] Units in which the anchor y value is\n * specified. A value of `'fraction'` indicates the y value is a fraction of the icon. A value of `'pixels'` indicates\n * the y value in pixels.\n * @property {import(\"../color.js\").Color|string} [color] Color to tint the icon. If not specified,\n * the icon will be left as is.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images. Note that you must provide a\n * `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {HTMLImageElement|HTMLCanvasElement} [img] Image object for the icon. If the `src` option is not provided then the\n * provided image must already be loaded. And in that case, it is required\n * to provide the size of the image, with the `imgSize` option.\n * @property {Array<number>} [offset=[0, 0]] Offset, which, together with the size and the offset origin, define the\n * sub-rectangle to use from the original icon image.\n * @property {import(\"./IconOrigin.js\").default} [offsetOrigin='top-left'] Origin of the offset: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {number} [opacity=1] Opacity of the icon.\n * @property {number} [scale=1] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the icon with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {import(\"../size.js\").Size} [size] Icon size in pixel. Can be used together with `offset` to define the\n * sub-rectangle to use from the origin (sprite) icon image.\n * @property {import(\"../size.js\").Size} [imgSize] Image size in pixels. Only required if `img` is set and `src` is not, and\n * for SVG images in Internet Explorer 11. The provided `imgSize` needs to match the actual size of the image.\n * @property {string} [src] Image source URI.\n */\n/**\n * @classdesc\n * Set icon style for vector features.\n * @api\n */\nvar Icon = /** @class */ (function (_super) {\n    __extends(Icon, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function Icon(opt_options) {\n        var _this = this;\n        var options = opt_options || {};\n        /**\n         * @type {number}\n         */\n        var opacity = options.opacity !== undefined ? options.opacity : 1;\n        /**\n         * @type {number}\n         */\n        var rotation = options.rotation !== undefined ? options.rotation : 0;\n        /**\n         * @type {number}\n         */\n        var scale = options.scale !== undefined ? options.scale : 1;\n        /**\n         * @type {boolean}\n         */\n        var rotateWithView = options.rotateWithView !== undefined ?\n            options.rotateWithView : false;\n        _this = _super.call(this, {\n            opacity: opacity,\n            rotation: rotation,\n            scale: scale,\n            rotateWithView: rotateWithView\n        }) || this;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.anchor_ = options.anchor !== undefined ? options.anchor : [0.5, 0.5];\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.normalizedAnchor_ = null;\n        /**\n         * @private\n         * @type {import(\"./IconOrigin.js\").default}\n         */\n        _this.anchorOrigin_ = options.anchorOrigin !== undefined ?\n            options.anchorOrigin : IconOrigin.TOP_LEFT;\n        /**\n         * @private\n         * @type {import(\"./IconAnchorUnits.js\").default}\n         */\n        _this.anchorXUnits_ = options.anchorXUnits !== undefined ?\n            options.anchorXUnits : IconAnchorUnits.FRACTION;\n        /**\n         * @private\n         * @type {import(\"./IconAnchorUnits.js\").default}\n         */\n        _this.anchorYUnits_ = options.anchorYUnits !== undefined ?\n            options.anchorYUnits : IconAnchorUnits.FRACTION;\n        /**\n         * @private\n         * @type {?string}\n         */\n        _this.crossOrigin_ =\n            options.crossOrigin !== undefined ? options.crossOrigin : null;\n        /**\n         * @type {HTMLImageElement|HTMLCanvasElement}\n         */\n        var image = options.img !== undefined ? options.img : null;\n        /**\n         * @type {import(\"../size.js\").Size}\n         */\n        var imgSize = options.imgSize !== undefined ? options.imgSize : null;\n        /**\n         * @type {string|undefined}\n         */\n        var src = options.src;\n        assert(!(src !== undefined && image), 4); // `image` and `src` cannot be provided at the same time\n        assert(!image || (image && imgSize), 5); // `imgSize` must be set when `image` is provided\n        if ((src === undefined || src.length === 0) && image) {\n            src = /** @type {HTMLImageElement} */ (image).src || getUid(image);\n        }\n        assert(src !== undefined && src.length > 0, 6); // A defined and non-empty `src` or `image` must be provided\n        /**\n         * @type {import(\"../ImageState.js\").default}\n         */\n        var imageState = options.src !== undefined ?\n            ImageState.IDLE : ImageState.LOADED;\n        /**\n         * @private\n         * @type {import(\"../color.js\").Color}\n         */\n        _this.color_ = options.color !== undefined ? asArray(options.color) : null;\n        /**\n         * @private\n         * @type {import(\"./IconImage.js\").default}\n         */\n        _this.iconImage_ = getIconImage(image, /** @type {string} */ (src), imgSize, _this.crossOrigin_, imageState, _this.color_);\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.offset_ = options.offset !== undefined ? options.offset : [0, 0];\n        /**\n         * @private\n         * @type {import(\"./IconOrigin.js\").default}\n         */\n        _this.offsetOrigin_ = options.offsetOrigin !== undefined ?\n            options.offsetOrigin : IconOrigin.TOP_LEFT;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.origin_ = null;\n        /**\n         * @private\n         * @type {import(\"../size.js\").Size}\n         */\n        _this.size_ = options.size !== undefined ? options.size : null;\n        return _this;\n    }\n    /**\n     * Clones the style. The underlying Image/HTMLCanvasElement is not cloned.\n     * @return {Icon} The cloned style.\n     * @api\n     */\n    Icon.prototype.clone = function () {\n        return new Icon({\n            anchor: this.anchor_.slice(),\n            anchorOrigin: this.anchorOrigin_,\n            anchorXUnits: this.anchorXUnits_,\n            anchorYUnits: this.anchorYUnits_,\n            crossOrigin: this.crossOrigin_,\n            color: (this.color_ && this.color_.slice) ? this.color_.slice() : this.color_ || undefined,\n            src: this.getSrc(),\n            offset: this.offset_.slice(),\n            offsetOrigin: this.offsetOrigin_,\n            size: this.size_ !== null ? this.size_.slice() : undefined,\n            opacity: this.getOpacity(),\n            scale: this.getScale(),\n            rotation: this.getRotation(),\n            rotateWithView: this.getRotateWithView()\n        });\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    Icon.prototype.getAnchor = function () {\n        if (this.normalizedAnchor_) {\n            return this.normalizedAnchor_;\n        }\n        var anchor = this.anchor_;\n        var size = this.getSize();\n        if (this.anchorXUnits_ == IconAnchorUnits.FRACTION ||\n            this.anchorYUnits_ == IconAnchorUnits.FRACTION) {\n            if (!size) {\n                return null;\n            }\n            anchor = this.anchor_.slice();\n            if (this.anchorXUnits_ == IconAnchorUnits.FRACTION) {\n                anchor[0] *= size[0];\n            }\n            if (this.anchorYUnits_ == IconAnchorUnits.FRACTION) {\n                anchor[1] *= size[1];\n            }\n        }\n        if (this.anchorOrigin_ != IconOrigin.TOP_LEFT) {\n            if (!size) {\n                return null;\n            }\n            if (anchor === this.anchor_) {\n                anchor = this.anchor_.slice();\n            }\n            if (this.anchorOrigin_ == IconOrigin.TOP_RIGHT ||\n                this.anchorOrigin_ == IconOrigin.BOTTOM_RIGHT) {\n                anchor[0] = -anchor[0] + size[0];\n            }\n            if (this.anchorOrigin_ == IconOrigin.BOTTOM_LEFT ||\n                this.anchorOrigin_ == IconOrigin.BOTTOM_RIGHT) {\n                anchor[1] = -anchor[1] + size[1];\n            }\n        }\n        this.normalizedAnchor_ = anchor;\n        return this.normalizedAnchor_;\n    };\n    /**\n     * Set the anchor point. The anchor determines the center point for the\n     * symbolizer.\n     *\n     * @param {Array<number>} anchor Anchor.\n     * @api\n     */\n    Icon.prototype.setAnchor = function (anchor) {\n        this.anchor_ = anchor;\n        this.normalizedAnchor_ = null;\n    };\n    /**\n     * Get the icon color.\n     * @return {import(\"../color.js\").Color} Color.\n     * @api\n     */\n    Icon.prototype.getColor = function () {\n        return this.color_;\n    };\n    /**\n     * Get the image icon.\n     * @param {number} pixelRatio Pixel ratio.\n     * @return {HTMLImageElement|HTMLCanvasElement} Image or Canvas element.\n     * @override\n     * @api\n     */\n    Icon.prototype.getImage = function (pixelRatio) {\n        return this.iconImage_.getImage(pixelRatio);\n    };\n    /**\n     * @override\n     */\n    Icon.prototype.getImageSize = function () {\n        return this.iconImage_.getSize();\n    };\n    /**\n     * @override\n     */\n    Icon.prototype.getHitDetectionImageSize = function () {\n        return this.getImageSize();\n    };\n    /**\n     * @override\n     */\n    Icon.prototype.getImageState = function () {\n        return this.iconImage_.getImageState();\n    };\n    /**\n     * @override\n     */\n    Icon.prototype.getHitDetectionImage = function (pixelRatio) {\n        return this.iconImage_.getHitDetectionImage(pixelRatio);\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    Icon.prototype.getOrigin = function () {\n        if (this.origin_) {\n            return this.origin_;\n        }\n        var offset = this.offset_;\n        if (this.offsetOrigin_ != IconOrigin.TOP_LEFT) {\n            var size = this.getSize();\n            var iconImageSize = this.iconImage_.getSize();\n            if (!size || !iconImageSize) {\n                return null;\n            }\n            offset = offset.slice();\n            if (this.offsetOrigin_ == IconOrigin.TOP_RIGHT ||\n                this.offsetOrigin_ == IconOrigin.BOTTOM_RIGHT) {\n                offset[0] = iconImageSize[0] - size[0] - offset[0];\n            }\n            if (this.offsetOrigin_ == IconOrigin.BOTTOM_LEFT ||\n                this.offsetOrigin_ == IconOrigin.BOTTOM_RIGHT) {\n                offset[1] = iconImageSize[1] - size[1] - offset[1];\n            }\n        }\n        this.origin_ = offset;\n        return this.origin_;\n    };\n    /**\n     * Get the image URL.\n     * @return {string|undefined} Image src.\n     * @api\n     */\n    Icon.prototype.getSrc = function () {\n        return this.iconImage_.getSrc();\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    Icon.prototype.getSize = function () {\n        return !this.size_ ? this.iconImage_.getSize() : this.size_;\n    };\n    /**\n     * @override\n     */\n    Icon.prototype.listenImageChange = function (listener, thisArg) {\n        return listen(this.iconImage_, EventType.CHANGE, listener, thisArg);\n    };\n    /**\n     * Load not yet loaded URI.\n     * When rendering a feature with an icon style, the vector renderer will\n     * automatically call this method. However, you might want to call this\n     * method yourself for preloading or other purposes.\n     * @override\n     * @api\n     */\n    Icon.prototype.load = function () {\n        this.iconImage_.load();\n    };\n    /**\n     * @override\n     */\n    Icon.prototype.unlistenImageChange = function (listener, thisArg) {\n        unlisten(this.iconImage_, EventType.CHANGE, listener, thisArg);\n    };\n    return Icon;\n}(ImageStyle));\nexport default Icon;\n//# sourceMappingURL=Icon.js.map","/**\n * @module ol/style/Stroke\n */\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [color] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n * @property {string} [lineCap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {string} [lineJoin='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [lineDash] Line dash pattern. Default is `undefined` (no dash).\n * Please note that Internet Explorer 10 and lower do not support the `setLineDash` method on\n * the `CanvasRenderingContext2D` and therefore this option will have no visual effect in these browsers.\n * @property {number} [lineDashOffset=0] Line dash offset.\n * @property {number} [miterLimit=10] Miter limit.\n * @property {number} [width] Width.\n */\n/**\n * @classdesc\n * Set stroke style for vector features.\n * Note that the defaults given are the Canvas defaults, which will be used if\n * option is not defined. The `get` functions return whatever was entered in\n * the options; they will not return the default.\n * @api\n */\nvar Stroke = /** @class */ (function () {\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function Stroke(opt_options) {\n        var options = opt_options || {};\n        /**\n         * @private\n         * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike}\n         */\n        this.color_ = options.color !== undefined ? options.color : null;\n        /**\n         * @private\n         * @type {string|undefined}\n         */\n        this.lineCap_ = options.lineCap;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        this.lineDash_ = options.lineDash !== undefined ? options.lineDash : null;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        this.lineDashOffset_ = options.lineDashOffset;\n        /**\n         * @private\n         * @type {string|undefined}\n         */\n        this.lineJoin_ = options.lineJoin;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        this.miterLimit_ = options.miterLimit;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        this.width_ = options.width;\n    }\n    /**\n     * Clones the style.\n     * @return {Stroke} The cloned style.\n     * @api\n     */\n    Stroke.prototype.clone = function () {\n        var color = this.getColor();\n        return new Stroke({\n            color: Array.isArray(color) ? color.slice() : color || undefined,\n            lineCap: this.getLineCap(),\n            lineDash: this.getLineDash() ? this.getLineDash().slice() : undefined,\n            lineDashOffset: this.getLineDashOffset(),\n            lineJoin: this.getLineJoin(),\n            miterLimit: this.getMiterLimit(),\n            width: this.getWidth()\n        });\n    };\n    /**\n     * Get the stroke color.\n     * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} Color.\n     * @api\n     */\n    Stroke.prototype.getColor = function () {\n        return this.color_;\n    };\n    /**\n     * Get the line cap type for the stroke.\n     * @return {string|undefined} Line cap.\n     * @api\n     */\n    Stroke.prototype.getLineCap = function () {\n        return this.lineCap_;\n    };\n    /**\n     * Get the line dash style for the stroke.\n     * @return {Array<number>} Line dash.\n     * @api\n     */\n    Stroke.prototype.getLineDash = function () {\n        return this.lineDash_;\n    };\n    /**\n     * Get the line dash offset for the stroke.\n     * @return {number|undefined} Line dash offset.\n     * @api\n     */\n    Stroke.prototype.getLineDashOffset = function () {\n        return this.lineDashOffset_;\n    };\n    /**\n     * Get the line join type for the stroke.\n     * @return {string|undefined} Line join.\n     * @api\n     */\n    Stroke.prototype.getLineJoin = function () {\n        return this.lineJoin_;\n    };\n    /**\n     * Get the miter limit for the stroke.\n     * @return {number|undefined} Miter limit.\n     * @api\n     */\n    Stroke.prototype.getMiterLimit = function () {\n        return this.miterLimit_;\n    };\n    /**\n     * Get the stroke width.\n     * @return {number|undefined} Width.\n     * @api\n     */\n    Stroke.prototype.getWidth = function () {\n        return this.width_;\n    };\n    /**\n     * Set the color.\n     *\n     * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} color Color.\n     * @api\n     */\n    Stroke.prototype.setColor = function (color) {\n        this.color_ = color;\n    };\n    /**\n     * Set the line cap.\n     *\n     * @param {string|undefined} lineCap Line cap.\n     * @api\n     */\n    Stroke.prototype.setLineCap = function (lineCap) {\n        this.lineCap_ = lineCap;\n    };\n    /**\n     * Set the line dash.\n     *\n     * Please note that Internet Explorer 10 and lower [do not support][mdn] the\n     * `setLineDash` method on the `CanvasRenderingContext2D` and therefore this\n     * property will have no visual effect in these browsers.\n     *\n     * [mdn]: https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/setLineDash#Browser_compatibility\n     *\n     * @param {Array<number>} lineDash Line dash.\n     * @api\n     */\n    Stroke.prototype.setLineDash = function (lineDash) {\n        this.lineDash_ = lineDash;\n    };\n    /**\n     * Set the line dash offset.\n     *\n     * @param {number|undefined} lineDashOffset Line dash offset.\n     * @api\n     */\n    Stroke.prototype.setLineDashOffset = function (lineDashOffset) {\n        this.lineDashOffset_ = lineDashOffset;\n    };\n    /**\n     * Set the line join.\n     *\n     * @param {string|undefined} lineJoin Line join.\n     * @api\n     */\n    Stroke.prototype.setLineJoin = function (lineJoin) {\n        this.lineJoin_ = lineJoin;\n    };\n    /**\n     * Set the miter limit.\n     *\n     * @param {number|undefined} miterLimit Miter limit.\n     * @api\n     */\n    Stroke.prototype.setMiterLimit = function (miterLimit) {\n        this.miterLimit_ = miterLimit;\n    };\n    /**\n     * Set the width.\n     *\n     * @param {number|undefined} width Width.\n     * @api\n     */\n    Stroke.prototype.setWidth = function (width) {\n        this.width_ = width;\n    };\n    return Stroke;\n}());\nexport default Stroke;\n//# sourceMappingURL=Stroke.js.map","/**\n * @module ol/style/Style\n */\n/**\n * Feature styles.\n *\n * If no style is defined, the following default style is used:\n * ```js\n *  import {Fill, Stroke, Circle, Style} from 'ol/style';\n *\n *  var fill = new Fill({\n *    color: 'rgba(255,255,255,0.4)'\n *  });\n *  var stroke = new Stroke({\n *    color: '#3399CC',\n *    width: 1.25\n *  });\n *  var styles = [\n *    new Style({\n *      image: new Circle({\n *        fill: fill,\n *        stroke: stroke,\n *        radius: 5\n *      }),\n *      fill: fill,\n *      stroke: stroke\n *    })\n *  ];\n * ```\n *\n * A separate editing style has the following defaults:\n * ```js\n *  import {Fill, Stroke, Circle, Style} from 'ol/style';\n *  import GeometryType from 'ol/geom/GeometryType';\n *\n *  var white = [255, 255, 255, 1];\n *  var blue = [0, 153, 255, 1];\n *  var width = 3;\n *  styles[GeometryType.POLYGON] = [\n *    new Style({\n *      fill: new Fill({\n *        color: [255, 255, 255, 0.5]\n *      })\n *    })\n *  ];\n *  styles[GeometryType.MULTI_POLYGON] =\n *      styles[GeometryType.POLYGON];\n *  styles[GeometryType.LINE_STRING] = [\n *    new Style({\n *      stroke: new Stroke({\n *        color: white,\n *        width: width + 2\n *      })\n *    }),\n *    new Style({\n *      stroke: new Stroke({\n *        color: blue,\n *        width: width\n *      })\n *    })\n *  ];\n *  styles[GeometryType.MULTI_LINE_STRING] =\n *      styles[GeometryType.LINE_STRING];\n *  styles[GeometryType.POINT] = [\n *    new Style({\n *      image: new Circle({\n *        radius: width * 2,\n *        fill: new Fill({\n *          color: blue\n *        }),\n *        stroke: new Stroke({\n *          color: white,\n *          width: width / 2\n *        })\n *      }),\n *      zIndex: Infinity\n *    })\n *  ];\n *  styles[GeometryType.MULTI_POINT] =\n *      styles[GeometryType.POINT];\n *  styles[GeometryType.GEOMETRY_COLLECTION] =\n *      styles[GeometryType.POLYGON].concat(\n *          styles[GeometryType.LINE_STRING],\n *          styles[GeometryType.POINT]\n *      );\n * ```\n */\nimport { assert } from '../asserts.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport CircleStyle from './Circle.js';\nimport Fill from './Fill.js';\nimport Stroke from './Stroke.js';\n/**\n * A function that takes an {@link module:ol/Feature} and a `{number}`\n * representing the view's resolution. The function should return a\n * {@link module:ol/style/Style} or an array of them. This way e.g. a\n * vector layer can be styled.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike, number):(Style|Array<Style>)} StyleFunction\n */\n/**\n * A {@link Style}, an array of {@link Style}, or a {@link StyleFunction}.\n * @typedef {Style|Array<Style>|StyleFunction} StyleLike\n */\n/**\n * A function that takes an {@link module:ol/Feature} as argument and returns an\n * {@link module:ol/geom/Geometry} that will be rendered and styled for the feature.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike):\n *     (import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined)} GeometryFunction\n */\n/**\n * Custom renderer function. Takes two arguments:\n *\n * 1. The pixel coordinates of the geometry in GeoJSON notation.\n * 2. The {@link module:ol/render~State} of the layer renderer.\n *\n * @typedef {function((import(\"../coordinate.js\").Coordinate|Array<import(\"../coordinate.js\").Coordinate>|Array<Array<import(\"../coordinate.js\").Coordinate>>),import(\"../render.js\").State): void}\n * RenderFunction\n */\n/**\n * @typedef {Object} Options\n * @property {string|import(\"../geom/Geometry.js\").default|GeometryFunction} [geometry] Feature property or geometry\n * or function returning a geometry to render for this style.\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {import(\"./Image.js\").default} [image] Image style.\n * @property {RenderFunction} [renderer] Custom renderer. When configured, `fill`, `stroke` and `image` will be\n * ignored, and the provided function will be called with each render frame for each geometry.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Text.js\").default} [text] Text style.\n * @property {number} [zIndex] Z index.\n */\n/**\n * @classdesc\n * Container for vector feature rendering styles. Any changes made to the style\n * or its children through `set*()` methods will not take effect until the\n * feature or layer that uses the style is re-rendered.\n * @api\n */\nvar Style = /** @class */ (function () {\n    /**\n     * @param {Options=} opt_options Style options.\n     */\n    function Style(opt_options) {\n        var options = opt_options || {};\n        /**\n         * @private\n         * @type {string|import(\"../geom/Geometry.js\").default|GeometryFunction}\n         */\n        this.geometry_ = null;\n        /**\n         * @private\n         * @type {!GeometryFunction}\n         */\n        this.geometryFunction_ = defaultGeometryFunction;\n        if (options.geometry !== undefined) {\n            this.setGeometry(options.geometry);\n        }\n        /**\n         * @private\n         * @type {import(\"./Fill.js\").default}\n         */\n        this.fill_ = options.fill !== undefined ? options.fill : null;\n        /**\n           * @private\n           * @type {import(\"./Image.js\").default}\n           */\n        this.image_ = options.image !== undefined ? options.image : null;\n        /**\n         * @private\n         * @type {RenderFunction|null}\n         */\n        this.renderer_ = options.renderer !== undefined ? options.renderer : null;\n        /**\n         * @private\n         * @type {import(\"./Stroke.js\").default}\n         */\n        this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n        /**\n         * @private\n         * @type {import(\"./Text.js\").default}\n         */\n        this.text_ = options.text !== undefined ? options.text : null;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        this.zIndex_ = options.zIndex;\n    }\n    /**\n     * Clones the style.\n     * @return {Style} The cloned style.\n     * @api\n     */\n    Style.prototype.clone = function () {\n        var geometry = this.getGeometry();\n        if (geometry && typeof geometry === 'object') {\n            geometry = /** @type {import(\"../geom/Geometry.js\").default} */ (geometry).clone();\n        }\n        return new Style({\n            geometry: geometry,\n            fill: this.getFill() ? this.getFill().clone() : undefined,\n            image: this.getImage() ? this.getImage().clone() : undefined,\n            stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n            text: this.getText() ? this.getText().clone() : undefined,\n            zIndex: this.getZIndex()\n        });\n    };\n    /**\n     * Get the custom renderer function that was configured with\n     * {@link #setRenderer} or the `renderer` constructor option.\n     * @return {RenderFunction|null} Custom renderer function.\n     * @api\n     */\n    Style.prototype.getRenderer = function () {\n        return this.renderer_;\n    };\n    /**\n     * Sets a custom renderer function for this style. When set, `fill`, `stroke`\n     * and `image` options of the style will be ignored.\n     * @param {RenderFunction|null} renderer Custom renderer function.\n     * @api\n     */\n    Style.prototype.setRenderer = function (renderer) {\n        this.renderer_ = renderer;\n    };\n    /**\n     * Get the geometry to be rendered.\n     * @return {string|import(\"../geom/Geometry.js\").default|GeometryFunction}\n     * Feature property or geometry or function that returns the geometry that will\n     * be rendered with this style.\n     * @api\n     */\n    Style.prototype.getGeometry = function () {\n        return this.geometry_;\n    };\n    /**\n     * Get the function used to generate a geometry for rendering.\n     * @return {!GeometryFunction} Function that is called with a feature\n     * and returns the geometry to render instead of the feature's geometry.\n     * @api\n     */\n    Style.prototype.getGeometryFunction = function () {\n        return this.geometryFunction_;\n    };\n    /**\n     * Get the fill style.\n     * @return {import(\"./Fill.js\").default} Fill style.\n     * @api\n     */\n    Style.prototype.getFill = function () {\n        return this.fill_;\n    };\n    /**\n     * Set the fill style.\n     * @param {import(\"./Fill.js\").default} fill Fill style.\n     * @api\n     */\n    Style.prototype.setFill = function (fill) {\n        this.fill_ = fill;\n    };\n    /**\n     * Get the image style.\n     * @return {import(\"./Image.js\").default} Image style.\n     * @api\n     */\n    Style.prototype.getImage = function () {\n        return this.image_;\n    };\n    /**\n     * Set the image style.\n     * @param {import(\"./Image.js\").default} image Image style.\n     * @api\n     */\n    Style.prototype.setImage = function (image) {\n        this.image_ = image;\n    };\n    /**\n     * Get the stroke style.\n     * @return {import(\"./Stroke.js\").default} Stroke style.\n     * @api\n     */\n    Style.prototype.getStroke = function () {\n        return this.stroke_;\n    };\n    /**\n     * Set the stroke style.\n     * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n     * @api\n     */\n    Style.prototype.setStroke = function (stroke) {\n        this.stroke_ = stroke;\n    };\n    /**\n     * Get the text style.\n     * @return {import(\"./Text.js\").default} Text style.\n     * @api\n     */\n    Style.prototype.getText = function () {\n        return this.text_;\n    };\n    /**\n     * Set the text style.\n     * @param {import(\"./Text.js\").default} text Text style.\n     * @api\n     */\n    Style.prototype.setText = function (text) {\n        this.text_ = text;\n    };\n    /**\n     * Get the z-index for the style.\n     * @return {number|undefined} ZIndex.\n     * @api\n     */\n    Style.prototype.getZIndex = function () {\n        return this.zIndex_;\n    };\n    /**\n     * Set a geometry that is rendered instead of the feature's geometry.\n     *\n     * @param {string|import(\"../geom/Geometry.js\").default|GeometryFunction} geometry\n     *     Feature property or geometry or function returning a geometry to render\n     *     for this style.\n     * @api\n     */\n    Style.prototype.setGeometry = function (geometry) {\n        if (typeof geometry === 'function') {\n            this.geometryFunction_ = geometry;\n        }\n        else if (typeof geometry === 'string') {\n            this.geometryFunction_ = function (feature) {\n                return (\n                /** @type {import(\"../geom/Geometry.js\").default} */ (feature.get(geometry)));\n            };\n        }\n        else if (!geometry) {\n            this.geometryFunction_ = defaultGeometryFunction;\n        }\n        else if (geometry !== undefined) {\n            this.geometryFunction_ = function () {\n                return (\n                /** @type {import(\"../geom/Geometry.js\").default} */ (geometry));\n            };\n        }\n        this.geometry_ = geometry;\n    };\n    /**\n     * Set the z-index.\n     *\n     * @param {number|undefined} zIndex ZIndex.\n     * @api\n     */\n    Style.prototype.setZIndex = function (zIndex) {\n        this.zIndex_ = zIndex;\n    };\n    return Style;\n}());\n/**\n * Convert the provided object into a style function.  Functions passed through\n * unchanged.  Arrays of Style or single style objects wrapped in a\n * new style function.\n * @param {StyleFunction|Array<Style>|Style} obj\n *     A style function, a single style, or an array of styles.\n * @return {StyleFunction} A style function.\n */\nexport function toFunction(obj) {\n    var styleFunction;\n    if (typeof obj === 'function') {\n        styleFunction = obj;\n    }\n    else {\n        /**\n         * @type {Array<Style>}\n         */\n        var styles_1;\n        if (Array.isArray(obj)) {\n            styles_1 = obj;\n        }\n        else {\n            assert(typeof /** @type {?} */ (obj).getZIndex === 'function', 41); // Expected an `Style` or an array of `Style`\n            var style = /** @type {Style} */ (obj);\n            styles_1 = [style];\n        }\n        styleFunction = function () {\n            return styles_1;\n        };\n    }\n    return styleFunction;\n}\n/**\n * @type {Array<Style>}\n */\nvar defaultStyles = null;\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array<Style>} Style.\n */\nexport function createDefaultStyle(feature, resolution) {\n    // We don't use an immediately-invoked function\n    // and a closure so we don't get an error at script evaluation time in\n    // browsers that do not support Canvas. (import(\"./Circle.js\").CircleStyle does\n    // canvas.getContext('2d') at construction time, which will cause an.error\n    // in such browsers.)\n    if (!defaultStyles) {\n        var fill = new Fill({\n            color: 'rgba(255,255,255,0.4)'\n        });\n        var stroke = new Stroke({\n            color: '#3399CC',\n            width: 1.25\n        });\n        defaultStyles = [\n            new Style({\n                image: new CircleStyle({\n                    fill: fill,\n                    stroke: stroke,\n                    radius: 5\n                }),\n                fill: fill,\n                stroke: stroke\n            })\n        ];\n    }\n    return defaultStyles;\n}\n/**\n * Default styles for editing features.\n * @return {Object<import(\"../geom/GeometryType.js\").default, Array<Style>>} Styles\n */\nexport function createEditingStyle() {\n    /** @type {Object<import(\"../geom/GeometryType.js\").default, Array<Style>>} */\n    var styles = {};\n    var white = [255, 255, 255, 1];\n    var blue = [0, 153, 255, 1];\n    var width = 3;\n    styles[GeometryType.POLYGON] = [\n        new Style({\n            fill: new Fill({\n                color: [255, 255, 255, 0.5]\n            })\n        })\n    ];\n    styles[GeometryType.MULTI_POLYGON] =\n        styles[GeometryType.POLYGON];\n    styles[GeometryType.LINE_STRING] = [\n        new Style({\n            stroke: new Stroke({\n                color: white,\n                width: width + 2\n            })\n        }),\n        new Style({\n            stroke: new Stroke({\n                color: blue,\n                width: width\n            })\n        })\n    ];\n    styles[GeometryType.MULTI_LINE_STRING] =\n        styles[GeometryType.LINE_STRING];\n    styles[GeometryType.CIRCLE] =\n        styles[GeometryType.POLYGON].concat(styles[GeometryType.LINE_STRING]);\n    styles[GeometryType.POINT] = [\n        new Style({\n            image: new CircleStyle({\n                radius: width * 2,\n                fill: new Fill({\n                    color: blue\n                }),\n                stroke: new Stroke({\n                    color: white,\n                    width: width / 2\n                })\n            }),\n            zIndex: Infinity\n        })\n    ];\n    styles[GeometryType.MULTI_POINT] =\n        styles[GeometryType.POINT];\n    styles[GeometryType.GEOMETRY_COLLECTION] =\n        styles[GeometryType.POLYGON].concat(styles[GeometryType.LINE_STRING], styles[GeometryType.POINT]);\n    return styles;\n}\n/**\n * Function that is called with a feature and returns its default geometry.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature to get the geometry for.\n * @return {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined} Geometry to render.\n */\nfunction defaultGeometryFunction(feature) {\n    return feature.getGeometry();\n}\nexport default Style;\n//# sourceMappingURL=Style.js.map","/**\n * @module ol/style/TextPlacement\n */\n/**\n * Text placement. One of `'point'`, `'line'`. Default is `'point'`. Note that\n * `'line'` requires the underlying geometry to be a {@link module:ol/geom/LineString~LineString},\n * {@link module:ol/geom/Polygon~Polygon}, {@link module:ol/geom/MultiLineString~MultiLineString} or\n * {@link module:ol/geom/MultiPolygon~MultiPolygon}.\n * @enum {string}\n */\nexport default {\n    POINT: 'point',\n    LINE: 'line'\n};\n//# sourceMappingURL=TextPlacement.js.map","/**\n * @module ol/style/Text\n */\nimport Fill from './Fill.js';\nimport TextPlacement from './TextPlacement.js';\n/**\n * The default fill color to use if no fill was set at construction time; a\n * blackish `#333`.\n *\n * @const {string}\n */\nvar DEFAULT_FILL_COLOR = '#333';\n/**\n * @typedef {Object} Options\n * @property {string} [font] Font style as CSS 'font' value, see:\n * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/font. Default is '10px sans-serif'\n * @property {number} [maxAngle=Math.PI/4] When `placement` is set to `'line'`, allow a maximum angle between adjacent characters.\n * The expected value is in radians, and the default is 45° (`Math.PI / 4`).\n * @property {number} [offsetX=0] Horizontal text offset in pixels. A positive will shift the text right.\n * @property {number} [offsetY=0] Vertical text offset in pixels. A positive will shift the text down.\n * @property {boolean} [overflow=false] For polygon labels or when `placement` is set to `'line'`, allow text to exceed\n * the width of the polygon at the label position or the length of the path that it follows.\n * @property {import(\"./TextPlacement.js\").default|string} [placement='point'] Text placement.\n * @property {number} [scale] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the text with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {string} [text] Text content.\n * @property {string} [textAlign] Text alignment. Possible values: 'left', 'right', 'center', 'end' or 'start'.\n * Default is 'center' for `placement: 'point'`. For `placement: 'line'`, the default is to let the renderer choose a\n * placement where `maxAngle` is not exceeded.\n * @property {string} [textBaseline='middle'] Text base line. Possible values: 'bottom', 'top', 'middle', 'alphabetic',\n * 'hanging', 'ideographic'.\n * @property {import(\"./Fill.js\").default} [fill] Fill style. If none is provided, we'll use a dark fill-style (#333).\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Fill.js\").default} [backgroundFill] Fill style for the text background when `placement` is\n * `'point'`. Default is no fill.\n * @property {import(\"./Stroke.js\").default} [backgroundStroke] Stroke style for the text background  when `placement`\n * is `'point'`. Default is no stroke.\n * @property {Array<number>} [padding=[0, 0, 0, 0]] Padding in pixels around the text for decluttering and background. The order of\n * values in the array is `[top, right, bottom, left]`.\n */\n/**\n * @classdesc\n * Set text style for vector features.\n * @api\n */\nvar Text = /** @class */ (function () {\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function Text(opt_options) {\n        var options = opt_options || {};\n        /**\n         * @private\n         * @type {string|undefined}\n         */\n        this.font_ = options.font;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        this.rotation_ = options.rotation;\n        /**\n         * @private\n         * @type {boolean|undefined}\n         */\n        this.rotateWithView_ = options.rotateWithView;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        this.scale_ = options.scale;\n        /**\n         * @private\n         * @type {string|undefined}\n         */\n        this.text_ = options.text;\n        /**\n         * @private\n         * @type {string|undefined}\n         */\n        this.textAlign_ = options.textAlign;\n        /**\n         * @private\n         * @type {string|undefined}\n         */\n        this.textBaseline_ = options.textBaseline;\n        /**\n         * @private\n         * @type {import(\"./Fill.js\").default}\n         */\n        this.fill_ = options.fill !== undefined ? options.fill :\n            new Fill({ color: DEFAULT_FILL_COLOR });\n        /**\n         * @private\n         * @type {number}\n         */\n        this.maxAngle_ = options.maxAngle !== undefined ? options.maxAngle : Math.PI / 4;\n        /**\n         * @private\n         * @type {import(\"./TextPlacement.js\").default|string}\n         */\n        this.placement_ = options.placement !== undefined ? options.placement : TextPlacement.POINT;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        this.overflow_ = !!options.overflow;\n        /**\n         * @private\n         * @type {import(\"./Stroke.js\").default}\n         */\n        this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.offsetX_ = options.offsetX !== undefined ? options.offsetX : 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.offsetY_ = options.offsetY !== undefined ? options.offsetY : 0;\n        /**\n         * @private\n         * @type {import(\"./Fill.js\").default}\n         */\n        this.backgroundFill_ = options.backgroundFill ? options.backgroundFill : null;\n        /**\n         * @private\n         * @type {import(\"./Stroke.js\").default}\n         */\n        this.backgroundStroke_ = options.backgroundStroke ? options.backgroundStroke : null;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        this.padding_ = options.padding === undefined ? null : options.padding;\n    }\n    /**\n     * Clones the style.\n     * @return {Text} The cloned style.\n     * @api\n     */\n    Text.prototype.clone = function () {\n        return new Text({\n            font: this.getFont(),\n            placement: this.getPlacement(),\n            maxAngle: this.getMaxAngle(),\n            overflow: this.getOverflow(),\n            rotation: this.getRotation(),\n            rotateWithView: this.getRotateWithView(),\n            scale: this.getScale(),\n            text: this.getText(),\n            textAlign: this.getTextAlign(),\n            textBaseline: this.getTextBaseline(),\n            fill: this.getFill() ? this.getFill().clone() : undefined,\n            stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n            offsetX: this.getOffsetX(),\n            offsetY: this.getOffsetY(),\n            backgroundFill: this.getBackgroundFill() ? this.getBackgroundFill().clone() : undefined,\n            backgroundStroke: this.getBackgroundStroke() ? this.getBackgroundStroke().clone() : undefined\n        });\n    };\n    /**\n     * Get the `overflow` configuration.\n     * @return {boolean} Let text overflow the length of the path they follow.\n     * @api\n     */\n    Text.prototype.getOverflow = function () {\n        return this.overflow_;\n    };\n    /**\n     * Get the font name.\n     * @return {string|undefined} Font.\n     * @api\n     */\n    Text.prototype.getFont = function () {\n        return this.font_;\n    };\n    /**\n     * Get the maximum angle between adjacent characters.\n     * @return {number} Angle in radians.\n     * @api\n     */\n    Text.prototype.getMaxAngle = function () {\n        return this.maxAngle_;\n    };\n    /**\n     * Get the label placement.\n     * @return {import(\"./TextPlacement.js\").default|string} Text placement.\n     * @api\n     */\n    Text.prototype.getPlacement = function () {\n        return this.placement_;\n    };\n    /**\n     * Get the x-offset for the text.\n     * @return {number} Horizontal text offset.\n     * @api\n     */\n    Text.prototype.getOffsetX = function () {\n        return this.offsetX_;\n    };\n    /**\n     * Get the y-offset for the text.\n     * @return {number} Vertical text offset.\n     * @api\n     */\n    Text.prototype.getOffsetY = function () {\n        return this.offsetY_;\n    };\n    /**\n     * Get the fill style for the text.\n     * @return {import(\"./Fill.js\").default} Fill style.\n     * @api\n     */\n    Text.prototype.getFill = function () {\n        return this.fill_;\n    };\n    /**\n     * Determine whether the text rotates with the map.\n     * @return {boolean|undefined} Rotate with map.\n     * @api\n     */\n    Text.prototype.getRotateWithView = function () {\n        return this.rotateWithView_;\n    };\n    /**\n     * Get the text rotation.\n     * @return {number|undefined} Rotation.\n     * @api\n     */\n    Text.prototype.getRotation = function () {\n        return this.rotation_;\n    };\n    /**\n     * Get the text scale.\n     * @return {number|undefined} Scale.\n     * @api\n     */\n    Text.prototype.getScale = function () {\n        return this.scale_;\n    };\n    /**\n     * Get the stroke style for the text.\n     * @return {import(\"./Stroke.js\").default} Stroke style.\n     * @api\n     */\n    Text.prototype.getStroke = function () {\n        return this.stroke_;\n    };\n    /**\n     * Get the text to be rendered.\n     * @return {string|undefined} Text.\n     * @api\n     */\n    Text.prototype.getText = function () {\n        return this.text_;\n    };\n    /**\n     * Get the text alignment.\n     * @return {string|undefined} Text align.\n     * @api\n     */\n    Text.prototype.getTextAlign = function () {\n        return this.textAlign_;\n    };\n    /**\n     * Get the text baseline.\n     * @return {string|undefined} Text baseline.\n     * @api\n     */\n    Text.prototype.getTextBaseline = function () {\n        return this.textBaseline_;\n    };\n    /**\n     * Get the background fill style for the text.\n     * @return {import(\"./Fill.js\").default} Fill style.\n     * @api\n     */\n    Text.prototype.getBackgroundFill = function () {\n        return this.backgroundFill_;\n    };\n    /**\n     * Get the background stroke style for the text.\n     * @return {import(\"./Stroke.js\").default} Stroke style.\n     * @api\n     */\n    Text.prototype.getBackgroundStroke = function () {\n        return this.backgroundStroke_;\n    };\n    /**\n     * Get the padding for the text.\n     * @return {Array<number>} Padding.\n     * @api\n     */\n    Text.prototype.getPadding = function () {\n        return this.padding_;\n    };\n    /**\n     * Set the `overflow` property.\n     *\n     * @param {boolean} overflow Let text overflow the path that it follows.\n     * @api\n     */\n    Text.prototype.setOverflow = function (overflow) {\n        this.overflow_ = overflow;\n    };\n    /**\n     * Set the font.\n     *\n     * @param {string|undefined} font Font.\n     * @api\n     */\n    Text.prototype.setFont = function (font) {\n        this.font_ = font;\n    };\n    /**\n     * Set the maximum angle between adjacent characters.\n     *\n     * @param {number} maxAngle Angle in radians.\n     * @api\n     */\n    Text.prototype.setMaxAngle = function (maxAngle) {\n        this.maxAngle_ = maxAngle;\n    };\n    /**\n     * Set the x offset.\n     *\n     * @param {number} offsetX Horizontal text offset.\n     * @api\n     */\n    Text.prototype.setOffsetX = function (offsetX) {\n        this.offsetX_ = offsetX;\n    };\n    /**\n     * Set the y offset.\n     *\n     * @param {number} offsetY Vertical text offset.\n     * @api\n     */\n    Text.prototype.setOffsetY = function (offsetY) {\n        this.offsetY_ = offsetY;\n    };\n    /**\n     * Set the text placement.\n     *\n     * @param {import(\"./TextPlacement.js\").default|string} placement Placement.\n     * @api\n     */\n    Text.prototype.setPlacement = function (placement) {\n        this.placement_ = placement;\n    };\n    /**\n     * Set whether to rotate the text with the view.\n     *\n     * @param {boolean} rotateWithView Rotate with map.\n     * @api\n     */\n    Text.prototype.setRotateWithView = function (rotateWithView) {\n        this.rotateWithView_ = rotateWithView;\n    };\n    /**\n     * Set the fill.\n     *\n     * @param {import(\"./Fill.js\").default} fill Fill style.\n     * @api\n     */\n    Text.prototype.setFill = function (fill) {\n        this.fill_ = fill;\n    };\n    /**\n     * Set the rotation.\n     *\n     * @param {number|undefined} rotation Rotation.\n     * @api\n     */\n    Text.prototype.setRotation = function (rotation) {\n        this.rotation_ = rotation;\n    };\n    /**\n     * Set the scale.\n     *\n     * @param {number|undefined} scale Scale.\n     * @api\n     */\n    Text.prototype.setScale = function (scale) {\n        this.scale_ = scale;\n    };\n    /**\n     * Set the stroke.\n     *\n     * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n     * @api\n     */\n    Text.prototype.setStroke = function (stroke) {\n        this.stroke_ = stroke;\n    };\n    /**\n     * Set the text.\n     *\n     * @param {string|undefined} text Text.\n     * @api\n     */\n    Text.prototype.setText = function (text) {\n        this.text_ = text;\n    };\n    /**\n     * Set the text alignment.\n     *\n     * @param {string|undefined} textAlign Text align.\n     * @api\n     */\n    Text.prototype.setTextAlign = function (textAlign) {\n        this.textAlign_ = textAlign;\n    };\n    /**\n     * Set the text baseline.\n     *\n     * @param {string|undefined} textBaseline Text baseline.\n     * @api\n     */\n    Text.prototype.setTextBaseline = function (textBaseline) {\n        this.textBaseline_ = textBaseline;\n    };\n    /**\n     * Set the background fill.\n     *\n     * @param {import(\"./Fill.js\").default} fill Fill style.\n     * @api\n     */\n    Text.prototype.setBackgroundFill = function (fill) {\n        this.backgroundFill_ = fill;\n    };\n    /**\n     * Set the background stroke.\n     *\n     * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n     * @api\n     */\n    Text.prototype.setBackgroundStroke = function (stroke) {\n        this.backgroundStroke_ = stroke;\n    };\n    /**\n     * Set the padding (`[top, right, bottom, left]`).\n     *\n     * @param {!Array<number>} padding Padding.\n     * @api\n     */\n    Text.prototype.setPadding = function (padding) {\n        this.padding_ = padding;\n    };\n    return Text;\n}());\nexport default Text;\n//# sourceMappingURL=Text.js.map","/**\n * @module ol/tileurlfunction\n */\nimport { assert } from './asserts.js';\nimport { modulo } from './math.js';\nimport { hash as tileCoordHash } from './tilecoord.js';\n/**\n * @param {string} template Template.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplate(template, tileGrid) {\n    var zRegEx = /\\{z\\}/g;\n    var xRegEx = /\\{x\\}/g;\n    var yRegEx = /\\{y\\}/g;\n    var dashYRegEx = /\\{-y\\}/g;\n    return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n        if (!tileCoord) {\n            return undefined;\n        }\n        else {\n            return template.replace(zRegEx, tileCoord[0].toString())\n                .replace(xRegEx, tileCoord[1].toString())\n                .replace(yRegEx, tileCoord[2].toString())\n                .replace(dashYRegEx, function () {\n                var z = tileCoord[0];\n                var range = tileGrid.getFullTileRange(z);\n                assert(range, 55); // The {-y} placeholder requires a tile grid with extent\n                var y = range.getHeight() - tileCoord[2] - 1;\n                return y.toString();\n            });\n        }\n    });\n}\n/**\n * @param {Array<string>} templates Templates.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplates(templates, tileGrid) {\n    var len = templates.length;\n    var tileUrlFunctions = new Array(len);\n    for (var i = 0; i < len; ++i) {\n        tileUrlFunctions[i] = createFromTemplate(templates[i], tileGrid);\n    }\n    return createFromTileUrlFunctions(tileUrlFunctions);\n}\n/**\n * @param {Array<import(\"./Tile.js\").UrlFunction>} tileUrlFunctions Tile URL Functions.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTileUrlFunctions(tileUrlFunctions) {\n    if (tileUrlFunctions.length === 1) {\n        return tileUrlFunctions[0];\n    }\n    return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n        if (!tileCoord) {\n            return undefined;\n        }\n        else {\n            var h = tileCoordHash(tileCoord);\n            var index = modulo(h, tileUrlFunctions.length);\n            return tileUrlFunctions[index](tileCoord, pixelRatio, projection);\n        }\n    });\n}\n/**\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {number} pixelRatio Pixel ratio.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {string|undefined} Tile URL.\n */\nexport function nullTileUrlFunction(tileCoord, pixelRatio, projection) {\n    return undefined;\n}\n/**\n * @param {string} url URL.\n * @return {Array<string>} Array of urls.\n */\nexport function expandUrl(url) {\n    var urls = [];\n    var match = /\\{([a-z])-([a-z])\\}/.exec(url);\n    if (match) {\n        // char range\n        var startCharCode = match[1].charCodeAt(0);\n        var stopCharCode = match[2].charCodeAt(0);\n        var charCode = void 0;\n        for (charCode = startCharCode; charCode <= stopCharCode; ++charCode) {\n            urls.push(url.replace(match[0], String.fromCharCode(charCode)));\n        }\n        return urls;\n    }\n    match = match = /\\{(\\d+)-(\\d+)\\}/.exec(url);\n    if (match) {\n        // number range\n        var stop_1 = parseInt(match[2], 10);\n        for (var i = parseInt(match[1], 10); i <= stop_1; i++) {\n            urls.push(url.replace(match[0], i.toString()));\n        }\n        return urls;\n    }\n    urls.push(url);\n    return urls;\n}\n//# sourceMappingURL=tileurlfunction.js.map","/**\n * @module ol/net\n */\nimport { getUid } from './util.js';\n/**\n * Simple JSONP helper. Supports error callbacks and a custom callback param.\n * The error callback will be called when no JSONP is executed after 10 seconds.\n *\n * @param {string} url Request url. A 'callback' query parameter will be\n *     appended.\n * @param {Function} callback Callback on success.\n * @param {function()=} opt_errback Callback on error.\n * @param {string=} opt_callbackParam Custom query parameter for the JSONP\n *     callback. Default is 'callback'.\n */\nexport function jsonp(url, callback, opt_errback, opt_callbackParam) {\n    var script = document.createElement('script');\n    var key = 'olc_' + getUid(callback);\n    function cleanup() {\n        delete window[key];\n        script.parentNode.removeChild(script);\n    }\n    script.async = true;\n    script.src = url + (url.indexOf('?') == -1 ? '?' : '&') +\n        (opt_callbackParam || 'callback') + '=' + key;\n    var timer = setTimeout(function () {\n        cleanup();\n        if (opt_errback) {\n            opt_errback();\n        }\n    }, 10000);\n    window[key] = function (data) {\n        clearTimeout(timer);\n        cleanup();\n        callback(data);\n    };\n    document.getElementsByTagName('head')[0].appendChild(script);\n}\n//# sourceMappingURL=net.js.map","/**\n * @module ol/reproj/common\n */\n/**\n * Default maximum allowed threshold  (in pixels) for reprojection\n * triangulation.\n * @type {number}\n */\nexport var ERROR_THRESHOLD = 0.5;\n/**\n * Enable automatic reprojection of raster sources. Default is `true`.\n * TODO: decide if we want to expose this as a build flag or remove it\n * @type {boolean}\n */\nexport var ENABLE_RASTER_REPROJECTION = true;\n//# sourceMappingURL=common.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/Tile\n */\nimport TileState from './TileState.js';\nimport { easeIn } from './easing.js';\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport { abstract } from './util.js';\n/**\n * A function that takes an {@link module:ol/Tile} for the tile and a\n * `{string}` for the url as arguments. The default is\n * ```js\n * source.setTileLoadFunction(function(tile, src) {\n *   tile.getImage().src = src;\n * });\n * ```\n * For more fine grained control, the load function can use fetch or XMLHttpRequest and involve\n * error handling:\n *\n * ```js\n * import TileState from 'ol/TileState';\n *\n * source.setTileLoadFunction(function(tile, src) {\n *   var xhr = new XMLHttpRequest();\n *   xhr.responseType = 'blob';\n *   xhr.addEventListener('loadend', function (evt) {\n *     var data = this.response;\n *     if (data !== undefined) {\n *       tile.getImage().src = URL.createObjectURL(data);\n *     } else {\n *       tile.setState(TileState.ERROR);\n *     }\n *   });\n *   xhr.addEventListener('error', function () {\n *     tile.setState(TileState.ERROR);\n *   });\n *   xhr.open('GET', src);\n *   xhr.send();\n * });\n * ```\n *\n * @typedef {function(Tile, string): void} LoadFunction\n * @api\n */\n/**\n * {@link module:ol/source/Tile~Tile} sources use a function of this type to get\n * the url that provides a tile for a given tile coordinate.\n *\n * This function takes an {@link module:ol/tilecoord~TileCoord} for the tile\n * coordinate, a `{number}` representing the pixel ratio and a\n * {@link module:ol/proj/Projection} for the projection  as arguments\n * and returns a `{string}` representing the tile URL, or undefined if no tile\n * should be requested for the passed tile coordinate.\n *\n * @typedef {function(import(\"./tilecoord.js\").TileCoord, number,\n *           import(\"./proj/Projection.js\").default): (string|undefined)} UrlFunction\n * @api\n */\n/**\n * @typedef {Object} Options\n * @property {number} [transition=250] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @api\n */\n/**\n * @classdesc\n * Base class for tiles.\n *\n * @abstract\n */\nvar Tile = /** @class */ (function (_super) {\n    __extends(Tile, _super);\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @param {TileState} state State.\n     * @param {Options=} opt_options Tile options.\n     */\n    function Tile(tileCoord, state, opt_options) {\n        var _this = _super.call(this) || this;\n        var options = opt_options ? opt_options : {};\n        /**\n         * @type {import(\"./tilecoord.js\").TileCoord}\n         */\n        _this.tileCoord = tileCoord;\n        /**\n         * @protected\n         * @type {TileState}\n         */\n        _this.state = state;\n        /**\n         * An \"interim\" tile for this tile. The interim tile may be used while this\n         * one is loading, for \"smooth\" transitions when changing params/dimensions\n         * on the source.\n         * @type {Tile}\n         */\n        _this.interimTile = null;\n        /**\n         * The tile is available at the highest possible resolution. Subclasses can\n         * set this to `false` initially. Tile load listeners will not be\n         * unregistered before this is set to `true` and a `#changed()` is called.\n         * @type {boolean}\n         */\n        _this.hifi = true;\n        /**\n         * A key assigned to the tile. This is used by the tile source to determine\n         * if this tile can effectively be used, or if a new tile should be created\n         * and this one be used as an interim tile for this new tile.\n         * @type {string}\n         */\n        _this.key = '';\n        /**\n         * The duration for the opacity transition.\n         * @type {number}\n         */\n        _this.transition_ = options.transition === undefined ? 250 : options.transition;\n        /**\n         * Lookup of start times for rendering transitions.  If the start time is\n         * equal to -1, the transition is complete.\n         * @type {Object<string, number>}\n         */\n        _this.transitionStarts_ = {};\n        return _this;\n    }\n    /**\n     * @protected\n     */\n    Tile.prototype.changed = function () {\n        this.dispatchEvent(EventType.CHANGE);\n    };\n    /**\n     * @return {string} Key.\n     */\n    Tile.prototype.getKey = function () {\n        return this.key + '/' + this.tileCoord;\n    };\n    /**\n     * Get the interim tile most suitable for rendering using the chain of interim\n     * tiles. This corresponds to the  most recent tile that has been loaded, if no\n     * such tile exists, the original tile is returned.\n     * @return {!Tile} Best tile for rendering.\n     */\n    Tile.prototype.getInterimTile = function () {\n        if (!this.interimTile) {\n            //empty chain\n            return this;\n        }\n        var tile = this.interimTile;\n        // find the first loaded tile and return it. Since the chain is sorted in\n        // decreasing order of creation time, there is no need to search the remainder\n        // of the list (all those tiles correspond to older requests and will be\n        // cleaned up by refreshInterimChain)\n        do {\n            if (tile.getState() == TileState.LOADED) {\n                // Show tile immediately instead of fading it in after loading, because\n                // the interim tile is in place already\n                this.transition_ = 0;\n                return tile;\n            }\n            tile = tile.interimTile;\n        } while (tile);\n        // we can not find a better tile\n        return this;\n    };\n    /**\n     * Goes through the chain of interim tiles and discards sections of the chain\n     * that are no longer relevant.\n     */\n    Tile.prototype.refreshInterimChain = function () {\n        if (!this.interimTile) {\n            return;\n        }\n        var tile = this.interimTile;\n        var prev = /** @type {Tile} */ (this);\n        do {\n            if (tile.getState() == TileState.LOADED) {\n                //we have a loaded tile, we can discard the rest of the list\n                //we would could abort any LOADING tile request\n                //older than this tile (i.e. any LOADING tile following this entry in the chain)\n                tile.interimTile = null;\n                break;\n            }\n            else if (tile.getState() == TileState.LOADING) {\n                //keep this LOADING tile any loaded tiles later in the chain are\n                //older than this tile, so we're still interested in the request\n                prev = tile;\n            }\n            else if (tile.getState() == TileState.IDLE) {\n                //the head of the list is the most current tile, we don't need\n                //to start any other requests for this chain\n                prev.interimTile = tile.interimTile;\n            }\n            else {\n                prev = tile;\n            }\n            tile = prev.interimTile;\n        } while (tile);\n    };\n    /**\n     * Get the tile coordinate for this tile.\n     * @return {import(\"./tilecoord.js\").TileCoord} The tile coordinate.\n     * @api\n     */\n    Tile.prototype.getTileCoord = function () {\n        return this.tileCoord;\n    };\n    /**\n     * @return {TileState} State.\n     */\n    Tile.prototype.getState = function () {\n        return this.state;\n    };\n    /**\n     * Sets the state of this tile. If you write your own {@link module:ol/Tile~LoadFunction tileLoadFunction} ,\n     * it is important to set the state correctly to {@link module:ol/TileState~ERROR}\n     * when the tile cannot be loaded. Otherwise the tile cannot be removed from\n     * the tile queue and will block other requests.\n     * @param {TileState} state State.\n     * @api\n     */\n    Tile.prototype.setState = function (state) {\n        this.state = state;\n        this.changed();\n    };\n    /**\n     * Load the image or retry if loading previously failed.\n     * Loading is taken care of by the tile queue, and calling this method is\n     * only needed for preloading or for reloading in case of an error.\n     * @abstract\n     * @api\n     */\n    Tile.prototype.load = function () {\n        abstract();\n    };\n    /**\n     * Get the alpha value for rendering.\n     * @param {string} id An id for the renderer.\n     * @param {number} time The render frame time.\n     * @return {number} A number between 0 and 1.\n     */\n    Tile.prototype.getAlpha = function (id, time) {\n        if (!this.transition_) {\n            return 1;\n        }\n        var start = this.transitionStarts_[id];\n        if (!start) {\n            start = time;\n            this.transitionStarts_[id] = start;\n        }\n        else if (start === -1) {\n            return 1;\n        }\n        var delta = time - start + (1000 / 60); // avoid rendering at 0\n        if (delta >= this.transition_) {\n            return 1;\n        }\n        return easeIn(delta / this.transition_);\n    };\n    /**\n     * Determine if a tile is in an alpha transition.  A tile is considered in\n     * transition if tile.getAlpha() has not yet been called or has been called\n     * and returned 1.\n     * @param {string} id An id for the renderer.\n     * @return {boolean} The tile is in transition.\n     */\n    Tile.prototype.inTransition = function (id) {\n        if (!this.transition_) {\n            return false;\n        }\n        return this.transitionStarts_[id] !== -1;\n    };\n    /**\n     * Mark a transition as complete.\n     * @param {string} id An id for the renderer.\n     */\n    Tile.prototype.endTransition = function (id) {\n        if (this.transition_) {\n            this.transitionStarts_[id] = -1;\n        }\n    };\n    return Tile;\n}(EventTarget));\nexport default Tile;\n//# sourceMappingURL=Tile.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/ImageTile\n */\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\nimport { createCanvasContext2D } from './dom.js';\nimport { listenOnce, unlistenByKey } from './events.js';\nimport EventType from './events/EventType.js';\nvar ImageTile = /** @class */ (function (_super) {\n    __extends(ImageTile, _super);\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @param {TileState} state State.\n     * @param {string} src Image source URI.\n     * @param {?string} crossOrigin Cross origin.\n     * @param {import(\"./Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n     * @param {import(\"./Tile.js\").Options=} opt_options Tile options.\n     */\n    function ImageTile(tileCoord, state, src, crossOrigin, tileLoadFunction, opt_options) {\n        var _this = _super.call(this, tileCoord, state, opt_options) || this;\n        /**\n         * @private\n         * @type {?string}\n         */\n        _this.crossOrigin_ = crossOrigin;\n        /**\n         * Image URI\n         *\n         * @private\n         * @type {string}\n         */\n        _this.src_ = src;\n        /**\n         * @private\n         * @type {HTMLImageElement|HTMLCanvasElement}\n         */\n        _this.image_ = new Image();\n        if (crossOrigin !== null) {\n            _this.image_.crossOrigin = crossOrigin;\n        }\n        /**\n         * @private\n         * @type {Array<import(\"./events.js\").EventsKey>}\n         */\n        _this.imageListenerKeys_ = null;\n        /**\n         * @private\n         * @type {import(\"./Tile.js\").LoadFunction}\n         */\n        _this.tileLoadFunction_ = tileLoadFunction;\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    ImageTile.prototype.disposeInternal = function () {\n        if (this.state == TileState.LOADING) {\n            this.unlistenImage_();\n            this.image_ = getBlankImage();\n        }\n        if (this.interimTile) {\n            this.interimTile.dispose();\n        }\n        this.state = TileState.ABORT;\n        this.changed();\n        _super.prototype.disposeInternal.call(this);\n    };\n    /**\n     * Get the HTML image element for this tile (may be a Canvas, Image, or Video).\n     * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n     * @api\n     */\n    ImageTile.prototype.getImage = function () {\n        return this.image_;\n    };\n    /**\n     * @inheritDoc\n     */\n    ImageTile.prototype.getKey = function () {\n        return this.src_;\n    };\n    /**\n     * Tracks loading or read errors.\n     *\n     * @private\n     */\n    ImageTile.prototype.handleImageError_ = function () {\n        this.state = TileState.ERROR;\n        this.unlistenImage_();\n        this.image_ = getBlankImage();\n        this.changed();\n    };\n    /**\n     * Tracks successful image load.\n     *\n     * @private\n     */\n    ImageTile.prototype.handleImageLoad_ = function () {\n        var image = /** @type {HTMLImageElement} */ (this.image_);\n        if (image.naturalWidth && image.naturalHeight) {\n            this.state = TileState.LOADED;\n        }\n        else {\n            this.state = TileState.EMPTY;\n        }\n        this.unlistenImage_();\n        this.changed();\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    ImageTile.prototype.load = function () {\n        if (this.state == TileState.ERROR) {\n            this.state = TileState.IDLE;\n            this.image_ = new Image();\n            if (this.crossOrigin_ !== null) {\n                this.image_.crossOrigin = this.crossOrigin_;\n            }\n        }\n        if (this.state == TileState.IDLE) {\n            this.state = TileState.LOADING;\n            this.changed();\n            this.imageListenerKeys_ = [\n                listenOnce(this.image_, EventType.ERROR, this.handleImageError_, this),\n                listenOnce(this.image_, EventType.LOAD, this.handleImageLoad_, this)\n            ];\n            this.tileLoadFunction_(this, this.src_);\n        }\n    };\n    /**\n     * Discards event handlers which listen for load completion or errors.\n     *\n     * @private\n     */\n    ImageTile.prototype.unlistenImage_ = function () {\n        this.imageListenerKeys_.forEach(unlistenByKey);\n        this.imageListenerKeys_ = null;\n    };\n    return ImageTile;\n}(Tile));\n/**\n * Get a 1-pixel blank image.\n * @return {HTMLCanvasElement} Blank image.\n */\nfunction getBlankImage() {\n    var ctx = createCanvasContext2D(1, 1);\n    ctx.fillStyle = 'rgba(0,0,0,0)';\n    ctx.fillRect(0, 0, 1, 1);\n    return ctx.canvas;\n}\nexport default ImageTile;\n//# sourceMappingURL=ImageTile.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/TileCache\n */\nimport LRUCache from './structs/LRUCache.js';\nimport { fromKey, getKey } from './tilecoord.js';\nvar TileCache = /** @class */ (function (_super) {\n    __extends(TileCache, _super);\n    /**\n     * @param {number=} opt_highWaterMark High water mark.\n     */\n    function TileCache(opt_highWaterMark) {\n        return _super.call(this, opt_highWaterMark) || this;\n    }\n    /**\n     * @param {!Object<string, import(\"./TileRange.js\").default>} usedTiles Used tiles.\n     */\n    TileCache.prototype.expireCache = function (usedTiles) {\n        while (this.canExpireCache()) {\n            var tile = this.peekLast();\n            if (tile.getKey() in usedTiles) {\n                break;\n            }\n            else {\n                this.pop().dispose();\n            }\n        }\n    };\n    /**\n     * Prune all tiles from the cache that don't have the same z as the newest tile.\n     */\n    TileCache.prototype.pruneExceptNewestZ = function () {\n        if (this.getCount() === 0) {\n            return;\n        }\n        var key = this.peekFirstKey();\n        var tileCoord = fromKey(key);\n        var z = tileCoord[0];\n        this.forEach(function (tile) {\n            if (tile.tileCoord[0] !== z) {\n                this.remove(getKey(tile.tileCoord));\n                tile.dispose();\n            }\n        }.bind(this));\n    };\n    return TileCache;\n}(LRUCache));\nexport default TileCache;\n//# sourceMappingURL=TileCache.js.map","/**\n * @module ol/reproj\n */\nimport { createCanvasContext2D } from './dom.js';\nimport { containsCoordinate, createEmpty, extend, getHeight, getTopLeft, getWidth } from './extent.js';\nimport { solveLinearSystem } from './math.js';\nimport { getPointResolution, transform } from './proj.js';\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./coordinate.js\").Coordinate} targetCenter Target center.\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceResolution(sourceProj, targetProj, targetCenter, targetResolution) {\n    var sourceCenter = transform(targetCenter, targetProj, sourceProj);\n    // calculate the ideal resolution of the source data\n    var sourceResolution = getPointResolution(targetProj, targetResolution, targetCenter);\n    var targetMetersPerUnit = targetProj.getMetersPerUnit();\n    if (targetMetersPerUnit !== undefined) {\n        sourceResolution *= targetMetersPerUnit;\n    }\n    var sourceMetersPerUnit = sourceProj.getMetersPerUnit();\n    if (sourceMetersPerUnit !== undefined) {\n        sourceResolution /= sourceMetersPerUnit;\n    }\n    // Based on the projection properties, the point resolution at the specified\n    // coordinates may be slightly different. We need to reverse-compensate this\n    // in order to achieve optimal results.\n    var sourceExtent = sourceProj.getExtent();\n    if (!sourceExtent || containsCoordinate(sourceExtent, sourceCenter)) {\n        var compensationFactor = getPointResolution(sourceProj, sourceResolution, sourceCenter) /\n            sourceResolution;\n        if (isFinite(compensationFactor) && compensationFactor > 0) {\n            sourceResolution /= compensationFactor;\n        }\n    }\n    return sourceResolution;\n}\n/**\n * Enlarge the clipping triangle point by 1 pixel to ensure the edges overlap\n * in order to mask gaps caused by antialiasing.\n *\n * @param {number} centroidX Centroid of the triangle (x coordinate in pixels).\n * @param {number} centroidY Centroid of the triangle (y coordinate in pixels).\n * @param {number} x X coordinate of the point (in pixels).\n * @param {number} y Y coordinate of the point (in pixels).\n * @return {import(\"./coordinate.js\").Coordinate} New point 1 px farther from the centroid.\n */\nfunction enlargeClipPoint(centroidX, centroidY, x, y) {\n    var dX = x - centroidX;\n    var dY = y - centroidY;\n    var distance = Math.sqrt(dX * dX + dY * dY);\n    return [Math.round(x + dX / distance), Math.round(y + dY / distance)];\n}\n/**\n * Renders the source data into new canvas based on the triangulation.\n *\n * @param {number} width Width of the canvas.\n * @param {number} height Height of the canvas.\n * @param {number} pixelRatio Pixel ratio.\n * @param {number} sourceResolution Source resolution.\n * @param {import(\"./extent.js\").Extent} sourceExtent Extent of the data source.\n * @param {number} targetResolution Target resolution.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent.\n * @param {import(\"./reproj/Triangulation.js\").default} triangulation\n * Calculated triangulation.\n * @param {Array<{extent: import(\"./extent.js\").Extent,\n *                 image: (HTMLCanvasElement|HTMLImageElement|HTMLVideoElement)}>} sources\n * Array of sources.\n * @param {number} gutter Gutter of the sources.\n * @param {boolean=} opt_renderEdges Render reprojection edges.\n * @return {HTMLCanvasElement} Canvas with reprojected data.\n */\nexport function render(width, height, pixelRatio, sourceResolution, sourceExtent, targetResolution, targetExtent, triangulation, sources, gutter, opt_renderEdges) {\n    var context = createCanvasContext2D(Math.round(pixelRatio * width), Math.round(pixelRatio * height));\n    if (sources.length === 0) {\n        return context.canvas;\n    }\n    context.scale(pixelRatio, pixelRatio);\n    var sourceDataExtent = createEmpty();\n    sources.forEach(function (src, i, arr) {\n        extend(sourceDataExtent, src.extent);\n    });\n    var canvasWidthInUnits = getWidth(sourceDataExtent);\n    var canvasHeightInUnits = getHeight(sourceDataExtent);\n    var stitchContext = createCanvasContext2D(Math.round(pixelRatio * canvasWidthInUnits / sourceResolution), Math.round(pixelRatio * canvasHeightInUnits / sourceResolution));\n    var stitchScale = pixelRatio / sourceResolution;\n    sources.forEach(function (src, i, arr) {\n        var xPos = src.extent[0] - sourceDataExtent[0];\n        var yPos = -(src.extent[3] - sourceDataExtent[3]);\n        var srcWidth = getWidth(src.extent);\n        var srcHeight = getHeight(src.extent);\n        stitchContext.drawImage(src.image, gutter, gutter, src.image.width - 2 * gutter, src.image.height - 2 * gutter, xPos * stitchScale, yPos * stitchScale, srcWidth * stitchScale, srcHeight * stitchScale);\n    });\n    var targetTopLeft = getTopLeft(targetExtent);\n    triangulation.getTriangles().forEach(function (triangle, i, arr) {\n        /* Calculate affine transform (src -> dst)\n         * Resulting matrix can be used to transform coordinate\n         * from `sourceProjection` to destination pixels.\n         *\n         * To optimize number of context calls and increase numerical stability,\n         * we also do the following operations:\n         * trans(-topLeftExtentCorner), scale(1 / targetResolution), scale(1, -1)\n         * here before solving the linear system so [ui, vi] are pixel coordinates.\n         *\n         * Src points: xi, yi\n         * Dst points: ui, vi\n         * Affine coefficients: aij\n         *\n         * | x0 y0 1  0  0 0 |   |a00|   |u0|\n         * | x1 y1 1  0  0 0 |   |a01|   |u1|\n         * | x2 y2 1  0  0 0 | x |a02| = |u2|\n         * |  0  0 0 x0 y0 1 |   |a10|   |v0|\n         * |  0  0 0 x1 y1 1 |   |a11|   |v1|\n         * |  0  0 0 x2 y2 1 |   |a12|   |v2|\n         */\n        var source = triangle.source;\n        var target = triangle.target;\n        var x0 = source[0][0], y0 = source[0][1];\n        var x1 = source[1][0], y1 = source[1][1];\n        var x2 = source[2][0], y2 = source[2][1];\n        var u0 = (target[0][0] - targetTopLeft[0]) / targetResolution;\n        var v0 = -(target[0][1] - targetTopLeft[1]) / targetResolution;\n        var u1 = (target[1][0] - targetTopLeft[0]) / targetResolution;\n        var v1 = -(target[1][1] - targetTopLeft[1]) / targetResolution;\n        var u2 = (target[2][0] - targetTopLeft[0]) / targetResolution;\n        var v2 = -(target[2][1] - targetTopLeft[1]) / targetResolution;\n        // Shift all the source points to improve numerical stability\n        // of all the subsequent calculations. The [x0, y0] is used here.\n        // This is also used to simplify the linear system.\n        var sourceNumericalShiftX = x0;\n        var sourceNumericalShiftY = y0;\n        x0 = 0;\n        y0 = 0;\n        x1 -= sourceNumericalShiftX;\n        y1 -= sourceNumericalShiftY;\n        x2 -= sourceNumericalShiftX;\n        y2 -= sourceNumericalShiftY;\n        var augmentedMatrix = [\n            [x1, y1, 0, 0, u1 - u0],\n            [x2, y2, 0, 0, u2 - u0],\n            [0, 0, x1, y1, v1 - v0],\n            [0, 0, x2, y2, v2 - v0]\n        ];\n        var affineCoefs = solveLinearSystem(augmentedMatrix);\n        if (!affineCoefs) {\n            return;\n        }\n        context.save();\n        context.beginPath();\n        var centroidX = (u0 + u1 + u2) / 3;\n        var centroidY = (v0 + v1 + v2) / 3;\n        var p0 = enlargeClipPoint(centroidX, centroidY, u0, v0);\n        var p1 = enlargeClipPoint(centroidX, centroidY, u1, v1);\n        var p2 = enlargeClipPoint(centroidX, centroidY, u2, v2);\n        context.moveTo(p1[0], p1[1]);\n        context.lineTo(p0[0], p0[1]);\n        context.lineTo(p2[0], p2[1]);\n        context.clip();\n        context.transform(affineCoefs[0], affineCoefs[2], affineCoefs[1], affineCoefs[3], u0, v0);\n        context.translate(sourceDataExtent[0] - sourceNumericalShiftX, sourceDataExtent[3] - sourceNumericalShiftY);\n        context.scale(sourceResolution / pixelRatio, -sourceResolution / pixelRatio);\n        context.drawImage(stitchContext.canvas, 0, 0);\n        context.restore();\n    });\n    if (opt_renderEdges) {\n        context.save();\n        context.strokeStyle = 'black';\n        context.lineWidth = 1;\n        triangulation.getTriangles().forEach(function (triangle, i, arr) {\n            var target = triangle.target;\n            var u0 = (target[0][0] - targetTopLeft[0]) / targetResolution;\n            var v0 = -(target[0][1] - targetTopLeft[1]) / targetResolution;\n            var u1 = (target[1][0] - targetTopLeft[0]) / targetResolution;\n            var v1 = -(target[1][1] - targetTopLeft[1]) / targetResolution;\n            var u2 = (target[2][0] - targetTopLeft[0]) / targetResolution;\n            var v2 = -(target[2][1] - targetTopLeft[1]) / targetResolution;\n            context.beginPath();\n            context.moveTo(u1, v1);\n            context.lineTo(u0, v0);\n            context.lineTo(u2, v2);\n            context.closePath();\n            context.stroke();\n        });\n        context.restore();\n    }\n    return context.canvas;\n}\n//# sourceMappingURL=reproj.js.map","/**\n * @module ol/reproj/Triangulation\n */\nimport { boundingExtent, createEmpty, extendCoordinate, getBottomLeft, getBottomRight, getTopLeft, getTopRight, getWidth, intersects } from '../extent.js';\nimport { modulo } from '../math.js';\nimport { getTransform } from '../proj.js';\n/**\n * Single triangle; consists of 3 source points and 3 target points.\n * @typedef {Object} Triangle\n * @property {Array<import(\"../coordinate.js\").Coordinate>} source\n * @property {Array<import(\"../coordinate.js\").Coordinate>} target\n */\n/**\n * Maximum number of subdivision steps during raster reprojection triangulation.\n * Prevents high memory usage and large number of proj4 calls (for certain\n * transformations and areas). At most `2*(2^this)` triangles are created for\n * each triangulated extent (tile/image).\n * @type {number}\n */\nvar MAX_SUBDIVISION = 10;\n/**\n * Maximum allowed size of triangle relative to world width. When transforming\n * corners of world extent between certain projections, the resulting\n * triangulation seems to have zero error and no subdivision is performed. If\n * the triangle width is more than this (relative to world width; 0-1),\n * subdivison is forced (up to `MAX_SUBDIVISION`). Default is `0.25`.\n * @type {number}\n */\nvar MAX_TRIANGLE_WIDTH = 0.25;\n/**\n * @classdesc\n * Class containing triangulation of the given target extent.\n * Used for determining source data and the reprojection itself.\n */\nvar Triangulation = /** @class */ (function () {\n    /**\n     * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n     * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n     * @param {import(\"../extent.js\").Extent} targetExtent Target extent to triangulate.\n     * @param {import(\"../extent.js\").Extent} maxSourceExtent Maximal source extent that can be used.\n     * @param {number} errorThreshold Acceptable error (in source units).\n     */\n    function Triangulation(sourceProj, targetProj, targetExtent, maxSourceExtent, errorThreshold) {\n        /**\n         * @type {import(\"../proj/Projection.js\").default}\n         * @private\n         */\n        this.sourceProj_ = sourceProj;\n        /**\n         * @type {import(\"../proj/Projection.js\").default}\n         * @private\n         */\n        this.targetProj_ = targetProj;\n        /** @type {!Object<string, import(\"../coordinate.js\").Coordinate>} */\n        var transformInvCache = {};\n        var transformInv = getTransform(this.targetProj_, this.sourceProj_);\n        /**\n         * @param {import(\"../coordinate.js\").Coordinate} c A coordinate.\n         * @return {import(\"../coordinate.js\").Coordinate} Transformed coordinate.\n         * @private\n         */\n        this.transformInv_ = function (c) {\n            var key = c[0] + '/' + c[1];\n            if (!transformInvCache[key]) {\n                transformInvCache[key] = transformInv(c);\n            }\n            return transformInvCache[key];\n        };\n        /**\n         * @type {import(\"../extent.js\").Extent}\n         * @private\n         */\n        this.maxSourceExtent_ = maxSourceExtent;\n        /**\n         * @type {number}\n         * @private\n         */\n        this.errorThresholdSquared_ = errorThreshold * errorThreshold;\n        /**\n         * @type {Array<Triangle>}\n         * @private\n         */\n        this.triangles_ = [];\n        /**\n         * Indicates that the triangulation crosses edge of the source projection.\n         * @type {boolean}\n         * @private\n         */\n        this.wrapsXInSource_ = false;\n        /**\n         * @type {boolean}\n         * @private\n         */\n        this.canWrapXInSource_ = this.sourceProj_.canWrapX() &&\n            !!maxSourceExtent &&\n            !!this.sourceProj_.getExtent() &&\n            (getWidth(maxSourceExtent) == getWidth(this.sourceProj_.getExtent()));\n        /**\n         * @type {?number}\n         * @private\n         */\n        this.sourceWorldWidth_ = this.sourceProj_.getExtent() ?\n            getWidth(this.sourceProj_.getExtent()) : null;\n        /**\n         * @type {?number}\n         * @private\n         */\n        this.targetWorldWidth_ = this.targetProj_.getExtent() ?\n            getWidth(this.targetProj_.getExtent()) : null;\n        var destinationTopLeft = getTopLeft(targetExtent);\n        var destinationTopRight = getTopRight(targetExtent);\n        var destinationBottomRight = getBottomRight(targetExtent);\n        var destinationBottomLeft = getBottomLeft(targetExtent);\n        var sourceTopLeft = this.transformInv_(destinationTopLeft);\n        var sourceTopRight = this.transformInv_(destinationTopRight);\n        var sourceBottomRight = this.transformInv_(destinationBottomRight);\n        var sourceBottomLeft = this.transformInv_(destinationBottomLeft);\n        this.addQuad_(destinationTopLeft, destinationTopRight, destinationBottomRight, destinationBottomLeft, sourceTopLeft, sourceTopRight, sourceBottomRight, sourceBottomLeft, MAX_SUBDIVISION);\n        if (this.wrapsXInSource_) {\n            var leftBound_1 = Infinity;\n            this.triangles_.forEach(function (triangle, i, arr) {\n                leftBound_1 = Math.min(leftBound_1, triangle.source[0][0], triangle.source[1][0], triangle.source[2][0]);\n            });\n            // Shift triangles to be as close to `leftBound` as possible\n            // (if the distance is more than `worldWidth / 2` it can be closer.\n            this.triangles_.forEach(function (triangle) {\n                if (Math.max(triangle.source[0][0], triangle.source[1][0], triangle.source[2][0]) - leftBound_1 > this.sourceWorldWidth_ / 2) {\n                    var newTriangle = [[triangle.source[0][0], triangle.source[0][1]],\n                        [triangle.source[1][0], triangle.source[1][1]],\n                        [triangle.source[2][0], triangle.source[2][1]]];\n                    if ((newTriangle[0][0] - leftBound_1) > this.sourceWorldWidth_ / 2) {\n                        newTriangle[0][0] -= this.sourceWorldWidth_;\n                    }\n                    if ((newTriangle[1][0] - leftBound_1) > this.sourceWorldWidth_ / 2) {\n                        newTriangle[1][0] -= this.sourceWorldWidth_;\n                    }\n                    if ((newTriangle[2][0] - leftBound_1) > this.sourceWorldWidth_ / 2) {\n                        newTriangle[2][0] -= this.sourceWorldWidth_;\n                    }\n                    // Rarely (if the extent contains both the dateline and prime meridian)\n                    // the shift can in turn break some triangles.\n                    // Detect this here and don't shift in such cases.\n                    var minX = Math.min(newTriangle[0][0], newTriangle[1][0], newTriangle[2][0]);\n                    var maxX = Math.max(newTriangle[0][0], newTriangle[1][0], newTriangle[2][0]);\n                    if ((maxX - minX) < this.sourceWorldWidth_ / 2) {\n                        triangle.source = newTriangle;\n                    }\n                }\n            }.bind(this));\n        }\n        transformInvCache = {};\n    }\n    /**\n     * Adds triangle to the triangulation.\n     * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n     * @private\n     */\n    Triangulation.prototype.addTriangle_ = function (a, b, c, aSrc, bSrc, cSrc) {\n        this.triangles_.push({\n            source: [aSrc, bSrc, cSrc],\n            target: [a, b, c]\n        });\n    };\n    /**\n     * Adds quad (points in clock-wise order) to the triangulation\n     * (and reprojects the vertices) if valid.\n     * Performs quad subdivision if needed to increase precision.\n     *\n     * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} d The target d coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} dSrc The source d coordinate.\n     * @param {number} maxSubdivision Maximal allowed subdivision of the quad.\n     * @private\n     */\n    Triangulation.prototype.addQuad_ = function (a, b, c, d, aSrc, bSrc, cSrc, dSrc, maxSubdivision) {\n        var sourceQuadExtent = boundingExtent([aSrc, bSrc, cSrc, dSrc]);\n        var sourceCoverageX = this.sourceWorldWidth_ ?\n            getWidth(sourceQuadExtent) / this.sourceWorldWidth_ : null;\n        var sourceWorldWidth = /** @type {number} */ (this.sourceWorldWidth_);\n        // when the quad is wrapped in the source projection\n        // it covers most of the projection extent, but not fully\n        var wrapsX = this.sourceProj_.canWrapX() &&\n            sourceCoverageX > 0.5 && sourceCoverageX < 1;\n        var needsSubdivision = false;\n        if (maxSubdivision > 0) {\n            if (this.targetProj_.isGlobal() && this.targetWorldWidth_) {\n                var targetQuadExtent = boundingExtent([a, b, c, d]);\n                var targetCoverageX = getWidth(targetQuadExtent) / this.targetWorldWidth_;\n                needsSubdivision = targetCoverageX > MAX_TRIANGLE_WIDTH ||\n                    needsSubdivision;\n            }\n            if (!wrapsX && this.sourceProj_.isGlobal() && sourceCoverageX) {\n                needsSubdivision = sourceCoverageX > MAX_TRIANGLE_WIDTH ||\n                    needsSubdivision;\n            }\n        }\n        if (!needsSubdivision && this.maxSourceExtent_) {\n            if (!intersects(sourceQuadExtent, this.maxSourceExtent_)) {\n                // whole quad outside source projection extent -> ignore\n                return;\n            }\n        }\n        if (!needsSubdivision) {\n            if (!isFinite(aSrc[0]) || !isFinite(aSrc[1]) ||\n                !isFinite(bSrc[0]) || !isFinite(bSrc[1]) ||\n                !isFinite(cSrc[0]) || !isFinite(cSrc[1]) ||\n                !isFinite(dSrc[0]) || !isFinite(dSrc[1])) {\n                if (maxSubdivision > 0) {\n                    needsSubdivision = true;\n                }\n                else {\n                    return;\n                }\n            }\n        }\n        if (maxSubdivision > 0) {\n            if (!needsSubdivision) {\n                var center = [(a[0] + c[0]) / 2, (a[1] + c[1]) / 2];\n                var centerSrc = this.transformInv_(center);\n                var dx = void 0;\n                if (wrapsX) {\n                    var centerSrcEstimX = (modulo(aSrc[0], sourceWorldWidth) +\n                        modulo(cSrc[0], sourceWorldWidth)) / 2;\n                    dx = centerSrcEstimX -\n                        modulo(centerSrc[0], sourceWorldWidth);\n                }\n                else {\n                    dx = (aSrc[0] + cSrc[0]) / 2 - centerSrc[0];\n                }\n                var dy = (aSrc[1] + cSrc[1]) / 2 - centerSrc[1];\n                var centerSrcErrorSquared = dx * dx + dy * dy;\n                needsSubdivision = centerSrcErrorSquared > this.errorThresholdSquared_;\n            }\n            if (needsSubdivision) {\n                if (Math.abs(a[0] - c[0]) <= Math.abs(a[1] - c[1])) {\n                    // split horizontally (top & bottom)\n                    var bc = [(b[0] + c[0]) / 2, (b[1] + c[1]) / 2];\n                    var bcSrc = this.transformInv_(bc);\n                    var da = [(d[0] + a[0]) / 2, (d[1] + a[1]) / 2];\n                    var daSrc = this.transformInv_(da);\n                    this.addQuad_(a, b, bc, da, aSrc, bSrc, bcSrc, daSrc, maxSubdivision - 1);\n                    this.addQuad_(da, bc, c, d, daSrc, bcSrc, cSrc, dSrc, maxSubdivision - 1);\n                }\n                else {\n                    // split vertically (left & right)\n                    var ab = [(a[0] + b[0]) / 2, (a[1] + b[1]) / 2];\n                    var abSrc = this.transformInv_(ab);\n                    var cd = [(c[0] + d[0]) / 2, (c[1] + d[1]) / 2];\n                    var cdSrc = this.transformInv_(cd);\n                    this.addQuad_(a, ab, cd, d, aSrc, abSrc, cdSrc, dSrc, maxSubdivision - 1);\n                    this.addQuad_(ab, b, c, cd, abSrc, bSrc, cSrc, cdSrc, maxSubdivision - 1);\n                }\n                return;\n            }\n        }\n        if (wrapsX) {\n            if (!this.canWrapXInSource_) {\n                return;\n            }\n            this.wrapsXInSource_ = true;\n        }\n        this.addTriangle_(a, c, d, aSrc, cSrc, dSrc);\n        this.addTriangle_(a, b, c, aSrc, bSrc, cSrc);\n    };\n    /**\n     * Calculates extent of the 'source' coordinates from all the triangles.\n     *\n     * @return {import(\"../extent.js\").Extent} Calculated extent.\n     */\n    Triangulation.prototype.calculateSourceExtent = function () {\n        var extent = createEmpty();\n        this.triangles_.forEach(function (triangle, i, arr) {\n            var src = triangle.source;\n            extendCoordinate(extent, src[0]);\n            extendCoordinate(extent, src[1]);\n            extendCoordinate(extent, src[2]);\n        });\n        return extent;\n    };\n    /**\n     * @return {Array<Triangle>} Array of the calculated triangles.\n     */\n    Triangulation.prototype.getTriangles = function () {\n        return this.triangles_;\n    };\n    return Triangulation;\n}());\nexport default Triangulation;\n//# sourceMappingURL=Triangulation.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/reproj/Tile\n */\nimport { ERROR_THRESHOLD } from './common.js';\nimport Tile from '../Tile.js';\nimport TileState from '../TileState.js';\nimport { listen, unlistenByKey } from '../events.js';\nimport EventType from '../events/EventType.js';\nimport { getArea, getCenter, getIntersection } from '../extent.js';\nimport { clamp } from '../math.js';\nimport { calculateSourceResolution, render as renderReprojected } from '../reproj.js';\nimport Triangulation from './Triangulation.js';\n/**\n * @typedef {function(number, number, number, number) : import(\"../Tile.js\").default} FunctionType\n */\n/**\n * @classdesc\n * Class encapsulating single reprojected tile.\n * See {@link module:ol/source/TileImage~TileImage}.\n *\n */\nvar ReprojTile = /** @class */ (function (_super) {\n    __extends(ReprojTile, _super);\n    /**\n     * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n     * @param {import(\"../tilegrid/TileGrid.js\").default} sourceTileGrid Source tile grid.\n     * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n     * @param {import(\"../tilegrid/TileGrid.js\").default} targetTileGrid Target tile grid.\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Coordinate of the tile.\n     * @param {import(\"../tilecoord.js\").TileCoord} wrappedTileCoord Coordinate of the tile wrapped in X.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {number} gutter Gutter of the source tiles.\n     * @param {FunctionType} getTileFunction\n     *     Function returning source tiles (z, x, y, pixelRatio).\n     * @param {number=} opt_errorThreshold Acceptable reprojection error (in px).\n     * @param {boolean=} opt_renderEdges Render reprojection edges.\n     */\n    function ReprojTile(sourceProj, sourceTileGrid, targetProj, targetTileGrid, tileCoord, wrappedTileCoord, pixelRatio, gutter, getTileFunction, opt_errorThreshold, opt_renderEdges) {\n        var _this = _super.call(this, tileCoord, TileState.IDLE) || this;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.renderEdges_ = opt_renderEdges !== undefined ? opt_renderEdges : false;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.pixelRatio_ = pixelRatio;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.gutter_ = gutter;\n        /**\n         * @private\n         * @type {HTMLCanvasElement}\n         */\n        _this.canvas_ = null;\n        /**\n         * @private\n         * @type {import(\"../tilegrid/TileGrid.js\").default}\n         */\n        _this.sourceTileGrid_ = sourceTileGrid;\n        /**\n         * @private\n         * @type {import(\"../tilegrid/TileGrid.js\").default}\n         */\n        _this.targetTileGrid_ = targetTileGrid;\n        /**\n         * @private\n         * @type {import(\"../tilecoord.js\").TileCoord}\n         */\n        _this.wrappedTileCoord_ = wrappedTileCoord ? wrappedTileCoord : tileCoord;\n        /**\n         * @private\n         * @type {!Array<import(\"../Tile.js\").default>}\n         */\n        _this.sourceTiles_ = [];\n        /**\n         * @private\n         * @type {Array<import(\"../events.js\").EventsKey>}\n         */\n        _this.sourcesListenerKeys_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.sourceZ_ = 0;\n        var targetExtent = targetTileGrid.getTileCoordExtent(_this.wrappedTileCoord_);\n        var maxTargetExtent = _this.targetTileGrid_.getExtent();\n        var maxSourceExtent = _this.sourceTileGrid_.getExtent();\n        var limitedTargetExtent = maxTargetExtent ?\n            getIntersection(targetExtent, maxTargetExtent) : targetExtent;\n        if (getArea(limitedTargetExtent) === 0) {\n            // Tile is completely outside range -> EMPTY\n            // TODO: is it actually correct that the source even creates the tile ?\n            _this.state = TileState.EMPTY;\n            return _this;\n        }\n        var sourceProjExtent = sourceProj.getExtent();\n        if (sourceProjExtent) {\n            if (!maxSourceExtent) {\n                maxSourceExtent = sourceProjExtent;\n            }\n            else {\n                maxSourceExtent = getIntersection(maxSourceExtent, sourceProjExtent);\n            }\n        }\n        var targetResolution = targetTileGrid.getResolution(_this.wrappedTileCoord_[0]);\n        var targetCenter = getCenter(limitedTargetExtent);\n        var sourceResolution = calculateSourceResolution(sourceProj, targetProj, targetCenter, targetResolution);\n        if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n            // invalid sourceResolution -> EMPTY\n            // probably edges of the projections when no extent is defined\n            _this.state = TileState.EMPTY;\n            return _this;\n        }\n        var errorThresholdInPixels = opt_errorThreshold !== undefined ?\n            opt_errorThreshold : ERROR_THRESHOLD;\n        /**\n         * @private\n         * @type {!import(\"./Triangulation.js\").default}\n         */\n        _this.triangulation_ = new Triangulation(sourceProj, targetProj, limitedTargetExtent, maxSourceExtent, sourceResolution * errorThresholdInPixels);\n        if (_this.triangulation_.getTriangles().length === 0) {\n            // no valid triangles -> EMPTY\n            _this.state = TileState.EMPTY;\n            return _this;\n        }\n        _this.sourceZ_ = sourceTileGrid.getZForResolution(sourceResolution);\n        var sourceExtent = _this.triangulation_.calculateSourceExtent();\n        if (maxSourceExtent) {\n            if (sourceProj.canWrapX()) {\n                sourceExtent[1] = clamp(sourceExtent[1], maxSourceExtent[1], maxSourceExtent[3]);\n                sourceExtent[3] = clamp(sourceExtent[3], maxSourceExtent[1], maxSourceExtent[3]);\n            }\n            else {\n                sourceExtent = getIntersection(sourceExtent, maxSourceExtent);\n            }\n        }\n        if (!getArea(sourceExtent)) {\n            _this.state = TileState.EMPTY;\n        }\n        else {\n            var sourceRange = sourceTileGrid.getTileRangeForExtentAndZ(sourceExtent, _this.sourceZ_);\n            for (var srcX = sourceRange.minX; srcX <= sourceRange.maxX; srcX++) {\n                for (var srcY = sourceRange.minY; srcY <= sourceRange.maxY; srcY++) {\n                    var tile = getTileFunction(_this.sourceZ_, srcX, srcY, pixelRatio);\n                    if (tile) {\n                        _this.sourceTiles_.push(tile);\n                    }\n                }\n            }\n            if (_this.sourceTiles_.length === 0) {\n                _this.state = TileState.EMPTY;\n            }\n        }\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    ReprojTile.prototype.disposeInternal = function () {\n        if (this.state == TileState.LOADING) {\n            this.unlistenSources_();\n        }\n        _super.prototype.disposeInternal.call(this);\n    };\n    /**\n     * Get the HTML Canvas element for this tile.\n     * @return {HTMLCanvasElement} Canvas.\n     */\n    ReprojTile.prototype.getImage = function () {\n        return this.canvas_;\n    };\n    /**\n     * @private\n     */\n    ReprojTile.prototype.reproject_ = function () {\n        var sources = [];\n        this.sourceTiles_.forEach(function (tile, i, arr) {\n            if (tile && tile.getState() == TileState.LOADED) {\n                sources.push({\n                    extent: this.sourceTileGrid_.getTileCoordExtent(tile.tileCoord),\n                    image: tile.getImage()\n                });\n            }\n        }.bind(this));\n        this.sourceTiles_.length = 0;\n        if (sources.length === 0) {\n            this.state = TileState.ERROR;\n        }\n        else {\n            var z = this.wrappedTileCoord_[0];\n            var size = this.targetTileGrid_.getTileSize(z);\n            var width = typeof size === 'number' ? size : size[0];\n            var height = typeof size === 'number' ? size : size[1];\n            var targetResolution = this.targetTileGrid_.getResolution(z);\n            var sourceResolution = this.sourceTileGrid_.getResolution(this.sourceZ_);\n            var targetExtent = this.targetTileGrid_.getTileCoordExtent(this.wrappedTileCoord_);\n            this.canvas_ = renderReprojected(width, height, this.pixelRatio_, sourceResolution, this.sourceTileGrid_.getExtent(), targetResolution, targetExtent, this.triangulation_, sources, this.gutter_, this.renderEdges_);\n            this.state = TileState.LOADED;\n        }\n        this.changed();\n    };\n    /**\n     * @inheritDoc\n     */\n    ReprojTile.prototype.load = function () {\n        if (this.state == TileState.IDLE) {\n            this.state = TileState.LOADING;\n            this.changed();\n            var leftToLoad_1 = 0;\n            this.sourcesListenerKeys_ = [];\n            this.sourceTiles_.forEach(function (tile, i, arr) {\n                var state = tile.getState();\n                if (state == TileState.IDLE || state == TileState.LOADING) {\n                    leftToLoad_1++;\n                    var sourceListenKey_1 = listen(tile, EventType.CHANGE, function (e) {\n                        var state = tile.getState();\n                        if (state == TileState.LOADED ||\n                            state == TileState.ERROR ||\n                            state == TileState.EMPTY) {\n                            unlistenByKey(sourceListenKey_1);\n                            leftToLoad_1--;\n                            if (leftToLoad_1 === 0) {\n                                this.unlistenSources_();\n                                this.reproject_();\n                            }\n                        }\n                    }, this);\n                    this.sourcesListenerKeys_.push(sourceListenKey_1);\n                }\n            }.bind(this));\n            this.sourceTiles_.forEach(function (tile, i, arr) {\n                var state = tile.getState();\n                if (state == TileState.IDLE) {\n                    tile.load();\n                }\n            });\n            if (leftToLoad_1 === 0) {\n                setTimeout(this.reproject_.bind(this), 0);\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    ReprojTile.prototype.unlistenSources_ = function () {\n        this.sourcesListenerKeys_.forEach(unlistenByKey);\n        this.sourcesListenerKeys_ = null;\n    };\n    return ReprojTile;\n}(Tile));\nexport default ReprojTile;\n//# sourceMappingURL=Tile.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/source/Source\n */\nimport { abstract } from '../util.js';\nimport BaseObject from '../Object.js';\nimport { get as getProjection } from '../proj.js';\nimport SourceState from './State.js';\n/**\n * A function that returns a string or an array of strings representing source\n * attributions.\n *\n * @typedef {function(import(\"../PluggableMap.js\").FrameState): (string|Array<string>)} Attribution\n */\n/**\n * A type that can be used to provide attribution information for data sources.\n *\n * It represents either\n * * a simple string (e.g. `'© Acme Inc.'`)\n * * an array of simple strings (e.g. `['© Acme Inc.', '© Bacme Inc.']`)\n * * a function that returns a string or array of strings ({@link module:ol/source/Source~Attribution})\n *\n * @typedef {string|Array<string>|Attribution} AttributionLike\n */\n/**\n * @typedef {Object} Options\n * @property {AttributionLike} [attributions]\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {SourceState} [state='ready']\n * @property {boolean} [wrapX=false]\n */\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for {@link module:ol/layer/Layer~Layer} sources.\n *\n * A generic `change` event is triggered when the state of the source changes.\n * @abstract\n * @api\n */\nvar Source = /** @class */ (function (_super) {\n    __extends(Source, _super);\n    /**\n     * @param {Options} options Source options.\n     */\n    function Source(options) {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {import(\"../proj/Projection.js\").default}\n         */\n        _this.projection_ = getProjection(options.projection);\n        /**\n         * @private\n         * @type {?Attribution}\n         */\n        _this.attributions_ = adaptAttributions(options.attributions);\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.attributionsCollapsible_ = options.attributionsCollapsible !== undefined ?\n            options.attributionsCollapsible : true;\n        /**\n         * This source is currently loading data. Sources that defer loading to the\n         * map's tile queue never set this to `true`.\n         * @type {boolean}\n         */\n        _this.loading = false;\n        /**\n         * @private\n         * @type {SourceState}\n         */\n        _this.state_ = options.state !== undefined ?\n            options.state : SourceState.READY;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.wrapX_ = options.wrapX !== undefined ? options.wrapX : false;\n        return _this;\n    }\n    /**\n     * Get the attribution function for the source.\n     * @return {?Attribution} Attribution function.\n     */\n    Source.prototype.getAttributions = function () {\n        return this.attributions_;\n    };\n    /**\n     * @return {boolean} Attributions are collapsible.\n     */\n    Source.prototype.getAttributionsCollapsible = function () {\n        return this.attributionsCollapsible_;\n    };\n    /**\n     * Get the projection of the source.\n     * @return {import(\"../proj/Projection.js\").default} Projection.\n     * @api\n     */\n    Source.prototype.getProjection = function () {\n        return this.projection_;\n    };\n    /**\n     * @abstract\n     * @return {Array<number>|undefined} Resolutions.\n     */\n    Source.prototype.getResolutions = function () {\n        return abstract();\n    };\n    /**\n     * Get the state of the source, see {@link module:ol/source/State~State} for possible states.\n     * @return {SourceState} State.\n     * @api\n     */\n    Source.prototype.getState = function () {\n        return this.state_;\n    };\n    /**\n     * @return {boolean|undefined} Wrap X.\n     */\n    Source.prototype.getWrapX = function () {\n        return this.wrapX_;\n    };\n    /**\n     * Refreshes the source. The source will be cleared, and data from the server will be reloaded.\n     * @api\n     */\n    Source.prototype.refresh = function () {\n        this.changed();\n    };\n    /**\n     * Set the attributions of the source.\n     * @param {AttributionLike|undefined} attributions Attributions.\n     *     Can be passed as `string`, `Array<string>`, {@link module:ol/source/Source~Attribution},\n     *     or `undefined`.\n     * @api\n     */\n    Source.prototype.setAttributions = function (attributions) {\n        this.attributions_ = adaptAttributions(attributions);\n        this.changed();\n    };\n    /**\n     * Set the state of the source.\n     * @param {SourceState} state State.\n     * @protected\n     */\n    Source.prototype.setState = function (state) {\n        this.state_ = state;\n        this.changed();\n    };\n    return Source;\n}(BaseObject));\n/**\n * Turns the attributions option into an attributions function.\n * @param {AttributionLike|undefined} attributionLike The attribution option.\n * @return {?Attribution} An attribution function (or null).\n */\nfunction adaptAttributions(attributionLike) {\n    if (!attributionLike) {\n        return null;\n    }\n    if (Array.isArray(attributionLike)) {\n        return function (frameState) {\n            return attributionLike;\n        };\n    }\n    if (typeof attributionLike === 'function') {\n        return attributionLike;\n    }\n    return function (frameState) {\n        return [attributionLike];\n    };\n}\nexport default Source;\n//# sourceMappingURL=Source.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/source/Tile\n */\nimport { abstract } from '../util.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport Event from '../events/Event.js';\nimport { equivalent } from '../proj.js';\nimport { toSize, scale as scaleSize } from '../size.js';\nimport Source from './Source.js';\nimport { getKeyZXY, withinExtentAndZ } from '../tilecoord.js';\nimport { wrapX, getForProjection as getTileGridForProjection } from '../tilegrid.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions]\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize]\n * @property {boolean} [opaque]\n * @property {number} [tilePixelRatio]\n * @property {import(\"../proj.js\").ProjectionLike} [projection]\n * @property {import(\"./State.js\").default} [state]\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid]\n * @property {boolean} [wrapX=true]\n * @property {number} [transition]\n * @property {string} [key]\n */\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for sources providing images divided into a tile grid.\n * @abstract\n * @api\n */\nvar TileSource = /** @class */ (function (_super) {\n    __extends(TileSource, _super);\n    /**\n     * @param {Options} options SourceTile source options.\n     */\n    function TileSource(options) {\n        var _this = _super.call(this, {\n            attributions: options.attributions,\n            attributionsCollapsible: options.attributionsCollapsible,\n            projection: options.projection,\n            state: options.state,\n            wrapX: options.wrapX\n        }) || this;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.opaque_ = options.opaque !== undefined ? options.opaque : false;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.tilePixelRatio_ = options.tilePixelRatio !== undefined ?\n            options.tilePixelRatio : 1;\n        /**\n         * @protected\n         * @type {import(\"../tilegrid/TileGrid.js\").default}\n         */\n        _this.tileGrid = options.tileGrid !== undefined ? options.tileGrid : null;\n        var cacheSize = options.cacheSize;\n        if (cacheSize === undefined) {\n            var tileSize = [256, 256];\n            var tileGrid = options.tileGrid;\n            if (tileGrid) {\n                toSize(tileGrid.getTileSize(tileGrid.getMinZoom()), tileSize);\n            }\n            var canUseScreen = 'screen' in self;\n            var width = canUseScreen ? (screen.availWidth || screen.width) : 1920;\n            var height = canUseScreen ? (screen.availHeight || screen.height) : 1080;\n            cacheSize = 4 * Math.ceil(width / tileSize[0]) * Math.ceil(height / tileSize[1]);\n        }\n        /**\n         * @protected\n         * @type {import(\"../TileCache.js\").default}\n         */\n        _this.tileCache = new TileCache(cacheSize);\n        /**\n         * @protected\n         * @type {import(\"../size.js\").Size}\n         */\n        _this.tmpSize = [0, 0];\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.key_ = options.key || '';\n        /**\n         * @protected\n         * @type {import(\"../Tile.js\").Options}\n         */\n        _this.tileOptions = { transition: options.transition };\n        /**\n         * zDirection hint, read by the renderer. Indicates which resolution should be used\n         * by a renderer if the views resolution does not match any resolution of the tile source.\n         * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n         * will be used. If -1, the nearest higher resolution will be used.\n         * @type {number=}\n         */\n        _this.zDirection;\n        return _this;\n    }\n    /**\n     * @return {boolean} Can expire cache.\n     */\n    TileSource.prototype.canExpireCache = function () {\n        return this.tileCache.canExpireCache();\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @param {!Object<string, import(\"../TileRange.js\").default>} usedTiles Used tiles.\n     */\n    TileSource.prototype.expireCache = function (projection, usedTiles) {\n        var tileCache = this.getTileCacheForProjection(projection);\n        if (tileCache) {\n            tileCache.expireCache(usedTiles);\n        }\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @param {number} z Zoom level.\n     * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n     * @param {function(import(\"../Tile.js\").default):(boolean|void)} callback Called with each\n     *     loaded tile.  If the callback returns `false`, the tile will not be\n     *     considered loaded.\n     * @return {boolean} The tile range is fully covered with loaded tiles.\n     */\n    TileSource.prototype.forEachLoadedTile = function (projection, z, tileRange, callback) {\n        var tileCache = this.getTileCacheForProjection(projection);\n        if (!tileCache) {\n            return false;\n        }\n        var covered = true;\n        var tile, tileCoordKey, loaded;\n        for (var x = tileRange.minX; x <= tileRange.maxX; ++x) {\n            for (var y = tileRange.minY; y <= tileRange.maxY; ++y) {\n                tileCoordKey = getKeyZXY(z, x, y);\n                loaded = false;\n                if (tileCache.containsKey(tileCoordKey)) {\n                    tile = /** @type {!import(\"../Tile.js\").default} */ (tileCache.get(tileCoordKey));\n                    loaded = tile.getState() === TileState.LOADED;\n                    if (loaded) {\n                        loaded = (callback(tile) !== false);\n                    }\n                }\n                if (!loaded) {\n                    covered = false;\n                }\n            }\n        }\n        return covered;\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {number} Gutter.\n     */\n    TileSource.prototype.getGutterForProjection = function (projection) {\n        return 0;\n    };\n    /**\n     * Return the key to be used for all tiles in the source.\n     * @return {string} The key for all tiles.\n     * @protected\n     */\n    TileSource.prototype.getKey = function () {\n        return this.key_;\n    };\n    /**\n     * Set the value to be used as the key for all tiles in the source.\n     * @param {string} key The key for tiles.\n     * @protected\n     */\n    TileSource.prototype.setKey = function (key) {\n        if (this.key_ !== key) {\n            this.key_ = key;\n            this.changed();\n        }\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {boolean} Opaque.\n     */\n    TileSource.prototype.getOpaque = function (projection) {\n        return this.opaque_;\n    };\n    /**\n     * @inheritDoc\n     */\n    TileSource.prototype.getResolutions = function () {\n        return this.tileGrid.getResolutions();\n    };\n    /**\n     * @abstract\n     * @param {number} z Tile coordinate z.\n     * @param {number} x Tile coordinate x.\n     * @param {number} y Tile coordinate y.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {!import(\"../Tile.js\").default} Tile.\n     */\n    TileSource.prototype.getTile = function (z, x, y, pixelRatio, projection) {\n        return abstract();\n    };\n    /**\n     * Return the tile grid of the tile source.\n     * @return {import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n     * @api\n     */\n    TileSource.prototype.getTileGrid = function () {\n        return this.tileGrid;\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n     */\n    TileSource.prototype.getTileGridForProjection = function (projection) {\n        if (!this.tileGrid) {\n            return getTileGridForProjection(projection);\n        }\n        else {\n            return this.tileGrid;\n        }\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {import(\"../TileCache.js\").default} Tile cache.\n     * @protected\n     */\n    TileSource.prototype.getTileCacheForProjection = function (projection) {\n        var thisProj = this.getProjection();\n        if (thisProj && !equivalent(thisProj, projection)) {\n            return null;\n        }\n        else {\n            return this.tileCache;\n        }\n    };\n    /**\n     * Get the tile pixel ratio for this source. Subclasses may override this\n     * method, which is meant to return a supported pixel ratio that matches the\n     * provided `pixelRatio` as close as possible.\n     * @param {number} pixelRatio Pixel ratio.\n     * @return {number} Tile pixel ratio.\n     */\n    TileSource.prototype.getTilePixelRatio = function (pixelRatio) {\n        return this.tilePixelRatio_;\n    };\n    /**\n     * @param {number} z Z.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {import(\"../size.js\").Size} Tile size.\n     */\n    TileSource.prototype.getTilePixelSize = function (z, pixelRatio, projection) {\n        var tileGrid = this.getTileGridForProjection(projection);\n        var tilePixelRatio = this.getTilePixelRatio(pixelRatio);\n        var tileSize = toSize(tileGrid.getTileSize(z), this.tmpSize);\n        if (tilePixelRatio == 1) {\n            return tileSize;\n        }\n        else {\n            return scaleSize(tileSize, tilePixelRatio, this.tmpSize);\n        }\n    };\n    /**\n     * Returns a tile coordinate wrapped around the x-axis. When the tile coordinate\n     * is outside the resolution and extent range of the tile grid, `null` will be\n     * returned.\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @param {import(\"../proj/Projection.js\").default=} opt_projection Projection.\n     * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate to be passed to the tileUrlFunction or\n     *     null if no tile URL should be created for the passed `tileCoord`.\n     */\n    TileSource.prototype.getTileCoordForTileUrlFunction = function (tileCoord, opt_projection) {\n        var projection = opt_projection !== undefined ?\n            opt_projection : this.getProjection();\n        var tileGrid = this.getTileGridForProjection(projection);\n        if (this.getWrapX() && projection.isGlobal()) {\n            tileCoord = wrapX(tileGrid, tileCoord, projection);\n        }\n        return withinExtentAndZ(tileCoord, tileGrid) ? tileCoord : null;\n    };\n    /**\n     * Remove all cached tiles from the source. The next render cycle will fetch new tiles.\n     * @api\n     */\n    TileSource.prototype.clear = function () {\n        this.tileCache.clear();\n    };\n    /**\n     * @inheritDoc\n     */\n    TileSource.prototype.refresh = function () {\n        this.clear();\n        _super.prototype.refresh.call(this);\n    };\n    /**\n     * Marks a tile coord as being used, without triggering a load.\n     * @abstract\n     * @param {number} z Tile coordinate z.\n     * @param {number} x Tile coordinate x.\n     * @param {number} y Tile coordinate y.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     */\n    TileSource.prototype.useTile = function (z, x, y, projection) { };\n    return TileSource;\n}(Source));\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Tile~TileSource} instances are instances of this\n * type.\n */\nvar TileSourceEvent = /** @class */ (function (_super) {\n    __extends(TileSourceEvent, _super);\n    /**\n     * @param {string} type Type.\n     * @param {import(\"../Tile.js\").default} tile The tile.\n     */\n    function TileSourceEvent(type, tile) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * The tile related to the event.\n         * @type {import(\"../Tile.js\").default}\n         * @api\n         */\n        _this.tile = tile;\n        return _this;\n    }\n    return TileSourceEvent;\n}(Event));\nexport { TileSourceEvent };\nexport default TileSource;\n//# sourceMappingURL=Tile.js.map","/**\n * @module ol/source/TileEventType\n */\n/**\n * @enum {string}\n */\nexport default {\n    /**\n     * Triggered when a tile starts loading.\n     * @event module:ol/source/Tile.TileSourceEvent#tileloadstart\n     * @api\n     */\n    TILELOADSTART: 'tileloadstart',\n    /**\n     * Triggered when a tile finishes loading, either when its data is loaded,\n     * or when loading was aborted because the tile is no longer needed.\n     * @event module:ol/source/Tile.TileSourceEvent#tileloadend\n     * @api\n     */\n    TILELOADEND: 'tileloadend',\n    /**\n     * Triggered if tile loading results in an error.\n     * @event module:ol/source/Tile.TileSourceEvent#tileloaderror\n     * @api\n     */\n    TILELOADERROR: 'tileloaderror'\n};\n//# sourceMappingURL=TileEventType.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/source/UrlTile\n */\nimport { getUid } from '../util.js';\nimport TileState from '../TileState.js';\nimport { expandUrl, createFromTemplates, nullTileUrlFunction } from '../tileurlfunction.js';\nimport TileSource, { TileSourceEvent } from './Tile.js';\nimport TileEventType from './TileEventType.js';\nimport { getKeyZXY } from '../tilecoord.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions]\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize]\n * @property {boolean} [opaque]\n * @property {import(\"../proj.js\").ProjectionLike} [projection]\n * @property {import(\"./State.js\").default} [state]\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid]\n * @property {import(\"../Tile.js\").LoadFunction} tileLoadFunction\n * @property {number} [tilePixelRatio]\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction]\n * @property {string} [url]\n * @property {Array<string>} [urls]\n * @property {boolean} [wrapX=true]\n * @property {number} [transition]\n * @property {string} [key]\n */\n/**\n * @classdesc\n * Base class for sources providing tiles divided into a tile grid over http.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n */\nvar UrlTile = /** @class */ (function (_super) {\n    __extends(UrlTile, _super);\n    /**\n     * @param {Options} options Image tile options.\n     */\n    function UrlTile(options) {\n        var _this = _super.call(this, {\n            attributions: options.attributions,\n            cacheSize: options.cacheSize,\n            opaque: options.opaque,\n            projection: options.projection,\n            state: options.state,\n            tileGrid: options.tileGrid,\n            tilePixelRatio: options.tilePixelRatio,\n            wrapX: options.wrapX,\n            transition: options.transition,\n            key: options.key,\n            attributionsCollapsible: options.attributionsCollapsible\n        }) || this;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.generateTileUrlFunction_ = !options.tileUrlFunction;\n        /**\n         * @protected\n         * @type {import(\"../Tile.js\").LoadFunction}\n         */\n        _this.tileLoadFunction = options.tileLoadFunction;\n        /**\n         * @protected\n         * @type {import(\"../Tile.js\").UrlFunction}\n         */\n        _this.tileUrlFunction = options.tileUrlFunction ? options.tileUrlFunction.bind(_this) : nullTileUrlFunction;\n        /**\n         * @protected\n         * @type {!Array<string>|null}\n         */\n        _this.urls = null;\n        if (options.urls) {\n            _this.setUrls(options.urls);\n        }\n        else if (options.url) {\n            _this.setUrl(options.url);\n        }\n        /**\n         * @private\n         * @type {!Object<string, boolean>}\n         */\n        _this.tileLoadingKeys_ = {};\n        return _this;\n    }\n    /**\n     * Return the tile load function of the source.\n     * @return {import(\"../Tile.js\").LoadFunction} TileLoadFunction\n     * @api\n     */\n    UrlTile.prototype.getTileLoadFunction = function () {\n        return this.tileLoadFunction;\n    };\n    /**\n     * Return the tile URL function of the source.\n     * @return {import(\"../Tile.js\").UrlFunction} TileUrlFunction\n     * @api\n     */\n    UrlTile.prototype.getTileUrlFunction = function () {\n        return this.tileUrlFunction;\n    };\n    /**\n     * Return the URLs used for this source.\n     * When a tileUrlFunction is used instead of url or urls,\n     * null will be returned.\n     * @return {!Array<string>|null} URLs.\n     * @api\n     */\n    UrlTile.prototype.getUrls = function () {\n        return this.urls;\n    };\n    /**\n     * Handle tile change events.\n     * @param {import(\"../events/Event.js\").default} event Event.\n     * @protected\n     */\n    UrlTile.prototype.handleTileChange = function (event) {\n        var tile = /** @type {import(\"../Tile.js\").default} */ (event.target);\n        var uid = getUid(tile);\n        var tileState = tile.getState();\n        var type;\n        if (tileState == TileState.LOADING) {\n            this.tileLoadingKeys_[uid] = true;\n            type = TileEventType.TILELOADSTART;\n        }\n        else if (uid in this.tileLoadingKeys_) {\n            delete this.tileLoadingKeys_[uid];\n            type = tileState == TileState.ERROR ? TileEventType.TILELOADERROR :\n                (tileState == TileState.LOADED || tileState == TileState.ABORT) ?\n                    TileEventType.TILELOADEND : undefined;\n        }\n        if (type != undefined) {\n            this.dispatchEvent(new TileSourceEvent(type, tile));\n        }\n    };\n    /**\n     * Set the tile load function of the source.\n     * @param {import(\"../Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n     * @api\n     */\n    UrlTile.prototype.setTileLoadFunction = function (tileLoadFunction) {\n        this.tileCache.clear();\n        this.tileLoadFunction = tileLoadFunction;\n        this.changed();\n    };\n    /**\n     * Set the tile URL function of the source.\n     * @param {import(\"../Tile.js\").UrlFunction} tileUrlFunction Tile URL function.\n     * @param {string=} key Optional new tile key for the source.\n     * @api\n     */\n    UrlTile.prototype.setTileUrlFunction = function (tileUrlFunction, key) {\n        this.tileUrlFunction = tileUrlFunction;\n        this.tileCache.pruneExceptNewestZ();\n        if (typeof key !== 'undefined') {\n            this.setKey(key);\n        }\n        else {\n            this.changed();\n        }\n    };\n    /**\n     * Set the URL to use for requests.\n     * @param {string} url URL.\n     * @api\n     */\n    UrlTile.prototype.setUrl = function (url) {\n        var urls = this.urls = expandUrl(url);\n        this.setUrls(urls);\n    };\n    /**\n     * Set the URLs to use for requests.\n     * @param {Array<string>} urls URLs.\n     * @api\n     */\n    UrlTile.prototype.setUrls = function (urls) {\n        this.urls = urls;\n        var key = urls.join('\\n');\n        if (this.generateTileUrlFunction_) {\n            this.setTileUrlFunction(createFromTemplates(urls, this.tileGrid), key);\n        }\n        else {\n            this.setKey(key);\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    UrlTile.prototype.useTile = function (z, x, y) {\n        var tileCoordKey = getKeyZXY(z, x, y);\n        if (this.tileCache.containsKey(tileCoordKey)) {\n            this.tileCache.get(tileCoordKey);\n        }\n    };\n    return UrlTile;\n}(TileSource));\nexport default UrlTile;\n//# sourceMappingURL=UrlTile.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/source/TileImage\n */\nimport { ENABLE_RASTER_REPROJECTION } from '../reproj/common.js';\nimport { getUid } from '../util.js';\nimport ImageTile from '../ImageTile.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport { listen } from '../events.js';\nimport EventType from '../events/EventType.js';\nimport { equivalent, get as getProjection } from '../proj.js';\nimport ReprojTile from '../reproj/Tile.js';\nimport UrlTile from './UrlTile.js';\nimport { getKey, getKeyZXY } from '../tilecoord.js';\nimport { getForProjection as getTileGridForProjection } from '../tilegrid.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Tile cache size. The default depends on the screen size. Will increase if too small.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [opaque=true] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"./State.js\").default} [state] Source state.\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service. For example, if the tile\n * service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get tile URL given a tile coordinate and the projection.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\n * used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX] Whether to wrap the world horizontally. The default, is to\n * request out-of-bounds tiles from the server. When set to `false`, only one\n * world will be rendered. When set to `true`, tiles will be requested for one\n * world only, but they will be wrapped horizontally to render multiple worlds.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [key] Optional tile key for proper cache fetching\n */\n/**\n * @classdesc\n * Base class for sources providing images divided into a tile grid.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n * @api\n */\nvar TileImage = /** @class */ (function (_super) {\n    __extends(TileImage, _super);\n    /**\n     * @param {!Options} options Image tile options.\n     */\n    function TileImage(options) {\n        var _this = _super.call(this, {\n            attributions: options.attributions,\n            cacheSize: options.cacheSize,\n            opaque: options.opaque,\n            projection: options.projection,\n            state: options.state,\n            tileGrid: options.tileGrid,\n            tileLoadFunction: options.tileLoadFunction ?\n                options.tileLoadFunction : defaultTileLoadFunction,\n            tilePixelRatio: options.tilePixelRatio,\n            tileUrlFunction: options.tileUrlFunction,\n            url: options.url,\n            urls: options.urls,\n            wrapX: options.wrapX,\n            transition: options.transition,\n            key: options.key,\n            attributionsCollapsible: options.attributionsCollapsible\n        }) || this;\n        /**\n         * @protected\n         * @type {?string}\n         */\n        _this.crossOrigin =\n            options.crossOrigin !== undefined ? options.crossOrigin : null;\n        /**\n         * @protected\n         * @type {typeof ImageTile}\n         */\n        _this.tileClass = options.tileClass !== undefined ?\n            options.tileClass : ImageTile;\n        /**\n         * @protected\n         * @type {!Object<string, TileCache>}\n         */\n        _this.tileCacheForProjection = {};\n        /**\n         * @protected\n         * @type {!Object<string, import(\"../tilegrid/TileGrid.js\").default>}\n         */\n        _this.tileGridForProjection = {};\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.reprojectionErrorThreshold_ = options.reprojectionErrorThreshold;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.renderReprojectionEdges_ = false;\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    TileImage.prototype.canExpireCache = function () {\n        if (!ENABLE_RASTER_REPROJECTION) {\n            return _super.prototype.canExpireCache.call(this);\n        }\n        if (this.tileCache.canExpireCache()) {\n            return true;\n        }\n        else {\n            for (var key in this.tileCacheForProjection) {\n                if (this.tileCacheForProjection[key].canExpireCache()) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    };\n    /**\n     * @inheritDoc\n     */\n    TileImage.prototype.expireCache = function (projection, usedTiles) {\n        if (!ENABLE_RASTER_REPROJECTION) {\n            _super.prototype.expireCache.call(this, projection, usedTiles);\n            return;\n        }\n        var usedTileCache = this.getTileCacheForProjection(projection);\n        this.tileCache.expireCache(this.tileCache == usedTileCache ? usedTiles : {});\n        for (var id in this.tileCacheForProjection) {\n            var tileCache = this.tileCacheForProjection[id];\n            tileCache.expireCache(tileCache == usedTileCache ? usedTiles : {});\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    TileImage.prototype.getGutterForProjection = function (projection) {\n        if (ENABLE_RASTER_REPROJECTION &&\n            this.getProjection() && projection && !equivalent(this.getProjection(), projection)) {\n            return 0;\n        }\n        else {\n            return this.getGutter();\n        }\n    };\n    /**\n     * @return {number} Gutter.\n     */\n    TileImage.prototype.getGutter = function () {\n        return 0;\n    };\n    /**\n     * @inheritDoc\n     */\n    TileImage.prototype.getOpaque = function (projection) {\n        if (ENABLE_RASTER_REPROJECTION &&\n            this.getProjection() && projection && !equivalent(this.getProjection(), projection)) {\n            return false;\n        }\n        else {\n            return _super.prototype.getOpaque.call(this, projection);\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    TileImage.prototype.getTileGridForProjection = function (projection) {\n        if (!ENABLE_RASTER_REPROJECTION) {\n            return _super.prototype.getTileGridForProjection.call(this, projection);\n        }\n        var thisProj = this.getProjection();\n        if (this.tileGrid && (!thisProj || equivalent(thisProj, projection))) {\n            return this.tileGrid;\n        }\n        else {\n            var projKey = getUid(projection);\n            if (!(projKey in this.tileGridForProjection)) {\n                this.tileGridForProjection[projKey] = getTileGridForProjection(projection);\n            }\n            return (\n            /** @type {!import(\"../tilegrid/TileGrid.js\").default} */ (this.tileGridForProjection[projKey]));\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    TileImage.prototype.getTileCacheForProjection = function (projection) {\n        if (!ENABLE_RASTER_REPROJECTION) {\n            return _super.prototype.getTileCacheForProjection.call(this, projection);\n        }\n        var thisProj = this.getProjection();\n        if (!thisProj || equivalent(thisProj, projection)) {\n            return this.tileCache;\n        }\n        else {\n            var projKey = getUid(projection);\n            if (!(projKey in this.tileCacheForProjection)) {\n                this.tileCacheForProjection[projKey] = new TileCache(this.tileCache.highWaterMark);\n            }\n            return this.tileCacheForProjection[projKey];\n        }\n    };\n    /**\n     * @param {number} z Tile coordinate z.\n     * @param {number} x Tile coordinate x.\n     * @param {number} y Tile coordinate y.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @param {string} key The key set on the tile.\n     * @return {!import(\"../Tile.js\").default} Tile.\n     * @private\n     */\n    TileImage.prototype.createTile_ = function (z, x, y, pixelRatio, projection, key) {\n        var tileCoord = [z, x, y];\n        var urlTileCoord = this.getTileCoordForTileUrlFunction(tileCoord, projection);\n        var tileUrl = urlTileCoord ?\n            this.tileUrlFunction(urlTileCoord, pixelRatio, projection) : undefined;\n        var tile = new this.tileClass(tileCoord, tileUrl !== undefined ? TileState.IDLE : TileState.EMPTY, tileUrl !== undefined ? tileUrl : '', this.crossOrigin, this.tileLoadFunction, this.tileOptions);\n        tile.key = key;\n        listen(tile, EventType.CHANGE, this.handleTileChange, this);\n        return tile;\n    };\n    /**\n     * @inheritDoc\n     */\n    TileImage.prototype.getTile = function (z, x, y, pixelRatio, projection) {\n        var sourceProjection = /** @type {!import(\"../proj/Projection.js\").default} */ (this.getProjection());\n        if (!ENABLE_RASTER_REPROJECTION ||\n            !sourceProjection || !projection || equivalent(sourceProjection, projection)) {\n            return this.getTileInternal(z, x, y, pixelRatio, sourceProjection || projection);\n        }\n        else {\n            var cache = this.getTileCacheForProjection(projection);\n            var tileCoord = [z, x, y];\n            var tile = void 0;\n            var tileCoordKey = getKey(tileCoord);\n            if (cache.containsKey(tileCoordKey)) {\n                tile = /** @type {!import(\"../Tile.js\").default} */ (cache.get(tileCoordKey));\n            }\n            var key = this.getKey();\n            if (tile && tile.key == key) {\n                return tile;\n            }\n            else {\n                var sourceTileGrid = this.getTileGridForProjection(sourceProjection);\n                var targetTileGrid = this.getTileGridForProjection(projection);\n                var wrappedTileCoord = this.getTileCoordForTileUrlFunction(tileCoord, projection);\n                var newTile = new ReprojTile(sourceProjection, sourceTileGrid, projection, targetTileGrid, tileCoord, wrappedTileCoord, this.getTilePixelRatio(pixelRatio), this.getGutter(), function (z, x, y, pixelRatio) {\n                    return this.getTileInternal(z, x, y, pixelRatio, sourceProjection);\n                }.bind(this), this.reprojectionErrorThreshold_, this.renderReprojectionEdges_);\n                newTile.key = key;\n                if (tile) {\n                    newTile.interimTile = tile;\n                    newTile.refreshInterimChain();\n                    cache.replace(tileCoordKey, newTile);\n                }\n                else {\n                    cache.set(tileCoordKey, newTile);\n                }\n                return newTile;\n            }\n        }\n    };\n    /**\n     * @param {number} z Tile coordinate z.\n     * @param {number} x Tile coordinate x.\n     * @param {number} y Tile coordinate y.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {!import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {!import(\"../Tile.js\").default} Tile.\n     * @protected\n     */\n    TileImage.prototype.getTileInternal = function (z, x, y, pixelRatio, projection) {\n        var tile = null;\n        var tileCoordKey = getKeyZXY(z, x, y);\n        var key = this.getKey();\n        if (!this.tileCache.containsKey(tileCoordKey)) {\n            tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n            this.tileCache.set(tileCoordKey, tile);\n        }\n        else {\n            tile = this.tileCache.get(tileCoordKey);\n            if (tile.key != key) {\n                // The source's params changed. If the tile has an interim tile and if we\n                // can use it then we use it. Otherwise we create a new tile.  In both\n                // cases we attempt to assign an interim tile to the new tile.\n                var interimTile = tile;\n                tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n                //make the new tile the head of the list,\n                if (interimTile.getState() == TileState.IDLE) {\n                    //the old tile hasn't begun loading yet, and is now outdated, so we can simply discard it\n                    tile.interimTile = interimTile.interimTile;\n                }\n                else {\n                    tile.interimTile = interimTile;\n                }\n                tile.refreshInterimChain();\n                this.tileCache.replace(tileCoordKey, tile);\n            }\n        }\n        return tile;\n    };\n    /**\n     * Sets whether to render reprojection edges or not (usually for debugging).\n     * @param {boolean} render Render the edges.\n     * @api\n     */\n    TileImage.prototype.setRenderReprojectionEdges = function (render) {\n        if (!ENABLE_RASTER_REPROJECTION ||\n            this.renderReprojectionEdges_ == render) {\n            return;\n        }\n        this.renderReprojectionEdges_ = render;\n        for (var id in this.tileCacheForProjection) {\n            this.tileCacheForProjection[id].clear();\n        }\n        this.changed();\n    };\n    /**\n     * Sets the tile grid to use when reprojecting the tiles to the given\n     * projection instead of the default tile grid for the projection.\n     *\n     * This can be useful when the default tile grid cannot be created\n     * (e.g. projection has no extent defined) or\n     * for optimization reasons (custom tile size, resolutions, ...).\n     *\n     * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n     * @param {import(\"../tilegrid/TileGrid.js\").default} tilegrid Tile grid to use for the projection.\n     * @api\n     */\n    TileImage.prototype.setTileGridForProjection = function (projection, tilegrid) {\n        if (ENABLE_RASTER_REPROJECTION) {\n            var proj = getProjection(projection);\n            if (proj) {\n                var projKey = getUid(proj);\n                if (!(projKey in this.tileGridForProjection)) {\n                    this.tileGridForProjection[projKey] = tilegrid;\n                }\n            }\n        }\n    };\n    return TileImage;\n}(UrlTile));\n/**\n * @param {ImageTile} imageTile Image tile.\n * @param {string} src Source.\n */\nfunction defaultTileLoadFunction(imageTile, src) {\n    /** @type {HTMLImageElement|HTMLVideoElement} */ (imageTile.getImage()).src = src;\n}\nexport default TileImage;\n//# sourceMappingURL=TileImage.js.map","/**\n * @module ol/source/BingMaps\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { createFromTileUrlFunctions } from '../tileurlfunction.js';\nimport { applyTransform, intersects } from '../extent.js';\nimport { jsonp as requestJSONP } from '../net.js';\nimport { get as getProjection, getTransformFromProjections } from '../proj.js';\nimport SourceState from './State.js';\nimport TileImage from './TileImage.js';\nimport { createOrUpdate } from '../tilecoord.js';\nimport { createXYZ, extentFromProjection } from '../tilegrid.js';\n/**\n * @param {import('../tilecoord.js').TileCoord} tileCoord Tile coord.\n * @return {string} Quad key.\n */\nexport function quadKey(tileCoord) {\n    var z = tileCoord[0];\n    var digits = new Array(z);\n    var mask = 1 << (z - 1);\n    var i, charCode;\n    for (i = 0; i < z; ++i) {\n        // 48 is charCode for 0 - '0'.charCodeAt(0)\n        charCode = 48;\n        if (tileCoord[1] & mask) {\n            charCode += 1;\n        }\n        if (tileCoord[2] & mask) {\n            charCode += 2;\n        }\n        digits[i] = String.fromCharCode(charCode);\n        mask >>= 1;\n    }\n    return digits.join('');\n}\n/**\n * The attribution containing a link to the Microsoft® Bing™ Maps Platform APIs’\n * Terms Of Use.\n * @const\n * @type {string}\n */\nvar TOS_ATTRIBUTION = '<a class=\"ol-attribution-bing-tos\" ' +\n    'href=\"https://www.microsoft.com/maps/product/terms.html\">' +\n    'Terms of Use</a>';\n/**\n * @typedef {Object} Options\n * @property {number} [cacheSize] Tile cache size. The default depends on the screen size. Will increase if too small.\n * @property {boolean} [hidpi=false] If `true` hidpi tiles will be requested.\n * @property {string} [culture='en-us'] Culture code.\n * @property {string} key Bing Maps API key. Get yours at http://www.bingmapsportal.com/.\n * @property {string} imagerySet Type of imagery.\n * @property {number} [maxZoom=21] Max zoom. Default is what's advertized by the BingMaps service.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n */\n/**\n * @typedef {Object} BingMapsImageryMetadataResponse\n * @property {number} statusCode The response status code\n * @property {string} statusDescription The response status description\n * @property {string} authenticationResultCode The authentication result code\n * @property {Array<ResourceSet>} resourceSets The array of resource sets\n */\n/**\n * @typedef {Object} ResourceSet\n * @property {Array<Resource>} resources\n */\n/**\n * @typedef {Object} Resource\n * @property {number} imageHeight The image height\n * @property {number} imageWidth The image width\n * @property {number} zoomMin The minimum zoom level\n * @property {number} zoomMax The maximum zoom level\n * @property {string} imageUrl The image URL\n * @property {Array<string>} imageUrlSubdomains The image URL subdomains for rotation\n * @property {Array<ImageryProvider>} [imageryProviders] The array of ImageryProviders\n */\n/**\n * @typedef {Object} ImageryProvider\n * @property {Array<CoverageArea>} coverageAreas The coverage areas\n * @property {string} [attribution] The attribution\n */\n/**\n * @typedef {Object} CoverageArea\n * @property {number} zoomMin The minimum zoom\n * @property {number} zoomMax The maximum zoom\n * @property {Array<number>} bbox The coverage bounding box\n */\n/**\n * @classdesc\n * Layer source for Bing Maps tile data.\n * @api\n */\nvar BingMaps = /** @class */ (function (_super) {\n    __extends(BingMaps, _super);\n    /**\n     * @param {Options} options Bing Maps options.\n     */\n    function BingMaps(options) {\n        var _this = this;\n        var hidpi = options.hidpi !== undefined ? options.hidpi : false;\n        _this = _super.call(this, {\n            cacheSize: options.cacheSize,\n            crossOrigin: 'anonymous',\n            opaque: true,\n            projection: getProjection('EPSG:3857'),\n            reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n            state: SourceState.LOADING,\n            tileLoadFunction: options.tileLoadFunction,\n            tilePixelRatio: hidpi ? 2 : 1,\n            wrapX: options.wrapX !== undefined ? options.wrapX : true,\n            transition: options.transition\n        }) || this;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.hidpi_ = hidpi;\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.culture_ = options.culture !== undefined ? options.culture : 'en-us';\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxZoom_ = options.maxZoom !== undefined ? options.maxZoom : -1;\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.apiKey_ = options.key;\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.imagerySet_ = options.imagerySet;\n        var url = 'https://dev.virtualearth.net/REST/v1/Imagery/Metadata/' +\n            _this.imagerySet_ +\n            '?uriScheme=https&include=ImageryProviders&key=' + _this.apiKey_ +\n            '&c=' + _this.culture_;\n        requestJSONP(url, _this.handleImageryMetadataResponse.bind(_this), undefined, 'jsonp');\n        return _this;\n    }\n    /**\n     * Get the api key used for this source.\n     *\n     * @return {string} The api key.\n     * @api\n     */\n    BingMaps.prototype.getApiKey = function () {\n        return this.apiKey_;\n    };\n    /**\n     * Get the imagery set associated with this source.\n     *\n     * @return {string} The imagery set.\n     * @api\n     */\n    BingMaps.prototype.getImagerySet = function () {\n        return this.imagerySet_;\n    };\n    /**\n     * @param {BingMapsImageryMetadataResponse} response Response.\n     */\n    BingMaps.prototype.handleImageryMetadataResponse = function (response) {\n        if (response.statusCode != 200 ||\n            response.statusDescription != 'OK' ||\n            response.authenticationResultCode != 'ValidCredentials' ||\n            response.resourceSets.length != 1 ||\n            response.resourceSets[0].resources.length != 1) {\n            this.setState(SourceState.ERROR);\n            return;\n        }\n        var resource = response.resourceSets[0].resources[0];\n        var maxZoom = this.maxZoom_ == -1 ? resource.zoomMax : this.maxZoom_;\n        var sourceProjection = this.getProjection();\n        var extent = extentFromProjection(sourceProjection);\n        var scale = this.hidpi_ ? 2 : 1;\n        var tileSize = resource.imageWidth == resource.imageHeight ?\n            resource.imageWidth / scale :\n            [resource.imageWidth / scale, resource.imageHeight / scale];\n        var tileGrid = createXYZ({\n            extent: extent,\n            minZoom: resource.zoomMin,\n            maxZoom: maxZoom,\n            tileSize: tileSize\n        });\n        this.tileGrid = tileGrid;\n        var culture = this.culture_;\n        var hidpi = this.hidpi_;\n        this.tileUrlFunction = createFromTileUrlFunctions(resource.imageUrlSubdomains.map(function (subdomain) {\n            /** @type {import('../tilecoord.js').TileCoord} */\n            var quadKeyTileCoord = [0, 0, 0];\n            var imageUrl = resource.imageUrl\n                .replace('{subdomain}', subdomain)\n                .replace('{culture}', culture);\n            return (\n            /**\n             * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n             * @param {number} pixelRatio Pixel ratio.\n             * @param {import(\"../proj/Projection.js\").default} projection Projection.\n             * @return {string|undefined} Tile URL.\n             */\n            function (tileCoord, pixelRatio, projection) {\n                if (!tileCoord) {\n                    return undefined;\n                }\n                else {\n                    createOrUpdate(tileCoord[0], tileCoord[1], tileCoord[2], quadKeyTileCoord);\n                    var url = imageUrl;\n                    if (hidpi) {\n                        url += '&dpi=d1&device=mobile';\n                    }\n                    return url.replace('{quadkey}', quadKey(quadKeyTileCoord));\n                }\n            });\n        }));\n        if (resource.imageryProviders) {\n            var transform_1 = getTransformFromProjections(getProjection('EPSG:4326'), this.getProjection());\n            this.setAttributions(function (frameState) {\n                var attributions = [];\n                var viewState = frameState.viewState;\n                var tileGrid = this.getTileGrid();\n                var tileCoord = tileGrid.getTileCoordForCoordAndResolution(viewState.center, viewState.resolution);\n                var zoom = tileCoord[0];\n                resource.imageryProviders.map(function (imageryProvider) {\n                    var intersecting = false;\n                    var coverageAreas = imageryProvider.coverageAreas;\n                    for (var i = 0, ii = coverageAreas.length; i < ii; ++i) {\n                        var coverageArea = coverageAreas[i];\n                        if (zoom >= coverageArea.zoomMin && zoom <= coverageArea.zoomMax) {\n                            var bbox = coverageArea.bbox;\n                            var epsg4326Extent = [bbox[1], bbox[0], bbox[3], bbox[2]];\n                            var extent_1 = applyTransform(epsg4326Extent, transform_1);\n                            if (intersects(extent_1, frameState.extent)) {\n                                intersecting = true;\n                                break;\n                            }\n                        }\n                    }\n                    if (intersecting) {\n                        attributions.push(imageryProvider.attribution);\n                    }\n                });\n                attributions.push(TOS_ATTRIBUTION);\n                return attributions;\n            }.bind(this));\n        }\n        this.setState(SourceState.READY);\n    };\n    return BingMaps;\n}(TileImage));\nexport default BingMaps;\n//# sourceMappingURL=BingMaps.js.map","/**\n * @module ol/source/XYZ\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport TileImage from './TileImage.js';\nimport { createXYZ, extentFromProjection } from '../tilegrid.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Tile cache size. The default depends on the screen size. Will increase if too small.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [opaque=true] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection='EPSG:3857'] Projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {number} [maxZoom=18] Optional max zoom level.\n * @property {number} [minZoom=0] Optional min zoom level.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service.\n * For example, if the tile service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {number|import(\"../size.js\").Size} [tileSize=[256, 256]] The tile size used by the tile service.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get\n * tile URL given a tile coordinate and the projection.\n * Required if url or urls are not provided.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`,\n * and `{z}` placeholders. A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`,\n * may be used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n */\n/**\n * @classdesc\n * Layer source for tile data with URLs in a set XYZ format that are\n * defined in a URL template. By default, this follows the widely-used\n * Google grid where `x` 0 and `y` 0 are in the top left. Grids like\n * TMS where `x` 0 and `y` 0 are in the bottom left can be used by\n * using the `{-y}` placeholder in the URL template, so long as the\n * source does not have a custom tile grid. In this case,\n * {@link module:ol/source/TileImage} can be used with a `tileUrlFunction`\n * such as:\n *\n *  tileUrlFunction: function(coordinate) {\n *    return 'http://mapserver.com/' + coordinate[0] + '/' +\n *        coordinate[1] + '/' + coordinate[2] + '.png';\n *    }\n *\n * @api\n */\nvar XYZ = /** @class */ (function (_super) {\n    __extends(XYZ, _super);\n    /**\n     * @param {Options=} opt_options XYZ options.\n     */\n    function XYZ(opt_options) {\n        var _this = this;\n        var options = opt_options || {};\n        var projection = options.projection !== undefined ?\n            options.projection : 'EPSG:3857';\n        var tileGrid = options.tileGrid !== undefined ? options.tileGrid :\n            createXYZ({\n                extent: extentFromProjection(projection),\n                maxZoom: options.maxZoom,\n                minZoom: options.minZoom,\n                tileSize: options.tileSize\n            });\n        _this = _super.call(this, {\n            attributions: options.attributions,\n            cacheSize: options.cacheSize,\n            crossOrigin: options.crossOrigin,\n            opaque: options.opaque,\n            projection: projection,\n            reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n            tileGrid: tileGrid,\n            tileLoadFunction: options.tileLoadFunction,\n            tilePixelRatio: options.tilePixelRatio,\n            tileUrlFunction: options.tileUrlFunction,\n            url: options.url,\n            urls: options.urls,\n            wrapX: options.wrapX !== undefined ? options.wrapX : true,\n            transition: options.transition,\n            attributionsCollapsible: options.attributionsCollapsible\n        }) || this;\n        return _this;\n    }\n    return XYZ;\n}(TileImage));\nexport default XYZ;\n//# sourceMappingURL=XYZ.js.map","/**\n * @module ol/source/CartoDB\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { assign } from '../obj.js';\nimport SourceState from './State.js';\nimport XYZ from './XYZ.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize] Tile cache size. The default depends on the screen size. Will increase if too small.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {import(\"../proj.js\").ProjectionLike} [projection='EPSG:3857'] Projection.\n * @property {number} [maxZoom=18] Max zoom.\n * @property {number} [minZoom] Minimum zoom.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {Object} [config] If using anonymous maps, the CartoDB config to use. See\n * http://docs.cartodb.com/cartodb-platform/maps-api/anonymous-maps/\n * for more detail.\n * If using named maps, a key-value lookup with the template parameters.\n * See http://docs.cartodb.com/cartodb-platform/maps-api/named-maps/\n * for more detail.\n * @property {string} [map] If using named maps, this will be the name of the template to load.\n * See http://docs.cartodb.com/cartodb-platform/maps-api/named-maps/\n * for more detail.\n * @property {string} account If using named maps, this will be the name of the template to load.\n */\n/**\n * @typedef {Object} CartoDBLayerInfo\n * @property {string} layergroupid The layer group ID\n * @property {{https: string}} cdn_url The CDN URL\n */\n/**\n * @classdesc\n * Layer source for the CartoDB Maps API.\n * @api\n */\nvar CartoDB = /** @class */ (function (_super) {\n    __extends(CartoDB, _super);\n    /**\n     * @param {Options} options CartoDB options.\n     */\n    function CartoDB(options) {\n        var _this = _super.call(this, {\n            attributions: options.attributions,\n            cacheSize: options.cacheSize,\n            crossOrigin: options.crossOrigin,\n            maxZoom: options.maxZoom !== undefined ? options.maxZoom : 18,\n            minZoom: options.minZoom,\n            projection: options.projection,\n            wrapX: options.wrapX\n        }) || this;\n        /**\n         * @type {string}\n         * @private\n         */\n        _this.account_ = options.account;\n        /**\n         * @type {string}\n         * @private\n         */\n        _this.mapId_ = options.map || '';\n        /**\n         * @type {!Object}\n         * @private\n         */\n        _this.config_ = options.config || {};\n        /**\n         * @type {!Object<string, CartoDBLayerInfo>}\n         * @private\n         */\n        _this.templateCache_ = {};\n        _this.initializeMap_();\n        return _this;\n    }\n    /**\n     * Returns the current config.\n     * @return {!Object} The current configuration.\n     * @api\n     */\n    CartoDB.prototype.getConfig = function () {\n        return this.config_;\n    };\n    /**\n     * Updates the carto db config.\n     * @param {Object} config a key-value lookup. Values will replace current values\n     *     in the config.\n     * @api\n     */\n    CartoDB.prototype.updateConfig = function (config) {\n        assign(this.config_, config);\n        this.initializeMap_();\n    };\n    /**\n     * Sets the CartoDB config\n     * @param {Object} config In the case of anonymous maps, a CartoDB configuration\n     *     object.\n     * If using named maps, a key-value lookup with the template parameters.\n     * @api\n     */\n    CartoDB.prototype.setConfig = function (config) {\n        this.config_ = config || {};\n        this.initializeMap_();\n    };\n    /**\n     * Issue a request to initialize the CartoDB map.\n     * @private\n     */\n    CartoDB.prototype.initializeMap_ = function () {\n        var paramHash = JSON.stringify(this.config_);\n        if (this.templateCache_[paramHash]) {\n            this.applyTemplate_(this.templateCache_[paramHash]);\n            return;\n        }\n        var mapUrl = 'https://' + this.account_ + '.carto.com/api/v1/map';\n        if (this.mapId_) {\n            mapUrl += '/named/' + this.mapId_;\n        }\n        var client = new XMLHttpRequest();\n        client.addEventListener('load', this.handleInitResponse_.bind(this, paramHash));\n        client.addEventListener('error', this.handleInitError_.bind(this));\n        client.open('POST', mapUrl);\n        client.setRequestHeader('Content-type', 'application/json');\n        client.send(JSON.stringify(this.config_));\n    };\n    /**\n     * Handle map initialization response.\n     * @param {string} paramHash a hash representing the parameter set that was used\n     *     for the request\n     * @param {Event} event Event.\n     * @private\n     */\n    CartoDB.prototype.handleInitResponse_ = function (paramHash, event) {\n        var client = /** @type {XMLHttpRequest} */ (event.target);\n        // status will be 0 for file:// urls\n        if (!client.status || client.status >= 200 && client.status < 300) {\n            var response = void 0;\n            try {\n                response = /** @type {CartoDBLayerInfo} */ (JSON.parse(client.responseText));\n            }\n            catch (err) {\n                this.setState(SourceState.ERROR);\n                return;\n            }\n            this.applyTemplate_(response);\n            this.templateCache_[paramHash] = response;\n            this.setState(SourceState.READY);\n        }\n        else {\n            this.setState(SourceState.ERROR);\n        }\n    };\n    /**\n     * @private\n     * @param {Event} event Event.\n     */\n    CartoDB.prototype.handleInitError_ = function (event) {\n        this.setState(SourceState.ERROR);\n    };\n    /**\n     * Apply the new tile urls returned by carto db\n     * @param {CartoDBLayerInfo} data Result of carto db call.\n     * @private\n     */\n    CartoDB.prototype.applyTemplate_ = function (data) {\n        var tilesUrl = 'https://' + data.cdn_url.https + '/' + this.account_ +\n            '/api/v1/map/' + data.layergroupid + '/{z}/{x}/{y}.png';\n        this.setUrl(tilesUrl);\n    };\n    return CartoDB;\n}(XYZ));\nexport default CartoDB;\n//# sourceMappingURL=CartoDB.js.map","/**\n * @module ol/source/VectorEventType\n */\n/**\n * @enum {string}\n */\nexport default {\n    /**\n     * Triggered when a feature is added to the source.\n     * @event module:ol/source/Vector.VectorSourceEvent#addfeature\n     * @api\n     */\n    ADDFEATURE: 'addfeature',\n    /**\n     * Triggered when a feature is updated.\n     * @event module:ol/source/Vector.VectorSourceEvent#changefeature\n     * @api\n     */\n    CHANGEFEATURE: 'changefeature',\n    /**\n     * Triggered when the clear method is called on the source.\n     * @event module:ol/source/Vector.VectorSourceEvent#clear\n     * @api\n     */\n    CLEAR: 'clear',\n    /**\n     * Triggered when a feature is removed from the source.\n     * See {@link module:ol/source/Vector#clear source.clear()} for exceptions.\n     * @event module:ol/source/Vector.VectorSourceEvent#removefeature\n     * @api\n     */\n    REMOVEFEATURE: 'removefeature'\n};\n//# sourceMappingURL=VectorEventType.js.map","/**\n * @module ol/structs/RBush\n */\nimport { getUid } from '../util.js';\nimport rbush from 'rbush';\nimport { createOrUpdate, equals } from '../extent.js';\nimport { isEmpty } from '../obj.js';\n/**\n * @typedef {Object} Entry\n * @property {number} minX\n * @property {number} minY\n * @property {number} maxX\n * @property {number} maxY\n * @property {Object} [value]\n */\n/**\n * @classdesc\n * Wrapper around the RBush by Vladimir Agafonkin.\n * See https://github.com/mourner/rbush.\n *\n * @template T\n */\nvar RBush = /** @class */ (function () {\n    /**\n     * @param {number=} opt_maxEntries Max entries.\n     */\n    function RBush(opt_maxEntries) {\n        /**\n         * @private\n         */\n        this.rbush_ = rbush(opt_maxEntries, undefined);\n        /**\n         * A mapping between the objects added to this rbush wrapper\n         * and the objects that are actually added to the internal rbush.\n         * @private\n         * @type {Object<string, Entry>}\n         */\n        this.items_ = {};\n    }\n    /**\n     * Insert a value into the RBush.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {T} value Value.\n     */\n    RBush.prototype.insert = function (extent, value) {\n        /** @type {Entry} */\n        var item = {\n            minX: extent[0],\n            minY: extent[1],\n            maxX: extent[2],\n            maxY: extent[3],\n            value: value\n        };\n        this.rbush_.insert(item);\n        this.items_[getUid(value)] = item;\n    };\n    /**\n     * Bulk-insert values into the RBush.\n     * @param {Array<import(\"../extent.js\").Extent>} extents Extents.\n     * @param {Array<T>} values Values.\n     */\n    RBush.prototype.load = function (extents, values) {\n        var items = new Array(values.length);\n        for (var i = 0, l = values.length; i < l; i++) {\n            var extent = extents[i];\n            var value = values[i];\n            /** @type {Entry} */\n            var item = {\n                minX: extent[0],\n                minY: extent[1],\n                maxX: extent[2],\n                maxY: extent[3],\n                value: value\n            };\n            items[i] = item;\n            this.items_[getUid(value)] = item;\n        }\n        this.rbush_.load(items);\n    };\n    /**\n     * Remove a value from the RBush.\n     * @param {T} value Value.\n     * @return {boolean} Removed.\n     */\n    RBush.prototype.remove = function (value) {\n        var uid = getUid(value);\n        // get the object in which the value was wrapped when adding to the\n        // internal rbush. then use that object to do the removal.\n        var item = this.items_[uid];\n        delete this.items_[uid];\n        return this.rbush_.remove(item) !== null;\n    };\n    /**\n     * Update the extent of a value in the RBush.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {T} value Value.\n     */\n    RBush.prototype.update = function (extent, value) {\n        var item = this.items_[getUid(value)];\n        var bbox = [item.minX, item.minY, item.maxX, item.maxY];\n        if (!equals(bbox, extent)) {\n            this.remove(value);\n            this.insert(extent, value);\n        }\n    };\n    /**\n     * Return all values in the RBush.\n     * @return {Array<T>} All.\n     */\n    RBush.prototype.getAll = function () {\n        var items = this.rbush_.all();\n        return items.map(function (item) {\n            return item.value;\n        });\n    };\n    /**\n     * Return all values in the given extent.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @return {Array<T>} All in extent.\n     */\n    RBush.prototype.getInExtent = function (extent) {\n        /** @type {Entry} */\n        var bbox = {\n            minX: extent[0],\n            minY: extent[1],\n            maxX: extent[2],\n            maxY: extent[3]\n        };\n        var items = this.rbush_.search(bbox);\n        return items.map(function (item) {\n            return item.value;\n        });\n    };\n    /**\n     * Calls a callback function with each value in the tree.\n     * If the callback returns a truthy value, this value is returned without\n     * checking the rest of the tree.\n     * @param {function(T): *} callback Callback.\n     * @return {*} Callback return value.\n     */\n    RBush.prototype.forEach = function (callback) {\n        return this.forEach_(this.getAll(), callback);\n    };\n    /**\n     * Calls a callback function with each value in the provided extent.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {function(T): *} callback Callback.\n     * @return {*} Callback return value.\n     */\n    RBush.prototype.forEachInExtent = function (extent, callback) {\n        return this.forEach_(this.getInExtent(extent), callback);\n    };\n    /**\n     * @param {Array<T>} values Values.\n     * @param {function(T): *} callback Callback.\n     * @private\n     * @return {*} Callback return value.\n     */\n    RBush.prototype.forEach_ = function (values, callback) {\n        var result;\n        for (var i = 0, l = values.length; i < l; i++) {\n            result = callback(values[i]);\n            if (result) {\n                return result;\n            }\n        }\n        return result;\n    };\n    /**\n     * @return {boolean} Is empty.\n     */\n    RBush.prototype.isEmpty = function () {\n        return isEmpty(this.items_);\n    };\n    /**\n     * Remove all values from the RBush.\n     */\n    RBush.prototype.clear = function () {\n        this.rbush_.clear();\n        this.items_ = {};\n    };\n    /**\n     * @param {import(\"../extent.js\").Extent=} opt_extent Extent.\n     * @return {import(\"../extent.js\").Extent} Extent.\n     */\n    RBush.prototype.getExtent = function (opt_extent) {\n        var data = this.rbush_.toJSON();\n        return createOrUpdate(data.minX, data.minY, data.maxX, data.maxY, opt_extent);\n    };\n    /**\n     * @param {RBush} rbush R-Tree.\n     */\n    RBush.prototype.concat = function (rbush) {\n        this.rbush_.load(rbush.rbush_.all());\n        for (var i in rbush.items_) {\n            this.items_[i] = rbush.items_[i];\n        }\n    };\n    return RBush;\n}());\nexport default RBush;\n//# sourceMappingURL=RBush.js.map","/**\n * @module ol/source/Vector\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { getUid } from '../util.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport { extend } from '../array.js';\nimport { assert } from '../asserts.js';\nimport { listen, unlistenByKey } from '../events.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport { containsExtent, equals } from '../extent.js';\nimport { xhr } from '../featureloader.js';\nimport { TRUE, VOID } from '../functions.js';\nimport { all as allStrategy } from '../loadingstrategy.js';\nimport { isEmpty, getValues } from '../obj.js';\nimport Source from './Source.js';\nimport SourceState from './State.js';\nimport VectorEventType from './VectorEventType.js';\nimport RBush from '../structs/RBush.js';\n/**\n * A function that takes an {@link module:ol/extent~Extent} and a resolution as arguments, and\n * returns an array of {@link module:ol/extent~Extent} with the extents to load. Usually this\n * is one of the standard {@link module:ol/loadingstrategy} strategies.\n *\n * @typedef {function(import(\"../extent.js\").Extent, number): Array<import(\"../extent.js\").Extent>} LoadingStrategy\n * @api\n */\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Vector} instances are instances of this\n * type.\n */\nvar VectorSourceEvent = /** @class */ (function (_super) {\n    __extends(VectorSourceEvent, _super);\n    /**\n     * @param {string} type Type.\n     * @param {import(\"../Feature.js\").default=} opt_feature Feature.\n     */\n    function VectorSourceEvent(type, opt_feature) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * The feature being added or removed.\n         * @type {import(\"../Feature.js\").default|undefined}\n         * @api\n         */\n        _this.feature = opt_feature;\n        return _this;\n    }\n    return VectorSourceEvent;\n}(Event));\nexport { VectorSourceEvent };\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {Array<import(\"../Feature.js\").default>|Collection<import(\"../Feature.js\").default>} [features]\n * Features. If provided as {@link module:ol/Collection}, the features in the source\n * and the collection will stay in sync.\n * @property {import(\"../format/Feature.js\").default} [format] The feature format used by the XHR\n * feature loader when `url` is set. Required if `url` is set, otherwise ignored.\n * @property {import(\"../featureloader.js\").FeatureLoader} [loader]\n * The loader function used to load features, from a remote source for example.\n * If this is not set and `url` is set, the source will create and use an XHR\n * feature loader.\n *\n * Example:\n *\n * ```js\n * import {Vector} from 'ol/source';\n * import {GeoJSON} from 'ol/format';\n * import {bbox} from 'ol/loadingstrategy';\n *\n * var vectorSource = new Vector({\n *   format: new GeoJSON(),\n *   loader: function(extent, resolution, projection) {\n *      var proj = projection.getCode();\n *      var url = 'https://ahocevar.com/geoserver/wfs?service=WFS&' +\n *          'version=1.1.0&request=GetFeature&typename=osm:water_areas&' +\n *          'outputFormat=application/json&srsname=' + proj + '&' +\n *          'bbox=' + extent.join(',') + ',' + proj;\n *      var xhr = new XMLHttpRequest();\n *      xhr.open('GET', url);\n *      var onError = function() {\n *        vectorSource.removeLoadedExtent(extent);\n *      }\n *      xhr.onerror = onError;\n *      xhr.onload = function() {\n *        if (xhr.status == 200) {\n *          vectorSource.addFeatures(\n *              vectorSource.getFormat().readFeatures(xhr.responseText));\n *        } else {\n *          onError();\n *        }\n *      }\n *      xhr.send();\n *    },\n *    strategy: bbox\n *  });\n * ```\n * @property {boolean} [overlaps=true] This source may have overlapping geometries.\n * Setting this to `false` (e.g. for sources with polygons that represent administrative\n * boundaries or TopoJSON sources) allows the renderer to optimise fill and\n * stroke operations.\n * @property {LoadingStrategy} [strategy] The loading strategy to use.\n * By default an {@link module:ol/loadingstrategy~all}\n * strategy is used, a one-off strategy which loads all features at once.\n * @property {string|import(\"../featureloader.js\").FeatureUrlFunction} [url]\n * Setting this option instructs the source to load features using an XHR loader\n * (see {@link module:ol/featureloader~xhr}). Use a `string` and an\n * {@link module:ol/loadingstrategy~all} for a one-off download of all features from\n * the given URL. Use a {@link module:ol/featureloader~FeatureUrlFunction} to generate the url with\n * other loading strategies.\n * Requires `format` to be set as well.\n * When default XHR feature loader is provided, the features will\n * be transformed from the data projection to the view projection\n * during parsing. If your remote data source does not advertise its projection\n * properly, this transformation will be incorrect. For some formats, the\n * default projection (usually EPSG:4326) can be overridden by setting the\n * dataProjection constructor option on the format.\n * Note that if a source contains non-feature data, such as a GeoJSON geometry\n * or a KML NetworkLink, these will be ignored. Use a custom loader to load these.\n * @property {boolean} [useSpatialIndex=true]\n * By default, an RTree is used as spatial index. When features are removed and\n * added frequently, and the total number of features is low, setting this to\n * `false` may improve performance.\n *\n * Note that\n * {@link module:ol/source/Vector~VectorSource#getFeaturesInExtent},\n * {@link module:ol/source/Vector~VectorSource#getClosestFeatureToCoordinate} and\n * {@link module:ol/source/Vector~VectorSource#getExtent} cannot be used when `useSpatialIndex` is\n * set to `false`, and {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent} will loop\n * through all features.\n *\n * When set to `false`, the features will be maintained in an\n * {@link module:ol/Collection}, which can be retrieved through\n * {@link module:ol/source/Vector~VectorSource#getFeaturesCollection}.\n * @property {boolean} [wrapX=true] Wrap the world horizontally. For vector editing across the\n * -180° and 180° meridians to work properly, this should be set to `false`. The\n * resulting geometry coordinates will then exceed the world bounds.\n */\n/**\n * @classdesc\n * Provides a source of features for vector layers. Vector features provided\n * by this source are suitable for editing. See {@link module:ol/source/VectorTile~VectorTile} for\n * vector data that is optimized for rendering.\n *\n * @fires VectorSourceEvent\n * @api\n */\nvar VectorSource = /** @class */ (function (_super) {\n    __extends(VectorSource, _super);\n    /**\n     * @param {Options=} opt_options Vector source options.\n     */\n    function VectorSource(opt_options) {\n        var _this = this;\n        var options = opt_options || {};\n        _this = _super.call(this, {\n            attributions: options.attributions,\n            projection: undefined,\n            state: SourceState.READY,\n            wrapX: options.wrapX !== undefined ? options.wrapX : true\n        }) || this;\n        /**\n         * @private\n         * @type {import(\"../featureloader.js\").FeatureLoader}\n         */\n        _this.loader_ = VOID;\n        /**\n         * @private\n         * @type {import(\"../format/Feature.js\").default|undefined}\n         */\n        _this.format_ = options.format;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.overlaps_ = options.overlaps == undefined ? true : options.overlaps;\n        /**\n         * @private\n         * @type {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined}\n         */\n        _this.url_ = options.url;\n        if (options.loader !== undefined) {\n            _this.loader_ = options.loader;\n        }\n        else if (_this.url_ !== undefined) {\n            assert(_this.format_, 7); // `format` must be set when `url` is set\n            // create a XHR feature loader for \"url\" and \"format\"\n            _this.loader_ = xhr(_this.url_, /** @type {import(\"../format/Feature.js\").default} */ (_this.format_));\n        }\n        /**\n         * @private\n         * @type {LoadingStrategy}\n         */\n        _this.strategy_ = options.strategy !== undefined ? options.strategy : allStrategy;\n        var useSpatialIndex = options.useSpatialIndex !== undefined ? options.useSpatialIndex : true;\n        /**\n         * @private\n         * @type {RBush<import(\"../Feature.js\").default>}\n         */\n        _this.featuresRtree_ = useSpatialIndex ? new RBush() : null;\n        /**\n         * @private\n         * @type {RBush<{extent: import(\"../extent.js\").Extent}>}\n         */\n        _this.loadedExtentsRtree_ = new RBush();\n        /**\n         * @private\n         * @type {!Object<string, import(\"../Feature.js\").default>}\n         */\n        _this.nullGeometryFeatures_ = {};\n        /**\n         * A lookup of features by id (the return from feature.getId()).\n         * @private\n         * @type {!Object<string, import(\"../Feature.js\").default>}\n         */\n        _this.idIndex_ = {};\n        /**\n         * A lookup of features without id (keyed by getUid(feature)).\n         * @private\n         * @type {!Object<string, import(\"../Feature.js\").default>}\n         */\n        _this.undefIdIndex_ = {};\n        /**\n         * @private\n         * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n         */\n        _this.featureChangeKeys_ = {};\n        /**\n         * @private\n         * @type {Collection<import(\"../Feature.js\").default>}\n         */\n        _this.featuresCollection_ = null;\n        var collection, features;\n        if (Array.isArray(options.features)) {\n            features = options.features;\n        }\n        else if (options.features) {\n            collection = options.features;\n            features = collection.getArray();\n        }\n        if (!useSpatialIndex && collection === undefined) {\n            collection = new Collection(features);\n        }\n        if (features !== undefined) {\n            _this.addFeaturesInternal(features);\n        }\n        if (collection !== undefined) {\n            _this.bindFeaturesCollection_(collection);\n        }\n        return _this;\n    }\n    /**\n     * Add a single feature to the source.  If you want to add a batch of features\n     * at once, call {@link module:ol/source/Vector~VectorSource#addFeatures #addFeatures()}\n     * instead. A feature will not be added to the source if feature with\n     * the same id is already there. The reason for this behavior is to avoid\n     * feature duplication when using bbox or tile loading strategies.\n     * @param {import(\"../Feature.js\").default} feature Feature to add.\n     * @api\n     */\n    VectorSource.prototype.addFeature = function (feature) {\n        this.addFeatureInternal(feature);\n        this.changed();\n    };\n    /**\n     * Add a feature without firing a `change` event.\n     * @param {import(\"../Feature.js\").default} feature Feature.\n     * @protected\n     */\n    VectorSource.prototype.addFeatureInternal = function (feature) {\n        var featureKey = getUid(feature);\n        if (!this.addToIndex_(featureKey, feature)) {\n            return;\n        }\n        this.setupChangeEvents_(featureKey, feature);\n        var geometry = feature.getGeometry();\n        if (geometry) {\n            var extent = geometry.getExtent();\n            if (this.featuresRtree_) {\n                this.featuresRtree_.insert(extent, feature);\n            }\n        }\n        else {\n            this.nullGeometryFeatures_[featureKey] = feature;\n        }\n        this.dispatchEvent(new VectorSourceEvent(VectorEventType.ADDFEATURE, feature));\n    };\n    /**\n     * @param {string} featureKey Unique identifier for the feature.\n     * @param {import(\"../Feature.js\").default} feature The feature.\n     * @private\n     */\n    VectorSource.prototype.setupChangeEvents_ = function (featureKey, feature) {\n        this.featureChangeKeys_[featureKey] = [\n            listen(feature, EventType.CHANGE, this.handleFeatureChange_, this),\n            listen(feature, ObjectEventType.PROPERTYCHANGE, this.handleFeatureChange_, this)\n        ];\n    };\n    /**\n     * @param {string} featureKey Unique identifier for the feature.\n     * @param {import(\"../Feature.js\").default} feature The feature.\n     * @return {boolean} The feature is \"valid\", in the sense that it is also a\n     *     candidate for insertion into the Rtree.\n     * @private\n     */\n    VectorSource.prototype.addToIndex_ = function (featureKey, feature) {\n        var valid = true;\n        var id = feature.getId();\n        if (id !== undefined) {\n            if (!(id.toString() in this.idIndex_)) {\n                this.idIndex_[id.toString()] = feature;\n            }\n            else {\n                valid = false;\n            }\n        }\n        else {\n            assert(!(featureKey in this.undefIdIndex_), 30); // The passed `feature` was already added to the source\n            this.undefIdIndex_[featureKey] = feature;\n        }\n        return valid;\n    };\n    /**\n     * Add a batch of features to the source.\n     * @param {Array<import(\"../Feature.js\").default>} features Features to add.\n     * @api\n     */\n    VectorSource.prototype.addFeatures = function (features) {\n        this.addFeaturesInternal(features);\n        this.changed();\n    };\n    /**\n     * Add features without firing a `change` event.\n     * @param {Array<import(\"../Feature.js\").default>} features Features.\n     * @protected\n     */\n    VectorSource.prototype.addFeaturesInternal = function (features) {\n        var extents = [];\n        var newFeatures = [];\n        var geometryFeatures = [];\n        for (var i = 0, length_1 = features.length; i < length_1; i++) {\n            var feature = features[i];\n            var featureKey = getUid(feature);\n            if (this.addToIndex_(featureKey, feature)) {\n                newFeatures.push(feature);\n            }\n        }\n        for (var i = 0, length_2 = newFeatures.length; i < length_2; i++) {\n            var feature = newFeatures[i];\n            var featureKey = getUid(feature);\n            this.setupChangeEvents_(featureKey, feature);\n            var geometry = feature.getGeometry();\n            if (geometry) {\n                var extent = geometry.getExtent();\n                extents.push(extent);\n                geometryFeatures.push(feature);\n            }\n            else {\n                this.nullGeometryFeatures_[featureKey] = feature;\n            }\n        }\n        if (this.featuresRtree_) {\n            this.featuresRtree_.load(extents, geometryFeatures);\n        }\n        for (var i = 0, length_3 = newFeatures.length; i < length_3; i++) {\n            this.dispatchEvent(new VectorSourceEvent(VectorEventType.ADDFEATURE, newFeatures[i]));\n        }\n    };\n    /**\n     * @param {!Collection<import(\"../Feature.js\").default>} collection Collection.\n     * @private\n     */\n    VectorSource.prototype.bindFeaturesCollection_ = function (collection) {\n        var modifyingCollection = false;\n        listen(this, VectorEventType.ADDFEATURE, \n        /**\n         * @param {VectorSourceEvent} evt The vector source event\n         */\n        function (evt) {\n            if (!modifyingCollection) {\n                modifyingCollection = true;\n                collection.push(evt.feature);\n                modifyingCollection = false;\n            }\n        });\n        listen(this, VectorEventType.REMOVEFEATURE, \n        /**\n         * @param {VectorSourceEvent} evt The vector source event\n         */\n        function (evt) {\n            if (!modifyingCollection) {\n                modifyingCollection = true;\n                collection.remove(evt.feature);\n                modifyingCollection = false;\n            }\n        });\n        listen(collection, CollectionEventType.ADD, \n        /**\n         * @param {import(\"../Collection.js\").CollectionEvent} evt The collection event\n         */\n        function (evt) {\n            if (!modifyingCollection) {\n                modifyingCollection = true;\n                this.addFeature(/** @type {import(\"../Feature.js\").default} */ (evt.element));\n                modifyingCollection = false;\n            }\n        }, this);\n        listen(collection, CollectionEventType.REMOVE, \n        /**\n         * @param {import(\"../Collection.js\").CollectionEvent} evt The collection event\n         */\n        function (evt) {\n            if (!modifyingCollection) {\n                modifyingCollection = true;\n                this.removeFeature(/** @type {import(\"../Feature.js\").default} */ (evt.element));\n                modifyingCollection = false;\n            }\n        }, this);\n        this.featuresCollection_ = collection;\n    };\n    /**\n     * Remove all features from the source.\n     * @param {boolean=} opt_fast Skip dispatching of {@link module:ol/source/Vector.VectorSourceEvent#removefeature} events.\n     * @api\n     */\n    VectorSource.prototype.clear = function (opt_fast) {\n        if (opt_fast) {\n            for (var featureId in this.featureChangeKeys_) {\n                var keys = this.featureChangeKeys_[featureId];\n                keys.forEach(unlistenByKey);\n            }\n            if (!this.featuresCollection_) {\n                this.featureChangeKeys_ = {};\n                this.idIndex_ = {};\n                this.undefIdIndex_ = {};\n            }\n        }\n        else {\n            if (this.featuresRtree_) {\n                this.featuresRtree_.forEach(this.removeFeatureInternal.bind(this));\n                for (var id in this.nullGeometryFeatures_) {\n                    this.removeFeatureInternal(this.nullGeometryFeatures_[id]);\n                }\n            }\n        }\n        if (this.featuresCollection_) {\n            this.featuresCollection_.clear();\n        }\n        if (this.featuresRtree_) {\n            this.featuresRtree_.clear();\n        }\n        this.nullGeometryFeatures_ = {};\n        var clearEvent = new VectorSourceEvent(VectorEventType.CLEAR);\n        this.dispatchEvent(clearEvent);\n        this.changed();\n    };\n    /**\n     * Iterate through all features on the source, calling the provided callback\n     * with each one.  If the callback returns any \"truthy\" value, iteration will\n     * stop and the function will return the same value.\n     * Note: this function only iterate through the feature that have a defined geometry.\n     *\n     * @param {function(import(\"../Feature.js\").default): T} callback Called with each feature\n     *     on the source.  Return a truthy value to stop iteration.\n     * @return {T|undefined} The return value from the last call to the callback.\n     * @template T\n     * @api\n     */\n    VectorSource.prototype.forEachFeature = function (callback) {\n        if (this.featuresRtree_) {\n            return this.featuresRtree_.forEach(callback);\n        }\n        else if (this.featuresCollection_) {\n            this.featuresCollection_.forEach(callback);\n        }\n    };\n    /**\n     * Iterate through all features whose geometries contain the provided\n     * coordinate, calling the callback with each feature.  If the callback returns\n     * a \"truthy\" value, iteration will stop and the function will return the same\n     * value.\n     *\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {function(import(\"../Feature.js\").default): T} callback Called with each feature\n     *     whose goemetry contains the provided coordinate.\n     * @return {T|undefined} The return value from the last call to the callback.\n     * @template T\n     */\n    VectorSource.prototype.forEachFeatureAtCoordinateDirect = function (coordinate, callback) {\n        var extent = [coordinate[0], coordinate[1], coordinate[0], coordinate[1]];\n        return this.forEachFeatureInExtent(extent, function (feature) {\n            var geometry = feature.getGeometry();\n            if (geometry.intersectsCoordinate(coordinate)) {\n                return callback(feature);\n            }\n            else {\n                return undefined;\n            }\n        });\n    };\n    /**\n     * Iterate through all features whose bounding box intersects the provided\n     * extent (note that the feature's geometry may not intersect the extent),\n     * calling the callback with each feature.  If the callback returns a \"truthy\"\n     * value, iteration will stop and the function will return the same value.\n     *\n     * If you are interested in features whose geometry intersects an extent, call\n     * the {@link module:ol/source/Vector~VectorSource#forEachFeatureIntersectingExtent #forEachFeatureIntersectingExtent()} method instead.\n     *\n     * When `useSpatialIndex` is set to false, this method will loop through all\n     * features, equivalent to {@link module:ol/source/Vector~VectorSource#forEachFeature #forEachFeature()}.\n     *\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {function(import(\"../Feature.js\").default): T} callback Called with each feature\n     *     whose bounding box intersects the provided extent.\n     * @return {T|undefined} The return value from the last call to the callback.\n     * @template T\n     * @api\n     */\n    VectorSource.prototype.forEachFeatureInExtent = function (extent, callback) {\n        if (this.featuresRtree_) {\n            return this.featuresRtree_.forEachInExtent(extent, callback);\n        }\n        else if (this.featuresCollection_) {\n            this.featuresCollection_.forEach(callback);\n        }\n    };\n    /**\n     * Iterate through all features whose geometry intersects the provided extent,\n     * calling the callback with each feature.  If the callback returns a \"truthy\"\n     * value, iteration will stop and the function will return the same value.\n     *\n     * If you only want to test for bounding box intersection, call the\n     * {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent #forEachFeatureInExtent()} method instead.\n     *\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {function(import(\"../Feature.js\").default): T} callback Called with each feature\n     *     whose geometry intersects the provided extent.\n     * @return {T|undefined} The return value from the last call to the callback.\n     * @template T\n     * @api\n     */\n    VectorSource.prototype.forEachFeatureIntersectingExtent = function (extent, callback) {\n        return this.forEachFeatureInExtent(extent, \n        /**\n         * @param {import(\"../Feature.js\").default} feature Feature.\n         * @return {T|undefined} The return value from the last call to the callback.\n         */\n        function (feature) {\n            var geometry = feature.getGeometry();\n            if (geometry.intersectsExtent(extent)) {\n                var result = callback(feature);\n                if (result) {\n                    return result;\n                }\n            }\n        });\n    };\n    /**\n     * Get the features collection associated with this source. Will be `null`\n     * unless the source was configured with `useSpatialIndex` set to `false`, or\n     * with an {@link module:ol/Collection} as `features`.\n     * @return {Collection<import(\"../Feature.js\").default>} The collection of features.\n     * @api\n     */\n    VectorSource.prototype.getFeaturesCollection = function () {\n        return this.featuresCollection_;\n    };\n    /**\n     * Get all features on the source in random order.\n     * @return {Array<import(\"../Feature.js\").default>} Features.\n     * @api\n     */\n    VectorSource.prototype.getFeatures = function () {\n        var features;\n        if (this.featuresCollection_) {\n            features = this.featuresCollection_.getArray();\n        }\n        else if (this.featuresRtree_) {\n            features = this.featuresRtree_.getAll();\n            if (!isEmpty(this.nullGeometryFeatures_)) {\n                extend(features, getValues(this.nullGeometryFeatures_));\n            }\n        }\n        return (\n        /** @type {Array<import(\"../Feature.js\").default>} */ (features));\n    };\n    /**\n     * Get all features whose geometry intersects the provided coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {Array<import(\"../Feature.js\").default>} Features.\n     * @api\n     */\n    VectorSource.prototype.getFeaturesAtCoordinate = function (coordinate) {\n        var features = [];\n        this.forEachFeatureAtCoordinateDirect(coordinate, function (feature) {\n            features.push(feature);\n        });\n        return features;\n    };\n    /**\n     * Get all features in the provided extent.  Note that this returns an array of\n     * all features intersecting the given extent in random order (so it may include\n     * features whose geometries do not intersect the extent).\n     *\n     * This method is not available when the source is configured with\n     * `useSpatialIndex` set to `false`.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @return {Array<import(\"../Feature.js\").default>} Features.\n     * @api\n     */\n    VectorSource.prototype.getFeaturesInExtent = function (extent) {\n        return this.featuresRtree_.getInExtent(extent);\n    };\n    /**\n     * Get the closest feature to the provided coordinate.\n     *\n     * This method is not available when the source is configured with\n     * `useSpatialIndex` set to `false`.\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {function(import(\"../Feature.js\").default):boolean=} opt_filter Feature filter function.\n     *     The filter function will receive one argument, the {@link module:ol/Feature feature}\n     *     and it should return a boolean value. By default, no filtering is made.\n     * @return {import(\"../Feature.js\").default} Closest feature.\n     * @api\n     */\n    VectorSource.prototype.getClosestFeatureToCoordinate = function (coordinate, opt_filter) {\n        // Find the closest feature using branch and bound.  We start searching an\n        // infinite extent, and find the distance from the first feature found.  This\n        // becomes the closest feature.  We then compute a smaller extent which any\n        // closer feature must intersect.  We continue searching with this smaller\n        // extent, trying to find a closer feature.  Every time we find a closer\n        // feature, we update the extent being searched so that any even closer\n        // feature must intersect it.  We continue until we run out of features.\n        var x = coordinate[0];\n        var y = coordinate[1];\n        var closestFeature = null;\n        var closestPoint = [NaN, NaN];\n        var minSquaredDistance = Infinity;\n        var extent = [-Infinity, -Infinity, Infinity, Infinity];\n        var filter = opt_filter ? opt_filter : TRUE;\n        this.featuresRtree_.forEachInExtent(extent, \n        /**\n         * @param {import(\"../Feature.js\").default} feature Feature.\n         */\n        function (feature) {\n            if (filter(feature)) {\n                var geometry = feature.getGeometry();\n                var previousMinSquaredDistance = minSquaredDistance;\n                minSquaredDistance = geometry.closestPointXY(x, y, closestPoint, minSquaredDistance);\n                if (minSquaredDistance < previousMinSquaredDistance) {\n                    closestFeature = feature;\n                    // This is sneaky.  Reduce the extent that it is currently being\n                    // searched while the R-Tree traversal using this same extent object\n                    // is still in progress.  This is safe because the new extent is\n                    // strictly contained by the old extent.\n                    var minDistance = Math.sqrt(minSquaredDistance);\n                    extent[0] = x - minDistance;\n                    extent[1] = y - minDistance;\n                    extent[2] = x + minDistance;\n                    extent[3] = y + minDistance;\n                }\n            }\n        });\n        return closestFeature;\n    };\n    /**\n     * Get the extent of the features currently in the source.\n     *\n     * This method is not available when the source is configured with\n     * `useSpatialIndex` set to `false`.\n     * @param {import(\"../extent.js\").Extent=} opt_extent Destination extent. If provided, no new extent\n     *     will be created. Instead, that extent's coordinates will be overwritten.\n     * @return {import(\"../extent.js\").Extent} Extent.\n     * @api\n     */\n    VectorSource.prototype.getExtent = function (opt_extent) {\n        return this.featuresRtree_.getExtent(opt_extent);\n    };\n    /**\n     * Get a feature by its identifier (the value returned by feature.getId()).\n     * Note that the index treats string and numeric identifiers as the same.  So\n     * `source.getFeatureById(2)` will return a feature with id `'2'` or `2`.\n     *\n     * @param {string|number} id Feature identifier.\n     * @return {import(\"../Feature.js\").default} The feature (or `null` if not found).\n     * @api\n     */\n    VectorSource.prototype.getFeatureById = function (id) {\n        var feature = this.idIndex_[id.toString()];\n        return feature !== undefined ? feature : null;\n    };\n    /**\n     * Get the format associated with this source.\n     *\n     * @return {import(\"../format/Feature.js\").default|undefined} The feature format.\n     * @api\n     */\n    VectorSource.prototype.getFormat = function () {\n        return this.format_;\n    };\n    /**\n     * @return {boolean} The source can have overlapping geometries.\n     */\n    VectorSource.prototype.getOverlaps = function () {\n        return this.overlaps_;\n    };\n    /**\n     * Get the url associated with this source.\n     *\n     * @return {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined} The url.\n     * @api\n     */\n    VectorSource.prototype.getUrl = function () {\n        return this.url_;\n    };\n    /**\n     * @param {Event} event Event.\n     * @private\n     */\n    VectorSource.prototype.handleFeatureChange_ = function (event) {\n        var feature = /** @type {import(\"../Feature.js\").default} */ (event.target);\n        var featureKey = getUid(feature);\n        var geometry = feature.getGeometry();\n        if (!geometry) {\n            if (!(featureKey in this.nullGeometryFeatures_)) {\n                if (this.featuresRtree_) {\n                    this.featuresRtree_.remove(feature);\n                }\n                this.nullGeometryFeatures_[featureKey] = feature;\n            }\n        }\n        else {\n            var extent = geometry.getExtent();\n            if (featureKey in this.nullGeometryFeatures_) {\n                delete this.nullGeometryFeatures_[featureKey];\n                if (this.featuresRtree_) {\n                    this.featuresRtree_.insert(extent, feature);\n                }\n            }\n            else {\n                if (this.featuresRtree_) {\n                    this.featuresRtree_.update(extent, feature);\n                }\n            }\n        }\n        var id = feature.getId();\n        if (id !== undefined) {\n            var sid = id.toString();\n            if (featureKey in this.undefIdIndex_) {\n                delete this.undefIdIndex_[featureKey];\n                this.idIndex_[sid] = feature;\n            }\n            else {\n                if (this.idIndex_[sid] !== feature) {\n                    this.removeFromIdIndex_(feature);\n                    this.idIndex_[sid] = feature;\n                }\n            }\n        }\n        else {\n            if (!(featureKey in this.undefIdIndex_)) {\n                this.removeFromIdIndex_(feature);\n                this.undefIdIndex_[featureKey] = feature;\n            }\n        }\n        this.changed();\n        this.dispatchEvent(new VectorSourceEvent(VectorEventType.CHANGEFEATURE, feature));\n    };\n    /**\n     * Returns true if the feature is contained within the source.\n     * @param {import(\"../Feature.js\").default} feature Feature.\n     * @return {boolean} Has feature.\n     * @api\n     */\n    VectorSource.prototype.hasFeature = function (feature) {\n        var id = feature.getId();\n        if (id !== undefined) {\n            return id in this.idIndex_;\n        }\n        else {\n            return getUid(feature) in this.undefIdIndex_;\n        }\n    };\n    /**\n     * @return {boolean} Is empty.\n     */\n    VectorSource.prototype.isEmpty = function () {\n        return this.featuresRtree_.isEmpty() && isEmpty(this.nullGeometryFeatures_);\n    };\n    /**\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     */\n    VectorSource.prototype.loadFeatures = function (extent, resolution, projection) {\n        var loadedExtentsRtree = this.loadedExtentsRtree_;\n        var extentsToLoad = this.strategy_(extent, resolution);\n        this.loading = false;\n        var _loop_1 = function (i, ii) {\n            var extentToLoad = extentsToLoad[i];\n            var alreadyLoaded = loadedExtentsRtree.forEachInExtent(extentToLoad, \n            /**\n             * @param {{extent: import(\"../extent.js\").Extent}} object Object.\n             * @return {boolean} Contains.\n             */\n            function (object) {\n                return containsExtent(object.extent, extentToLoad);\n            });\n            if (!alreadyLoaded) {\n                this_1.loader_.call(this_1, extentToLoad, resolution, projection);\n                loadedExtentsRtree.insert(extentToLoad, { extent: extentToLoad.slice() });\n                this_1.loading = this_1.loader_ !== VOID;\n            }\n        };\n        var this_1 = this;\n        for (var i = 0, ii = extentsToLoad.length; i < ii; ++i) {\n            _loop_1(i, ii);\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    VectorSource.prototype.refresh = function () {\n        this.clear(true);\n        this.loadedExtentsRtree_.clear();\n        _super.prototype.refresh.call(this);\n    };\n    /**\n     * Remove an extent from the list of loaded extents.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @api\n     */\n    VectorSource.prototype.removeLoadedExtent = function (extent) {\n        var loadedExtentsRtree = this.loadedExtentsRtree_;\n        var obj;\n        loadedExtentsRtree.forEachInExtent(extent, function (object) {\n            if (equals(object.extent, extent)) {\n                obj = object;\n                return true;\n            }\n        });\n        if (obj) {\n            loadedExtentsRtree.remove(obj);\n        }\n    };\n    /**\n     * Remove a single feature from the source.  If you want to remove all features\n     * at once, use the {@link module:ol/source/Vector~VectorSource#clear #clear()} method\n     * instead.\n     * @param {import(\"../Feature.js\").default} feature Feature to remove.\n     * @api\n     */\n    VectorSource.prototype.removeFeature = function (feature) {\n        var featureKey = getUid(feature);\n        if (featureKey in this.nullGeometryFeatures_) {\n            delete this.nullGeometryFeatures_[featureKey];\n        }\n        else {\n            if (this.featuresRtree_) {\n                this.featuresRtree_.remove(feature);\n            }\n        }\n        this.removeFeatureInternal(feature);\n        this.changed();\n    };\n    /**\n     * Remove feature without firing a `change` event.\n     * @param {import(\"../Feature.js\").default} feature Feature.\n     * @protected\n     */\n    VectorSource.prototype.removeFeatureInternal = function (feature) {\n        var featureKey = getUid(feature);\n        this.featureChangeKeys_[featureKey].forEach(unlistenByKey);\n        delete this.featureChangeKeys_[featureKey];\n        var id = feature.getId();\n        if (id !== undefined) {\n            delete this.idIndex_[id.toString()];\n        }\n        else {\n            delete this.undefIdIndex_[featureKey];\n        }\n        this.dispatchEvent(new VectorSourceEvent(VectorEventType.REMOVEFEATURE, feature));\n    };\n    /**\n     * Remove a feature from the id index.  Called internally when the feature id\n     * may have changed.\n     * @param {import(\"../Feature.js\").default} feature The feature.\n     * @return {boolean} Removed the feature from the index.\n     * @private\n     */\n    VectorSource.prototype.removeFromIdIndex_ = function (feature) {\n        var removed = false;\n        for (var id in this.idIndex_) {\n            if (this.idIndex_[id] === feature) {\n                delete this.idIndex_[id];\n                removed = true;\n                break;\n            }\n        }\n        return removed;\n    };\n    /**\n     * Set the new loader of the source. The next render cycle will use the\n     * new loader.\n     * @param {import(\"../featureloader.js\").FeatureLoader} loader The loader to set.\n     * @api\n     */\n    VectorSource.prototype.setLoader = function (loader) {\n        this.loader_ = loader;\n    };\n    /**\n     * Points the source to a new url. The next render cycle will use the new url.\n     * @param {string|import(\"../featureloader.js\").FeatureUrlFunction} url Url.\n     * @api\n     */\n    VectorSource.prototype.setUrl = function (url) {\n        assert(this.format_, 7); // `format` must be set when `url` is set\n        this.setLoader(xhr(url, this.format_));\n    };\n    return VectorSource;\n}(Source));\nexport default VectorSource;\n//# sourceMappingURL=Vector.js.map","/**\n * @module ol/source/Cluster\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { getUid } from '../util.js';\nimport { assert } from '../asserts.js';\nimport Feature from '../Feature.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport { scale as scaleCoordinate, add as addCoordinate } from '../coordinate.js';\nimport { listen } from '../events.js';\nimport EventType from '../events/EventType.js';\nimport { buffer, createEmpty, createOrUpdateFromCoordinate } from '../extent.js';\nimport Point from '../geom/Point.js';\nimport VectorSource from './Vector.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [distance=20] Minimum distance in pixels between clusters.\n * @property {function(Feature):Point} [geometryFunction]\n * Function that takes an {@link module:ol/Feature} as argument and returns an\n * {@link module:ol/geom/Point} as cluster calculation point for the feature. When a\n * feature should not be considered for clustering, the function should return\n * `null`. The default, which works when the underyling source contains point\n * features only, is\n * ```js\n * function(feature) {\n *   return feature.getGeometry();\n * }\n * ```\n * See {@link module:ol/geom/Polygon~Polygon#getInteriorPoint} for a way to get a cluster\n * calculation point for polygons.\n * @property {VectorSource} source Source.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n */\n/**\n * @classdesc\n * Layer source to cluster vector data. Works out of the box with point\n * geometries. For other geometry types, or if not all geometries should be\n * considered for clustering, a custom `geometryFunction` can be defined.\n * @api\n */\nvar Cluster = /** @class */ (function (_super) {\n    __extends(Cluster, _super);\n    /**\n     * @param {Options} options Cluster options.\n     */\n    function Cluster(options) {\n        var _this = _super.call(this, {\n            attributions: options.attributions,\n            wrapX: options.wrapX\n        }) || this;\n        /**\n         * @type {number|undefined}\n         * @protected\n         */\n        _this.resolution = undefined;\n        /**\n         * @type {number}\n         * @protected\n         */\n        _this.distance = options.distance !== undefined ? options.distance : 20;\n        /**\n         * @type {Array<Feature>}\n         * @protected\n         */\n        _this.features = [];\n        /**\n         * @param {Feature} feature Feature.\n         * @return {Point} Cluster calculation point.\n         * @protected\n         */\n        _this.geometryFunction = options.geometryFunction || function (feature) {\n            var geometry = /** @type {Point} */ (feature.getGeometry());\n            assert(geometry.getType() == GeometryType.POINT, 10); // The default `geometryFunction` can only handle `Point` geometries\n            return geometry;\n        };\n        /**\n         * @type {VectorSource}\n         * @protected\n         */\n        _this.source = options.source;\n        listen(_this.source, EventType.CHANGE, _this.refresh, _this);\n        return _this;\n    }\n    /**\n     * Get the distance in pixels between clusters.\n     * @return {number} Distance.\n     * @api\n     */\n    Cluster.prototype.getDistance = function () {\n        return this.distance;\n    };\n    /**\n     * Get a reference to the wrapped source.\n     * @return {VectorSource} Source.\n     * @api\n     */\n    Cluster.prototype.getSource = function () {\n        return this.source;\n    };\n    /**\n     * @inheritDoc\n     */\n    Cluster.prototype.loadFeatures = function (extent, resolution, projection) {\n        this.source.loadFeatures(extent, resolution, projection);\n        if (resolution !== this.resolution) {\n            this.clear();\n            this.resolution = resolution;\n            this.cluster();\n            this.addFeatures(this.features);\n        }\n    };\n    /**\n     * Set the distance in pixels between clusters.\n     * @param {number} distance The distance in pixels.\n     * @api\n     */\n    Cluster.prototype.setDistance = function (distance) {\n        this.distance = distance;\n        this.refresh();\n    };\n    /**\n     * handle the source changing\n     * @override\n     */\n    Cluster.prototype.refresh = function () {\n        this.clear();\n        this.cluster();\n        this.addFeatures(this.features);\n    };\n    /**\n     * @protected\n     */\n    Cluster.prototype.cluster = function () {\n        if (this.resolution === undefined) {\n            return;\n        }\n        this.features.length = 0;\n        var extent = createEmpty();\n        var mapDistance = this.distance * this.resolution;\n        var features = this.source.getFeatures();\n        /**\n         * @type {!Object<string, boolean>}\n         */\n        var clustered = {};\n        for (var i = 0, ii = features.length; i < ii; i++) {\n            var feature = features[i];\n            if (!(getUid(feature) in clustered)) {\n                var geometry = this.geometryFunction(feature);\n                if (geometry) {\n                    var coordinates = geometry.getCoordinates();\n                    createOrUpdateFromCoordinate(coordinates, extent);\n                    buffer(extent, mapDistance, extent);\n                    var neighbors = this.source.getFeaturesInExtent(extent);\n                    neighbors = neighbors.filter(function (neighbor) {\n                        var uid = getUid(neighbor);\n                        if (!(uid in clustered)) {\n                            clustered[uid] = true;\n                            return true;\n                        }\n                        else {\n                            return false;\n                        }\n                    });\n                    this.features.push(this.createCluster(neighbors));\n                }\n            }\n        }\n    };\n    /**\n     * @param {Array<Feature>} features Features\n     * @return {Feature} The cluster feature.\n     * @protected\n     */\n    Cluster.prototype.createCluster = function (features) {\n        var centroid = [0, 0];\n        for (var i = features.length - 1; i >= 0; --i) {\n            var geometry = this.geometryFunction(features[i]);\n            if (geometry) {\n                addCoordinate(centroid, geometry.getCoordinates());\n            }\n            else {\n                features.splice(i, 1);\n            }\n        }\n        scaleCoordinate(centroid, 1 / features.length);\n        var cluster = new Feature(new Point(centroid));\n        cluster.set('features', features);\n        return cluster;\n    };\n    return Cluster;\n}(VectorSource));\nexport default Cluster;\n//# sourceMappingURL=Cluster.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/source/Zoomify\n */\nimport { DEFAULT_TILE_SIZE } from '../tilegrid/common.js';\nimport ImageTile from '../ImageTile.js';\nimport TileState from '../TileState.js';\nimport { expandUrl, createFromTileUrlFunctions } from '../tileurlfunction.js';\nimport { assert } from '../asserts.js';\nimport { createCanvasContext2D } from '../dom.js';\nimport { getTopLeft } from '../extent.js';\nimport { toSize } from '../size.js';\nimport TileImage from './TileImage.js';\nimport TileGrid from '../tilegrid/TileGrid.js';\n/**\n * @enum {string}\n */\nvar TierSizeCalculation = {\n    DEFAULT: 'default',\n    TRUNCATED: 'truncated'\n};\nvar CustomTile = /** @class */ (function (_super) {\n    __extends(CustomTile, _super);\n    /**\n     * @param {import(\"../tilegrid/TileGrid.js\").default} tileGrid TileGrid that the tile belongs to.\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @param {TileState} state State.\n     * @param {string} src Image source URI.\n     * @param {?string} crossOrigin Cross origin.\n     * @param {import(\"../Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n     * @param {import(\"../Tile.js\").Options=} opt_options Tile options.\n     */\n    function CustomTile(tileGrid, tileCoord, state, src, crossOrigin, tileLoadFunction, opt_options) {\n        var _this = _super.call(this, tileCoord, state, src, crossOrigin, tileLoadFunction, opt_options) || this;\n        /**\n         * @private\n         * @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement}\n         */\n        _this.zoomifyImage_ = null;\n        /**\n         * @private\n         * @type {import(\"../size.js\").Size}\n         */\n        _this.tileSize_ = toSize(tileGrid.getTileSize(tileCoord[0]));\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    CustomTile.prototype.getImage = function () {\n        if (this.zoomifyImage_) {\n            return this.zoomifyImage_;\n        }\n        var image = _super.prototype.getImage.call(this);\n        if (this.state == TileState.LOADED) {\n            var tileSize = this.tileSize_;\n            if (image.width == tileSize[0] && image.height == tileSize[1]) {\n                this.zoomifyImage_ = image;\n                return image;\n            }\n            else {\n                var context = createCanvasContext2D(tileSize[0], tileSize[1]);\n                context.drawImage(image, 0, 0);\n                this.zoomifyImage_ = context.canvas;\n                return context.canvas;\n            }\n        }\n        else {\n            return image;\n        }\n    };\n    return CustomTile;\n}(ImageTile));\nexport { CustomTile };\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize] Tile cache size. The default depends on the screen size. Will increase if too small.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value  you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {number} [tilePixelRatio] The pixel ratio used by the tile service. For example, if the tile service advertizes 256px by 256px tiles but actually sends 512px by 512px images (for retina/hidpi devices) then `tilePixelRatio` should be set to `2`\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {string} [url] URL template or base URL of the Zoomify service.\n * A base URL is the fixed part\n * of the URL, excluding the tile group, z, x, and y folder structure, e.g.\n * `http://my.zoomify.info/IMAGE.TIF/`. A URL template must include\n * `{TileGroup}`, `{x}`, `{y}`, and `{z}` placeholders, e.g.\n * `http://my.zoomify.info/IMAGE.TIF/{TileGroup}/{z}-{x}-{y}.jpg`.\n * Internet Imaging Protocol (IIP) with JTL extension can be also used with\n * `{tileIndex}` and `{z}` placeholders, e.g.\n * `http://my.zoomify.info?FIF=IMAGE.TIF&JTL={z},{tileIndex}`.\n * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\n * used instead of defining each one separately in the `urls` option.\n * @property {string} [tierSizeCalculation] Tier size calculation method: `default` or `truncated`.\n * @property {import(\"../size.js\").Size} [size] Size of the image.\n * @property {import(\"../extent.js\").Extent} [extent] Extent for the TileGrid that is created.\n * Default sets the TileGrid in the\n * fourth quadrant, meaning extent is `[0, -height, width, 0]`. To change the\n * extent to the first quadrant (the default for OpenLayers 2) set the extent\n * as `[0, 0, width, height]`.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {number} [tileSize=256] Tile size. Same tile size is used for all zoom levels.\n * @property {number} [zDirection] Indicate which resolution should be used\n * by a renderer if the views resolution does not match any resolution of the tile source.\n * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n * will be used. If -1, the nearest higher resolution will be used.\n */\n/**\n * @classdesc\n * Layer source for tile data in Zoomify format (both Zoomify and Internet\n * Imaging Protocol are supported).\n * @api\n */\nvar Zoomify = /** @class */ (function (_super) {\n    __extends(Zoomify, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function Zoomify(opt_options) {\n        var _this = this;\n        var options = opt_options || {};\n        var size = options.size;\n        var tierSizeCalculation = options.tierSizeCalculation !== undefined ?\n            options.tierSizeCalculation :\n            TierSizeCalculation.DEFAULT;\n        var imageWidth = size[0];\n        var imageHeight = size[1];\n        var extent = options.extent || [0, -size[1], size[0], 0];\n        var tierSizeInTiles = [];\n        var tileSize = options.tileSize || DEFAULT_TILE_SIZE;\n        var tileSizeForTierSizeCalculation = tileSize;\n        switch (tierSizeCalculation) {\n            case TierSizeCalculation.DEFAULT:\n                while (imageWidth > tileSizeForTierSizeCalculation || imageHeight > tileSizeForTierSizeCalculation) {\n                    tierSizeInTiles.push([\n                        Math.ceil(imageWidth / tileSizeForTierSizeCalculation),\n                        Math.ceil(imageHeight / tileSizeForTierSizeCalculation)\n                    ]);\n                    tileSizeForTierSizeCalculation += tileSizeForTierSizeCalculation;\n                }\n                break;\n            case TierSizeCalculation.TRUNCATED:\n                var width = imageWidth;\n                var height = imageHeight;\n                while (width > tileSizeForTierSizeCalculation || height > tileSizeForTierSizeCalculation) {\n                    tierSizeInTiles.push([\n                        Math.ceil(width / tileSizeForTierSizeCalculation),\n                        Math.ceil(height / tileSizeForTierSizeCalculation)\n                    ]);\n                    width >>= 1;\n                    height >>= 1;\n                }\n                break;\n            default:\n                assert(false, 53); // Unknown `tierSizeCalculation` configured\n                break;\n        }\n        tierSizeInTiles.push([1, 1]);\n        tierSizeInTiles.reverse();\n        var resolutions = [1];\n        var tileCountUpToTier = [0];\n        for (var i = 1, ii = tierSizeInTiles.length; i < ii; i++) {\n            resolutions.push(1 << i);\n            tileCountUpToTier.push(tierSizeInTiles[i - 1][0] * tierSizeInTiles[i - 1][1] +\n                tileCountUpToTier[i - 1]);\n        }\n        resolutions.reverse();\n        var tileGrid = new TileGrid({\n            tileSize: tileSize,\n            extent: extent,\n            origin: getTopLeft(extent),\n            resolutions: resolutions\n        });\n        var url = options.url;\n        if (url && url.indexOf('{TileGroup}') == -1 && url.indexOf('{tileIndex}') == -1) {\n            url += '{TileGroup}/{z}-{x}-{y}.jpg';\n        }\n        var urls = expandUrl(url);\n        /**\n         * @param {string} template Template.\n         * @return {import(\"../Tile.js\").UrlFunction} Tile URL function.\n         */\n        function createFromTemplate(template) {\n            return (\n            /**\n             * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n             * @param {number} pixelRatio Pixel ratio.\n             * @param {import(\"../proj/Projection.js\").default} projection Projection.\n             * @return {string|undefined} Tile URL.\n             */\n            function (tileCoord, pixelRatio, projection) {\n                if (!tileCoord) {\n                    return undefined;\n                }\n                else {\n                    var tileCoordZ = tileCoord[0];\n                    var tileCoordX = tileCoord[1];\n                    var tileCoordY = tileCoord[2];\n                    var tileIndex = tileCoordX +\n                        tileCoordY * tierSizeInTiles[tileCoordZ][0];\n                    var tileSize_1 = tileGrid.getTileSize(tileCoordZ);\n                    var tileWidth = Array.isArray(tileSize_1) ? tileSize_1[0] : tileSize_1;\n                    var tileGroup = ((tileIndex + tileCountUpToTier[tileCoordZ]) / tileWidth) | 0;\n                    var localContext_1 = {\n                        'z': tileCoordZ,\n                        'x': tileCoordX,\n                        'y': tileCoordY,\n                        'tileIndex': tileIndex,\n                        'TileGroup': 'TileGroup' + tileGroup\n                    };\n                    return template.replace(/\\{(\\w+?)\\}/g, function (m, p) {\n                        return localContext_1[p];\n                    });\n                }\n            });\n        }\n        var tileUrlFunction = createFromTileUrlFunctions(urls.map(createFromTemplate));\n        var ZoomifyTileClass = CustomTile.bind(null, tileGrid);\n        _this = _super.call(this, {\n            attributions: options.attributions,\n            cacheSize: options.cacheSize,\n            crossOrigin: options.crossOrigin,\n            projection: options.projection,\n            tilePixelRatio: options.tilePixelRatio,\n            reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n            tileClass: ZoomifyTileClass,\n            tileGrid: tileGrid,\n            tileUrlFunction: tileUrlFunction,\n            transition: options.transition\n        }) || this;\n        /**\n         * @inheritDoc\n         */\n        _this.zDirection = options.zDirection;\n        return _this;\n    }\n    return Zoomify;\n}(TileImage));\nexport default Zoomify;\n//# sourceMappingURL=Zoomify.js.map","/**\n * @module ol/format/IIIFInfo\n */\nimport { assert } from '../asserts.js';\n/**\n * @typedef {Object} PreferredOptions\n * @property {string} [format] Preferred image format. Will be used if the image information\n * indicates support for that format.\n * @property {string} [quality] IIIF image qualitiy.  Will be used if the image information\n * indicates support for that quality.\n */\n/**\n * @typedef {Object} SupportedFeatures\n * @property {Array<string>} [supports] Supported IIIF image size and region\n * calculation features.\n * @property {Array<string>} [formats] Supported image formats.\n * @property {Array<string>} [qualities] Supported IIIF image qualities.\n */\n/**\n * @typedef {Object} ImageInformationResponse1_0\n * @property {string} identifier\n * @property {number} width\n * @property {number} height\n * @property {Array<number>} [scale_factors] Resolution scaling factors.\n * @property {number} [tile_width]\n * @property {number} [tile_height]\n * @property {Array<string>} [formats] Supported image formats.\n * @property {string} [profile] Compliance level URI.\n */\n/**\n * @typedef {Object} ImageInformationResponse1_1\n * @property {string} \"@id\" The base URI of the image service.\n * @property {string} \"@context\" JSON-LD context URI.\n * @property {number} width Full image width.\n * @property {number} height Full image height.\n * @property {Array<number>} [scale_factors] Resolution scaling factors.\n * @property {number} [tile_width]\n * @property {number} [tile_height]\n * @property {Array<string>} [formats] Supported image formats.\n * @property {string} [profile] Compliance level URI.\n */\n/**\n * @typedef {Object} TileInfo\n * @property {Array<number>} scaleFactors Supported resolution scaling factors.\n * @property {number} width Tile width in pixels.\n * @property {number} [height] Tile height in pixels. Same as tile width if height is\n * not given.\n */\n/**\n * @typedef {Object} IiifProfile\n * @property {Array<string>} [formats] Supported image formats for the image service.\n * @property {Array<string>} [qualities] Supported IIIF image qualities.\n * @property {Array<string>} [supports] Supported features.\n * @property {number} [maxArea] Maximum area (pixels) available for this image service.\n * @property {number} [maxHeight] Maximum height.\n * @property {number} [maxWidth] Maximum width.\n */\n/**\n * @typedef {Object} ImageInformationResponse2\n * @property {string} \"@id\" The base URI of the image service.\n * @property {string} \"@context\" JSON-LD context IRI\n * @property {number} width Full image width.\n * @property {number} height Full image height.\n * @property {Array<string|IiifProfile>} profile Additional informations about the image\n * service's capabilities.\n * @property {Array<Object<string, number>>} [sizes] Supported full image dimensions.\n * @property {Array<TileInfo>} [tiles] Supported tile sizes and resolution scaling factors.\n */\n/**\n * @typedef {Object} ImageInformationResponse3\n * @property {string} id The base URI of the image service.\n * @property {string} \"@context\" JSON-LD context IRI\n * @property {number} width Full image width.\n * @property {number} height Full image height.\n * @property {string} profile Compliance level, one of 'level0', 'level1' or 'level2'\n * @property {Array<Object<string, number>>} [sizes] Supported full image dimensions.\n * @property {Array<TileInfo>} [tiles] Supported tile sizes and resolution scaling factors.\n * @property {number} [maxArea] Maximum area (pixels) available for this image service.\n * @property {number} [maxHeight] Maximum height.\n * @property {number} [maxWidth] Maximum width.\n * @property {Array<string>} [extraQualities] IIIF image qualities supported by the\n * image service additional to the ones indicated by the compliance level.\n * @property {Array<string>} [extraFormats] Image formats supported by the\n * image service additional to the ones indicated by the compliance level.\n * @property {Array<string>} [extraFeatures] Additional supported features whose support\n * is not indicated by the compliance level.\n */\n/**\n* @enum {string}\n*/\nexport var Versions = {\n    VERSION1: 'version1',\n    VERSION2: 'version2',\n    VERSION3: 'version3'\n};\n/**\n * Supported image formats, qualities and supported region / size calculation features\n * for different image API versions and compliance levels\n * @const\n * @type {Object<string, Object<string, SupportedFeatures>>}\n */\nvar IIIF_PROFILE_VALUES = {};\nIIIF_PROFILE_VALUES[Versions.VERSION1] = {\n    'level0': {\n        supports: [],\n        formats: [],\n        qualities: ['native']\n    },\n    'level1': {\n        supports: ['regionByPx', 'sizeByW', 'sizeByH', 'sizeByPct'],\n        formats: ['jpg'],\n        qualities: ['native']\n    },\n    'level2': {\n        supports: ['regionByPx', 'regionByPct', 'sizeByW', 'sizeByH', 'sizeByPct',\n            'sizeByConfinedWh', 'sizeByWh'],\n        formats: ['jpg', 'png'],\n        qualities: ['native', 'color', 'grey', 'bitonal']\n    }\n};\nIIIF_PROFILE_VALUES[Versions.VERSION2] = {\n    'level0': {\n        supports: [],\n        formats: ['jpg'],\n        qualities: ['default']\n    },\n    'level1': {\n        supports: ['regionByPx', 'sizeByW', 'sizeByH', 'sizeByPct'],\n        formats: ['jpg'],\n        qualities: ['default']\n    },\n    'level2': {\n        supports: ['regionByPx', 'regionByPct', 'sizeByW', 'sizeByH', 'sizeByPct',\n            'sizeByConfinedWh', 'sizeByDistortedWh', 'sizeByWh'],\n        formats: ['jpg', 'png'],\n        qualities: ['default', 'bitonal']\n    }\n};\nIIIF_PROFILE_VALUES[Versions.VERSION3] = {\n    'level0': {\n        supports: [],\n        formats: ['jpg'],\n        qualities: ['default']\n    },\n    'level1': {\n        supports: ['regionByPx', 'regionSquare', 'sizeByW', 'sizeByH'],\n        formats: ['jpg'],\n        qualities: ['default']\n    },\n    'level2': {\n        supports: ['regionByPx', 'regionSquare', 'regionByPct',\n            'sizeByW', 'sizeByH', 'sizeByPct', 'sizeByConfinedWh', 'sizeByWh'],\n        formats: ['jpg'],\n        qualities: ['default', 'bitonal']\n    }\n};\nIIIF_PROFILE_VALUES['none'] = {\n    'none': {\n        supports: [],\n        formats: [],\n        qualities: []\n    }\n};\nvar COMPLIANCE_VERSION1 = new RegExp('^https?\\:\\/\\/library\\.stanford\\.edu\\/iiif\\/image-api\\/(1\\.1\\/)?compliance\\.html#level[0-2]$');\nvar COMPLIANCE_VERSION2 = new RegExp('^https?\\:\\/\\/iiif\\.io\\/api\\/image\\/2\\/level[0-2](\\.json)?$');\nvar COMPLIANCE_VERSION3 = new RegExp('(^https?\\:\\/\\/iiif\\.io\\/api\\/image\\/3\\/level[0-2](\\.json)?$)|(^level[0-2]$)');\nfunction generateVersion1Options(iiifInfo) {\n    var levelProfile = iiifInfo.getComplianceLevelSupportedFeatures();\n    // Version 1.0 and 1.1 do not require a profile.\n    if (levelProfile === undefined) {\n        levelProfile = IIIF_PROFILE_VALUES[Versions.VERSION1]['level0'];\n    }\n    return {\n        url: iiifInfo.imageInfo['@id'] === undefined ? undefined : iiifInfo.imageInfo['@id'].replace(/\\/?(info.json)?$/g, ''),\n        supports: levelProfile.supports,\n        formats: levelProfile.formats.concat([iiifInfo.imageInfo.formats === undefined ?\n                [] : iiifInfo.imageInfo.formats]),\n        qualities: levelProfile.qualities.concat([iiifInfo.imageInfo.qualities === undefined ?\n                [] : iiifInfo.imageInfo.qualities]),\n        resolutions: iiifInfo.imageInfo.scale_factors,\n        tileSize: iiifInfo.imageInfo.tile_width !== undefined ? (iiifInfo.imageInfo.tile_height !== undefined ?\n            [iiifInfo.imageInfo.tile_width, iiifInfo.imageInfo.tile_height] : [iiifInfo.imageInfo.tile_width, iiifInfo.imageInfo.tile_width]) :\n            (iiifInfo.imageInfo.tile_height != undefined ? [iiifInfo.imageInfo.tile_height, iiifInfo.imageInfo.tile_height] : undefined)\n    };\n}\nfunction generateVersion2Options(iiifInfo) {\n    var levelProfile = iiifInfo.getComplianceLevelSupportedFeatures(), additionalProfile = Array.isArray(iiifInfo.imageInfo.profile) && iiifInfo.imageInfo.profile.length > 1, profileSupports = additionalProfile && iiifInfo.imageInfo.profile[1].supports ? iiifInfo.imageInfo.profile[1].supports : [], profileFormats = additionalProfile && iiifInfo.imageInfo.profile[1].formats ? iiifInfo.imageInfo.profile[1].formats : [], profileQualities = additionalProfile && iiifInfo.imageInfo.profile[1].qualities ? iiifInfo.imageInfo.profile[1].qualities : [];\n    return {\n        url: iiifInfo.imageInfo['@id'].replace(/\\/?(info.json)?$/g, ''),\n        sizes: iiifInfo.imageInfo.sizes === undefined ? undefined : iiifInfo.imageInfo.sizes.map(function (size) {\n            return [size.width, size.height];\n        }),\n        tileSize: iiifInfo.imageInfo.tiles === undefined ? undefined : [\n            iiifInfo.imageInfo.tiles.map(function (tile) {\n                return tile.width;\n            })[0],\n            iiifInfo.imageInfo.tiles.map(function (tile) {\n                return tile.height === undefined ? tile.width : tile.height;\n            })[0]\n        ],\n        resolutions: iiifInfo.imageInfo.tiles === undefined ? undefined :\n            iiifInfo.imageInfo.tiles.map(function (tile) {\n                return tile.scaleFactors;\n            })[0],\n        supports: levelProfile.supports.concat(profileSupports),\n        formats: levelProfile.formats.concat(profileFormats),\n        qualities: levelProfile.qualities.concat(profileQualities)\n    };\n}\nfunction generateVersion3Options(iiifInfo) {\n    var levelProfile = iiifInfo.getComplianceLevelSupportedFeatures();\n    return {\n        url: iiifInfo.imageInfo['id'],\n        sizes: iiifInfo.imageInfo.sizes === undefined ? undefined : iiifInfo.imageInfo.sizes.map(function (size) {\n            return [size.width, size.height];\n        }),\n        tileSize: iiifInfo.imageInfo.tiles === undefined ? undefined : [\n            iiifInfo.imageInfo.tiles.map(function (tile) {\n                return tile.width;\n            })[0],\n            iiifInfo.imageInfo.tiles.map(function (tile) {\n                return tile.height;\n            })[0]\n        ],\n        resolutions: iiifInfo.imageInfo.tiles === undefined ? undefined :\n            iiifInfo.imageInfo.tiles.map(function (tile) {\n                return tile.scaleFactors;\n            })[0],\n        supports: iiifInfo.imageInfo.extraFeatures === undefined ? levelProfile.supports : levelProfile.supports.concat(iiifInfo.imageInfo.extraFeatures),\n        formats: iiifInfo.imageInfo.extraFormats === undefined ? levelProfile.formats : levelProfile.formats.concat(iiifInfo.imageInfo.extraFormats),\n        qualities: iiifInfo.imageInfo.extraQualities === undefined ? levelProfile.qualities : levelProfile.supports.concat(iiifInfo.imageInfo.extraQualities),\n        maxWidth: undefined,\n        maxHeight: undefined,\n        maxArea: undefined\n    };\n}\nvar versionFunctions = {};\nversionFunctions[Versions.VERSION1] = generateVersion1Options;\nversionFunctions[Versions.VERSION2] = generateVersion2Options;\nversionFunctions[Versions.VERSION3] = generateVersion3Options;\n/**\n * @classdesc\n * Format for transforming IIIF Image API image information responses into\n * IIIF tile source ready options\n *\n * @api\n */\nvar IIIFInfo = /** @class */ (function () {\n    /**\n     * @param {ImageInformationResponse1_0|ImageInformationResponse1_1|ImageInformationResponse2|ImageInformationResponse3|string} imageInfo\n     * Deserialized image information JSON response object or JSON response as string\n     */\n    function IIIFInfo(imageInfo) {\n        this.setImageInfo(imageInfo);\n    }\n    /**\n     * @param {Object|string} imageInfo Deserialized image information JSON response\n     * object or JSON response as string\n     */\n    IIIFInfo.prototype.setImageInfo = function (imageInfo) {\n        if (typeof imageInfo == 'string') {\n            this.imageInfo = JSON.parse(imageInfo);\n        }\n        else {\n            this.imageInfo = imageInfo;\n        }\n    };\n    /**\n     * @returns {Versions} Major IIIF version.\n     */\n    IIIFInfo.prototype.getImageApiVersion = function () {\n        if (this.imageInfo === undefined) {\n            return;\n        }\n        var context = this.imageInfo['@context'] || 'ol-no-context';\n        if (typeof context == 'string') {\n            context = [context];\n        }\n        for (var i = 0; i < context.length; i++) {\n            switch (context[i]) {\n                case 'http://library.stanford.edu/iiif/image-api/1.1/context.json':\n                case 'http://iiif.io/api/image/1/context.json':\n                    return Versions.VERSION1;\n                case 'http://iiif.io/api/image/2/context.json':\n                    return Versions.VERSION2;\n                case 'http://iiif.io/api/image/3/context.json':\n                    return Versions.VERSION3;\n                case 'ol-no-context':\n                    // Image API 1.0 has no '@context'\n                    if (this.getComplianceLevelEntryFromProfile(Versions.VERSION1) && this.imageInfo.identifier) {\n                        return Versions.VERSION1;\n                    }\n                    break;\n                default:\n            }\n        }\n        assert(false, 61);\n    };\n    /**\n     * @param {Versions} version Optional IIIF image API version\n     * @returns {string} Compliance level as it appears in the IIIF image information\n     * response.\n     */\n    IIIFInfo.prototype.getComplianceLevelEntryFromProfile = function (version) {\n        if (this.imageInfo === undefined || this.imageInfo.profile === undefined) {\n            return;\n        }\n        if (version === undefined) {\n            version = this.getImageApiVersion();\n        }\n        switch (version) {\n            case Versions.VERSION1:\n                if (COMPLIANCE_VERSION1.test(this.imageInfo.profile)) {\n                    return this.imageInfo.profile;\n                }\n                break;\n            case Versions.VERSION3:\n                if (COMPLIANCE_VERSION3.test(this.imageInfo.profile)) {\n                    return this.imageInfo.profile;\n                }\n                break;\n            case Versions.VERSION2:\n                if (typeof this.imageInfo.profile === 'string' && COMPLIANCE_VERSION2.test(this.imageInfo.profile)) {\n                    return this.imageInfo.profile;\n                }\n                if (Array.isArray(this.imageInfo.profile) && this.imageInfo.profile.length > 0\n                    && typeof this.imageInfo.profile[0] === 'string' && COMPLIANCE_VERSION2.test(this.imageInfo.profile[0])) {\n                    return this.imageInfo.profile[0];\n                }\n                break;\n            default:\n        }\n    };\n    /**\n     * @param {Versions} version Optional IIIF image API version\n     * @returns {string} Compliance level, on of 'level0', 'level1' or 'level2' or undefined\n     */\n    IIIFInfo.prototype.getComplianceLevelFromProfile = function (version) {\n        var complianceLevel = this.getComplianceLevelEntryFromProfile(version);\n        if (complianceLevel === undefined) {\n            return undefined;\n        }\n        var level = complianceLevel.match(/level[0-2](\\.json)?$/g);\n        return Array.isArray(level) ? level[0].replace('.json', '') : undefined;\n    };\n    /**\n     * @returns {SupportedFeatures} Image formats, qualities and region / size calculation\n     * methods that are supported by the IIIF service.\n     */\n    IIIFInfo.prototype.getComplianceLevelSupportedFeatures = function () {\n        if (this.imageInfo === undefined) {\n            return;\n        }\n        var version = this.getImageApiVersion();\n        var level = this.getComplianceLevelFromProfile(version);\n        if (level === undefined) {\n            return IIIF_PROFILE_VALUES['none']['none'];\n        }\n        return IIIF_PROFILE_VALUES[version][level];\n    };\n    /**\n     * @param {PreferredOptions} opt_preferredOptions Optional options for preferred format and quality.\n     * @returns {import(\"../source/IIIF.js\").Options} IIIF tile source ready constructor options.\n     */\n    IIIFInfo.prototype.getTileSourceOptions = function (opt_preferredOptions) {\n        var options = opt_preferredOptions || {}, version = this.getImageApiVersion();\n        if (version === undefined) {\n            return;\n        }\n        var imageOptions = version === undefined ? undefined : versionFunctions[version](this);\n        if (imageOptions === undefined) {\n            return;\n        }\n        return {\n            url: imageOptions.url,\n            version: version,\n            size: [this.imageInfo.width, this.imageInfo.height],\n            sizes: imageOptions.sizes,\n            format: imageOptions.formats.includes(options.format) ? options.format : 'jpg',\n            supports: imageOptions.supports,\n            quality: options.quality && imageOptions.qualities.includes(options.quality) ?\n                options.quality : imageOptions.qualities.includes('native') ? 'native' : 'default',\n            resolutions: Array.isArray(imageOptions.resolutions) ? imageOptions.resolutions.sort(function (a, b) {\n                return b - a;\n            }) : undefined,\n            tileSize: imageOptions.tileSize\n        };\n    };\n    return IIIFInfo;\n}());\nexport default IIIFInfo;\n//# sourceMappingURL=IIIFInfo.js.map","/**\n * @module ol/source/IIIF\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { DEFAULT_TILE_SIZE } from '../tilegrid/common.js';\nimport { getTopLeft } from '../extent.js';\nimport { CustomTile } from './Zoomify.js';\nimport { Versions } from '../format/IIIFInfo.js';\nimport { assert } from '../asserts.js';\nimport TileGrid from '../tilegrid/TileGrid.js';\nimport TileImage from './TileImage.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize]\n * @property {null|string} [crossOrigin]\n * @property {import(\"../extent.js\").Extent} [extent=[0, -height, width, 0]]\n * @property {string} [format='jpg'] Requested image format.\n * @property {import(\"../proj.js\").ProjectionLike} [projection]\n * @property {string} [quality] Requested IIIF image quality. Default is 'native'\n * for version 1, 'default' for versions 2 and 3.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"../size.js\").Size} size Size of the image [width, height].\n * @property {import(\"../size.js\").Size[]} [sizes] Supported scaled image sizes.\n * Content of the IIIF info.json 'sizes' property, but as array of Size objects.\n * @property {import(\"./State.js\").default} [state] Source state.\n * @property {Array<string>} [supports=[]] Supported IIIF region and size calculation\n * features.\n * @property {number} [tilePixelRatio]\n * @property {number|import(\"../size.js\").Size} [tileSize] Tile size.\n * Same tile size is used for all zoom levels. If tile size is a number,\n * a square tile is assumed. If the IIIF image service supports arbitrary\n * tiling (sizeByH, sizeByW, sizeByWh or sizeByPct as well as regionByPx or regionByPct\n * are supported), the default tilesize is 256.\n * @property {number} [transition]\n * @property {string} [url] Base URL of the IIIF Image service.\n * This should be the same as the IIIF Image @id.\n * @property {Versions} [version=Versions.VERSION2] Service's IIIF Image API version.\n * @property {number} [zDirection] Indicate which resolution should be used\n * by a renderer if the views resolution does not match any resolution of the tile source.\n * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n * will be used. If -1, the nearest higher resolution will be used.\n */\nfunction formatPercentage(percentage) {\n    return percentage.toLocaleString('en', { maximumFractionDigits: 10 });\n}\n/**\n * @classdesc\n * Layer source for IIIF Image API services.\n * @api\n */\nvar IIIF = /** @class */ (function (_super) {\n    __extends(IIIF, _super);\n    function IIIF(opt_options) {\n        var _this = this;\n        var options = opt_options || {};\n        var baseUrl = options.url || '';\n        baseUrl = baseUrl + (baseUrl.lastIndexOf('/') === baseUrl.length - 1 || baseUrl === '' ? '' : '/');\n        var version = options.version || Versions.VERSION2;\n        var sizes = options.sizes || [];\n        var size = options.size;\n        assert(size != undefined && Array.isArray(size) && size.length == 2 &&\n            !isNaN(size[0]) && size[0] > 0 && !isNaN(size[1]) && size[1] > 0, 60);\n        var width = size[0];\n        var height = size[1];\n        var tileSize = options.tileSize;\n        var format = options.format || 'jpg';\n        var quality = options.quality || (options.version == Versions.VERSION1 ? 'native' : 'default');\n        var resolutions = options.resolutions || [];\n        var supports = options.supports || [];\n        var extent = options.extent || [0, -height, width, 0];\n        var supportsListedSizes = sizes != undefined && Array.isArray(sizes) && sizes.length > 0;\n        var supportsListedTiles = tileSize != undefined && (Number.isInteger(tileSize) && tileSize > 0 || Array.isArray(tileSize) && tileSize.length > 0);\n        var supportsArbitraryTiling = supports != undefined && Array.isArray(supports) &&\n            (supports.includes('regionByPx') || supports.includes('regionByPct')) &&\n            (supports.includes('sizeByWh') || supports.includes('sizeByH') ||\n                supports.includes('sizeByW') || supports.includes('sizeByPct'));\n        var tileWidth, tileHeight, maxZoom;\n        resolutions.sort(function (a, b) {\n            return b - a;\n        });\n        if (supportsListedTiles || supportsArbitraryTiling) {\n            if (tileSize != undefined) {\n                if (Number.isInteger(tileSize) && tileSize > 0) {\n                    tileWidth = tileSize;\n                    tileHeight = tileSize;\n                }\n                else if (Array.isArray(tileSize) && tileSize.length > 0) {\n                    if (tileSize.length == 1 || tileSize[1] == undefined && Number.isInteger(tileSize[0])) {\n                        tileWidth = tileSize[0];\n                        tileHeight = tileSize[0];\n                    }\n                    if (tileSize.length == 2) {\n                        if (Number.isInteger(tileSize[0]) && Number.isInteger(tileSize[1])) {\n                            tileWidth = tileSize[0];\n                            tileHeight = tileSize[1];\n                        }\n                        else if (tileSize[0] == undefined && Number.isInteger(tileSize[1])) {\n                            tileWidth = tileSize[1];\n                            tileHeight = tileSize[1];\n                        }\n                    }\n                }\n            }\n            if (tileWidth === undefined || tileHeight === undefined) {\n                tileWidth = DEFAULT_TILE_SIZE;\n                tileHeight = DEFAULT_TILE_SIZE;\n            }\n            if (resolutions.length == 0) {\n                maxZoom = Math.max(Math.ceil(Math.log(width / tileWidth) / Math.LN2), Math.ceil(Math.log(height / tileHeight) / Math.LN2));\n                for (var i = maxZoom; i >= 0; i--) {\n                    resolutions.push(Math.pow(2, i));\n                }\n            }\n            else {\n                var maxScaleFactor = Math.max(resolutions.slice());\n                // TODO maxScaleFactor might not be a power to 2\n                maxZoom = Math.round(Math.log(maxScaleFactor) / Math.LN2);\n            }\n        }\n        else {\n            // No tile support.\n            tileWidth = width;\n            tileHeight = height;\n            resolutions = [];\n            if (supportsListedSizes) {\n                /*\n                 * 'sizes' provided. Use full region in different resolutions. Every\n                 * resolution has only one tile.\n                 */\n                sizes.sort(function (a, b) {\n                    return a[0] - b[0];\n                });\n                maxZoom = -1;\n                var ignoredSizesIndex = [];\n                for (var i = 0; i < sizes.length; i++) {\n                    var resolution = width / sizes[i][0];\n                    if (resolutions.length > 0 && resolutions[resolutions.length - 1] == resolution) {\n                        ignoredSizesIndex.push(i);\n                        continue;\n                    }\n                    resolutions.push(resolution);\n                    maxZoom++;\n                }\n                if (ignoredSizesIndex.length > 0) {\n                    for (var i = 0; i < ignoredSizesIndex.length; i++) {\n                        sizes.splice(ignoredSizesIndex[i] - i, 1);\n                    }\n                }\n            }\n            else {\n                // No useful image information at all. Try pseudo tile with full image.\n                resolutions.push(1);\n                sizes.push([width, height]);\n                maxZoom = 0;\n            }\n        }\n        var tileGrid = new TileGrid({\n            tileSize: [tileWidth, tileHeight],\n            extent: extent,\n            origin: getTopLeft(extent),\n            resolutions: resolutions\n        });\n        var tileUrlFunction = function (tileCoord, pixelRatio, projection) {\n            var regionParam, sizeParam;\n            var zoom = tileCoord[0];\n            if (zoom > maxZoom) {\n                return;\n            }\n            var tileX = tileCoord[1], tileY = tileCoord[2], scale = resolutions[zoom];\n            if (tileX === undefined || tileY === undefined || scale === undefined ||\n                tileX < 0 || Math.ceil(width / scale / tileWidth) <= tileX ||\n                tileY < 0 || Math.ceil(height / scale / tileHeight) <= tileY) {\n                return;\n            }\n            if (supportsArbitraryTiling || supportsListedTiles) {\n                var regionX = tileX * tileWidth * scale, regionY = tileY * tileHeight * scale;\n                var regionW = tileWidth * scale, regionH = tileHeight * scale, sizeW = tileWidth, sizeH = tileHeight;\n                if (regionX + regionW > width) {\n                    regionW = width - regionX;\n                }\n                if (regionY + regionH > height) {\n                    regionH = height - regionY;\n                }\n                if (regionX + tileWidth * scale > width) {\n                    sizeW = Math.floor((width - regionX + scale - 1) / scale);\n                }\n                if (regionY + tileHeight * scale > height) {\n                    sizeH = Math.floor((height - regionY + scale - 1) / scale);\n                }\n                if (regionX == 0 && regionW == width && regionY == 0 && regionH == height) {\n                    // canonical full image region parameter is 'full', not 'x,y,w,h'\n                    regionParam = 'full';\n                }\n                else if (!supportsArbitraryTiling || supports.includes('regionByPx')) {\n                    regionParam = regionX + ',' + regionY + ',' + regionW + ',' + regionH;\n                }\n                else if (supports.includes('regionByPct')) {\n                    var pctX = formatPercentage(regionX / width * 100), pctY = formatPercentage(regionY / height * 100), pctW = formatPercentage(regionW / width * 100), pctH = formatPercentage(regionH / height * 100);\n                    regionParam = 'pct:' + pctX + ',' + pctY + ',' + pctW + ',' + pctH;\n                }\n                if (version == Versions.VERSION3 && (!supportsArbitraryTiling || supports.includes('sizeByWh'))) {\n                    sizeParam = sizeW + ',' + sizeH;\n                }\n                else if (!supportsArbitraryTiling || supports.includes('sizeByW')) {\n                    sizeParam = sizeW + ',';\n                }\n                else if (supports.includes('sizeByH')) {\n                    sizeParam = ',' + sizeH;\n                }\n                else if (supports.includes('sizeByWh')) {\n                    sizeParam = sizeW + ',' + sizeH;\n                }\n                else if (supports.includes('sizeByPct')) {\n                    sizeParam = 'pct:' + formatPercentage(100 / scale);\n                }\n            }\n            else {\n                regionParam = 'full';\n                if (supportsListedSizes) {\n                    var regionWidth = sizes[zoom][0], regionHeight = sizes[zoom][1];\n                    if (version == Versions.VERSION3) {\n                        if (regionWidth == width && regionHeight == height) {\n                            sizeParam = 'max';\n                        }\n                        else {\n                            sizeParam = regionWidth + ',' + regionHeight;\n                        }\n                    }\n                    else {\n                        if (regionWidth == width) {\n                            sizeParam = 'full';\n                        }\n                        else {\n                            sizeParam = regionWidth + ',';\n                        }\n                    }\n                }\n                else {\n                    sizeParam = version == Versions.VERSION3 ? 'max' : 'full';\n                }\n            }\n            return baseUrl + regionParam + '/' + sizeParam + '/0/' + quality + '.' + format;\n        };\n        var IiifTileClass = CustomTile.bind(null, tileGrid);\n        _this = _super.call(this, {\n            attributions: options.attributions,\n            attributionsCollapsible: options.attributionsCollapsible,\n            cacheSize: options.cacheSize,\n            crossOrigin: options.crossOrigin,\n            projection: options.projection,\n            reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n            state: options.state,\n            tileClass: IiifTileClass,\n            tileGrid: tileGrid,\n            tilePixelRatio: options.tilePixelRatio,\n            tileUrlFunction: tileUrlFunction,\n            transition: options.transition\n        }) || this;\n        /**\n         * @inheritDoc\n         */\n        _this.zDirection = options.zDirection;\n        return _this;\n    }\n    return IIIF;\n}(TileImage));\nexport default IIIF;\n//# sourceMappingURL=IIIF.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/ImageBase\n */\nimport { abstract } from './util.js';\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\n/**\n * @abstract\n */\nvar ImageBase = /** @class */ (function (_super) {\n    __extends(ImageBase, _super);\n    /**\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./ImageState.js\").default} state State.\n     */\n    function ImageBase(extent, resolution, pixelRatio, state) {\n        var _this = _super.call(this) || this;\n        /**\n         * @protected\n         * @type {import(\"./extent.js\").Extent}\n         */\n        _this.extent = extent;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.pixelRatio_ = pixelRatio;\n        /**\n         * @protected\n         * @type {number|undefined}\n         */\n        _this.resolution = resolution;\n        /**\n         * @protected\n         * @type {import(\"./ImageState.js\").default}\n         */\n        _this.state = state;\n        return _this;\n    }\n    /**\n     * @protected\n     */\n    ImageBase.prototype.changed = function () {\n        this.dispatchEvent(EventType.CHANGE);\n    };\n    /**\n     * @return {import(\"./extent.js\").Extent} Extent.\n     */\n    ImageBase.prototype.getExtent = function () {\n        return this.extent;\n    };\n    /**\n     * @abstract\n     * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n     */\n    ImageBase.prototype.getImage = function () {\n        return abstract();\n    };\n    /**\n     * @return {number} PixelRatio.\n     */\n    ImageBase.prototype.getPixelRatio = function () {\n        return this.pixelRatio_;\n    };\n    /**\n     * @return {number} Resolution.\n     */\n    ImageBase.prototype.getResolution = function () {\n        return /** @type {number} */ (this.resolution);\n    };\n    /**\n     * @return {import(\"./ImageState.js\").default} State.\n     */\n    ImageBase.prototype.getState = function () {\n        return this.state;\n    };\n    /**\n     * Load not yet loaded URI.\n     * @abstract\n     */\n    ImageBase.prototype.load = function () {\n        abstract();\n    };\n    return ImageBase;\n}(EventTarget));\nexport default ImageBase;\n//# sourceMappingURL=ImageBase.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/reproj/Image\n */\nimport { ERROR_THRESHOLD } from './common.js';\nimport ImageBase from '../ImageBase.js';\nimport ImageState from '../ImageState.js';\nimport { listen, unlistenByKey } from '../events.js';\nimport EventType from '../events/EventType.js';\nimport { getCenter, getIntersection, getHeight, getWidth } from '../extent.js';\nimport { calculateSourceResolution, render as renderReprojected } from '../reproj.js';\nimport Triangulation from './Triangulation.js';\n/**\n * @typedef {function(import(\"../extent.js\").Extent, number, number) : import(\"../ImageBase.js\").default} FunctionType\n */\n/**\n * @classdesc\n * Class encapsulating single reprojected image.\n * See {@link module:ol/source/Image~ImageSource}.\n */\nvar ReprojImage = /** @class */ (function (_super) {\n    __extends(ReprojImage, _super);\n    /**\n     * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection (of the data).\n     * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n     * @param {import(\"../extent.js\").Extent} targetExtent Target extent.\n     * @param {number} targetResolution Target resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {FunctionType} getImageFunction\n     *     Function returning source images (extent, resolution, pixelRatio).\n     */\n    function ReprojImage(sourceProj, targetProj, targetExtent, targetResolution, pixelRatio, getImageFunction) {\n        var _this = this;\n        var maxSourceExtent = sourceProj.getExtent();\n        var maxTargetExtent = targetProj.getExtent();\n        var limitedTargetExtent = maxTargetExtent ?\n            getIntersection(targetExtent, maxTargetExtent) : targetExtent;\n        var targetCenter = getCenter(limitedTargetExtent);\n        var sourceResolution = calculateSourceResolution(sourceProj, targetProj, targetCenter, targetResolution);\n        var errorThresholdInPixels = ERROR_THRESHOLD;\n        var triangulation = new Triangulation(sourceProj, targetProj, limitedTargetExtent, maxSourceExtent, sourceResolution * errorThresholdInPixels);\n        var sourceExtent = triangulation.calculateSourceExtent();\n        var sourceImage = getImageFunction(sourceExtent, sourceResolution, pixelRatio);\n        var state = ImageState.LOADED;\n        if (sourceImage) {\n            state = ImageState.IDLE;\n        }\n        var sourcePixelRatio = sourceImage ? sourceImage.getPixelRatio() : 1;\n        _this = _super.call(this, targetExtent, targetResolution, sourcePixelRatio, state) || this;\n        /**\n         * @private\n         * @type {import(\"../proj/Projection.js\").default}\n         */\n        _this.targetProj_ = targetProj;\n        /**\n         * @private\n         * @type {import(\"../extent.js\").Extent}\n         */\n        _this.maxSourceExtent_ = maxSourceExtent;\n        /**\n         * @private\n         * @type {!import(\"./Triangulation.js\").default}\n         */\n        _this.triangulation_ = triangulation;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.targetResolution_ = targetResolution;\n        /**\n         * @private\n         * @type {import(\"../extent.js\").Extent}\n         */\n        _this.targetExtent_ = targetExtent;\n        /**\n         * @private\n         * @type {import(\"../ImageBase.js\").default}\n         */\n        _this.sourceImage_ = sourceImage;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.sourcePixelRatio_ = sourcePixelRatio;\n        /**\n         * @private\n         * @type {HTMLCanvasElement}\n         */\n        _this.canvas_ = null;\n        /**\n         * @private\n         * @type {?import(\"../events.js\").EventsKey}\n         */\n        _this.sourceListenerKey_ = null;\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    ReprojImage.prototype.disposeInternal = function () {\n        if (this.state == ImageState.LOADING) {\n            this.unlistenSource_();\n        }\n        _super.prototype.disposeInternal.call(this);\n    };\n    /**\n     * @inheritDoc\n     */\n    ReprojImage.prototype.getImage = function () {\n        return this.canvas_;\n    };\n    /**\n     * @return {import(\"../proj/Projection.js\").default} Projection.\n     */\n    ReprojImage.prototype.getProjection = function () {\n        return this.targetProj_;\n    };\n    /**\n     * @private\n     */\n    ReprojImage.prototype.reproject_ = function () {\n        var sourceState = this.sourceImage_.getState();\n        if (sourceState == ImageState.LOADED) {\n            var width = getWidth(this.targetExtent_) / this.targetResolution_;\n            var height = getHeight(this.targetExtent_) / this.targetResolution_;\n            this.canvas_ = renderReprojected(width, height, this.sourcePixelRatio_, this.sourceImage_.getResolution(), this.maxSourceExtent_, this.targetResolution_, this.targetExtent_, this.triangulation_, [{\n                    extent: this.sourceImage_.getExtent(),\n                    image: this.sourceImage_.getImage()\n                }], 0);\n        }\n        this.state = sourceState;\n        this.changed();\n    };\n    /**\n     * @inheritDoc\n     */\n    ReprojImage.prototype.load = function () {\n        if (this.state == ImageState.IDLE) {\n            this.state = ImageState.LOADING;\n            this.changed();\n            var sourceState = this.sourceImage_.getState();\n            if (sourceState == ImageState.LOADED || sourceState == ImageState.ERROR) {\n                this.reproject_();\n            }\n            else {\n                this.sourceListenerKey_ = listen(this.sourceImage_, EventType.CHANGE, function (e) {\n                    var sourceState = this.sourceImage_.getState();\n                    if (sourceState == ImageState.LOADED || sourceState == ImageState.ERROR) {\n                        this.unlistenSource_();\n                        this.reproject_();\n                    }\n                }, this);\n                this.sourceImage_.load();\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    ReprojImage.prototype.unlistenSource_ = function () {\n        unlistenByKey(/** @type {!import(\"../events.js\").EventsKey} */ (this.sourceListenerKey_));\n        this.sourceListenerKey_ = null;\n    };\n    return ReprojImage;\n}(ImageBase));\nexport default ReprojImage;\n//# sourceMappingURL=Image.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/source/Image\n */\nimport { abstract } from '../util.js';\nimport { ENABLE_RASTER_REPROJECTION } from '../reproj/common.js';\nimport ImageState from '../ImageState.js';\nimport { linearFindNearest } from '../array.js';\nimport Event from '../events/Event.js';\nimport { equals } from '../extent.js';\nimport { equivalent } from '../proj.js';\nimport ReprojImage from '../reproj/Image.js';\nimport Source from './Source.js';\n/**\n * @enum {string}\n */\nvar ImageSourceEventType = {\n    /**\n     * Triggered when an image starts loading.\n     * @event module:ol/source/Image.ImageSourceEvent#imageloadstart\n     * @api\n     */\n    IMAGELOADSTART: 'imageloadstart',\n    /**\n     * Triggered when an image finishes loading.\n     * @event module:ol/source/Image.ImageSourceEvent#imageloadend\n     * @api\n     */\n    IMAGELOADEND: 'imageloadend',\n    /**\n     * Triggered if image loading results in an error.\n     * @event module:ol/source/Image.ImageSourceEvent#imageloaderror\n     * @api\n     */\n    IMAGELOADERROR: 'imageloaderror'\n};\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Image~ImageSource} instances are instances of this\n * type.\n */\nvar ImageSourceEvent = /** @class */ (function (_super) {\n    __extends(ImageSourceEvent, _super);\n    /**\n     * @param {string} type Type.\n     * @param {import(\"../Image.js\").default} image The image.\n     */\n    function ImageSourceEvent(type, image) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * The image related to the event.\n         * @type {import(\"../Image.js\").default}\n         * @api\n         */\n        _this.image = image;\n        return _this;\n    }\n    return ImageSourceEvent;\n}(Event));\nexport { ImageSourceEvent };\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions]\n * @property {import(\"../proj.js\").ProjectionLike} [projection]\n * @property {Array<number>} [resolutions]\n * @property {import(\"./State.js\").default} [state]\n */\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for sources providing a single image.\n * @abstract\n * @fires module:ol/source/Image.ImageSourceEvent\n * @api\n */\nvar ImageSource = /** @class */ (function (_super) {\n    __extends(ImageSource, _super);\n    /**\n     * @param {Options} options Single image source options.\n     */\n    function ImageSource(options) {\n        var _this = _super.call(this, {\n            attributions: options.attributions,\n            projection: options.projection,\n            state: options.state\n        }) || this;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.resolutions_ = options.resolutions !== undefined ?\n            options.resolutions : null;\n        /**\n         * @private\n         * @type {import(\"../reproj/Image.js\").default}\n         */\n        _this.reprojectedImage_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.reprojectedRevision_ = 0;\n        return _this;\n    }\n    /**\n     * @return {Array<number>} Resolutions.\n     * @override\n     */\n    ImageSource.prototype.getResolutions = function () {\n        return this.resolutions_;\n    };\n    /**\n     * @protected\n     * @param {number} resolution Resolution.\n     * @return {number} Resolution.\n     */\n    ImageSource.prototype.findNearestResolution = function (resolution) {\n        if (this.resolutions_) {\n            var idx = linearFindNearest(this.resolutions_, resolution, 0);\n            resolution = this.resolutions_[idx];\n        }\n        return resolution;\n    };\n    /**\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {import(\"../ImageBase.js\").default} Single image.\n     */\n    ImageSource.prototype.getImage = function (extent, resolution, pixelRatio, projection) {\n        var sourceProjection = this.getProjection();\n        if (!ENABLE_RASTER_REPROJECTION ||\n            !sourceProjection ||\n            !projection ||\n            equivalent(sourceProjection, projection)) {\n            if (sourceProjection) {\n                projection = sourceProjection;\n            }\n            return this.getImageInternal(extent, resolution, pixelRatio, projection);\n        }\n        else {\n            if (this.reprojectedImage_) {\n                if (this.reprojectedRevision_ == this.getRevision() &&\n                    equivalent(this.reprojectedImage_.getProjection(), projection) &&\n                    this.reprojectedImage_.getResolution() == resolution &&\n                    equals(this.reprojectedImage_.getExtent(), extent)) {\n                    return this.reprojectedImage_;\n                }\n                this.reprojectedImage_.dispose();\n                this.reprojectedImage_ = null;\n            }\n            this.reprojectedImage_ = new ReprojImage(sourceProjection, projection, extent, resolution, pixelRatio, function (extent, resolution, pixelRatio) {\n                return this.getImageInternal(extent, resolution, pixelRatio, sourceProjection);\n            }.bind(this));\n            this.reprojectedRevision_ = this.getRevision();\n            return this.reprojectedImage_;\n        }\n    };\n    /**\n     * @abstract\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {import(\"../ImageBase.js\").default} Single image.\n     * @protected\n     */\n    ImageSource.prototype.getImageInternal = function (extent, resolution, pixelRatio, projection) {\n        return abstract();\n    };\n    /**\n     * Handle image change events.\n     * @param {import(\"../events/Event.js\").default} event Event.\n     * @protected\n     */\n    ImageSource.prototype.handleImageChange = function (event) {\n        var image = /** @type {import(\"../Image.js\").default} */ (event.target);\n        switch (image.getState()) {\n            case ImageState.LOADING:\n                this.loading = true;\n                this.dispatchEvent(new ImageSourceEvent(ImageSourceEventType.IMAGELOADSTART, image));\n                break;\n            case ImageState.LOADED:\n                this.loading = false;\n                this.dispatchEvent(new ImageSourceEvent(ImageSourceEventType.IMAGELOADEND, image));\n                break;\n            case ImageState.ERROR:\n                this.loading = false;\n                this.dispatchEvent(new ImageSourceEvent(ImageSourceEventType.IMAGELOADERROR, image));\n                break;\n            default:\n            // pass\n        }\n    };\n    return ImageSource;\n}(Source));\n/**\n * Default image load function for image sources that use import(\"../Image.js\").Image image\n * instances.\n * @param {import(\"../Image.js\").default} image Image.\n * @param {string} src Source.\n */\nexport function defaultImageLoadFunction(image, src) {\n    /** @type {HTMLImageElement|HTMLVideoElement} */ (image.getImage()).src = src;\n}\nexport default ImageSource;\n//# sourceMappingURL=Image.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/Image\n */\nimport ImageBase from './ImageBase.js';\nimport ImageState from './ImageState.js';\nimport { listenOnce, unlistenByKey } from './events.js';\nimport EventType from './events/EventType.js';\nimport { getHeight } from './extent.js';\n/**\n * A function that takes an {@link module:ol/Image~Image} for the image and a\n * `{string}` for the src as arguments. It is supposed to make it so the\n * underlying image {@link module:ol/Image~Image#getImage} is assigned the\n * content specified by the src. If not specified, the default is\n *\n *     function(image, src) {\n *       image.getImage().src = src;\n *     }\n *\n * Providing a custom `imageLoadFunction` can be useful to load images with\n * post requests or - in general - through XHR requests, where the src of the\n * image element would be set to a data URI when the content is loaded.\n *\n * @typedef {function(ImageWrapper, string): void} LoadFunction\n * @api\n */\nvar ImageWrapper = /** @class */ (function (_super) {\n    __extends(ImageWrapper, _super);\n    /**\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {string} src Image source URI.\n     * @param {?string} crossOrigin Cross origin.\n     * @param {LoadFunction} imageLoadFunction Image load function.\n     */\n    function ImageWrapper(extent, resolution, pixelRatio, src, crossOrigin, imageLoadFunction) {\n        var _this = _super.call(this, extent, resolution, pixelRatio, ImageState.IDLE) || this;\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.src_ = src;\n        /**\n         * @private\n         * @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement}\n         */\n        _this.image_ = new Image();\n        if (crossOrigin !== null) {\n            _this.image_.crossOrigin = crossOrigin;\n        }\n        /**\n         * @private\n         * @type {Array<import(\"./events.js\").EventsKey>}\n         */\n        _this.imageListenerKeys_ = null;\n        /**\n         * @protected\n         * @type {ImageState}\n         */\n        _this.state = ImageState.IDLE;\n        /**\n         * @private\n         * @type {LoadFunction}\n         */\n        _this.imageLoadFunction_ = imageLoadFunction;\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     * @api\n     */\n    ImageWrapper.prototype.getImage = function () {\n        return this.image_;\n    };\n    /**\n     * Tracks loading or read errors.\n     *\n     * @private\n     */\n    ImageWrapper.prototype.handleImageError_ = function () {\n        this.state = ImageState.ERROR;\n        this.unlistenImage_();\n        this.changed();\n    };\n    /**\n     * Tracks successful image load.\n     *\n     * @private\n     */\n    ImageWrapper.prototype.handleImageLoad_ = function () {\n        if (this.resolution === undefined) {\n            this.resolution = getHeight(this.extent) / this.image_.height;\n        }\n        this.state = ImageState.LOADED;\n        this.unlistenImage_();\n        this.changed();\n    };\n    /**\n     * Load the image or retry if loading previously failed.\n     * Loading is taken care of by the tile queue, and calling this method is\n     * only needed for preloading or for reloading in case of an error.\n     * @override\n     * @api\n     */\n    ImageWrapper.prototype.load = function () {\n        if (this.state == ImageState.IDLE || this.state == ImageState.ERROR) {\n            this.state = ImageState.LOADING;\n            this.changed();\n            this.imageListenerKeys_ = [\n                listenOnce(this.image_, EventType.ERROR, this.handleImageError_, this),\n                listenOnce(this.image_, EventType.LOAD, this.handleImageLoad_, this)\n            ];\n            this.imageLoadFunction_(this, this.src_);\n        }\n    };\n    /**\n     * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\n     */\n    ImageWrapper.prototype.setImage = function (image) {\n        this.image_ = image;\n    };\n    /**\n     * Discards event handlers which listen for load completion or errors.\n     *\n     * @private\n     */\n    ImageWrapper.prototype.unlistenImage_ = function () {\n        this.imageListenerKeys_.forEach(unlistenByKey);\n        this.imageListenerKeys_ = null;\n    };\n    return ImageWrapper;\n}(ImageBase));\nexport default ImageWrapper;\n//# sourceMappingURL=Image.js.map","/**\n * @module ol/uri\n */\n/**\n * Appends query parameters to a URI.\n *\n * @param {string} uri The original URI, which may already have query data.\n * @param {!Object} params An object where keys are URI-encoded parameter keys,\n *     and the values are arbitrary types or arrays.\n * @return {string} The new URI.\n */\nexport function appendParams(uri, params) {\n    var keyParams = [];\n    // Skip any null or undefined parameter values\n    Object.keys(params).forEach(function (k) {\n        if (params[k] !== null && params[k] !== undefined) {\n            keyParams.push(k + '=' + encodeURIComponent(params[k]));\n        }\n    });\n    var qs = keyParams.join('&');\n    // remove any trailing ? or &\n    uri = uri.replace(/[?&]$/, '');\n    // append ? or & depending on whether uri has existing parameters\n    uri = uri.indexOf('?') === -1 ? uri + '?' : uri + '&';\n    return uri + qs;\n}\n//# sourceMappingURL=uri.js.map","/**\n * @module ol/source/ImageArcGISRest\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport ImageWrapper from '../Image.js';\nimport { assert } from '../asserts.js';\nimport { listen } from '../events.js';\nimport EventType from '../events/EventType.js';\nimport { containsExtent, getHeight, getWidth } from '../extent.js';\nimport { assign } from '../obj.js';\nimport ImageSource, { defaultImageLoadFunction } from './Image.js';\nimport { appendParams } from '../uri.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [hidpi=true] Use the `ol/Map#pixelRatio` value when requesting the image from\n * the remote server.\n * @property {import(\"../Image.js\").LoadFunction} [imageLoadFunction] Optional function to load an image given\n * a URL.\n * @property {Object<string,*>} [params] ArcGIS Rest parameters. This field is optional. Service\n * defaults will be used for any fields not specified. `FORMAT` is `PNG32` by default. `F` is\n * `IMAGE` by default. `TRANSPARENT` is `true` by default.  `BBOX`, `SIZE`, `BBOXSR`, and `IMAGESR`\n * will be set dynamically. Set `LAYERS` to override the default service layer visibility. See\n * {@link http://resources.arcgis.com/en/help/arcgis-rest-api/index.html#/Export_Map/02r3000000v7000000/}\n * for further reference.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [ratio=1.5] Ratio. `1` means image requests are the size of the map viewport,\n * `2` means twice the size of the map viewport, and so on.\n * @property {Array<number>} [resolutions] Resolutions. If specified, requests will be made for\n * these resolutions only.\n * @property {string} [url] ArcGIS Rest service URL for a Map Service or Image Service. The url\n * should include /MapServer or /ImageServer.\n */\n/**\n * @classdesc\n * Source for data from ArcGIS Rest services providing single, untiled images.\n * Useful when underlying map service has labels.\n *\n * If underlying map service is not using labels,\n * take advantage of ol image caching and use\n * {@link module:ol/source/TileArcGISRest} data source.\n *\n * @fires module:ol/source/Image.ImageSourceEvent\n * @api\n */\nvar ImageArcGISRest = /** @class */ (function (_super) {\n    __extends(ImageArcGISRest, _super);\n    /**\n     * @param {Options=} opt_options Image ArcGIS Rest Options.\n     */\n    function ImageArcGISRest(opt_options) {\n        var _this = this;\n        var options = opt_options || /** @type {Options} */ ({});\n        _this = _super.call(this, {\n            attributions: options.attributions,\n            projection: options.projection,\n            resolutions: options.resolutions\n        }) || this;\n        /**\n         * @private\n         * @type {?string}\n         */\n        _this.crossOrigin_ =\n            options.crossOrigin !== undefined ? options.crossOrigin : null;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n        /**\n         * @private\n         * @type {string|undefined}\n         */\n        _this.url_ = options.url;\n        /**\n         * @private\n         * @type {import(\"../Image.js\").LoadFunction}\n         */\n        _this.imageLoadFunction_ = options.imageLoadFunction !== undefined ?\n            options.imageLoadFunction : defaultImageLoadFunction;\n        /**\n         * @private\n         * @type {!Object}\n         */\n        _this.params_ = options.params || {};\n        /**\n         * @private\n         * @type {import(\"../Image.js\").default}\n         */\n        _this.image_ = null;\n        /**\n         * @private\n         * @type {import(\"../size.js\").Size}\n         */\n        _this.imageSize_ = [0, 0];\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.renderedRevision_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.ratio_ = options.ratio !== undefined ? options.ratio : 1.5;\n        return _this;\n    }\n    /**\n     * Get the user-provided params, i.e. those passed to the constructor through\n     * the \"params\" option, and possibly updated using the updateParams method.\n     * @return {Object} Params.\n     * @api\n     */\n    ImageArcGISRest.prototype.getParams = function () {\n        return this.params_;\n    };\n    /**\n     * @inheritDoc\n     */\n    ImageArcGISRest.prototype.getImageInternal = function (extent, resolution, pixelRatio, projection) {\n        if (this.url_ === undefined) {\n            return null;\n        }\n        resolution = this.findNearestResolution(resolution);\n        pixelRatio = this.hidpi_ ? pixelRatio : 1;\n        var image = this.image_;\n        if (image &&\n            this.renderedRevision_ == this.getRevision() &&\n            image.getResolution() == resolution &&\n            image.getPixelRatio() == pixelRatio &&\n            containsExtent(image.getExtent(), extent)) {\n            return image;\n        }\n        var params = {\n            'F': 'image',\n            'FORMAT': 'PNG32',\n            'TRANSPARENT': true\n        };\n        assign(params, this.params_);\n        extent = extent.slice();\n        var centerX = (extent[0] + extent[2]) / 2;\n        var centerY = (extent[1] + extent[3]) / 2;\n        if (this.ratio_ != 1) {\n            var halfWidth = this.ratio_ * getWidth(extent) / 2;\n            var halfHeight = this.ratio_ * getHeight(extent) / 2;\n            extent[0] = centerX - halfWidth;\n            extent[1] = centerY - halfHeight;\n            extent[2] = centerX + halfWidth;\n            extent[3] = centerY + halfHeight;\n        }\n        var imageResolution = resolution / pixelRatio;\n        // Compute an integer width and height.\n        var width = Math.ceil(getWidth(extent) / imageResolution);\n        var height = Math.ceil(getHeight(extent) / imageResolution);\n        // Modify the extent to match the integer width and height.\n        extent[0] = centerX - imageResolution * width / 2;\n        extent[2] = centerX + imageResolution * width / 2;\n        extent[1] = centerY - imageResolution * height / 2;\n        extent[3] = centerY + imageResolution * height / 2;\n        this.imageSize_[0] = width;\n        this.imageSize_[1] = height;\n        var url = this.getRequestUrl_(extent, this.imageSize_, pixelRatio, projection, params);\n        this.image_ = new ImageWrapper(extent, resolution, pixelRatio, url, this.crossOrigin_, this.imageLoadFunction_);\n        this.renderedRevision_ = this.getRevision();\n        listen(this.image_, EventType.CHANGE, this.handleImageChange, this);\n        return this.image_;\n    };\n    /**\n     * Return the image load function of the source.\n     * @return {import(\"../Image.js\").LoadFunction} The image load function.\n     * @api\n     */\n    ImageArcGISRest.prototype.getImageLoadFunction = function () {\n        return this.imageLoadFunction_;\n    };\n    /**\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {import(\"../size.js\").Size} size Size.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @param {Object} params Params.\n     * @return {string} Request URL.\n     * @private\n     */\n    ImageArcGISRest.prototype.getRequestUrl_ = function (extent, size, pixelRatio, projection, params) {\n        // ArcGIS Server only wants the numeric portion of the projection ID.\n        var srid = projection.getCode().split(':').pop();\n        params['SIZE'] = size[0] + ',' + size[1];\n        params['BBOX'] = extent.join(',');\n        params['BBOXSR'] = srid;\n        params['IMAGESR'] = srid;\n        params['DPI'] = Math.round(90 * pixelRatio);\n        var url = this.url_;\n        var modifiedUrl = url\n            .replace(/MapServer\\/?$/, 'MapServer/export')\n            .replace(/ImageServer\\/?$/, 'ImageServer/exportImage');\n        if (modifiedUrl == url) {\n            assert(false, 50); // `options.featureTypes` should be an Array\n        }\n        return appendParams(modifiedUrl, params);\n    };\n    /**\n     * Return the URL used for this ArcGIS source.\n     * @return {string|undefined} URL.\n     * @api\n     */\n    ImageArcGISRest.prototype.getUrl = function () {\n        return this.url_;\n    };\n    /**\n     * Set the image load function of the source.\n     * @param {import(\"../Image.js\").LoadFunction} imageLoadFunction Image load function.\n     * @api\n     */\n    ImageArcGISRest.prototype.setImageLoadFunction = function (imageLoadFunction) {\n        this.image_ = null;\n        this.imageLoadFunction_ = imageLoadFunction;\n        this.changed();\n    };\n    /**\n     * Set the URL to use for requests.\n     * @param {string|undefined} url URL.\n     * @api\n     */\n    ImageArcGISRest.prototype.setUrl = function (url) {\n        if (url != this.url_) {\n            this.url_ = url;\n            this.image_ = null;\n            this.changed();\n        }\n    };\n    /**\n     * Update the user-provided params.\n     * @param {Object} params Params.\n     * @api\n     */\n    ImageArcGISRest.prototype.updateParams = function (params) {\n        assign(this.params_, params);\n        this.image_ = null;\n        this.changed();\n    };\n    return ImageArcGISRest;\n}(ImageSource));\nexport default ImageArcGISRest;\n//# sourceMappingURL=ImageArcGISRest.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/ImageCanvas\n */\nimport ImageBase from './ImageBase.js';\nimport ImageState from './ImageState.js';\n/**\n * A function that is called to trigger asynchronous canvas drawing.  It is\n * called with a \"done\" callback that should be called when drawing is done.\n * If any error occurs during drawing, the \"done\" callback should be called with\n * that error.\n *\n * @typedef {function(function(Error=): void): void} Loader\n */\nvar ImageCanvas = /** @class */ (function (_super) {\n    __extends(ImageCanvas, _super);\n    /**\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {HTMLCanvasElement} canvas Canvas.\n     * @param {Loader=} opt_loader Optional loader function to\n     *     support asynchronous canvas drawing.\n     */\n    function ImageCanvas(extent, resolution, pixelRatio, canvas, opt_loader) {\n        var _this = this;\n        var state = opt_loader !== undefined ? ImageState.IDLE : ImageState.LOADED;\n        _this = _super.call(this, extent, resolution, pixelRatio, state) || this;\n        /**\n         * Optional canvas loader function.\n         * @type {?Loader}\n         * @private\n         */\n        _this.loader_ = opt_loader !== undefined ? opt_loader : null;\n        /**\n         * @private\n         * @type {HTMLCanvasElement}\n         */\n        _this.canvas_ = canvas;\n        /**\n         * @private\n         * @type {Error}\n         */\n        _this.error_ = null;\n        return _this;\n    }\n    /**\n     * Get any error associated with asynchronous rendering.\n     * @return {Error} Any error that occurred during rendering.\n     */\n    ImageCanvas.prototype.getError = function () {\n        return this.error_;\n    };\n    /**\n     * Handle async drawing complete.\n     * @param {Error=} err Any error during drawing.\n     * @private\n     */\n    ImageCanvas.prototype.handleLoad_ = function (err) {\n        if (err) {\n            this.error_ = err;\n            this.state = ImageState.ERROR;\n        }\n        else {\n            this.state = ImageState.LOADED;\n        }\n        this.changed();\n    };\n    /**\n     * @inheritDoc\n     */\n    ImageCanvas.prototype.load = function () {\n        if (this.state == ImageState.IDLE) {\n            this.state = ImageState.LOADING;\n            this.changed();\n            this.loader_(this.handleLoad_.bind(this));\n        }\n    };\n    /**\n     * @return {HTMLCanvasElement} Canvas element.\n     */\n    ImageCanvas.prototype.getImage = function () {\n        return this.canvas_;\n    };\n    return ImageCanvas;\n}(ImageBase));\nexport default ImageCanvas;\n//# sourceMappingURL=ImageCanvas.js.map","/**\n * @module ol/source/ImageCanvas\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport ImageCanvas from '../ImageCanvas.js';\nimport { containsExtent, getHeight, getWidth, scaleFromCenter } from '../extent.js';\nimport ImageSource from './Image.js';\n/**\n * A function returning the canvas element (`{HTMLCanvasElement}`)\n * used by the source as an image. The arguments passed to the function are:\n * {@link module:ol/extent~Extent} the image extent, `{number}` the image resolution,\n * `{number}` the device pixel ratio, {@link module:ol/size~Size} the image size, and\n * {@link module:ol/proj/Projection} the image projection. The canvas returned by\n * this function is cached by the source. The this keyword inside the function\n * references the {@link module:ol/source/ImageCanvas}.\n *\n * @typedef {function(this:import(\"../ImageCanvas.js\").default, import(\"../extent.js\").Extent, number,\n *     number, import(\"../size.js\").Size, import(\"../proj/Projection.js\").default): HTMLCanvasElement} FunctionType\n */\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {FunctionType} [canvasFunction] Canvas function.\n * The function returning the canvas element used by the source\n * as an image. The arguments passed to the function are: `{import(\"../extent.js\").Extent}` the\n * image extent, `{number}` the image resolution, `{number}` the device pixel\n * ratio, `{import(\"../size.js\").Size}` the image size, and `{import(\"../proj/Projection.js\").Projection}` the image\n * projection. The canvas returned by this function is cached by the source. If\n * the value returned by the function is later changed then\n * `changed` should be called on the source for the source to\n * invalidate the current cached image. See: {@link module:ol/Observable~Observable#changed}\n * @property {import(\"../proj.js\").ProjectionLike} projection Projection.\n * @property {number} [ratio=1.5] Ratio. 1 means canvases are the size of the map viewport, 2 means twice the\n * width and height of the map viewport, and so on. Must be `1` or higher.\n * @property {Array<number>} [resolutions] Resolutions.\n * If specified, new canvases will be created for these resolutions\n * @property {import(\"./State.js\").default} [state] Source state.\n */\n/**\n * @classdesc\n * Base class for image sources where a canvas element is the image.\n * @api\n */\nvar ImageCanvasSource = /** @class */ (function (_super) {\n    __extends(ImageCanvasSource, _super);\n    /**\n     * @param {Options=} opt_options ImageCanvas options.\n     */\n    function ImageCanvasSource(opt_options) {\n        var _this = this;\n        var options = opt_options || /** @type {Options} */ ({});\n        _this = _super.call(this, {\n            attributions: options.attributions,\n            projection: options.projection,\n            resolutions: options.resolutions,\n            state: options.state\n        }) || this;\n        /**\n        * @private\n        * @type {FunctionType}\n        */\n        _this.canvasFunction_ = options.canvasFunction;\n        /**\n        * @private\n        * @type {import(\"../ImageCanvas.js\").default}\n        */\n        _this.canvas_ = null;\n        /**\n        * @private\n        * @type {number}\n        */\n        _this.renderedRevision_ = 0;\n        /**\n        * @private\n        * @type {number}\n        */\n        _this.ratio_ = options.ratio !== undefined ?\n            options.ratio : 1.5;\n        return _this;\n    }\n    /**\n    * @inheritDoc\n    */\n    ImageCanvasSource.prototype.getImageInternal = function (extent, resolution, pixelRatio, projection) {\n        resolution = this.findNearestResolution(resolution);\n        var canvas = this.canvas_;\n        if (canvas &&\n            this.renderedRevision_ == this.getRevision() &&\n            canvas.getResolution() == resolution &&\n            canvas.getPixelRatio() == pixelRatio &&\n            containsExtent(canvas.getExtent(), extent)) {\n            return canvas;\n        }\n        extent = extent.slice();\n        scaleFromCenter(extent, this.ratio_);\n        var width = getWidth(extent) / resolution;\n        var height = getHeight(extent) / resolution;\n        var size = [width * pixelRatio, height * pixelRatio];\n        var canvasElement = this.canvasFunction_.call(this, extent, resolution, pixelRatio, size, projection);\n        if (canvasElement) {\n            canvas = new ImageCanvas(extent, resolution, pixelRatio, canvasElement);\n        }\n        this.canvas_ = canvas;\n        this.renderedRevision_ = this.getRevision();\n        return canvas;\n    };\n    return ImageCanvasSource;\n}(ImageSource));\nexport default ImageCanvasSource;\n//# sourceMappingURL=ImageCanvas.js.map","/**\n * @module ol/source/ImageMapGuide\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport ImageWrapper from '../Image.js';\nimport { listen } from '../events.js';\nimport EventType from '../events/EventType.js';\nimport { containsExtent, getCenter, getHeight, getWidth, scaleFromCenter } from '../extent.js';\nimport { assign } from '../obj.js';\nimport ImageSource, { defaultImageLoadFunction } from './Image.js';\nimport { appendParams } from '../uri.js';\n/**\n * @typedef {Object} Options\n * @property {string} [url] The mapagent url.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {number} [displayDpi=96] The display resolution.\n * @property {number} [metersPerUnit=1] The meters-per-unit value.\n * @property {boolean} [hidpi=true] Use the `ol/Map#pixelRatio` value when requesting\n * the image from the remote server.\n * @property {boolean} [useOverlay] If `true`, will use `GETDYNAMICMAPOVERLAYIMAGE`.\n * @property {import(\"../proj.js\").ProjectionLike} projection Projection.\n * @property {number} [ratio=1] Ratio. `1` means image requests are the size of the map viewport, `2` means\n * twice the width and height of the map viewport, and so on. Must be `1` or higher.\n * @property {Array<number>} [resolutions] Resolutions.\n * If specified, requests will be made for these resolutions only.\n * @property {import(\"../Image.js\").LoadFunction} [imageLoadFunction] Optional function to load an image given a URL.\n * @property {Object} [params] Additional parameters.\n */\n/**\n * @classdesc\n * Source for images from Mapguide servers\n *\n * @fires module:ol/source/Image.ImageSourceEvent\n * @api\n */\nvar ImageMapGuide = /** @class */ (function (_super) {\n    __extends(ImageMapGuide, _super);\n    /**\n     * @param {Options} options ImageMapGuide options.\n     */\n    function ImageMapGuide(options) {\n        var _this = _super.call(this, {\n            projection: options.projection,\n            resolutions: options.resolutions\n        }) || this;\n        /**\n         * @private\n         * @type {?string}\n         */\n        _this.crossOrigin_ =\n            options.crossOrigin !== undefined ? options.crossOrigin : null;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.displayDpi_ = options.displayDpi !== undefined ?\n            options.displayDpi : 96;\n        /**\n         * @private\n         * @type {!Object}\n         */\n        _this.params_ = options.params || {};\n        /**\n         * @private\n         * @type {string|undefined}\n         */\n        _this.url_ = options.url;\n        /**\n         * @private\n         * @type {import(\"../Image.js\").LoadFunction}\n         */\n        _this.imageLoadFunction_ = options.imageLoadFunction !== undefined ?\n            options.imageLoadFunction : defaultImageLoadFunction;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.metersPerUnit_ = options.metersPerUnit !== undefined ?\n            options.metersPerUnit : 1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.ratio_ = options.ratio !== undefined ? options.ratio : 1;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.useOverlay_ = options.useOverlay !== undefined ?\n            options.useOverlay : false;\n        /**\n         * @private\n         * @type {import(\"../Image.js\").default}\n         */\n        _this.image_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.renderedRevision_ = 0;\n        return _this;\n    }\n    /**\n     * Get the user-provided params, i.e. those passed to the constructor through\n     * the \"params\" option, and possibly updated using the updateParams method.\n     * @return {Object} Params.\n     * @api\n     */\n    ImageMapGuide.prototype.getParams = function () {\n        return this.params_;\n    };\n    /**\n     * @inheritDoc\n     */\n    ImageMapGuide.prototype.getImageInternal = function (extent, resolution, pixelRatio, projection) {\n        resolution = this.findNearestResolution(resolution);\n        pixelRatio = this.hidpi_ ? pixelRatio : 1;\n        var image = this.image_;\n        if (image &&\n            this.renderedRevision_ == this.getRevision() &&\n            image.getResolution() == resolution &&\n            image.getPixelRatio() == pixelRatio &&\n            containsExtent(image.getExtent(), extent)) {\n            return image;\n        }\n        if (this.ratio_ != 1) {\n            extent = extent.slice();\n            scaleFromCenter(extent, this.ratio_);\n        }\n        var width = getWidth(extent) / resolution;\n        var height = getHeight(extent) / resolution;\n        var size = [width * pixelRatio, height * pixelRatio];\n        if (this.url_ !== undefined) {\n            var imageUrl = this.getUrl(this.url_, this.params_, extent, size, projection);\n            image = new ImageWrapper(extent, resolution, pixelRatio, imageUrl, this.crossOrigin_, this.imageLoadFunction_);\n            listen(image, EventType.CHANGE, this.handleImageChange, this);\n        }\n        else {\n            image = null;\n        }\n        this.image_ = image;\n        this.renderedRevision_ = this.getRevision();\n        return image;\n    };\n    /**\n     * Return the image load function of the source.\n     * @return {import(\"../Image.js\").LoadFunction} The image load function.\n     * @api\n     */\n    ImageMapGuide.prototype.getImageLoadFunction = function () {\n        return this.imageLoadFunction_;\n    };\n    /**\n     * Update the user-provided params.\n     * @param {Object} params Params.\n     * @api\n     */\n    ImageMapGuide.prototype.updateParams = function (params) {\n        assign(this.params_, params);\n        this.changed();\n    };\n    /**\n     * @param {string} baseUrl The mapagent url.\n     * @param {Object<string, string|number>} params Request parameters.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {import(\"../size.js\").Size} size Size.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {string} The mapagent map image request URL.\n     */\n    ImageMapGuide.prototype.getUrl = function (baseUrl, params, extent, size, projection) {\n        var scale = getScale(extent, size, this.metersPerUnit_, this.displayDpi_);\n        var center = getCenter(extent);\n        var baseParams = {\n            'OPERATION': this.useOverlay_ ? 'GETDYNAMICMAPOVERLAYIMAGE' : 'GETMAPIMAGE',\n            'VERSION': '2.0.0',\n            'LOCALE': 'en',\n            'CLIENTAGENT': 'ol/source/ImageMapGuide source',\n            'CLIP': '1',\n            'SETDISPLAYDPI': this.displayDpi_,\n            'SETDISPLAYWIDTH': Math.round(size[0]),\n            'SETDISPLAYHEIGHT': Math.round(size[1]),\n            'SETVIEWSCALE': scale,\n            'SETVIEWCENTERX': center[0],\n            'SETVIEWCENTERY': center[1]\n        };\n        assign(baseParams, params);\n        return appendParams(baseUrl, baseParams);\n    };\n    /**\n     * Set the image load function of the MapGuide source.\n     * @param {import(\"../Image.js\").LoadFunction} imageLoadFunction Image load function.\n     * @api\n     */\n    ImageMapGuide.prototype.setImageLoadFunction = function (imageLoadFunction) {\n        this.image_ = null;\n        this.imageLoadFunction_ = imageLoadFunction;\n        this.changed();\n    };\n    return ImageMapGuide;\n}(ImageSource));\n/**\n * @param {import(\"../extent.js\").Extent} extent The map extents.\n * @param {import(\"../size.js\").Size} size The viewport size.\n * @param {number} metersPerUnit The meters-per-unit value.\n * @param {number} dpi The display resolution.\n * @return {number} The computed map scale.\n */\nfunction getScale(extent, size, metersPerUnit, dpi) {\n    var mcsW = getWidth(extent);\n    var mcsH = getHeight(extent);\n    var devW = size[0];\n    var devH = size[1];\n    var mpp = 0.0254 / dpi;\n    if (devH * mcsW > devW * mcsH) {\n        return mcsW * metersPerUnit / (devW * mpp); // width limited\n    }\n    else {\n        return mcsH * metersPerUnit / (devH * mpp); // height limited\n    }\n}\nexport default ImageMapGuide;\n//# sourceMappingURL=ImageMapGuide.js.map","/**\n * @module ol/source/ImageStatic\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport ImageWrapper from '../Image.js';\nimport ImageState from '../ImageState.js';\nimport { createCanvasContext2D } from '../dom.js';\nimport { listen } from '../events.js';\nimport EventType from '../events/EventType.js';\nimport { intersects, getHeight, getWidth } from '../extent.js';\nimport { get as getProjection } from '../proj.js';\nimport ImageSource, { defaultImageLoadFunction } from './Image.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {import(\"../extent.js\").Extent} [imageExtent] Extent of the image in map coordinates.\n * This is the [left, bottom, right, top] map coordinates of your image.\n * @property {import(\"../Image.js\").LoadFunction} [imageLoadFunction] Optional function to load an image given a URL.\n * @property {import(\"../proj.js\").ProjectionLike} projection Projection.\n * @property {import(\"../size.js\").Size} [imageSize] Size of the image in pixels. Usually the image size is auto-detected, so this\n * only needs to be set if auto-detection fails for some reason.\n * @property {string} url Image URL.\n */\n/**\n * @classdesc\n * A layer source for displaying a single, static image.\n * @api\n */\nvar Static = /** @class */ (function (_super) {\n    __extends(Static, _super);\n    /**\n     * @param {Options} options ImageStatic options.\n     */\n    function Static(options) {\n        var _this = this;\n        var crossOrigin = options.crossOrigin !== undefined ?\n            options.crossOrigin : null;\n        var /** @type {import(\"../Image.js\").LoadFunction} */ imageLoadFunction = options.imageLoadFunction !== undefined ?\n            options.imageLoadFunction : defaultImageLoadFunction;\n        _this = _super.call(this, {\n            attributions: options.attributions,\n            projection: getProjection(options.projection)\n        }) || this;\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.url_ = options.url;\n        /**\n         * @private\n         * @type {import(\"../extent.js\").Extent}\n         */\n        _this.imageExtent_ = options.imageExtent;\n        /**\n         * @private\n         * @type {import(\"../Image.js\").default}\n         */\n        _this.image_ = new ImageWrapper(_this.imageExtent_, undefined, 1, _this.url_, crossOrigin, imageLoadFunction);\n        /**\n         * @private\n         * @type {import(\"../size.js\").Size}\n         */\n        _this.imageSize_ = options.imageSize ? options.imageSize : null;\n        listen(_this.image_, EventType.CHANGE, _this.handleImageChange, _this);\n        return _this;\n    }\n    /**\n     * Returns the image extent\n     * @return {import(\"../extent.js\").Extent} image extent.\n     * @api\n     */\n    Static.prototype.getImageExtent = function () {\n        return this.imageExtent_;\n    };\n    /**\n     * @inheritDoc\n     */\n    Static.prototype.getImageInternal = function (extent, resolution, pixelRatio, projection) {\n        if (intersects(extent, this.image_.getExtent())) {\n            return this.image_;\n        }\n        return null;\n    };\n    /**\n     * Return the URL used for this image source.\n     * @return {string} URL.\n     * @api\n     */\n    Static.prototype.getUrl = function () {\n        return this.url_;\n    };\n    /**\n     * @inheritDoc\n     */\n    Static.prototype.handleImageChange = function (evt) {\n        if (this.image_.getState() == ImageState.LOADED) {\n            var imageExtent = this.image_.getExtent();\n            var image = this.image_.getImage();\n            var imageWidth = void 0, imageHeight = void 0;\n            if (this.imageSize_) {\n                imageWidth = this.imageSize_[0];\n                imageHeight = this.imageSize_[1];\n            }\n            else {\n                imageWidth = image.width;\n                imageHeight = image.height;\n            }\n            var resolution = getHeight(imageExtent) / imageHeight;\n            var targetWidth = Math.ceil(getWidth(imageExtent) / resolution);\n            if (targetWidth != imageWidth) {\n                var context = createCanvasContext2D(targetWidth, imageHeight);\n                var canvas = context.canvas;\n                context.drawImage(image, 0, 0, imageWidth, imageHeight, 0, 0, canvas.width, canvas.height);\n                this.image_.setImage(canvas);\n            }\n        }\n        _super.prototype.handleImageChange.call(this, evt);\n    };\n    return Static;\n}(ImageSource));\nexport default Static;\n//# sourceMappingURL=ImageStatic.js.map","/**\n * @module ol/source/common\n */\n/**\n * Default WMS version.\n * @type {string}\n */\nexport var DEFAULT_WMS_VERSION = '1.3.0';\n//# sourceMappingURL=common.js.map","/**\n * @module ol/source/WMSServerType\n */\n/**\n * Available server types: `'carmentaserver'`, `'geoserver'`, `'mapserver'`,\n *     `'qgis'`. These are servers that have vendor parameters beyond the WMS\n *     specification that OpenLayers can make use of.\n * @enum {string}\n */\nexport default {\n    CARMENTA_SERVER: 'carmentaserver',\n    GEOSERVER: 'geoserver',\n    MAPSERVER: 'mapserver',\n    QGIS: 'qgis'\n};\n//# sourceMappingURL=WMSServerType.js.map","/**\n * @module ol/source/ImageWMS\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { DEFAULT_WMS_VERSION } from './common.js';\nimport ImageWrapper from '../Image.js';\nimport { assert } from '../asserts.js';\nimport { listen } from '../events.js';\nimport EventType from '../events/EventType.js';\nimport { containsExtent, getCenter, getForViewAndSize, getHeight, getWidth } from '../extent.js';\nimport { assign } from '../obj.js';\nimport { get as getProjection, transform } from '../proj.js';\nimport { calculateSourceResolution } from '../reproj.js';\nimport ImageSource, { defaultImageLoadFunction } from './Image.js';\nimport WMSServerType from './WMSServerType.js';\nimport { compareVersions } from '../string.js';\nimport { appendParams } from '../uri.js';\n/**\n * @const\n * @type {import(\"../size.js\").Size}\n */\nvar GETFEATUREINFO_IMAGE_SIZE = [101, 101];\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [hidpi=true] Use the `ol/Map#pixelRatio` value when requesting\n * the image from the remote server.\n * @property {import(\"./WMSServerType.js\").default|string} [serverType] The type of\n * the remote WMS server: `mapserver`, `geoserver` or `qgis`. Only needed if `hidpi` is `true`.\n * @property {import(\"../Image.js\").LoadFunction} [imageLoadFunction] Optional function to load an image given a URL.\n * @property {Object<string,*>} params WMS request parameters.\n * At least a `LAYERS` param is required. `STYLES` is\n * `''` by default. `VERSION` is `1.3.0` by default. `WIDTH`, `HEIGHT`, `BBOX`\n * and `CRS` (`SRS` for WMS version < 1.3.0) will be set dynamically.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [ratio=1.5] Ratio. `1` means image requests are the size of the map viewport, `2` means\n * twice the width and height of the map viewport, and so on. Must be `1` or\n * higher.\n * @property {Array<number>} [resolutions] Resolutions.\n * If specified, requests will be made for these resolutions only.\n * @property {string} url WMS service URL.\n */\n/**\n * @classdesc\n * Source for WMS servers providing single, untiled images.\n *\n * @fires module:ol/source/Image.ImageSourceEvent\n * @api\n */\nvar ImageWMS = /** @class */ (function (_super) {\n    __extends(ImageWMS, _super);\n    /**\n     * @param {Options=} [opt_options] ImageWMS options.\n     */\n    function ImageWMS(opt_options) {\n        var _this = this;\n        var options = opt_options || /** @type {Options} */ ({});\n        _this = _super.call(this, {\n            attributions: options.attributions,\n            projection: options.projection,\n            resolutions: options.resolutions\n        }) || this;\n        /**\n         * @private\n         * @type {?string}\n         */\n        _this.crossOrigin_ =\n            options.crossOrigin !== undefined ? options.crossOrigin : null;\n        /**\n         * @private\n         * @type {string|undefined}\n         */\n        _this.url_ = options.url;\n        /**\n         * @private\n         * @type {import(\"../Image.js\").LoadFunction}\n         */\n        _this.imageLoadFunction_ = options.imageLoadFunction !== undefined ?\n            options.imageLoadFunction : defaultImageLoadFunction;\n        /**\n         * @private\n         * @type {!Object}\n         */\n        _this.params_ = options.params || {};\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.v13_ = true;\n        _this.updateV13_();\n        /**\n         * @private\n         * @type {import(\"./WMSServerType.js\").default|undefined}\n         */\n        _this.serverType_ = /** @type {import(\"./WMSServerType.js\").default|undefined} */ (options.serverType);\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n        /**\n         * @private\n         * @type {import(\"../Image.js\").default}\n         */\n        _this.image_ = null;\n        /**\n         * @private\n         * @type {import(\"../size.js\").Size}\n         */\n        _this.imageSize_ = [0, 0];\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.renderedRevision_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.ratio_ = options.ratio !== undefined ? options.ratio : 1.5;\n        return _this;\n    }\n    /**\n     * Return the GetFeatureInfo URL for the passed coordinate, resolution, and\n     * projection. Return `undefined` if the GetFeatureInfo URL cannot be\n     * constructed.\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {number} resolution Resolution.\n     * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n     * @param {!Object} params GetFeatureInfo params. `INFO_FORMAT` at least should\n     *     be provided. If `QUERY_LAYERS` is not provided then the layers specified\n     *     in the `LAYERS` parameter will be used. `VERSION` should not be\n     *     specified here.\n     * @return {string|undefined} GetFeatureInfo URL.\n     * @api\n     */\n    ImageWMS.prototype.getGetFeatureInfoUrl = function (coordinate, resolution, projection, params) {\n        if (this.url_ === undefined) {\n            return undefined;\n        }\n        var projectionObj = getProjection(projection);\n        var sourceProjectionObj = this.getProjection();\n        if (sourceProjectionObj && sourceProjectionObj !== projectionObj) {\n            resolution = calculateSourceResolution(sourceProjectionObj, projectionObj, coordinate, resolution);\n            coordinate = transform(coordinate, projectionObj, sourceProjectionObj);\n        }\n        var extent = getForViewAndSize(coordinate, resolution, 0, GETFEATUREINFO_IMAGE_SIZE);\n        var baseParams = {\n            'SERVICE': 'WMS',\n            'VERSION': DEFAULT_WMS_VERSION,\n            'REQUEST': 'GetFeatureInfo',\n            'FORMAT': 'image/png',\n            'TRANSPARENT': true,\n            'QUERY_LAYERS': this.params_['LAYERS']\n        };\n        assign(baseParams, this.params_, params);\n        var x = Math.floor((coordinate[0] - extent[0]) / resolution);\n        var y = Math.floor((extent[3] - coordinate[1]) / resolution);\n        baseParams[this.v13_ ? 'I' : 'X'] = x;\n        baseParams[this.v13_ ? 'J' : 'Y'] = y;\n        return this.getRequestUrl_(extent, GETFEATUREINFO_IMAGE_SIZE, 1, sourceProjectionObj || projectionObj, baseParams);\n    };\n    /**\n     * Get the user-provided params, i.e. those passed to the constructor through\n     * the \"params\" option, and possibly updated using the updateParams method.\n     * @return {Object} Params.\n     * @api\n     */\n    ImageWMS.prototype.getParams = function () {\n        return this.params_;\n    };\n    /**\n     * @inheritDoc\n     */\n    ImageWMS.prototype.getImageInternal = function (extent, resolution, pixelRatio, projection) {\n        if (this.url_ === undefined) {\n            return null;\n        }\n        resolution = this.findNearestResolution(resolution);\n        if (pixelRatio != 1 && (!this.hidpi_ || this.serverType_ === undefined)) {\n            pixelRatio = 1;\n        }\n        var imageResolution = resolution / pixelRatio;\n        var center = getCenter(extent);\n        var viewWidth = Math.ceil(getWidth(extent) / imageResolution);\n        var viewHeight = Math.ceil(getHeight(extent) / imageResolution);\n        var viewExtent = getForViewAndSize(center, imageResolution, 0, [viewWidth, viewHeight]);\n        var requestWidth = Math.ceil(this.ratio_ * getWidth(extent) / imageResolution);\n        var requestHeight = Math.ceil(this.ratio_ * getHeight(extent) / imageResolution);\n        var requestExtent = getForViewAndSize(center, imageResolution, 0, [requestWidth, requestHeight]);\n        var image = this.image_;\n        if (image &&\n            this.renderedRevision_ == this.getRevision() &&\n            image.getResolution() == resolution &&\n            image.getPixelRatio() == pixelRatio &&\n            containsExtent(image.getExtent(), viewExtent)) {\n            return image;\n        }\n        var params = {\n            'SERVICE': 'WMS',\n            'VERSION': DEFAULT_WMS_VERSION,\n            'REQUEST': 'GetMap',\n            'FORMAT': 'image/png',\n            'TRANSPARENT': true\n        };\n        assign(params, this.params_);\n        this.imageSize_[0] = Math.round(getWidth(requestExtent) / imageResolution);\n        this.imageSize_[1] = Math.round(getHeight(requestExtent) / imageResolution);\n        var url = this.getRequestUrl_(requestExtent, this.imageSize_, pixelRatio, projection, params);\n        this.image_ = new ImageWrapper(requestExtent, resolution, pixelRatio, url, this.crossOrigin_, this.imageLoadFunction_);\n        this.renderedRevision_ = this.getRevision();\n        listen(this.image_, EventType.CHANGE, this.handleImageChange, this);\n        return this.image_;\n    };\n    /**\n     * Return the image load function of the source.\n     * @return {import(\"../Image.js\").LoadFunction} The image load function.\n     * @api\n     */\n    ImageWMS.prototype.getImageLoadFunction = function () {\n        return this.imageLoadFunction_;\n    };\n    /**\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {import(\"../size.js\").Size} size Size.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @param {Object} params Params.\n     * @return {string} Request URL.\n     * @private\n     */\n    ImageWMS.prototype.getRequestUrl_ = function (extent, size, pixelRatio, projection, params) {\n        assert(this.url_ !== undefined, 9); // `url` must be configured or set using `#setUrl()`\n        params[this.v13_ ? 'CRS' : 'SRS'] = projection.getCode();\n        if (!('STYLES' in this.params_)) {\n            params['STYLES'] = '';\n        }\n        if (pixelRatio != 1) {\n            switch (this.serverType_) {\n                case WMSServerType.GEOSERVER:\n                    var dpi = (90 * pixelRatio + 0.5) | 0;\n                    if ('FORMAT_OPTIONS' in params) {\n                        params['FORMAT_OPTIONS'] += ';dpi:' + dpi;\n                    }\n                    else {\n                        params['FORMAT_OPTIONS'] = 'dpi:' + dpi;\n                    }\n                    break;\n                case WMSServerType.MAPSERVER:\n                    params['MAP_RESOLUTION'] = 90 * pixelRatio;\n                    break;\n                case WMSServerType.CARMENTA_SERVER:\n                case WMSServerType.QGIS:\n                    params['DPI'] = 90 * pixelRatio;\n                    break;\n                default:\n                    assert(false, 8); // Unknown `serverType` configured\n                    break;\n            }\n        }\n        params['WIDTH'] = size[0];\n        params['HEIGHT'] = size[1];\n        var axisOrientation = projection.getAxisOrientation();\n        var bbox;\n        if (this.v13_ && axisOrientation.substr(0, 2) == 'ne') {\n            bbox = [extent[1], extent[0], extent[3], extent[2]];\n        }\n        else {\n            bbox = extent;\n        }\n        params['BBOX'] = bbox.join(',');\n        return appendParams(/** @type {string} */ (this.url_), params);\n    };\n    /**\n     * Return the URL used for this WMS source.\n     * @return {string|undefined} URL.\n     * @api\n     */\n    ImageWMS.prototype.getUrl = function () {\n        return this.url_;\n    };\n    /**\n     * Set the image load function of the source.\n     * @param {import(\"../Image.js\").LoadFunction} imageLoadFunction Image load function.\n     * @api\n     */\n    ImageWMS.prototype.setImageLoadFunction = function (imageLoadFunction) {\n        this.image_ = null;\n        this.imageLoadFunction_ = imageLoadFunction;\n        this.changed();\n    };\n    /**\n     * Set the URL to use for requests.\n     * @param {string|undefined} url URL.\n     * @api\n     */\n    ImageWMS.prototype.setUrl = function (url) {\n        if (url != this.url_) {\n            this.url_ = url;\n            this.image_ = null;\n            this.changed();\n        }\n    };\n    /**\n     * Update the user-provided params.\n     * @param {Object} params Params.\n     * @api\n     */\n    ImageWMS.prototype.updateParams = function (params) {\n        assign(this.params_, params);\n        this.updateV13_();\n        this.image_ = null;\n        this.changed();\n    };\n    /**\n     * @private\n     */\n    ImageWMS.prototype.updateV13_ = function () {\n        var version = this.params_['VERSION'] || DEFAULT_WMS_VERSION;\n        this.v13_ = compareVersions(version, '1.3') >= 0;\n    };\n    return ImageWMS;\n}(ImageSource));\nexport default ImageWMS;\n//# sourceMappingURL=ImageWMS.js.map","/**\n * @module ol/source/OSM\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport XYZ from './XYZ.js';\n/**\n * The attribution containing a link to the OpenStreetMap Copyright and License\n * page.\n * @const\n * @type {string}\n * @api\n */\nexport var ATTRIBUTION = '&#169; ' +\n    '<a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> ' +\n    'contributors.';\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize] Tile cache size. The default depends on the screen size. Will increase if too small.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {number} [maxZoom=19] Max zoom.\n * @property {boolean} [opaque=true] Whether the layer is opaque.\n * @property {number} [reprojectionErrorThreshold=1.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {string} [url='https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png'] URL template.\n * Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n */\n/**\n * @classdesc\n * Layer source for the OpenStreetMap tile server.\n * @api\n */\nvar OSM = /** @class */ (function (_super) {\n    __extends(OSM, _super);\n    /**\n     * @param {Options=} [opt_options] Open Street Map options.\n     */\n    function OSM(opt_options) {\n        var _this = this;\n        var options = opt_options || {};\n        var attributions;\n        if (options.attributions !== undefined) {\n            attributions = options.attributions;\n        }\n        else {\n            attributions = [ATTRIBUTION];\n        }\n        var crossOrigin = options.crossOrigin !== undefined ?\n            options.crossOrigin : 'anonymous';\n        var url = options.url !== undefined ?\n            options.url : 'https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png';\n        _this = _super.call(this, {\n            attributions: attributions,\n            cacheSize: options.cacheSize,\n            crossOrigin: crossOrigin,\n            opaque: options.opaque !== undefined ? options.opaque : true,\n            maxZoom: options.maxZoom !== undefined ? options.maxZoom : 19,\n            reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n            tileLoadFunction: options.tileLoadFunction,\n            url: url,\n            wrapX: options.wrapX,\n            attributionsCollapsible: false\n        }) || this;\n        return _this;\n    }\n    return OSM;\n}(XYZ));\nexport default OSM;\n//# sourceMappingURL=OSM.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/layer/BaseImage\n */\nimport Layer from './Layer.js';\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {import(\"../PluggableMap.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link module:ol/Map#addLayer}.\n * @property {import(\"../source/Image.js\").default} [source] Source for this layer.\n */\n/**\n * @classdesc\n * Server-rendered images that are available for arbitrary extents and\n * resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @extends {Layer<import(\"../source/Image.js\").default>}\n * @api\n */\nvar BaseImageLayer = /** @class */ (function (_super) {\n    __extends(BaseImageLayer, _super);\n    /**\n     * @param {Options=} opt_options Layer options.\n     */\n    function BaseImageLayer(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, options) || this;\n        return _this;\n    }\n    return BaseImageLayer;\n}(Layer));\nexport default BaseImageLayer;\n//# sourceMappingURL=BaseImage.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/renderer/Layer\n */\nimport { abstract } from '../util.js';\nimport ImageState from '../ImageState.js';\nimport Observable from '../Observable.js';\nimport { listen } from '../events.js';\nimport EventType from '../events/EventType.js';\nimport SourceState from '../source/State.js';\nvar LayerRenderer = /** @class */ (function (_super) {\n    __extends(LayerRenderer, _super);\n    /**\n     * @param {import(\"../layer/Layer.js\").default} layer Layer.\n     */\n    function LayerRenderer(layer) {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {import(\"../layer/Layer.js\").default}\n         */\n        _this.layer_ = layer;\n        return _this;\n    }\n    /**\n     * Determine whether render should be called.\n     * @abstract\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {import(\"../layer/Layer.js\").State} layerState Layer state.\n     * @return {boolean} Layer is ready to be rendered.\n     */\n    LayerRenderer.prototype.prepareFrame = function (frameState, layerState) {\n        return abstract();\n    };\n    /**\n     * Render the layer.\n     * @abstract\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {import(\"../layer/Layer.js\").State} layerState Layer state.\n     * @return {HTMLElement} The rendered element.\n     */\n    LayerRenderer.prototype.renderFrame = function (frameState, layerState) {\n        return abstract();\n    };\n    /**\n     * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n     * @param {number} zoom Zoom level.\n     * @param {import(\"../Tile.js\").default} tile Tile.\n     */\n    LayerRenderer.prototype.loadedTileCallback = function (tiles, zoom, tile) {\n        if (!tiles[zoom]) {\n            tiles[zoom] = {};\n        }\n        tiles[zoom][tile.tileCoord.toString()] = tile;\n    };\n    /**\n     * Create a function that adds loaded tiles to the tile lookup.\n     * @param {import(\"../source/Tile.js\").default} source Tile source.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection of the tiles.\n     * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n     * @return {function(number, import(\"../TileRange.js\").default):boolean} A function that can be\n     *     called with a zoom level and a tile range to add loaded tiles to the lookup.\n     * @protected\n     */\n    LayerRenderer.prototype.createLoadedTileFinder = function (source, projection, tiles) {\n        return (\n        /**\n         * @param {number} zoom Zoom level.\n         * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n         * @return {boolean} The tile range is fully loaded.\n         * @this {LayerRenderer}\n         */\n        function (zoom, tileRange) {\n            var callback = this.loadedTileCallback.bind(this, tiles, zoom);\n            return source.forEachLoadedTile(projection, zoom, tileRange, callback);\n        }).bind(this);\n    };\n    /**\n     * @abstract\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @param {function(import(\"../Feature.js\").FeatureLike, import(\"../layer/Layer.js\").default): T} callback Feature callback.\n     * @param {Array<import(\"../Feature.js\").FeatureLike>} declutteredFeatures Decluttered features.\n     * @return {T|void} Callback result.\n     * @template T\n     */\n    LayerRenderer.prototype.forEachFeatureAtCoordinate = function (coordinate, frameState, hitTolerance, callback, declutteredFeatures) { };\n    /**\n     * @abstract\n     * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @return {Uint8ClampedArray|Uint8Array} The result.  If there is no data at the pixel\n     *    location, null will be returned.  If there is data, but pixel values cannot be\n     *    returned, and empty array will be returned.\n     */\n    LayerRenderer.prototype.getDataAtPixel = function (pixel, frameState, hitTolerance) {\n        return abstract();\n    };\n    /**\n     * @return {import(\"../layer/Layer.js\").default} Layer.\n     */\n    LayerRenderer.prototype.getLayer = function () {\n        return this.layer_;\n    };\n    /**\n     * Handle changes in image state.\n     * @param {import(\"../events/Event.js\").default} event Image change event.\n     * @private\n     */\n    LayerRenderer.prototype.handleImageChange_ = function (event) {\n        var image = /** @type {import(\"../Image.js\").default} */ (event.target);\n        if (image.getState() === ImageState.LOADED) {\n            this.renderIfReadyAndVisible();\n        }\n    };\n    /**\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     * @return {boolean} Is there a feature at the given coordinate?\n     */\n    LayerRenderer.prototype.hasFeatureAtCoordinate = function (coordinate, frameState) {\n        return false;\n    };\n    /**\n     * Load the image if not already loaded, and register the image change\n     * listener if needed.\n     * @param {import(\"../ImageBase.js\").default} image Image.\n     * @return {boolean} `true` if the image is already loaded, `false` otherwise.\n     * @protected\n     */\n    LayerRenderer.prototype.loadImage = function (image) {\n        var imageState = image.getState();\n        if (imageState != ImageState.LOADED && imageState != ImageState.ERROR) {\n            listen(image, EventType.CHANGE, this.handleImageChange_, this);\n        }\n        if (imageState == ImageState.IDLE) {\n            image.load();\n            imageState = image.getState();\n        }\n        return imageState == ImageState.LOADED;\n    };\n    /**\n     * @protected\n     */\n    LayerRenderer.prototype.renderIfReadyAndVisible = function () {\n        var layer = this.getLayer();\n        if (layer.getVisible() && layer.getSourceState() == SourceState.READY) {\n            layer.changed();\n        }\n    };\n    return LayerRenderer;\n}(Observable));\nexport default LayerRenderer;\n//# sourceMappingURL=Layer.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/renderer/canvas/Layer\n */\nimport { getBottomLeft, getBottomRight, getTopLeft, getTopRight } from '../../extent.js';\nimport { createCanvasContext2D } from '../../dom.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport { rotateAtOffset } from '../../render/canvas.js';\nimport LayerRenderer from '../Layer.js';\nimport { create as createTransform, apply as applyTransform, compose as composeTransform } from '../../transform.js';\n/**\n * @abstract\n */\nvar CanvasLayerRenderer = /** @class */ (function (_super) {\n    __extends(CanvasLayerRenderer, _super);\n    /**\n     * @param {import(\"../../layer/Layer.js\").default} layer Layer.\n     */\n    function CanvasLayerRenderer(layer) {\n        var _this = _super.call(this, layer) || this;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.renderedResolution;\n        /**\n         * A temporary transform.  The values in this transform should only be used in a\n         * function that sets the values.\n         * @private\n         * @type {import(\"../../transform.js\").Transform}\n         */\n        _this.tempTransform_ = createTransform();\n        /**\n         * The transform for rendered pixels to viewport CSS pixels.  This transform must\n         * be set when rendering a frame and may be used by other functions after rendering.\n         * @private\n         * @type {import(\"../../transform.js\").Transform}\n         */\n        _this.pixelTransform_ = createTransform();\n        /**\n         * The transform for viewport CSS pixels to rendered pixels.  This transform must\n         * be set when rendering a frame and may be used by other functions after rendering.\n         * @private\n         * @type {import(\"../../transform.js\").Transform}\n         */\n        _this.inversePixelTransform_ = createTransform();\n        /**\n         * @protected\n         * @type {CanvasRenderingContext2D}\n         */\n        _this.context = createCanvasContext2D();\n        var canvas = _this.context.canvas;\n        canvas.style.position = 'absolute';\n        canvas.style.transformOrigin = 'top left';\n        canvas.className = _this.getLayer().getClassName();\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    CanvasLayerRenderer.prototype.disposeInternal = function () {\n        this.context.canvas.width = this.context.canvas.height = 0;\n        _super.prototype.disposeInternal.call(this);\n    };\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {import(\"../../extent.js\").Extent} extent Clip extent.\n     * @protected\n     */\n    CanvasLayerRenderer.prototype.clip = function (context, frameState, extent) {\n        var pixelRatio = frameState.pixelRatio;\n        var halfWidth = (frameState.size[0] * pixelRatio) / 2;\n        var halfHeight = (frameState.size[1] * pixelRatio) / 2;\n        var rotation = frameState.viewState.rotation;\n        var topLeft = getTopLeft(extent);\n        var topRight = getTopRight(extent);\n        var bottomRight = getBottomRight(extent);\n        var bottomLeft = getBottomLeft(extent);\n        applyTransform(frameState.coordinateToPixelTransform, topLeft);\n        applyTransform(frameState.coordinateToPixelTransform, topRight);\n        applyTransform(frameState.coordinateToPixelTransform, bottomRight);\n        applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\n        context.save();\n        rotateAtOffset(context, -rotation, halfWidth, halfHeight);\n        context.beginPath();\n        context.moveTo(topLeft[0] * pixelRatio, topLeft[1] * pixelRatio);\n        context.lineTo(topRight[0] * pixelRatio, topRight[1] * pixelRatio);\n        context.lineTo(bottomRight[0] * pixelRatio, bottomRight[1] * pixelRatio);\n        context.lineTo(bottomLeft[0] * pixelRatio, bottomLeft[1] * pixelRatio);\n        context.clip();\n        rotateAtOffset(context, rotation, halfWidth, halfHeight);\n    };\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {import(\"../../extent.js\").Extent} extent Clip extent.\n     * @protected\n     */\n    CanvasLayerRenderer.prototype.clipUnrotated = function (context, frameState, extent) {\n        var topLeft = getTopLeft(extent);\n        var topRight = getTopRight(extent);\n        var bottomRight = getBottomRight(extent);\n        var bottomLeft = getBottomLeft(extent);\n        applyTransform(frameState.coordinateToPixelTransform, topLeft);\n        applyTransform(frameState.coordinateToPixelTransform, topRight);\n        applyTransform(frameState.coordinateToPixelTransform, bottomRight);\n        applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\n        var inverted = this.inversePixelTransform_;\n        applyTransform(inverted, topLeft);\n        applyTransform(inverted, topRight);\n        applyTransform(inverted, bottomRight);\n        applyTransform(inverted, bottomLeft);\n        context.save();\n        context.beginPath();\n        context.moveTo(Math.round(topLeft[0]), Math.round(topLeft[1]));\n        context.lineTo(Math.round(topRight[0]), Math.round(topRight[1]));\n        context.lineTo(Math.round(bottomRight[0]), Math.round(bottomRight[1]));\n        context.lineTo(Math.round(bottomLeft[0]), Math.round(bottomLeft[1]));\n        context.clip();\n    };\n    /**\n     * @param {import(\"../../render/EventType.js\").default} type Event type.\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @private\n     */\n    CanvasLayerRenderer.prototype.dispatchRenderEvent_ = function (type, context, frameState) {\n        var layer = this.getLayer();\n        if (layer.hasListener(type)) {\n            var event_1 = new RenderEvent(type, this.inversePixelTransform_, frameState, context, null);\n            layer.dispatchEvent(event_1);\n        }\n    };\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @protected\n     */\n    CanvasLayerRenderer.prototype.preRender = function (context, frameState) {\n        this.dispatchRenderEvent_(RenderEventType.PRERENDER, context, frameState);\n    };\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @protected\n     */\n    CanvasLayerRenderer.prototype.postRender = function (context, frameState) {\n        this.dispatchRenderEvent_(RenderEventType.POSTRENDER, context, frameState);\n    };\n    /**\n     * Creates a transform for rendering to an element that will be rotated after rendering.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {number} width Width of the rendered element (in pixels).\n     * @param {number} height Height of the rendered element (in pixels).\n     * @param {number} offsetX Offset on the x-axis in view coordinates.\n     * @protected\n     * @return {!import(\"../../transform.js\").Transform} Transform.\n     */\n    CanvasLayerRenderer.prototype.getRenderTransform = function (frameState, width, height, offsetX) {\n        var viewState = frameState.viewState;\n        var pixelRatio = frameState.pixelRatio;\n        var dx1 = width / 2;\n        var dy1 = height / 2;\n        var sx = pixelRatio / viewState.resolution;\n        var sy = -sx;\n        var dx2 = -viewState.center[0] + offsetX;\n        var dy2 = -viewState.center[1];\n        return composeTransform(this.tempTransform_, dx1, dy1, sx, sy, -viewState.rotation, dx2, dy2);\n    };\n    /**\n     * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState FrameState.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @return {Uint8ClampedArray|Uint8Array} The result.  If there is no data at the pixel\n     *    location, null will be returned.  If there is data, but pixel values cannot be\n     *    returned, and empty array will be returned.\n     */\n    CanvasLayerRenderer.prototype.getDataAtPixel = function (pixel, frameState, hitTolerance) {\n        var renderPixel = applyTransform(this.inversePixelTransform_, pixel.slice());\n        var context = this.context;\n        var data;\n        try {\n            data = context.getImageData(Math.round(renderPixel[0]), Math.round(renderPixel[1]), 1, 1).data;\n        }\n        catch (err) {\n            if (err.name === 'SecurityError') {\n                // tainted canvas, we assume there is data at the given pixel (although there might not be)\n                return new Uint8Array();\n            }\n            return data;\n        }\n        if (data[3] === 0) {\n            return null;\n        }\n        return data;\n    };\n    return CanvasLayerRenderer;\n}(LayerRenderer));\nexport default CanvasLayerRenderer;\n//# sourceMappingURL=Layer.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/renderer/canvas/ImageLayer\n */\nimport { ENABLE_RASTER_REPROJECTION } from '../../reproj/common.js';\nimport ViewHint from '../../ViewHint.js';\nimport { containsExtent, intersects } from '../../extent.js';\nimport { getIntersection, isEmpty } from '../../extent.js';\nimport CanvasLayerRenderer from './Layer.js';\nimport { compose as composeTransform, makeInverse, toString as transformToString } from '../../transform.js';\n/**\n * @classdesc\n * Canvas renderer for image layers.\n * @api\n */\nvar CanvasImageLayerRenderer = /** @class */ (function (_super) {\n    __extends(CanvasImageLayerRenderer, _super);\n    /**\n     * @param {import(\"../../layer/Image.js\").default} imageLayer Image layer.\n     */\n    function CanvasImageLayerRenderer(imageLayer) {\n        var _this = _super.call(this, imageLayer) || this;\n        /**\n         * @protected\n         * @type {?import(\"../../ImageBase.js\").default}\n         */\n        _this.image_ = null;\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    CanvasImageLayerRenderer.prototype.getImage = function () {\n        return !this.image_ ? null : this.image_.getImage();\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasImageLayerRenderer.prototype.prepareFrame = function (frameState, layerState) {\n        var pixelRatio = frameState.pixelRatio;\n        var viewState = frameState.viewState;\n        var viewResolution = viewState.resolution;\n        var imageSource = this.getLayer().getSource();\n        var hints = frameState.viewHints;\n        var renderedExtent = frameState.extent;\n        if (layerState.extent !== undefined) {\n            renderedExtent = getIntersection(renderedExtent, layerState.extent);\n        }\n        if (!hints[ViewHint.ANIMATING] && !hints[ViewHint.INTERACTING] && !isEmpty(renderedExtent)) {\n            var projection = viewState.projection;\n            if (!ENABLE_RASTER_REPROJECTION) {\n                var sourceProjection = imageSource.getProjection();\n                if (sourceProjection) {\n                    projection = sourceProjection;\n                }\n            }\n            var image = imageSource.getImage(renderedExtent, viewResolution, pixelRatio, projection);\n            if (image && this.loadImage(image)) {\n                this.image_ = image;\n            }\n        }\n        return !!this.image_;\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasImageLayerRenderer.prototype.renderFrame = function (frameState, layerState) {\n        var image = this.image_;\n        var imageExtent = image.getExtent();\n        var imageResolution = image.getResolution();\n        var imagePixelRatio = image.getPixelRatio();\n        var pixelRatio = frameState.pixelRatio;\n        var viewState = frameState.viewState;\n        var viewCenter = viewState.center;\n        var viewResolution = viewState.resolution;\n        var size = frameState.size;\n        var scale = pixelRatio * imageResolution / (viewResolution * imagePixelRatio);\n        var width = Math.round(size[0] * pixelRatio);\n        var height = Math.round(size[1] * pixelRatio);\n        var rotation = viewState.rotation;\n        if (rotation) {\n            var size_1 = Math.round(Math.sqrt(width * width + height * height));\n            width = height = size_1;\n        }\n        // set forward and inverse pixel transforms\n        composeTransform(this.pixelTransform_, frameState.size[0] / 2, frameState.size[1] / 2, 1 / pixelRatio, 1 / pixelRatio, rotation, -width / 2, -height / 2);\n        makeInverse(this.inversePixelTransform_, this.pixelTransform_);\n        var context = this.context;\n        var canvas = context.canvas;\n        if (canvas.width != width || canvas.height != height) {\n            canvas.width = width;\n            canvas.height = height;\n        }\n        else {\n            context.clearRect(0, 0, width, height);\n        }\n        // clipped rendering if layer extent is set\n        var extent = layerState.extent;\n        var clipped = extent !== undefined &&\n            !containsExtent(extent, frameState.extent) &&\n            intersects(extent, frameState.extent);\n        if (clipped) {\n            this.clip(context, frameState, extent);\n        }\n        var img = image.getImage();\n        var transform = composeTransform(this.tempTransform_, width / 2, height / 2, scale, scale, 0, imagePixelRatio * (imageExtent[0] - viewCenter[0]) / imageResolution, imagePixelRatio * (viewCenter[1] - imageExtent[3]) / imageResolution);\n        this.renderedResolution = imageResolution * pixelRatio / imagePixelRatio;\n        var dx = transform[4];\n        var dy = transform[5];\n        var dw = img.width * transform[0];\n        var dh = img.height * transform[3];\n        this.preRender(context, frameState);\n        if (dw >= 0.5 && dh >= 0.5) {\n            this.context.drawImage(img, 0, 0, +img.width, +img.height, Math.round(dx), Math.round(dy), Math.round(dw), Math.round(dh));\n        }\n        this.postRender(context, frameState);\n        if (clipped) {\n            context.restore();\n        }\n        var opacity = layerState.opacity;\n        if (opacity !== parseFloat(canvas.style.opacity)) {\n            canvas.style.opacity = opacity;\n        }\n        var canvasTransform = transformToString(this.pixelTransform_);\n        if (canvasTransform !== canvas.style.transform) {\n            canvas.style.transform = canvasTransform;\n        }\n        return canvas;\n    };\n    return CanvasImageLayerRenderer;\n}(CanvasLayerRenderer));\nexport default CanvasImageLayerRenderer;\n//# sourceMappingURL=ImageLayer.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/layer/Image\n */\nimport BaseImageLayer from './BaseImage.js';\nimport CanvasImageLayerRenderer from '../renderer/canvas/ImageLayer.js';\n/**\n * @typedef {import(\"./BaseImage.js\").Options} Options\n */\n/**\n * @classdesc\n * Server-rendered images that are available for arbitrary extents and\n * resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @api\n */\nvar ImageLayer = /** @class */ (function (_super) {\n    __extends(ImageLayer, _super);\n    /**\n     * @param {Options=} opt_options Layer options.\n     */\n    function ImageLayer(opt_options) {\n        return _super.call(this, opt_options) || this;\n    }\n    /**\n     * Create a renderer for this layer.\n     * @return {import(\"../renderer/Layer.js\").default} A layer renderer.\n     * @protected\n     */\n    ImageLayer.prototype.createRenderer = function () {\n        return new CanvasImageLayerRenderer(this);\n    };\n    return ImageLayer;\n}(BaseImageLayer));\nexport default ImageLayer;\n//# sourceMappingURL=Image.js.map","/**\n * @module ol/layer/TileProperty\n */\n/**\n * @enum {string}\n */\nexport default {\n    PRELOAD: 'preload',\n    USE_INTERIM_TILES_ON_ERROR: 'useInterimTilesOnError'\n};\n//# sourceMappingURL=TileProperty.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/layer/BaseTile\n */\nimport Layer from './Layer.js';\nimport TileProperty from './TileProperty.js';\nimport { assign } from '../obj.js';\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {import(\"../source/Tile.js\").default} [source] Source for this layer.\n * @property {import(\"../PluggableMap.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link module:ol/Map#addLayer}.\n * @property {boolean} [useInterimTilesOnError=true] Use interim tiles on error.\n */\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @extends {Layer<import(\"../source/Tile.js\").default>}\n * @api\n */\nvar BaseTileLayer = /** @class */ (function (_super) {\n    __extends(BaseTileLayer, _super);\n    /**\n     * @param {Options=} opt_options Tile layer options.\n     */\n    function BaseTileLayer(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        var baseOptions = assign({}, options);\n        delete baseOptions.preload;\n        delete baseOptions.useInterimTilesOnError;\n        _this = _super.call(this, baseOptions) || this;\n        _this.setPreload(options.preload !== undefined ? options.preload : 0);\n        _this.setUseInterimTilesOnError(options.useInterimTilesOnError !== undefined ?\n            options.useInterimTilesOnError : true);\n        return _this;\n    }\n    /**\n    * Return the level as number to which we will preload tiles up to.\n    * @return {number} The level to preload tiles up to.\n    * @observable\n    * @api\n    */\n    BaseTileLayer.prototype.getPreload = function () {\n        return /** @type {number} */ (this.get(TileProperty.PRELOAD));\n    };\n    /**\n    * Set the level as number to which we will preload tiles up to.\n    * @param {number} preload The level to preload tiles up to.\n    * @observable\n    * @api\n    */\n    BaseTileLayer.prototype.setPreload = function (preload) {\n        this.set(TileProperty.PRELOAD, preload);\n    };\n    /**\n    * Whether we use interim tiles on error.\n    * @return {boolean} Use interim tiles on error.\n    * @observable\n    * @api\n    */\n    BaseTileLayer.prototype.getUseInterimTilesOnError = function () {\n        return /** @type {boolean} */ (this.get(TileProperty.USE_INTERIM_TILES_ON_ERROR));\n    };\n    /**\n    * Set whether we use interim tiles on error.\n    * @param {boolean} useInterimTilesOnError Use interim tiles on error.\n    * @observable\n    * @api\n    */\n    BaseTileLayer.prototype.setUseInterimTilesOnError = function (useInterimTilesOnError) {\n        this.set(TileProperty.USE_INTERIM_TILES_ON_ERROR, useInterimTilesOnError);\n    };\n    return BaseTileLayer;\n}(Layer));\nexport default BaseTileLayer;\n//# sourceMappingURL=BaseTile.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/renderer/canvas/TileLayer\n */\nimport { getUid } from '../../util.js';\nimport TileRange from '../../TileRange.js';\nimport TileState from '../../TileState.js';\nimport { createEmpty, equals, getIntersection, getTopLeft } from '../../extent.js';\nimport CanvasLayerRenderer from './Layer.js';\nimport { apply as applyTransform, compose as composeTransform, makeInverse, toString as transformToString } from '../../transform.js';\n/**\n * @classdesc\n * Canvas renderer for tile layers.\n * @api\n */\nvar CanvasTileLayerRenderer = /** @class */ (function (_super) {\n    __extends(CanvasTileLayerRenderer, _super);\n    /**\n     * @param {import(\"../../layer/Tile.js\").default|import(\"../../layer/VectorTile.js\").default} tileLayer Tile layer.\n     */\n    function CanvasTileLayerRenderer(tileLayer) {\n        var _this = _super.call(this, tileLayer) || this;\n        /**\n         * Rendered extent has changed since the previous `renderFrame()` call\n         * @type {boolean}\n         */\n        _this.extentChanged = true;\n        /**\n         * @private\n         * @type {import(\"../../extent.js\").Extent}\n         */\n        _this.renderedExtent_ = null;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.renderedRevision;\n        /**\n         * @protected\n         * @type {!Array<import(\"../../Tile.js\").default>}\n         */\n        _this.renderedTiles = [];\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.newTiles_ = false;\n        /**\n         * @protected\n         * @type {import(\"../../extent.js\").Extent}\n         */\n        _this.tmpExtent = createEmpty();\n        /**\n         * @private\n         * @type {import(\"../../TileRange.js\").default}\n         */\n        _this.tmpTileRange_ = new TileRange(0, 0, 0, 0);\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.zDirection = 0;\n        return _this;\n    }\n    /**\n     * @protected\n     * @param {import(\"../../Tile.js\").default} tile Tile.\n     * @return {boolean} Tile is drawable.\n     */\n    CanvasTileLayerRenderer.prototype.isDrawableTile = function (tile) {\n        var tileLayer = /** @type {import(\"../../layer/Tile.js\").default} */ (this.getLayer());\n        var tileState = tile.getState();\n        var useInterimTilesOnError = tileLayer.getUseInterimTilesOnError();\n        return tileState == TileState.LOADED ||\n            tileState == TileState.EMPTY ||\n            tileState == TileState.ERROR && !useInterimTilesOnError;\n    };\n    /**\n     * @param {number} z Tile coordinate z.\n     * @param {number} x Tile coordinate x.\n     * @param {number} y Tile coordinate y.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @return {!import(\"../../Tile.js\").default} Tile.\n     */\n    CanvasTileLayerRenderer.prototype.getTile = function (z, x, y, frameState) {\n        var pixelRatio = frameState.pixelRatio;\n        var projection = frameState.viewState.projection;\n        var tileLayer = /** @type {import(\"../../layer/Tile.js\").default} */ (this.getLayer());\n        var tileSource = tileLayer.getSource();\n        var tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n        if (tile.getState() == TileState.ERROR) {\n            if (!tileLayer.getUseInterimTilesOnError()) {\n                // When useInterimTilesOnError is false, we consider the error tile as loaded.\n                tile.setState(TileState.LOADED);\n            }\n            else if (tileLayer.getPreload() > 0) {\n                // Preloaded tiles for lower resolutions might have finished loading.\n                this.newTiles_ = true;\n            }\n        }\n        if (!this.isDrawableTile(tile)) {\n            tile = tile.getInterimTile();\n        }\n        return tile;\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasTileLayerRenderer.prototype.loadedTileCallback = function (tiles, zoom, tile) {\n        if (this.isDrawableTile(tile)) {\n            return _super.prototype.loadedTileCallback.call(this, tiles, zoom, tile);\n        }\n        return false;\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasTileLayerRenderer.prototype.prepareFrame = function (frameState, layerState) {\n        return true;\n    };\n    /**\n     * TODO: File a TypeScript issue about inheritDoc not being followed\n     * all the way.  Without this explicit return type, the VectorTileLayer\n     * renderFrame function does not pass.\n     *\n     * @inheritDoc\n     * @returns {HTMLElement} The rendered element.\n     */\n    CanvasTileLayerRenderer.prototype.renderFrame = function (frameState, layerState) {\n        var context = this.context;\n        var viewState = frameState.viewState;\n        var projection = viewState.projection;\n        var viewResolution = viewState.resolution;\n        var viewCenter = viewState.center;\n        var rotation = viewState.rotation;\n        var pixelRatio = frameState.pixelRatio;\n        var tileLayer = /** @type {import(\"../../layer/Tile.js\").default} */ (this.getLayer());\n        var tileSource = tileLayer.getSource();\n        var sourceRevision = tileSource.getRevision();\n        var tileGrid = tileSource.getTileGridForProjection(projection);\n        var zDirection = tileSource.zDirection === undefined ? this.zDirection : tileSource.zDirection;\n        var z = tileGrid.getZForResolution(viewResolution, zDirection);\n        var tileResolution = tileGrid.getResolution(z);\n        var extent = frameState.extent;\n        if (layerState.extent) {\n            extent = getIntersection(extent, layerState.extent);\n        }\n        var tilePixelRatio = tileSource.getTilePixelRatio(pixelRatio);\n        // desired dimensions of the canvas in pixels\n        var width = Math.round(frameState.size[0] * tilePixelRatio);\n        var height = Math.round(frameState.size[1] * tilePixelRatio);\n        if (rotation) {\n            var size = Math.round(Math.sqrt(width * width + height * height));\n            width = height = size;\n        }\n        var dx = tileResolution * width / 2 / tilePixelRatio;\n        var dy = tileResolution * height / 2 / tilePixelRatio;\n        var canvasExtent = [\n            viewCenter[0] - dx,\n            viewCenter[1] - dy,\n            viewCenter[0] + dx,\n            viewCenter[1] + dy\n        ];\n        var tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n        /**\n         * @type {Object<number, Object<string, import(\"../../Tile.js\").default>>}\n         */\n        var tilesToDrawByZ = {};\n        tilesToDrawByZ[z] = {};\n        var findLoadedTiles = this.createLoadedTileFinder(tileSource, projection, tilesToDrawByZ);\n        var tmpExtent = this.tmpExtent;\n        var tmpTileRange = this.tmpTileRange_;\n        this.newTiles_ = false;\n        for (var x = tileRange.minX; x <= tileRange.maxX; ++x) {\n            for (var y = tileRange.minY; y <= tileRange.maxY; ++y) {\n                var tile = this.getTile(z, x, y, frameState);\n                if (this.isDrawableTile(tile)) {\n                    var uid = getUid(this);\n                    if (tile.getState() == TileState.LOADED) {\n                        tilesToDrawByZ[z][tile.tileCoord.toString()] = tile;\n                        var inTransition = tile.inTransition(uid);\n                        if (!this.newTiles_ && (inTransition || this.renderedTiles.indexOf(tile) === -1)) {\n                            this.newTiles_ = true;\n                        }\n                    }\n                    if (tile.getAlpha(uid, frameState.time) === 1) {\n                        // don't look for alt tiles if alpha is 1\n                        continue;\n                    }\n                }\n                var childTileRange = tileGrid.getTileCoordChildTileRange(tile.tileCoord, tmpTileRange, tmpExtent);\n                var covered = false;\n                if (childTileRange) {\n                    covered = findLoadedTiles(z + 1, childTileRange);\n                }\n                if (!covered) {\n                    tileGrid.forEachTileCoordParentTileRange(tile.tileCoord, findLoadedTiles, tmpTileRange, tmpExtent);\n                }\n            }\n        }\n        var canvas = context.canvas;\n        var canvasScale = tileResolution / viewResolution;\n        // set forward and inverse pixel transforms\n        composeTransform(this.pixelTransform_, frameState.size[0] / 2, frameState.size[1] / 2, 1 / tilePixelRatio, 1 / tilePixelRatio, rotation, -width / 2, -height / 2);\n        makeInverse(this.inversePixelTransform_, this.pixelTransform_);\n        // set scale transform for calculating tile positions on the canvas\n        composeTransform(this.tempTransform_, width / 2, height / 2, canvasScale, canvasScale, 0, -width / 2, -height / 2);\n        if (canvas.width != width || canvas.height != height) {\n            canvas.width = width;\n            canvas.height = height;\n        }\n        else {\n            context.clearRect(0, 0, width, height);\n        }\n        if (layerState.extent) {\n            this.clipUnrotated(context, frameState, layerState.extent);\n        }\n        this.preRender(context, frameState);\n        this.renderedTiles.length = 0;\n        /** @type {Array<number>} */\n        var zs = Object.keys(tilesToDrawByZ).map(Number);\n        zs.sort(function (a, b) {\n            if (a === z) {\n                return 1;\n            }\n            else if (b === z) {\n                return -1;\n            }\n            else {\n                return a > b ? 1 : a < b ? -1 : 0;\n            }\n        });\n        for (var i = 0, ii = zs.length; i < ii; ++i) {\n            var currentZ = zs[i];\n            var currentTilePixelSize = tileSource.getTilePixelSize(currentZ, pixelRatio, projection);\n            var currentResolution = tileGrid.getResolution(currentZ);\n            var currentScale = currentResolution / tileResolution;\n            var dx_1 = currentTilePixelSize[0] * currentScale * canvasScale;\n            var dy_1 = currentTilePixelSize[1] * currentScale * canvasScale;\n            var originTileCoord = tileGrid.getTileCoordForCoordAndZ(getTopLeft(canvasExtent), currentZ);\n            var originTileExtent = tileGrid.getTileCoordExtent(originTileCoord);\n            var origin_1 = applyTransform(this.tempTransform_, [\n                tilePixelRatio * (originTileExtent[0] - canvasExtent[0]) / tileResolution,\n                tilePixelRatio * (canvasExtent[3] - originTileExtent[3]) / tileResolution\n            ]);\n            var tileGutter = tilePixelRatio * tileSource.getGutterForProjection(projection);\n            var tilesToDraw = tilesToDrawByZ[currentZ];\n            for (var tileCoordKey in tilesToDraw) {\n                var tile = tilesToDraw[tileCoordKey];\n                var tileCoord = tile.tileCoord;\n                // Calculate integer positions and sizes so that tiles align\n                var floatX = (origin_1[0] - (originTileCoord[1] - tileCoord[1]) * dx_1);\n                var nextX = Math.round(floatX + dx_1);\n                var floatY = (origin_1[1] - (originTileCoord[2] - tileCoord[2]) * dy_1);\n                var nextY = Math.round(floatY + dy_1);\n                var x = Math.round(floatX);\n                var y = Math.round(floatY);\n                var w = nextX - x;\n                var h = nextY - y;\n                this.drawTileImage(tile, frameState, x, y, w, h, tileGutter, z === currentZ);\n                this.renderedTiles.push(tile);\n                this.updateUsedTiles(frameState.usedTiles, tileSource, tile);\n            }\n        }\n        this.renderedRevision = sourceRevision;\n        this.renderedResolution = tileResolution;\n        this.extentChanged = !this.renderedExtent_ || !equals(this.renderedExtent_, canvasExtent);\n        this.renderedExtent_ = canvasExtent;\n        this.manageTilePyramid(frameState, tileSource, tileGrid, pixelRatio, projection, extent, z, tileLayer.getPreload());\n        this.updateCacheSize_(frameState, tileSource);\n        this.scheduleExpireCache(frameState, tileSource);\n        this.postRender(context, frameState);\n        if (layerState.extent) {\n            context.restore();\n        }\n        var opacity = layerState.opacity;\n        if (opacity !== parseFloat(canvas.style.opacity)) {\n            canvas.style.opacity = opacity;\n        }\n        var canvasTransform = transformToString(this.pixelTransform_);\n        if (canvasTransform !== canvas.style.transform) {\n            canvas.style.transform = canvasTransform;\n        }\n        return canvas;\n    };\n    /**\n     * @param {import(\"../../Tile.js\").default} tile Tile.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {number} x Left of the tile.\n     * @param {number} y Top of the tile.\n     * @param {number} w Width of the tile.\n     * @param {number} h Height of the tile.\n     * @param {number} gutter Tile gutter.\n     * @param {boolean} transition Apply an alpha transition.\n     */\n    CanvasTileLayerRenderer.prototype.drawTileImage = function (tile, frameState, x, y, w, h, gutter, transition) {\n        var image = this.getTileImage(tile);\n        if (!image) {\n            return;\n        }\n        var uid = getUid(this);\n        var alpha = transition ? tile.getAlpha(uid, frameState.time) : 1;\n        var tileLayer = /** @type {import(\"../../layer/Tile.js\").default} */ (this.getLayer());\n        var tileSource = tileLayer.getSource();\n        if (alpha === 1 && !tileSource.getOpaque(frameState.viewState.projection)) {\n            this.context.clearRect(x, y, w, h);\n        }\n        var alphaChanged = alpha !== this.context.globalAlpha;\n        if (alphaChanged) {\n            this.context.save();\n            this.context.globalAlpha = alpha;\n        }\n        this.context.drawImage(image, gutter, gutter, image.width - 2 * gutter, image.height - 2 * gutter, x, y, w, h);\n        if (alphaChanged) {\n            this.context.restore();\n        }\n        if (alpha !== 1) {\n            frameState.animate = true;\n        }\n        else if (transition) {\n            tile.endTransition(uid);\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasTileLayerRenderer.prototype.getImage = function () {\n        var context = this.context;\n        return context ? context.canvas : null;\n    };\n    /**\n     * Get the image from a tile.\n     * @param {import(\"../../Tile.js\").default} tile Tile.\n     * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n     * @protected\n     */\n    CanvasTileLayerRenderer.prototype.getTileImage = function (tile) {\n        return /** @type {import(\"../../ImageTile.js\").default} */ (tile).getImage();\n    };\n    /**\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n     * @protected\n     */\n    CanvasTileLayerRenderer.prototype.scheduleExpireCache = function (frameState, tileSource) {\n        if (tileSource.canExpireCache()) {\n            /**\n             * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n             * @param {import(\"../../PluggableMap.js\").default} map Map.\n             * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n             */\n            var postRenderFunction = function (tileSource, map, frameState) {\n                var tileSourceKey = getUid(tileSource);\n                if (tileSourceKey in frameState.usedTiles) {\n                    tileSource.expireCache(frameState.viewState.projection, frameState.usedTiles[tileSourceKey]);\n                }\n            }.bind(null, tileSource);\n            frameState.postRenderFunctions.push(\n            /** @type {import(\"../../PluggableMap.js\").PostRenderFunction} */ (postRenderFunction));\n        }\n    };\n    /**\n     * @param {!Object<string, !Object<string, boolean>>} usedTiles Used tiles.\n     * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n     * @param {import('../../Tile.js').default} tile Tile.\n     * @protected\n     */\n    CanvasTileLayerRenderer.prototype.updateUsedTiles = function (usedTiles, tileSource, tile) {\n        // FIXME should we use tilesToDrawByZ instead?\n        var tileSourceKey = getUid(tileSource);\n        if (!(tileSourceKey in usedTiles)) {\n            usedTiles[tileSourceKey] = {};\n        }\n        usedTiles[tileSourceKey][tile.getKey()] = true;\n    };\n    /**\n     * Check if the cache is big enough, and increase its size if necessary.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n     * @private\n     */\n    CanvasTileLayerRenderer.prototype.updateCacheSize_ = function (frameState, tileSource) {\n        var tileSourceKey = getUid(tileSource);\n        var size = 0;\n        if (tileSourceKey in frameState.usedTiles) {\n            size += Object.keys(frameState.usedTiles[tileSourceKey]).length;\n        }\n        if (tileSourceKey in frameState.wantedTiles) {\n            size += Object.keys(frameState.wantedTiles[tileSourceKey]).length;\n        }\n        var tileCache = tileSource.tileCache;\n        if (tileCache.highWaterMark < size) {\n            tileCache.highWaterMark = size;\n        }\n    };\n    /**\n     * Manage tile pyramid.\n     * This function performs a number of functions related to the tiles at the\n     * current zoom and lower zoom levels:\n     * - registers idle tiles in frameState.wantedTiles so that they are not\n     *   discarded by the tile queue\n     * - enqueues missing tiles\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n     * @param {import(\"../../tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n     * @param {import(\"../../extent.js\").Extent} extent Extent.\n     * @param {number} currentZ Current Z.\n     * @param {number} preload Load low resolution tiles up to 'preload' levels.\n     * @param {function(import(\"../../Tile.js\").default)=} opt_tileCallback Tile callback.\n     * @protected\n     */\n    CanvasTileLayerRenderer.prototype.manageTilePyramid = function (frameState, tileSource, tileGrid, pixelRatio, projection, extent, currentZ, preload, opt_tileCallback) {\n        var tileSourceKey = getUid(tileSource);\n        if (!(tileSourceKey in frameState.wantedTiles)) {\n            frameState.wantedTiles[tileSourceKey] = {};\n        }\n        var wantedTiles = frameState.wantedTiles[tileSourceKey];\n        var tileQueue = frameState.tileQueue;\n        var minZoom = tileGrid.getMinZoom();\n        var tile, tileRange, tileResolution, x, y, z;\n        for (z = minZoom; z <= currentZ; ++z) {\n            tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z, tileRange);\n            tileResolution = tileGrid.getResolution(z);\n            for (x = tileRange.minX; x <= tileRange.maxX; ++x) {\n                for (y = tileRange.minY; y <= tileRange.maxY; ++y) {\n                    if (currentZ - z <= preload) {\n                        tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n                        if (tile.getState() == TileState.IDLE) {\n                            wantedTiles[tile.getKey()] = true;\n                            if (!tileQueue.isKeyQueued(tile.getKey())) {\n                                tileQueue.enqueue([tile, tileSourceKey,\n                                    tileGrid.getTileCoordCenter(tile.tileCoord), tileResolution]);\n                            }\n                        }\n                        if (opt_tileCallback !== undefined) {\n                            opt_tileCallback(tile);\n                        }\n                    }\n                    else {\n                        tileSource.useTile(z, x, y, projection);\n                    }\n                }\n            }\n        }\n    };\n    return CanvasTileLayerRenderer;\n}(CanvasLayerRenderer));\n/**\n * @function\n * @return {import(\"../../layer/Tile.js\").default|import(\"../../layer/VectorTile.js\").default}\n */\nCanvasTileLayerRenderer.prototype.getLayer;\nexport default CanvasTileLayerRenderer;\n//# sourceMappingURL=TileLayer.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/layer/Tile\n */\nimport BaseTileLayer from './BaseTile.js';\nimport CanvasTileLayerRenderer from '../renderer/canvas/TileLayer.js';\n/**\n * @typedef {import(\"./BaseTile.js\").Options} Options\n */\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @api\n */\nvar TileLayer = /** @class */ (function (_super) {\n    __extends(TileLayer, _super);\n    /**\n     * @param {Options=} opt_options Tile layer options.\n     */\n    function TileLayer(opt_options) {\n        return _super.call(this, opt_options) || this;\n    }\n    /**\n     * Create a renderer for this layer.\n     * @return {import(\"../renderer/Layer.js\").default} A layer renderer.\n     * @protected\n     */\n    TileLayer.prototype.createRenderer = function () {\n        return new CanvasTileLayerRenderer(this);\n    };\n    return TileLayer;\n}(BaseTileLayer));\nexport default TileLayer;\n//# sourceMappingURL=Tile.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/source/Raster\n */\nimport ImageCanvas from '../ImageCanvas.js';\nimport TileQueue from '../TileQueue.js';\nimport { createCanvasContext2D } from '../dom.js';\nimport { listen } from '../events.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport { Processor } from 'pixelworks/lib/index';\nimport { equals, getCenter, getHeight, getWidth } from '../extent.js';\nimport ImageLayer from '../layer/Image.js';\nimport TileLayer from '../layer/Tile.js';\nimport { assign } from '../obj.js';\nimport { create as createTransform } from '../transform.js';\nimport ImageSource from './Image.js';\nimport TileSource from './Tile.js';\nimport SourceState from './State.js';\nimport Source from './Source.js';\n/**\n * A function that takes an array of input data, performs some operation, and\n * returns an array of output data.\n * For `pixel` type operations, the function will be called with an array of\n * pixels, where each pixel is an array of four numbers (`[r, g, b, a]`) in the\n * range of 0 - 255. It should return a single pixel array.\n * For `'image'` type operations, functions will be called with an array of\n * {@link ImageData https://developer.mozilla.org/en-US/docs/Web/API/ImageData}\n * and should return a single {@link ImageData\n * https://developer.mozilla.org/en-US/docs/Web/API/ImageData}.  The operations\n * are called with a second \"data\" argument, which can be used for storage.  The\n * data object is accessible from raster events, where it can be initialized in\n * \"beforeoperations\" and accessed again in \"afteroperations\".\n *\n * @typedef {function((Array<Array<number>>|Array<ImageData>), Object):\n *     (Array<number>|ImageData)} Operation\n */\n/**\n * @enum {string}\n */\nvar RasterEventType = {\n    /**\n     * Triggered before operations are run.\n     * @event module:ol/source/Raster.RasterSourceEvent#beforeoperations\n     * @api\n     */\n    BEFOREOPERATIONS: 'beforeoperations',\n    /**\n     * Triggered after operations are run.\n     * @event module:ol/source/Raster.RasterSourceEvent#afteroperations\n     * @api\n     */\n    AFTEROPERATIONS: 'afteroperations'\n};\n/**\n * Raster operation type. Supported values are `'pixel'` and `'image'`.\n * @enum {string}\n */\nvar RasterOperationType = {\n    PIXEL: 'pixel',\n    IMAGE: 'image'\n};\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Raster} instances are instances of this\n * type.\n */\nvar RasterSourceEvent = /** @class */ (function (_super) {\n    __extends(RasterSourceEvent, _super);\n    /**\n     * @param {string} type Type.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState The frame state.\n     * @param {Object} data An object made available to operations.\n     */\n    function RasterSourceEvent(type, frameState, data) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * The raster extent.\n         * @type {import(\"../extent.js\").Extent}\n         * @api\n         */\n        _this.extent = frameState.extent;\n        /**\n         * The pixel resolution (map units per pixel).\n         * @type {number}\n         * @api\n         */\n        _this.resolution = frameState.viewState.resolution / frameState.pixelRatio;\n        /**\n         * An object made available to all operations.  This can be used by operations\n         * as a storage object (e.g. for calculating statistics).\n         * @type {Object}\n         * @api\n         */\n        _this.data = data;\n        return _this;\n    }\n    return RasterSourceEvent;\n}(Event));\nexport { RasterSourceEvent };\n/**\n * @typedef {Object} Options\n * @property {Array<import(\"./Source.js\").default|import(\"../layer/Layer.js\").default>} sources Input\n * sources or layers.  For vector data, use an VectorImage layer.\n * @property {Operation} [operation] Raster operation.\n * The operation will be called with data from input sources\n * and the output will be assigned to the raster source.\n * @property {Object} [lib] Functions that will be made available to operations run in a worker.\n * @property {number} [threads] By default, operations will be run in a single worker thread.\n * To avoid using workers altogether, set `threads: 0`.  For pixel operations, operations can\n * be run in multiple worker threads.  Note that there is additional overhead in\n * transferring data to multiple workers, and that depending on the user's\n * system, it may not be possible to parallelize the work.\n * @property {RasterOperationType} [operationType='pixel'] Operation type.\n * Supported values are `'pixel'` and `'image'`.  By default,\n * `'pixel'` operations are assumed, and operations will be called with an\n * array of pixels from input sources.  If set to `'image'`, operations will\n * be called with an array of ImageData objects from input sources.\n */\n/**\n * @classdesc\n * A source that transforms data from any number of input sources using an\n * {@link module:ol/source/Raster~Operation} function to transform input pixel values into\n * output pixel values.\n *\n * @fires module:ol/source/Raster.RasterSourceEvent\n * @api\n */\nvar RasterSource = /** @class */ (function (_super) {\n    __extends(RasterSource, _super);\n    /**\n     * @param {Options} options Options.\n     */\n    function RasterSource(options) {\n        var _this = _super.call(this, {\n            projection: null\n        }) || this;\n        /**\n         * @private\n         * @type {*}\n         */\n        _this.worker_ = null;\n        /**\n         * @private\n         * @type {RasterOperationType}\n         */\n        _this.operationType_ = options.operationType !== undefined ?\n            options.operationType : RasterOperationType.PIXEL;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.threads_ = options.threads !== undefined ? options.threads : 1;\n        /**\n         * @private\n         * @type {Array<import(\"../layer/Layer.js\").default>}\n         */\n        _this.layers_ = createLayers(options.sources);\n        for (var i = 0, ii = _this.layers_.length; i < ii; ++i) {\n            listen(_this.layers_[i], EventType.CHANGE, _this.changed, _this);\n        }\n        /**\n         * @private\n         * @type {import(\"../TileQueue.js\").default}\n         */\n        _this.tileQueue_ = new TileQueue(function () {\n            return 1;\n        }, _this.changed.bind(_this));\n        /**\n         * The most recently requested frame state.\n         * @type {import(\"../PluggableMap.js\").FrameState}\n         * @private\n         */\n        _this.requestedFrameState_;\n        /**\n         * The most recently rendered image canvas.\n         * @type {import(\"../ImageCanvas.js\").default}\n         * @private\n         */\n        _this.renderedImageCanvas_ = null;\n        /**\n         * The most recently rendered revision.\n         * @type {number}\n         */\n        _this.renderedRevision_;\n        /**\n         * @private\n         * @type {import(\"../PluggableMap.js\").FrameState}\n         */\n        _this.frameState_ = {\n            animate: false,\n            coordinateToPixelTransform: createTransform(),\n            extent: null,\n            focus: null,\n            index: 0,\n            layerStatesArray: getLayerStatesArray(_this.layers_),\n            pixelRatio: 1,\n            pixelToCoordinateTransform: createTransform(),\n            postRenderFunctions: [],\n            size: [0, 0],\n            skippedFeatureUids: {},\n            tileQueue: _this.tileQueue_,\n            time: Date.now(),\n            usedTiles: {},\n            viewState: /** @type {import(\"../View.js\").State} */ ({\n                rotation: 0\n            }),\n            viewHints: [],\n            wantedTiles: {},\n            declutterItems: []\n        };\n        _this.setAttributions(function (frameState) {\n            var attributions = [];\n            for (var index = 0, iMax = options.sources.length; index < iMax; ++index) {\n                var sourceOrLayer = options.sources[index];\n                var source = sourceOrLayer instanceof Source ? sourceOrLayer : sourceOrLayer.getSource();\n                var attributionGetter = source.getAttributions();\n                if (typeof attributionGetter === 'function') {\n                    var sourceAttribution = attributionGetter(frameState);\n                    attributions.push.apply(attributions, sourceAttribution);\n                }\n            }\n            return attributions.length !== 0 ? attributions : null;\n        });\n        if (options.operation !== undefined) {\n            _this.setOperation(options.operation, options.lib);\n        }\n        return _this;\n    }\n    /**\n     * Set the operation.\n     * @param {Operation} operation New operation.\n     * @param {Object=} opt_lib Functions that will be available to operations run\n     *     in a worker.\n     * @api\n     */\n    RasterSource.prototype.setOperation = function (operation, opt_lib) {\n        this.worker_ = new Processor({\n            operation: operation,\n            imageOps: this.operationType_ === RasterOperationType.IMAGE,\n            queue: 1,\n            lib: opt_lib,\n            threads: this.threads_\n        });\n        this.changed();\n    };\n    /**\n     * Update the stored frame state.\n     * @param {import(\"../extent.js\").Extent} extent The view extent (in map units).\n     * @param {number} resolution The view resolution.\n     * @param {import(\"../proj/Projection.js\").default} projection The view projection.\n     * @return {import(\"../PluggableMap.js\").FrameState} The updated frame state.\n     * @private\n     */\n    RasterSource.prototype.updateFrameState_ = function (extent, resolution, projection) {\n        var frameState = /** @type {import(\"../PluggableMap.js\").FrameState} */ (assign({}, this.frameState_));\n        frameState.viewState = /** @type {import(\"../View.js\").State} */ (assign({}, frameState.viewState));\n        var center = getCenter(extent);\n        frameState.extent = extent.slice();\n        frameState.focus = center;\n        frameState.size[0] = Math.round(getWidth(extent) / resolution);\n        frameState.size[1] = Math.round(getHeight(extent) / resolution);\n        frameState.time = Infinity;\n        var viewState = frameState.viewState;\n        viewState.center = center;\n        viewState.projection = projection;\n        viewState.resolution = resolution;\n        return frameState;\n    };\n    /**\n     * Determine if all sources are ready.\n     * @return {boolean} All sources are ready.\n     * @private\n     */\n    RasterSource.prototype.allSourcesReady_ = function () {\n        var ready = true;\n        var source;\n        for (var i = 0, ii = this.layers_.length; i < ii; ++i) {\n            source = this.layers_[i].getSource();\n            if (source.getState() !== SourceState.READY) {\n                ready = false;\n                break;\n            }\n        }\n        return ready;\n    };\n    /**\n     * @inheritDoc\n     */\n    RasterSource.prototype.getImage = function (extent, resolution, pixelRatio, projection) {\n        if (!this.allSourcesReady_()) {\n            return null;\n        }\n        var frameState = this.updateFrameState_(extent, resolution, projection);\n        this.requestedFrameState_ = frameState;\n        // check if we can't reuse the existing ol/ImageCanvas\n        if (this.renderedImageCanvas_) {\n            var renderedResolution = this.renderedImageCanvas_.getResolution();\n            var renderedExtent = this.renderedImageCanvas_.getExtent();\n            if (resolution !== renderedResolution || !equals(extent, renderedExtent)) {\n                this.renderedImageCanvas_ = null;\n            }\n        }\n        if (!this.renderedImageCanvas_ || this.getRevision() !== this.renderedRevision_) {\n            this.processSources_();\n        }\n        frameState.tileQueue.loadMoreTiles(16, 16);\n        if (frameState.animate) {\n            requestAnimationFrame(this.changed.bind(this));\n        }\n        return this.renderedImageCanvas_;\n    };\n    /**\n     * Start processing source data.\n     * @private\n     */\n    RasterSource.prototype.processSources_ = function () {\n        var frameState = this.requestedFrameState_;\n        var len = this.layers_.length;\n        var imageDatas = new Array(len);\n        for (var i = 0; i < len; ++i) {\n            var imageData = getImageData(this.layers_[i], frameState, frameState.layerStatesArray[i]);\n            if (imageData) {\n                imageDatas[i] = imageData;\n            }\n            else {\n                return;\n            }\n        }\n        var data = {};\n        this.dispatchEvent(new RasterSourceEvent(RasterEventType.BEFOREOPERATIONS, frameState, data));\n        this.worker_.process(imageDatas, data, this.onWorkerComplete_.bind(this, frameState));\n    };\n    /**\n     * Called when pixel processing is complete.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState The frame state.\n     * @param {Error} err Any error during processing.\n     * @param {ImageData} output The output image data.\n     * @param {Object} data The user data.\n     * @private\n     */\n    RasterSource.prototype.onWorkerComplete_ = function (frameState, err, output, data) {\n        if (err || !output) {\n            return;\n        }\n        // do nothing if extent or resolution changed\n        var extent = frameState.extent;\n        var resolution = frameState.viewState.resolution;\n        if (resolution !== this.requestedFrameState_.viewState.resolution ||\n            !equals(extent, this.requestedFrameState_.extent)) {\n            return;\n        }\n        var context;\n        if (this.renderedImageCanvas_) {\n            context = this.renderedImageCanvas_.getImage().getContext('2d');\n        }\n        else {\n            var width = Math.round(getWidth(extent) / resolution);\n            var height = Math.round(getHeight(extent) / resolution);\n            context = createCanvasContext2D(width, height);\n            this.renderedImageCanvas_ = new ImageCanvas(extent, resolution, 1, context.canvas);\n        }\n        context.putImageData(output, 0, 0);\n        this.changed();\n        this.renderedRevision_ = this.getRevision();\n        this.dispatchEvent(new RasterSourceEvent(RasterEventType.AFTEROPERATIONS, frameState, data));\n    };\n    /**\n     * @override\n     */\n    RasterSource.prototype.getImageInternal = function () {\n        return null; // not implemented\n    };\n    return RasterSource;\n}(ImageSource));\n/**\n * A reusable canvas context.\n * @type {CanvasRenderingContext2D}\n * @private\n */\nvar sharedContext = null;\n/**\n * Get image data from a layer.\n * @param {import(\"../layer/Layer.js\").default} layer Layer to render.\n * @param {import(\"../PluggableMap.js\").FrameState} frameState The frame state.\n * @param {import(\"../layer/Layer.js\").State} layerState The layer state.\n * @return {ImageData} The image data.\n */\nfunction getImageData(layer, frameState, layerState) {\n    var renderer = layer.getRenderer();\n    if (!renderer) {\n        throw new Error('Unsupported layer type: ' + layer);\n    }\n    if (!renderer.prepareFrame(frameState, layerState)) {\n        return null;\n    }\n    var width = frameState.size[0];\n    var height = frameState.size[1];\n    var element = renderer.renderFrame(frameState, layerState);\n    if (!(element instanceof HTMLCanvasElement)) {\n        throw new Error('Unsupported rendered element: ' + element);\n    }\n    if (element.width === width && element.height === height) {\n        var context = element.getContext('2d');\n        return context.getImageData(0, 0, width, height);\n    }\n    if (!sharedContext) {\n        sharedContext = createCanvasContext2D(width, height);\n    }\n    else {\n        var canvas = sharedContext.canvas;\n        if (canvas.width !== width || canvas.height !== height) {\n            sharedContext = createCanvasContext2D(width, height);\n        }\n        else {\n            sharedContext.clearRect(0, 0, width, height);\n        }\n    }\n    sharedContext.drawImage(element, 0, 0, width, height);\n    return sharedContext.getImageData(0, 0, width, height);\n}\n/**\n * Get a list of layer states from a list of layers.\n * @param {Array<import(\"../layer/Layer.js\").default>} layers Layers.\n * @return {Array<import(\"../layer/Layer.js\").State>} The layer states.\n */\nfunction getLayerStatesArray(layers) {\n    return layers.map(function (layer) {\n        return layer.getLayerState();\n    });\n}\n/**\n * Create layers for all sources.\n * @param {Array<import(\"./Source.js\").default|import(\"../layer/Layer.js\").default>} sources The sources.\n * @return {Array<import(\"../layer/Layer.js\").default>} Array of layers.\n */\nfunction createLayers(sources) {\n    var len = sources.length;\n    var layers = new Array(len);\n    for (var i = 0; i < len; ++i) {\n        layers[i] = createLayer(sources[i]);\n    }\n    return layers;\n}\n/**\n * Create a layer for the provided source.\n * @param {import(\"./Source.js\").default|import(\"../layer/Layer.js\").default} layerOrSource The layer or source.\n * @return {import(\"../layer/Layer.js\").default} The layer.\n */\nfunction createLayer(layerOrSource) {\n    // @type {import(\"../layer/Layer.js\").default}\n    var layer;\n    if (layerOrSource instanceof Source) {\n        if (layerOrSource instanceof TileSource) {\n            layer = new TileLayer({ source: layerOrSource });\n        }\n        else if (layerOrSource instanceof ImageSource) {\n            layer = new ImageLayer({ source: layerOrSource });\n        }\n    }\n    else {\n        layer = layerOrSource;\n    }\n    return layer;\n}\nexport default RasterSource;\n//# sourceMappingURL=Raster.js.map","/**\n * @module ol/source/Stamen\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { ATTRIBUTION as OSM_ATTRIBUTION } from './OSM.js';\nimport XYZ from './XYZ.js';\n/**\n * @const\n * @type {Array<string>}\n */\nvar ATTRIBUTIONS = [\n    'Map tiles by <a href=\"https://stamen.com/\">Stamen Design</a>, ' +\n        'under <a href=\"https://creativecommons.org/licenses/by/3.0/\">CC BY' +\n        ' 3.0</a>.',\n    OSM_ATTRIBUTION\n];\n/**\n * @type {Object<string, {extension: string, opaque: boolean}>}\n */\nvar LayerConfig = {\n    'terrain': {\n        extension: 'jpg',\n        opaque: true\n    },\n    'terrain-background': {\n        extension: 'jpg',\n        opaque: true\n    },\n    'terrain-labels': {\n        extension: 'png',\n        opaque: false\n    },\n    'terrain-lines': {\n        extension: 'png',\n        opaque: false\n    },\n    'toner-background': {\n        extension: 'png',\n        opaque: true\n    },\n    'toner': {\n        extension: 'png',\n        opaque: true\n    },\n    'toner-hybrid': {\n        extension: 'png',\n        opaque: false\n    },\n    'toner-labels': {\n        extension: 'png',\n        opaque: false\n    },\n    'toner-lines': {\n        extension: 'png',\n        opaque: false\n    },\n    'toner-lite': {\n        extension: 'png',\n        opaque: true\n    },\n    'watercolor': {\n        extension: 'jpg',\n        opaque: true\n    }\n};\n/**\n * @type {Object<string, {minZoom: number, maxZoom: number}>}\n */\nvar ProviderConfig = {\n    'terrain': {\n        minZoom: 0,\n        maxZoom: 18\n    },\n    'toner': {\n        minZoom: 0,\n        maxZoom: 20\n    },\n    'watercolor': {\n        minZoom: 0,\n        maxZoom: 18\n    }\n};\n/**\n * @typedef {Object} Options\n * @property {number} [cacheSize] Tile cache size. The default depends on the screen size. Will increase if too small.\n * @property {string} layer Layer name.\n * @property {number} [minZoom] Minimum zoom.\n * @property {number} [maxZoom] Maximum zoom.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction]\n * Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n */\n/**\n * @classdesc\n * Layer source for the Stamen tile server.\n * @api\n */\nvar Stamen = /** @class */ (function (_super) {\n    __extends(Stamen, _super);\n    /**\n     * @param {Options} options Stamen options.\n     */\n    function Stamen(options) {\n        var _this = this;\n        var i = options.layer.indexOf('-');\n        var provider = i == -1 ? options.layer : options.layer.slice(0, i);\n        var providerConfig = ProviderConfig[provider];\n        var layerConfig = LayerConfig[options.layer];\n        var url = options.url !== undefined ? options.url :\n            'https://stamen-tiles-{a-d}.a.ssl.fastly.net/' + options.layer +\n                '/{z}/{x}/{y}.' + layerConfig.extension;\n        _this = _super.call(this, {\n            attributions: ATTRIBUTIONS,\n            cacheSize: options.cacheSize,\n            crossOrigin: 'anonymous',\n            maxZoom: options.maxZoom != undefined ? options.maxZoom : providerConfig.maxZoom,\n            minZoom: options.minZoom != undefined ? options.minZoom : providerConfig.minZoom,\n            opaque: layerConfig.opaque,\n            reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n            tileLoadFunction: options.tileLoadFunction,\n            transition: options.transition,\n            url: url,\n            wrapX: options.wrapX\n        }) || this;\n        return _this;\n    }\n    return Stamen;\n}(XYZ));\nexport default Stamen;\n//# sourceMappingURL=Stamen.js.map","/**\n * @module ol/source/TileArcGISRest\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { createEmpty } from '../extent.js';\nimport { modulo } from '../math.js';\nimport { assign } from '../obj.js';\nimport { toSize, scale as scaleSize } from '../size.js';\nimport TileImage from './TileImage.js';\nimport { hash as tileCoordHash } from '../tilecoord.js';\nimport { appendParams } from '../uri.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize] Tile cache size. The default depends on the screen size. Will increase if too small.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {Object<string,*>} [params] ArcGIS Rest parameters. This field is optional. Service defaults will be\n * used for any fields not specified. `FORMAT` is `PNG32` by default. `F` is `IMAGE` by\n * default. `TRANSPARENT` is `true` by default.  `BBOX`, `SIZE`, `BBOXSR`,\n * and `IMAGESR` will be set dynamically. Set `LAYERS` to\n * override the default service layer visibility. See\n * http://resources.arcgis.com/en/help/arcgis-rest-api/index.html#/Export_Map/02r3000000v7000000/\n * for further reference.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid. Base this on the resolutions,\n * tilesize and extent supported by the server.\n * If this is not defined, a default grid will be used: if there is a projection\n * extent, the grid will be based on that; if not, a grid based on a global\n * extent with origin at 0,0 will be used.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL.\n * The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {string} [url] ArcGIS Rest service URL for a Map Service or Image Service. The\n * url should include /MapServer or /ImageServer.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition] Duration of the opacity transition for rendering.  To disable the opacity\n * transition, pass `transition: 0`.\n * @property {Array<string>} [urls] ArcGIS Rest service urls. Use this instead of `url` when the ArcGIS\n * Service supports multiple urls for export requests.\n */\n/**\n * @classdesc\n * Layer source for tile data from ArcGIS Rest services. Map and Image\n * Services are supported.\n *\n * For cached ArcGIS services, better performance is available using the\n * {@link module:ol/source/XYZ~XYZ} data source.\n * @api\n */\nvar TileArcGISRest = /** @class */ (function (_super) {\n    __extends(TileArcGISRest, _super);\n    /**\n     * @param {Options=} opt_options Tile ArcGIS Rest options.\n     */\n    function TileArcGISRest(opt_options) {\n        var _this = this;\n        var options = opt_options || /** @type {Options} */ ({});\n        _this = _super.call(this, {\n            attributions: options.attributions,\n            cacheSize: options.cacheSize,\n            crossOrigin: options.crossOrigin,\n            projection: options.projection,\n            reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n            tileGrid: options.tileGrid,\n            tileLoadFunction: options.tileLoadFunction,\n            tileUrlFunction: tileUrlFunction,\n            url: options.url,\n            urls: options.urls,\n            wrapX: options.wrapX !== undefined ? options.wrapX : true,\n            transition: options.transition\n        }) || this;\n        /**\n         * @private\n         * @type {!Object}\n         */\n        _this.params_ = options.params || {};\n        /**\n         * @private\n         * @type {import(\"../extent.js\").Extent}\n         */\n        _this.tmpExtent_ = createEmpty();\n        _this.setKey(_this.getKeyForParams_());\n        return _this;\n    }\n    /**\n     * @private\n     * @return {string} The key for the current params.\n     */\n    TileArcGISRest.prototype.getKeyForParams_ = function () {\n        var i = 0;\n        var res = [];\n        for (var key in this.params_) {\n            res[i++] = key + '-' + this.params_[key];\n        }\n        return res.join('/');\n    };\n    /**\n     * Get the user-provided params, i.e. those passed to the constructor through\n     * the \"params\" option, and possibly updated using the updateParams method.\n     * @return {Object} Params.\n     * @api\n     */\n    TileArcGISRest.prototype.getParams = function () {\n        return this.params_;\n    };\n    /**\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @param {import(\"../size.js\").Size} tileSize Tile size.\n     * @param {import(\"../extent.js\").Extent} tileExtent Tile extent.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @param {Object} params Params.\n     * @return {string|undefined} Request URL.\n     * @private\n     */\n    TileArcGISRest.prototype.getRequestUrl_ = function (tileCoord, tileSize, tileExtent, pixelRatio, projection, params) {\n        var urls = this.urls;\n        if (!urls) {\n            return undefined;\n        }\n        // ArcGIS Server only wants the numeric portion of the projection ID.\n        var srid = projection.getCode().split(':').pop();\n        params['SIZE'] = tileSize[0] + ',' + tileSize[1];\n        params['BBOX'] = tileExtent.join(',');\n        params['BBOXSR'] = srid;\n        params['IMAGESR'] = srid;\n        params['DPI'] = Math.round(params['DPI'] ? params['DPI'] * pixelRatio : 90 * pixelRatio);\n        var url;\n        if (urls.length == 1) {\n            url = urls[0];\n        }\n        else {\n            var index = modulo(tileCoordHash(tileCoord), urls.length);\n            url = urls[index];\n        }\n        var modifiedUrl = url\n            .replace(/MapServer\\/?$/, 'MapServer/export')\n            .replace(/ImageServer\\/?$/, 'ImageServer/exportImage');\n        return appendParams(modifiedUrl, params);\n    };\n    /**\n     * @inheritDoc\n     */\n    TileArcGISRest.prototype.getTilePixelRatio = function (pixelRatio) {\n        return /** @type {number} */ (pixelRatio);\n    };\n    /**\n     * Update the user-provided params.\n     * @param {Object} params Params.\n     * @api\n     */\n    TileArcGISRest.prototype.updateParams = function (params) {\n        assign(this.params_, params);\n        this.setKey(this.getKeyForParams_());\n    };\n    return TileArcGISRest;\n}(TileImage));\n/**\n * @param {import(\"../tilecoord.js\").TileCoord} tileCoord The tile coordinate\n * @param {number} pixelRatio The pixel ratio\n * @param {import(\"../proj/Projection.js\").default} projection The projection\n * @return {string|undefined} The tile URL\n * @this {TileArcGISRest}\n */\nfunction tileUrlFunction(tileCoord, pixelRatio, projection) {\n    var tileGrid = this.getTileGrid();\n    if (!tileGrid) {\n        tileGrid = this.getTileGridForProjection(projection);\n    }\n    if (tileGrid.getResolutions().length <= tileCoord[0]) {\n        return undefined;\n    }\n    var tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent_);\n    var tileSize = toSize(tileGrid.getTileSize(tileCoord[0]), this.tmpSize);\n    if (pixelRatio != 1) {\n        tileSize = scaleSize(tileSize, pixelRatio, this.tmpSize);\n    }\n    // Apply default params and override with user specified values.\n    var baseParams = {\n        'F': 'image',\n        'FORMAT': 'PNG32',\n        'TRANSPARENT': true\n    };\n    assign(baseParams, this.params_);\n    return this.getRequestUrl_(tileCoord, tileSize, tileExtent, pixelRatio, projection, baseParams);\n}\nexport default TileArcGISRest;\n//# sourceMappingURL=TileArcGISRest.js.map","/**\n * @module ol/source/TileDebug\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport Tile from '../Tile.js';\nimport TileState from '../TileState.js';\nimport { createCanvasContext2D } from '../dom.js';\nimport { toSize } from '../size.js';\nimport XYZ from './XYZ.js';\nimport { getKeyZXY } from '../tilecoord.js';\nvar LabeledTile = /** @class */ (function (_super) {\n    __extends(LabeledTile, _super);\n    /**\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @param {import(\"../size.js\").Size} tileSize Tile size.\n     * @param {string} text Text.\n     */\n    function LabeledTile(tileCoord, tileSize, text) {\n        var _this = _super.call(this, tileCoord, TileState.LOADED) || this;\n        /**\n        * @private\n        * @type {import(\"../size.js\").Size}\n        */\n        _this.tileSize_ = tileSize;\n        /**\n        * @private\n        * @type {string}\n        */\n        _this.text_ = text;\n        /**\n        * @private\n        * @type {HTMLCanvasElement}\n        */\n        _this.canvas_ = null;\n        return _this;\n    }\n    /**\n    * Get the image element for this tile.\n    * @return {HTMLCanvasElement} Image.\n    */\n    LabeledTile.prototype.getImage = function () {\n        if (this.canvas_) {\n            return this.canvas_;\n        }\n        else {\n            var tileSize = this.tileSize_;\n            var context = createCanvasContext2D(tileSize[0], tileSize[1]);\n            context.strokeStyle = 'grey';\n            context.strokeRect(0.5, 0.5, tileSize[0] + 0.5, tileSize[1] + 0.5);\n            context.fillStyle = 'grey';\n            context.strokeStyle = 'white';\n            context.textAlign = 'center';\n            context.textBaseline = 'middle';\n            context.font = '24px sans-serif';\n            context.lineWidth = 4;\n            context.strokeText(this.text_, tileSize[0] / 2, tileSize[1] / 2, tileSize[0]);\n            context.fillText(this.text_, tileSize[0] / 2, tileSize[1] / 2, tileSize[0]);\n            this.canvas_ = context.canvas;\n            return context.canvas;\n        }\n    };\n    /**\n    * @override\n    */\n    LabeledTile.prototype.load = function () { };\n    return LabeledTile;\n}(Tile));\n/**\n * @typedef {Object} Options\n * @property {import(\"../proj.js\").ProjectionLike} [projection='EPSG:3857'] Optional projection.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n */\n/**\n * @classdesc\n * A pseudo tile source, which does not fetch tiles from a server, but renders\n * a grid outline for the tile grid/projection along with the coordinates for\n * each tile. See examples/canvas-tiles for an example.\n *\n * Uses Canvas context2d, so requires Canvas support.\n * @api\n */\nvar TileDebug = /** @class */ (function (_super) {\n    __extends(TileDebug, _super);\n    /**\n     * @param {Options=} opt_options Debug tile options.\n     */\n    function TileDebug(opt_options) {\n        var _this = this;\n        /**\n         * @type {Options}\n         */\n        var options = opt_options || {};\n        _this = _super.call(this, {\n            opaque: false,\n            projection: options.projection,\n            tileGrid: options.tileGrid,\n            wrapX: options.wrapX !== undefined ? options.wrapX : true\n        }) || this;\n        return _this;\n    }\n    /**\n    * @inheritDoc\n    */\n    TileDebug.prototype.getTile = function (z, x, y) {\n        var tileCoordKey = getKeyZXY(z, x, y);\n        if (this.tileCache.containsKey(tileCoordKey)) {\n            return /** @type {!LabeledTile} */ (this.tileCache.get(tileCoordKey));\n        }\n        else {\n            var tileSize = toSize(this.tileGrid.getTileSize(z));\n            var tileCoord = [z, x, y];\n            var textTileCoord = this.getTileCoordForTileUrlFunction(tileCoord);\n            var text = void 0;\n            if (textTileCoord) {\n                text = 'z:' + textTileCoord[0] + ' x:' + textTileCoord[1] + ' y:' + textTileCoord[2];\n            }\n            else {\n                text = 'none';\n            }\n            var tile = new LabeledTile(tileCoord, tileSize, text);\n            this.tileCache.set(tileCoordKey, tile);\n            return tile;\n        }\n    };\n    return TileDebug;\n}(XYZ));\nexport default TileDebug;\n//# sourceMappingURL=TileDebug.js.map","/**\n * @module ol/source/TileJSON\n */\n// FIXME check order of async callbacks\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * See http://mapbox.com/developers/api/.\n */\nimport { createFromTemplates } from '../tileurlfunction.js';\nimport { assert } from '../asserts.js';\nimport { applyTransform, intersects } from '../extent.js';\nimport { jsonp as requestJSONP } from '../net.js';\nimport { get as getProjection, getTransformFromProjections } from '../proj.js';\nimport SourceState from './State.js';\nimport TileImage from './TileImage.js';\nimport { createXYZ, extentFromProjection } from '../tilegrid.js';\n/**\n * @typedef {Object} Config\n * @property {string} [name] The name.\n * @property {string} [description] The description.\n * @property {string} [version] The version.\n * @property {string} [attribution] The attribution.\n * @property {string} [template] The template.\n * @property {string} [legend] The legend.\n * @property {string} [scheme] The scheme.\n * @property {Array<string>} tiles The tile URL templates.\n * @property {Array<string>} [grids] Optional grids.\n * @property {number} [minzoom] Minimum zoom level.\n * @property {number} [maxzoom] Maximum zoom level.\n * @property {Array<number>} [bounds] Optional bounds.\n * @property {Array<number>} [center] Optional center.\n */\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize] Tile cache size. The default depends on the screen size. Will increase if too small.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [jsonp=false] Use JSONP with callback to load the TileJSON.\n * Useful when the server does not support CORS..\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {Config} [tileJSON] TileJSON configuration for this source.\n * If not provided, `url` must be configured.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number|import(\"../size.js\").Size} [tileSize=[256, 256]] The tile size used by the tile service.\n * Note: `tileSize` and other non-standard TileJSON properties are currently ignored.\n * @property {string} [url] URL to the TileJSON file. If not provided, `tileJSON` must be configured.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n */\n/**\n * @classdesc\n * Layer source for tile data in TileJSON format.\n * @api\n */\nvar TileJSON = /** @class */ (function (_super) {\n    __extends(TileJSON, _super);\n    /**\n     * @param {Options} options TileJSON options.\n     */\n    function TileJSON(options) {\n        var _this = _super.call(this, {\n            attributions: options.attributions,\n            cacheSize: options.cacheSize,\n            crossOrigin: options.crossOrigin,\n            projection: getProjection('EPSG:3857'),\n            reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n            state: SourceState.LOADING,\n            tileLoadFunction: options.tileLoadFunction,\n            wrapX: options.wrapX !== undefined ? options.wrapX : true,\n            transition: options.transition\n        }) || this;\n        /**\n         * @type {Config}\n         * @private\n         */\n        _this.tileJSON_ = null;\n        /**\n         * @type {number|import(\"../size.js\").Size}\n         * @private\n         */\n        _this.tileSize_ = options.tileSize;\n        if (options.url) {\n            if (options.jsonp) {\n                requestJSONP(options.url, _this.handleTileJSONResponse.bind(_this), _this.handleTileJSONError.bind(_this));\n            }\n            else {\n                var client = new XMLHttpRequest();\n                client.addEventListener('load', _this.onXHRLoad_.bind(_this));\n                client.addEventListener('error', _this.onXHRError_.bind(_this));\n                client.open('GET', options.url);\n                client.send();\n            }\n        }\n        else if (options.tileJSON) {\n            _this.handleTileJSONResponse(options.tileJSON);\n        }\n        else {\n            assert(false, 51); // Either `url` or `tileJSON` options must be provided\n        }\n        return _this;\n    }\n    /**\n     * @private\n     * @param {Event} event The load event.\n     */\n    TileJSON.prototype.onXHRLoad_ = function (event) {\n        var client = /** @type {XMLHttpRequest} */ (event.target);\n        // status will be 0 for file:// urls\n        if (!client.status || client.status >= 200 && client.status < 300) {\n            var response = void 0;\n            try {\n                response = /** @type {TileJSON} */ (JSON.parse(client.responseText));\n            }\n            catch (err) {\n                this.handleTileJSONError();\n                return;\n            }\n            this.handleTileJSONResponse(response);\n        }\n        else {\n            this.handleTileJSONError();\n        }\n    };\n    /**\n     * @private\n     * @param {Event} event The error event.\n     */\n    TileJSON.prototype.onXHRError_ = function (event) {\n        this.handleTileJSONError();\n    };\n    /**\n     * @return {Config} The tilejson object.\n     * @api\n     */\n    TileJSON.prototype.getTileJSON = function () {\n        return this.tileJSON_;\n    };\n    /**\n     * @protected\n     * @param {Config} tileJSON Tile JSON.\n     */\n    TileJSON.prototype.handleTileJSONResponse = function (tileJSON) {\n        var epsg4326Projection = getProjection('EPSG:4326');\n        var sourceProjection = this.getProjection();\n        var extent;\n        if (tileJSON['bounds'] !== undefined) {\n            var transform = getTransformFromProjections(epsg4326Projection, sourceProjection);\n            extent = applyTransform(tileJSON['bounds'], transform);\n        }\n        var minZoom = tileJSON['minzoom'] || 0;\n        var maxZoom = tileJSON['maxzoom'] || 22;\n        var tileGrid = createXYZ({\n            extent: extentFromProjection(sourceProjection),\n            maxZoom: maxZoom,\n            minZoom: minZoom,\n            tileSize: this.tileSize_\n        });\n        this.tileGrid = tileGrid;\n        this.tileUrlFunction = createFromTemplates(tileJSON['tiles'], tileGrid);\n        if (tileJSON['attribution'] !== undefined && !this.getAttributions()) {\n            var attributionExtent_1 = extent !== undefined ?\n                extent : epsg4326Projection.getExtent();\n            this.setAttributions(function (frameState) {\n                if (intersects(attributionExtent_1, frameState.extent)) {\n                    return [tileJSON['attribution']];\n                }\n                return null;\n            });\n        }\n        this.tileJSON_ = tileJSON;\n        this.setState(SourceState.READY);\n    };\n    /**\n     * @protected\n     */\n    TileJSON.prototype.handleTileJSONError = function () {\n        this.setState(SourceState.ERROR);\n    };\n    return TileJSON;\n}(TileImage));\nexport default TileJSON;\n//# sourceMappingURL=TileJSON.js.map","/**\n * @module ol/source/TileWMS\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { DEFAULT_WMS_VERSION } from './common.js';\nimport { assert } from '../asserts.js';\nimport { buffer, createEmpty } from '../extent.js';\nimport { assign } from '../obj.js';\nimport { modulo } from '../math.js';\nimport { get as getProjection, transform, transformExtent } from '../proj.js';\nimport { calculateSourceResolution } from '../reproj.js';\nimport { toSize, buffer as bufferSize, scale as scaleSize } from '../size.js';\nimport TileImage from './TileImage.js';\nimport WMSServerType from './WMSServerType.js';\nimport { hash as tileCoordHash } from '../tilecoord.js';\nimport { compareVersions } from '../string.js';\nimport { appendParams } from '../uri.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize] Tile cache size. The default depends on the screen size. Will increase if too small.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {Object<string,*>} params WMS request parameters.\n * At least a `LAYERS` param is required. `STYLES` is\n * `''` by default. `VERSION` is `1.3.0` by default. `WIDTH`, `HEIGHT`, `BBOX`\n * and `CRS` (`SRS` for WMS version < 1.3.0) will be set dynamically.\n * @property {number} [gutter=0]\n * The size in pixels of the gutter around image tiles to ignore. By setting\n * this property to a non-zero value, images will be requested that are wider\n * and taller than the tile size by a value of `2 x gutter`.\n * Using a non-zero value allows artifacts of rendering at tile edges to be\n * ignored. If you control the WMS service it is recommended to address\n * \"artifacts at tile edges\" issues by properly configuring the WMS service. For\n * example, MapServer has a `tile_map_edge_buffer` configuration parameter for\n * this. See http://mapserver.org/output/tile_mode.html.\n * @property {boolean} [hidpi=true] Use the `ol/Map#pixelRatio` value when requesting\n * the image from the remote server.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid. Base this on the resolutions,\n * tilesize and extent supported by the server.\n * If this is not defined, a default grid will be used: if there is a projection\n * extent, the grid will be based on that; if not, a grid based on a global\n * extent with origin at 0,0 will be used..\n * @property {import(\"./WMSServerType.js\").default|string} [serverType]\n * The type of the remote WMS server. Currently only used when `hidpi` is\n * `true`.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {string} [url] WMS service URL.\n * @property {Array<string>} [urls] WMS service urls.\n * Use this instead of `url` when the WMS supports multiple urls for GetMap requests.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * When set to `false`, only one world\n * will be rendered. When `true`, tiles will be requested for one world only,\n * but they will be wrapped horizontally to render multiple worlds.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n */\n/**\n * @classdesc\n * Layer source for tile data from WMS servers.\n * @api\n */\nvar TileWMS = /** @class */ (function (_super) {\n    __extends(TileWMS, _super);\n    /**\n     * @param {Options=} [opt_options] Tile WMS options.\n     */\n    function TileWMS(opt_options) {\n        var _this = this;\n        var options = opt_options || /** @type {Options} */ ({});\n        var params = options.params || {};\n        var transparent = 'TRANSPARENT' in params ? params['TRANSPARENT'] : true;\n        _this = _super.call(this, {\n            attributions: options.attributions,\n            cacheSize: options.cacheSize,\n            crossOrigin: options.crossOrigin,\n            opaque: !transparent,\n            projection: options.projection,\n            reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n            tileClass: options.tileClass,\n            tileGrid: options.tileGrid,\n            tileLoadFunction: options.tileLoadFunction,\n            tileUrlFunction: tileUrlFunction,\n            url: options.url,\n            urls: options.urls,\n            wrapX: options.wrapX !== undefined ? options.wrapX : true,\n            transition: options.transition\n        }) || this;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.gutter_ = options.gutter !== undefined ? options.gutter : 0;\n        /**\n         * @private\n         * @type {!Object}\n         */\n        _this.params_ = params;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.v13_ = true;\n        /**\n         * @private\n         * @type {import(\"./WMSServerType.js\").default|undefined}\n         */\n        _this.serverType_ = /** @type {import(\"./WMSServerType.js\").default|undefined} */ (options.serverType);\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n        /**\n         * @private\n         * @type {import(\"../extent.js\").Extent}\n         */\n        _this.tmpExtent_ = createEmpty();\n        _this.updateV13_();\n        _this.setKey(_this.getKeyForParams_());\n        return _this;\n    }\n    /**\n     * Return the GetFeatureInfo URL for the passed coordinate, resolution, and\n     * projection. Return `undefined` if the GetFeatureInfo URL cannot be\n     * constructed.\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {number} resolution Resolution.\n     * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n     * @param {!Object} params GetFeatureInfo params. `INFO_FORMAT` at least should\n     *     be provided. If `QUERY_LAYERS` is not provided then the layers specified\n     *     in the `LAYERS` parameter will be used. `VERSION` should not be\n     *     specified here.\n     * @return {string|undefined} GetFeatureInfo URL.\n     * @api\n     */\n    TileWMS.prototype.getGetFeatureInfoUrl = function (coordinate, resolution, projection, params) {\n        var projectionObj = getProjection(projection);\n        var sourceProjectionObj = this.getProjection();\n        var tileGrid = this.getTileGrid();\n        if (!tileGrid) {\n            tileGrid = this.getTileGridForProjection(projectionObj);\n        }\n        var tileCoord = tileGrid.getTileCoordForCoordAndResolution(coordinate, resolution);\n        if (tileGrid.getResolutions().length <= tileCoord[0]) {\n            return undefined;\n        }\n        var tileResolution = tileGrid.getResolution(tileCoord[0]);\n        var tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent_);\n        var tileSize = toSize(tileGrid.getTileSize(tileCoord[0]), this.tmpSize);\n        var gutter = this.gutter_;\n        if (gutter !== 0) {\n            tileSize = bufferSize(tileSize, gutter, this.tmpSize);\n            tileExtent = buffer(tileExtent, tileResolution * gutter, tileExtent);\n        }\n        if (sourceProjectionObj && sourceProjectionObj !== projectionObj) {\n            tileResolution = calculateSourceResolution(sourceProjectionObj, projectionObj, coordinate, tileResolution);\n            tileExtent = transformExtent(tileExtent, projectionObj, sourceProjectionObj);\n            coordinate = transform(coordinate, projectionObj, sourceProjectionObj);\n        }\n        var baseParams = {\n            'SERVICE': 'WMS',\n            'VERSION': DEFAULT_WMS_VERSION,\n            'REQUEST': 'GetFeatureInfo',\n            'FORMAT': 'image/png',\n            'TRANSPARENT': true,\n            'QUERY_LAYERS': this.params_['LAYERS']\n        };\n        assign(baseParams, this.params_, params);\n        var x = Math.floor((coordinate[0] - tileExtent[0]) / tileResolution);\n        var y = Math.floor((tileExtent[3] - coordinate[1]) / tileResolution);\n        baseParams[this.v13_ ? 'I' : 'X'] = x;\n        baseParams[this.v13_ ? 'J' : 'Y'] = y;\n        return this.getRequestUrl_(tileCoord, tileSize, tileExtent, 1, sourceProjectionObj || projectionObj, baseParams);\n    };\n    /**\n     * @inheritDoc\n     */\n    TileWMS.prototype.getGutter = function () {\n        return this.gutter_;\n    };\n    /**\n     * Get the user-provided params, i.e. those passed to the constructor through\n     * the \"params\" option, and possibly updated using the updateParams method.\n     * @return {Object} Params.\n     * @api\n     */\n    TileWMS.prototype.getParams = function () {\n        return this.params_;\n    };\n    /**\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @param {import(\"../size.js\").Size} tileSize Tile size.\n     * @param {import(\"../extent.js\").Extent} tileExtent Tile extent.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @param {Object} params Params.\n     * @return {string|undefined} Request URL.\n     * @private\n     */\n    TileWMS.prototype.getRequestUrl_ = function (tileCoord, tileSize, tileExtent, pixelRatio, projection, params) {\n        var urls = this.urls;\n        if (!urls) {\n            return undefined;\n        }\n        params['WIDTH'] = tileSize[0];\n        params['HEIGHT'] = tileSize[1];\n        params[this.v13_ ? 'CRS' : 'SRS'] = projection.getCode();\n        if (!('STYLES' in this.params_)) {\n            params['STYLES'] = '';\n        }\n        if (pixelRatio != 1) {\n            switch (this.serverType_) {\n                case WMSServerType.GEOSERVER:\n                    var dpi = (90 * pixelRatio + 0.5) | 0;\n                    if ('FORMAT_OPTIONS' in params) {\n                        params['FORMAT_OPTIONS'] += ';dpi:' + dpi;\n                    }\n                    else {\n                        params['FORMAT_OPTIONS'] = 'dpi:' + dpi;\n                    }\n                    break;\n                case WMSServerType.MAPSERVER:\n                    params['MAP_RESOLUTION'] = 90 * pixelRatio;\n                    break;\n                case WMSServerType.CARMENTA_SERVER:\n                case WMSServerType.QGIS:\n                    params['DPI'] = 90 * pixelRatio;\n                    break;\n                default:\n                    assert(false, 52); // Unknown `serverType` configured\n                    break;\n            }\n        }\n        var axisOrientation = projection.getAxisOrientation();\n        var bbox = tileExtent;\n        if (this.v13_ && axisOrientation.substr(0, 2) == 'ne') {\n            var tmp = void 0;\n            tmp = tileExtent[0];\n            bbox[0] = tileExtent[1];\n            bbox[1] = tmp;\n            tmp = tileExtent[2];\n            bbox[2] = tileExtent[3];\n            bbox[3] = tmp;\n        }\n        params['BBOX'] = bbox.join(',');\n        var url;\n        if (urls.length == 1) {\n            url = urls[0];\n        }\n        else {\n            var index = modulo(tileCoordHash(tileCoord), urls.length);\n            url = urls[index];\n        }\n        return appendParams(url, params);\n    };\n    /**\n     * @inheritDoc\n     */\n    TileWMS.prototype.getTilePixelRatio = function (pixelRatio) {\n        return (!this.hidpi_ || this.serverType_ === undefined) ? 1 :\n            /** @type {number} */ (pixelRatio);\n    };\n    /**\n     * @private\n     * @return {string} The key for the current params.\n     */\n    TileWMS.prototype.getKeyForParams_ = function () {\n        var i = 0;\n        var res = [];\n        for (var key in this.params_) {\n            res[i++] = key + '-' + this.params_[key];\n        }\n        return res.join('/');\n    };\n    /**\n     * Update the user-provided params.\n     * @param {Object} params Params.\n     * @api\n     */\n    TileWMS.prototype.updateParams = function (params) {\n        assign(this.params_, params);\n        this.updateV13_();\n        this.setKey(this.getKeyForParams_());\n    };\n    /**\n     * @private\n     */\n    TileWMS.prototype.updateV13_ = function () {\n        var version = this.params_['VERSION'] || DEFAULT_WMS_VERSION;\n        this.v13_ = compareVersions(version, '1.3') >= 0;\n    };\n    return TileWMS;\n}(TileImage));\n/**\n * @param {import(\"../tilecoord.js\").TileCoord} tileCoord The tile coordinate\n * @param {number} pixelRatio The pixel ratio\n * @param {import(\"../proj/Projection.js\").default} projection The projection\n * @return {string|undefined} The tile URL\n * @this {TileWMS}\n */\nfunction tileUrlFunction(tileCoord, pixelRatio, projection) {\n    var tileGrid = this.getTileGrid();\n    if (!tileGrid) {\n        tileGrid = this.getTileGridForProjection(projection);\n    }\n    if (tileGrid.getResolutions().length <= tileCoord[0]) {\n        return undefined;\n    }\n    if (pixelRatio != 1 && (!this.hidpi_ || this.serverType_ === undefined)) {\n        pixelRatio = 1;\n    }\n    var tileResolution = tileGrid.getResolution(tileCoord[0]);\n    var tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent_);\n    var tileSize = toSize(tileGrid.getTileSize(tileCoord[0]), this.tmpSize);\n    var gutter = this.gutter_;\n    if (gutter !== 0) {\n        tileSize = bufferSize(tileSize, gutter, this.tmpSize);\n        tileExtent = buffer(tileExtent, tileResolution * gutter, tileExtent);\n    }\n    if (pixelRatio != 1) {\n        tileSize = scaleSize(tileSize, pixelRatio, this.tmpSize);\n    }\n    var baseParams = {\n        'SERVICE': 'WMS',\n        'VERSION': DEFAULT_WMS_VERSION,\n        'REQUEST': 'GetMap',\n        'FORMAT': 'image/png',\n        'TRANSPARENT': true\n    };\n    assign(baseParams, this.params_);\n    return this.getRequestUrl_(tileCoord, tileSize, tileExtent, pixelRatio, projection, baseParams);\n}\nexport default TileWMS;\n//# sourceMappingURL=TileWMS.js.map","/**\n * @module ol/source/UTFGrid\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport Tile from '../Tile.js';\nimport TileState from '../TileState.js';\nimport { createFromTemplates, nullTileUrlFunction } from '../tileurlfunction.js';\nimport { assert } from '../asserts.js';\nimport { listenOnce } from '../events.js';\nimport EventType from '../events/EventType.js';\nimport { applyTransform, intersects } from '../extent.js';\nimport { jsonp as requestJSONP } from '../net.js';\nimport { get as getProjection, getTransformFromProjections } from '../proj.js';\nimport SourceState from './State.js';\nimport TileSource from './Tile.js';\nimport { getKeyZXY } from '../tilecoord.js';\nimport { createXYZ, extentFromProjection } from '../tilegrid.js';\n/**\n * @typedef {Object} UTFGridJSON\n * @property {Array<string>} grid The grid.\n * @property {Array<string>} keys The keys.\n * @property {Object<string, Object>} [data] Optional data.\n */\nvar CustomTile = /** @class */ (function (_super) {\n    __extends(CustomTile, _super);\n    /**\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @param {TileState} state State.\n     * @param {string} src Image source URI.\n     * @param {import(\"../extent.js\").Extent} extent Extent of the tile.\n     * @param {boolean} preemptive Load the tile when visible (before it's needed).\n     * @param {boolean} jsonp Load the tile as a script.\n     */\n    function CustomTile(tileCoord, state, src, extent, preemptive, jsonp) {\n        var _this = _super.call(this, tileCoord, state) || this;\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.src_ = src;\n        /**\n         * @private\n         * @type {import(\"../extent.js\").Extent}\n         */\n        _this.extent_ = extent;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.preemptive_ = preemptive;\n        /**\n         * @private\n         * @type {Array<string>}\n         */\n        _this.grid_ = null;\n        /**\n         * @private\n         * @type {Array<string>}\n         */\n        _this.keys_ = null;\n        /**\n         * @private\n         * @type {Object<string, Object>|undefined}\n         */\n        _this.data_ = null;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.jsonp_ = jsonp;\n        return _this;\n    }\n    /**\n     * Get the image element for this tile.\n     * @return {HTMLImageElement} Image.\n     */\n    CustomTile.prototype.getImage = function () {\n        return null;\n    };\n    /**\n     * Synchronously returns data at given coordinate (if available).\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {*} The data.\n     */\n    CustomTile.prototype.getData = function (coordinate) {\n        if (!this.grid_ || !this.keys_) {\n            return null;\n        }\n        var xRelative = (coordinate[0] - this.extent_[0]) /\n            (this.extent_[2] - this.extent_[0]);\n        var yRelative = (coordinate[1] - this.extent_[1]) /\n            (this.extent_[3] - this.extent_[1]);\n        var row = this.grid_[Math.floor((1 - yRelative) * this.grid_.length)];\n        if (typeof row !== 'string') {\n            return null;\n        }\n        var code = row.charCodeAt(Math.floor(xRelative * row.length));\n        if (code >= 93) {\n            code--;\n        }\n        if (code >= 35) {\n            code--;\n        }\n        code -= 32;\n        var data = null;\n        if (code in this.keys_) {\n            var id = this.keys_[code];\n            if (this.data_ && id in this.data_) {\n                data = this.data_[id];\n            }\n            else {\n                data = id;\n            }\n        }\n        return data;\n    };\n    /**\n     * Calls the callback (synchronously by default) with the available data\n     * for given coordinate (or `null` if not yet loaded).\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {function(*): void} callback Callback.\n     * @param {boolean=} opt_request If `true` the callback is always async.\n     *                               The tile data is requested if not yet loaded.\n     */\n    CustomTile.prototype.forDataAtCoordinate = function (coordinate, callback, opt_request) {\n        if (this.state == TileState.IDLE && opt_request === true) {\n            listenOnce(this, EventType.CHANGE, function (e) {\n                callback(this.getData(coordinate));\n            }, this);\n            this.loadInternal_();\n        }\n        else {\n            if (opt_request === true) {\n                setTimeout(function () {\n                    callback(this.getData(coordinate));\n                }.bind(this), 0);\n            }\n            else {\n                callback(this.getData(coordinate));\n            }\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    CustomTile.prototype.getKey = function () {\n        return this.src_;\n    };\n    /**\n     * @private\n     */\n    CustomTile.prototype.handleError_ = function () {\n        this.state = TileState.ERROR;\n        this.changed();\n    };\n    /**\n     * @param {!UTFGridJSON} json UTFGrid data.\n     * @private\n     */\n    CustomTile.prototype.handleLoad_ = function (json) {\n        this.grid_ = json['grid'];\n        this.keys_ = json['keys'];\n        this.data_ = json['data'];\n        this.state = TileState.EMPTY;\n        this.changed();\n    };\n    /**\n     * @private\n     */\n    CustomTile.prototype.loadInternal_ = function () {\n        if (this.state == TileState.IDLE) {\n            this.state = TileState.LOADING;\n            if (this.jsonp_) {\n                requestJSONP(this.src_, this.handleLoad_.bind(this), this.handleError_.bind(this));\n            }\n            else {\n                var client = new XMLHttpRequest();\n                client.addEventListener('load', this.onXHRLoad_.bind(this));\n                client.addEventListener('error', this.onXHRError_.bind(this));\n                client.open('GET', this.src_);\n                client.send();\n            }\n        }\n    };\n    /**\n     * @private\n     * @param {Event} event The load event.\n     */\n    CustomTile.prototype.onXHRLoad_ = function (event) {\n        var client = /** @type {XMLHttpRequest} */ (event.target);\n        // status will be 0 for file:// urls\n        if (!client.status || client.status >= 200 && client.status < 300) {\n            var response = void 0;\n            try {\n                response = /** @type {!UTFGridJSON} */ (JSON.parse(client.responseText));\n            }\n            catch (err) {\n                this.handleError_();\n                return;\n            }\n            this.handleLoad_(response);\n        }\n        else {\n            this.handleError_();\n        }\n    };\n    /**\n     * @private\n     * @param {Event} event The error event.\n     */\n    CustomTile.prototype.onXHRError_ = function (event) {\n        this.handleError_();\n    };\n    /**\n     * @override\n     */\n    CustomTile.prototype.load = function () {\n        if (this.preemptive_) {\n            this.loadInternal_();\n        }\n    };\n    return CustomTile;\n}(Tile));\nexport { CustomTile };\n/**\n * @typedef {Object} Options\n * @property {boolean} [preemptive=true]\n * If `true` the UTFGrid source loads the tiles based on their \"visibility\".\n * This improves the speed of response, but increases traffic.\n * Note that if set to `false`, you need to pass `true` as `opt_request`\n * to the `forDataAtCoordinateAndResolution` method otherwise no data\n * will ever be loaded.\n * @property {boolean} [jsonp=false] Use JSONP with callback to load the TileJSON.\n * Useful when the server does not support CORS..\n * @property {import(\"./TileJSON.js\").Config} [tileJSON] TileJSON configuration for this source.\n * If not provided, `url` must be configured.\n * @property {string} [url] TileJSON endpoint that provides the configuration for this source.\n * Request will be made through JSONP. If not provided, `tileJSON` must be configured.\n */\n/**\n * @classdesc\n * Layer source for UTFGrid interaction data loaded from TileJSON format.\n * @api\n */\nvar UTFGrid = /** @class */ (function (_super) {\n    __extends(UTFGrid, _super);\n    /**\n     * @param {Options} options Source options.\n     */\n    function UTFGrid(options) {\n        var _this = _super.call(this, {\n            projection: getProjection('EPSG:3857'),\n            state: SourceState.LOADING\n        }) || this;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.preemptive_ = options.preemptive !== undefined ?\n            options.preemptive : true;\n        /**\n         * @private\n         * @type {!import(\"../Tile.js\").UrlFunction}\n         */\n        _this.tileUrlFunction_ = nullTileUrlFunction;\n        /**\n         * @private\n         * @type {string|undefined}\n         */\n        _this.template_ = undefined;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.jsonp_ = options.jsonp || false;\n        if (options.url) {\n            if (_this.jsonp_) {\n                requestJSONP(options.url, _this.handleTileJSONResponse.bind(_this), _this.handleTileJSONError.bind(_this));\n            }\n            else {\n                var client = new XMLHttpRequest();\n                client.addEventListener('load', _this.onXHRLoad_.bind(_this));\n                client.addEventListener('error', _this.onXHRError_.bind(_this));\n                client.open('GET', options.url);\n                client.send();\n            }\n        }\n        else if (options.tileJSON) {\n            _this.handleTileJSONResponse(options.tileJSON);\n        }\n        else {\n            assert(false, 51); // Either `url` or `tileJSON` options must be provided\n        }\n        return _this;\n    }\n    /**\n     * @private\n     * @param {Event} event The load event.\n     */\n    UTFGrid.prototype.onXHRLoad_ = function (event) {\n        var client = /** @type {XMLHttpRequest} */ (event.target);\n        // status will be 0 for file:// urls\n        if (!client.status || client.status >= 200 && client.status < 300) {\n            var response = void 0;\n            try {\n                response = /** @type {import(\"./TileJSON.js\").Config} */ (JSON.parse(client.responseText));\n            }\n            catch (err) {\n                this.handleTileJSONError();\n                return;\n            }\n            this.handleTileJSONResponse(response);\n        }\n        else {\n            this.handleTileJSONError();\n        }\n    };\n    /**\n     * @private\n     * @param {Event} event The error event.\n     */\n    UTFGrid.prototype.onXHRError_ = function (event) {\n        this.handleTileJSONError();\n    };\n    /**\n     * Return the template from TileJSON.\n     * @return {string|undefined} The template from TileJSON.\n     * @api\n     */\n    UTFGrid.prototype.getTemplate = function () {\n        return this.template_;\n    };\n    /**\n     * Calls the callback (synchronously by default) with the available data\n     * for given coordinate and resolution (or `null` if not yet loaded or\n     * in case of an error).\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {number} resolution Resolution.\n     * @param {function(*): void} callback Callback.\n     * @param {boolean=} opt_request If `true` the callback is always async.\n     *                               The tile data is requested if not yet loaded.\n     * @api\n     */\n    UTFGrid.prototype.forDataAtCoordinateAndResolution = function (coordinate, resolution, callback, opt_request) {\n        if (this.tileGrid) {\n            var tileCoord = this.tileGrid.getTileCoordForCoordAndResolution(coordinate, resolution);\n            var tile = /** @type {!CustomTile} */ (this.getTile(tileCoord[0], tileCoord[1], tileCoord[2], 1, this.getProjection()));\n            tile.forDataAtCoordinate(coordinate, callback, opt_request);\n        }\n        else {\n            if (opt_request === true) {\n                setTimeout(function () {\n                    callback(null);\n                }, 0);\n            }\n            else {\n                callback(null);\n            }\n        }\n    };\n    /**\n     * @protected\n     */\n    UTFGrid.prototype.handleTileJSONError = function () {\n        this.setState(SourceState.ERROR);\n    };\n    /**\n     * TODO: very similar to ol/source/TileJSON#handleTileJSONResponse\n     * @protected\n     * @param {import(\"./TileJSON.js\").Config} tileJSON Tile JSON.\n     */\n    UTFGrid.prototype.handleTileJSONResponse = function (tileJSON) {\n        var epsg4326Projection = getProjection('EPSG:4326');\n        var sourceProjection = this.getProjection();\n        var extent;\n        if (tileJSON['bounds'] !== undefined) {\n            var transform = getTransformFromProjections(epsg4326Projection, sourceProjection);\n            extent = applyTransform(tileJSON['bounds'], transform);\n        }\n        var minZoom = tileJSON['minzoom'] || 0;\n        var maxZoom = tileJSON['maxzoom'] || 22;\n        var tileGrid = createXYZ({\n            extent: extentFromProjection(sourceProjection),\n            maxZoom: maxZoom,\n            minZoom: minZoom\n        });\n        this.tileGrid = tileGrid;\n        this.template_ = tileJSON['template'];\n        var grids = tileJSON['grids'];\n        if (!grids) {\n            this.setState(SourceState.ERROR);\n            return;\n        }\n        this.tileUrlFunction_ = createFromTemplates(grids, tileGrid);\n        if (tileJSON['attribution'] !== undefined) {\n            var attributionExtent_1 = extent !== undefined ?\n                extent : epsg4326Projection.getExtent();\n            this.setAttributions(function (frameState) {\n                if (intersects(attributionExtent_1, frameState.extent)) {\n                    return [tileJSON['attribution']];\n                }\n                return null;\n            });\n        }\n        this.setState(SourceState.READY);\n    };\n    /**\n     * @inheritDoc\n     */\n    UTFGrid.prototype.getTile = function (z, x, y, pixelRatio, projection) {\n        var tileCoordKey = getKeyZXY(z, x, y);\n        if (this.tileCache.containsKey(tileCoordKey)) {\n            return (\n            /** @type {!import(\"../Tile.js\").default} */ (this.tileCache.get(tileCoordKey)));\n        }\n        else {\n            var tileCoord = [z, x, y];\n            var urlTileCoord = this.getTileCoordForTileUrlFunction(tileCoord, projection);\n            var tileUrl = this.tileUrlFunction_(urlTileCoord, pixelRatio, projection);\n            var tile = new CustomTile(tileCoord, tileUrl !== undefined ? TileState.IDLE : TileState.EMPTY, tileUrl !== undefined ? tileUrl : '', this.tileGrid.getTileCoordExtent(tileCoord), this.preemptive_, this.jsonp_);\n            this.tileCache.set(tileCoordKey, tile);\n            return tile;\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    UTFGrid.prototype.useTile = function (z, x, y) {\n        var tileCoordKey = getKeyZXY(z, x, y);\n        if (this.tileCache.containsKey(tileCoordKey)) {\n            this.tileCache.get(tileCoordKey);\n        }\n    };\n    return UTFGrid;\n}(TileSource));\nexport default UTFGrid;\n//# sourceMappingURL=UTFGrid.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/VectorRenderTile\n */\nimport { getUid } from './util.js';\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\nimport { createCanvasContext2D } from './dom.js';\n/**\n * @typedef {Object} ReplayState\n * @property {boolean} dirty\n * @property {null|import(\"./render.js\").OrderFunction} renderedRenderOrder\n * @property {number} renderedTileRevision\n * @property {number} renderedResolution\n * @property {number} renderedRevision\n * @property {number} renderedZ\n * @property {number} renderedTileResolution\n * @property {number} renderedTileZ\n */\nvar VectorRenderTile = /** @class */ (function (_super) {\n    __extends(VectorRenderTile, _super);\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @param {TileState} state State.\n     * @param {import(\"./tilecoord.js\").TileCoord} urlTileCoord Wrapped tile coordinate for source urls.\n     * @param {import(\"./tilegrid/TileGrid.js\").default} sourceTileGrid Tile grid of the source.\n     * @param {function(VectorRenderTile):Array<import(\"./VectorTile\").default>} getSourceTiles Function\n     * to get an source tiles for this tile.\n     * @param {function(VectorRenderTile):void} removeSourceTiles Function to remove this tile from its\n     * source tiles's consumer count.\n     */\n    function VectorRenderTile(tileCoord, state, urlTileCoord, sourceTileGrid, getSourceTiles, removeSourceTiles) {\n        var _this = _super.call(this, tileCoord, state, { transition: 0 }) || this;\n        /**\n         * @private\n         * @type {!Object<string, CanvasRenderingContext2D>}\n         */\n        _this.context_ = {};\n        /**\n         * Executor groups by layer uid. Entries are read/written by the renderer.\n         * @type {Object<string, Array<import(\"./render/canvas/ExecutorGroup.js\").default>>}\n         */\n        _this.executorGroups = {};\n        /**\n         * Number of loading source tiles. Read/written by the source.\n         * @type {number}\n         */\n        _this.loadingSourceTiles = 0;\n        /**\n         * Tile keys of error source tiles. Read/written by the source.\n         * @type {Object<string, boolean>}\n         */\n        _this.errorSourceTileKeys = {};\n        /**\n         * @private\n         * @type {!Object<string, ReplayState>}\n         */\n        _this.replayState_ = {};\n        /**\n         * @type {number}\n         */\n        _this.wantedResolution;\n        /**\n         * @type {!function(import(\"./VectorRenderTile.js\").default):Array<import(\"./VectorTile.js\").default>}\n         */\n        _this.getSourceTiles_ = getSourceTiles;\n        /**\n         * @type {!function(import(\"./VectorRenderTile.js\").default):void}\n         */\n        _this.removeSourceTiles_ = removeSourceTiles;\n        /**\n         * @private\n         * @type {import(\"./tilegrid/TileGrid.js\").default}\n         */\n        _this.sourceTileGrid_ = sourceTileGrid;\n        /**\n         * z of the source tiles of the last getSourceTiles call.\n         * @type {number}\n         */\n        _this.sourceZ = -1;\n        /**\n         * True when all tiles for this tile's nominal resolution are available.\n         * @type {boolean}\n         */\n        _this.hifi = false;\n        /**\n         * @type {import(\"./tilecoord.js\").TileCoord}\n         */\n        _this.wrappedTileCoord = urlTileCoord;\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    VectorRenderTile.prototype.disposeInternal = function () {\n        this.removeSourceTiles_(this);\n        for (var key in this.context_) {\n            var canvas = this.context_[key].canvas;\n            canvas.width = canvas.height = 0;\n        }\n        for (var key in this.executorGroups) {\n            var executorGroups = this.executorGroups[key];\n            for (var i = 0, ii = executorGroups.length; i < ii; ++i) {\n                executorGroups[i].disposeInternal();\n            }\n        }\n        this.setState(TileState.ABORT);\n        _super.prototype.disposeInternal.call(this);\n    };\n    /**\n     * @param {import(\"./layer/Layer.js\").default} layer Layer.\n     * @return {CanvasRenderingContext2D} The rendering context.\n     */\n    VectorRenderTile.prototype.getContext = function (layer) {\n        var key = getUid(layer);\n        if (!(key in this.context_)) {\n            this.context_[key] = createCanvasContext2D();\n        }\n        return this.context_[key];\n    };\n    /**\n     * @param {import(\"./layer/Layer.js\").default} layer Layer.\n     * @return {boolean} Tile has a rendering context for the given layer.\n     */\n    VectorRenderTile.prototype.hasContext = function (layer) {\n        return getUid(layer) in this.context_;\n    };\n    /**\n     * Get the Canvas for this tile.\n     * @param {import(\"./layer/Layer.js\").default} layer Layer.\n     * @return {HTMLCanvasElement} Canvas.\n     */\n    VectorRenderTile.prototype.getImage = function (layer) {\n        return this.hasContext(layer) ? this.getContext(layer).canvas : null;\n    };\n    /**\n     * @param {import(\"./layer/Layer.js\").default} layer Layer.\n     * @return {ReplayState} The replay state.\n     */\n    VectorRenderTile.prototype.getReplayState = function (layer) {\n        var key = getUid(layer);\n        if (!(key in this.replayState_)) {\n            this.replayState_[key] = {\n                dirty: false,\n                renderedRenderOrder: null,\n                renderedResolution: NaN,\n                renderedRevision: -1,\n                renderedTileResolution: NaN,\n                renderedTileRevision: -1,\n                renderedZ: -1,\n                renderedTileZ: -1\n            };\n        }\n        return this.replayState_[key];\n    };\n    /**\n     * @inheritDoc\n     */\n    VectorRenderTile.prototype.load = function () {\n        this.getSourceTiles_(this);\n    };\n    return VectorRenderTile;\n}(Tile));\nexport default VectorRenderTile;\n//# sourceMappingURL=VectorRenderTile.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/VectorTile\n */\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\nvar VectorTile = /** @class */ (function (_super) {\n    __extends(VectorTile, _super);\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @param {TileState} state State.\n     * @param {string} src Data source url.\n     * @param {import(\"./format/Feature.js\").default} format Feature format.\n     * @param {import(\"./Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n     * @param {import(\"./Tile.js\").Options=} opt_options Tile options.\n     */\n    function VectorTile(tileCoord, state, src, format, tileLoadFunction, opt_options) {\n        var _this = _super.call(this, tileCoord, state, opt_options) || this;\n        /**\n         * @type {number}\n         */\n        _this.consumers = 0;\n        /**\n         * Extent of this tile; set by the source.\n         * @type {import(\"./extent.js\").Extent}\n         */\n        _this.extent = null;\n        /**\n         * @private\n         * @type {import(\"./format/Feature.js\").default}\n         */\n        _this.format_ = format;\n        /**\n         * @private\n         * @type {Array<import(\"./Feature.js\").default>}\n         */\n        _this.features_ = null;\n        /**\n         * @private\n         * @type {import(\"./featureloader.js\").FeatureLoader}\n         */\n        _this.loader_;\n        /**\n         * Feature projection of this tile; set by the source.\n         * @type {import(\"./proj/Projection.js\").default}\n         */\n        _this.projection = null;\n        /**\n         * Resolution of this tile; set by the source.\n         * @type {number}\n         */\n        _this.resolution;\n        /**\n         * @private\n         * @type {import(\"./Tile.js\").LoadFunction}\n         */\n        _this.tileLoadFunction_ = tileLoadFunction;\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.url_ = src;\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    VectorTile.prototype.disposeInternal = function () {\n        this.setState(TileState.ABORT);\n        _super.prototype.disposeInternal.call(this);\n    };\n    /**\n     * Get the feature format assigned for reading this tile's features.\n     * @return {import(\"./format/Feature.js\").default} Feature format.\n     * @api\n     */\n    VectorTile.prototype.getFormat = function () {\n        return this.format_;\n    };\n    /**\n     * Get the features for this tile. Geometries will be in the view projection.\n     * @return {Array<import(\"./Feature.js\").FeatureLike>} Features.\n     * @api\n     */\n    VectorTile.prototype.getFeatures = function () {\n        return this.features_;\n    };\n    /**\n     * @inheritDoc\n     */\n    VectorTile.prototype.getKey = function () {\n        return this.url_;\n    };\n    /**\n     * @inheritDoc\n     */\n    VectorTile.prototype.load = function () {\n        if (this.state == TileState.IDLE) {\n            this.setState(TileState.LOADING);\n            this.tileLoadFunction_(this, this.url_);\n            this.loader_(this.extent, this.resolution, this.projection);\n        }\n    };\n    /**\n     * Handler for successful tile load.\n     * @param {Array<import(\"./Feature.js\").default>} features The loaded features.\n     * @param {import(\"./proj/Projection.js\").default} dataProjection Data projection.\n     */\n    VectorTile.prototype.onLoad = function (features, dataProjection) {\n        this.setFeatures(features);\n    };\n    /**\n     * Handler for tile load errors.\n     */\n    VectorTile.prototype.onError = function () {\n        this.setState(TileState.ERROR);\n    };\n    /**\n     * Function for use in an {@link module:ol/source/VectorTile~VectorTile}'s `tileLoadFunction`.\n     * Sets the features for the tile.\n     * @param {Array<import(\"./Feature.js\").default>} features Features.\n     * @api\n     */\n    VectorTile.prototype.setFeatures = function (features) {\n        this.features_ = features;\n        this.setState(TileState.LOADED);\n    };\n    /**\n     * Set the feature loader for reading this tile's features.\n     * @param {import(\"./featureloader.js\").FeatureLoader} loader Feature loader.\n     * @api\n     */\n    VectorTile.prototype.setLoader = function (loader) {\n        this.loader_ = loader;\n    };\n    return VectorTile;\n}(Tile));\nexport default VectorTile;\n//# sourceMappingURL=VectorTile.js.map","/**\n * @module ol/source/VectorTile\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport TileState from '../TileState.js';\nimport VectorRenderTile from '../VectorRenderTile.js';\nimport Tile from '../VectorTile.js';\nimport { toSize } from '../size.js';\nimport UrlTile from './UrlTile.js';\nimport { getKeyZXY, getKey } from '../tilecoord.js';\nimport { createXYZ, extentFromProjection, createForProjection } from '../tilegrid.js';\nimport { buffer as bufferExtent, getIntersection } from '../extent.js';\nimport { listen, unlistenByKey } from '../events.js';\nimport EventType from '../events/EventType.js';\nimport { loadFeaturesXhr } from '../featureloader.js';\nimport { isEmpty } from '../obj.js';\nimport { equals } from '../array.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize=128] Cache size.\n * @property {import(\"../extent.js\").Extent} [extent]\n * @property {import(\"../format/Feature.js\").default} [format] Feature format for tiles. Used and required by the default.\n * @property {boolean} [overlaps=true] This source may have overlapping geometries. Setting this\n * to `false` (e.g. for sources with polygons that represent administrative\n * boundaries or TopoJSON sources) allows the renderer to optimise fill and\n * stroke operations.\n * @property {import(\"../proj.js\").ProjectionLike} [projection='EPSG:3857'] Projection of the tile grid.\n * @property {import(\"./State.js\").default} [state] Source state.\n * @property {typeof import(\"../VectorTile.js\").default} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/VectorTile}.\n * @property {number} [maxZoom=22] Optional max zoom level.\n * @property {number} [minZoom] Optional min zoom level.\n * @property {number|import(\"../size.js\").Size} [tileSize=512] Optional tile size.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction]\n * Optional function to load a tile given a URL. Could look like this for pbf tiles:\n * ```js\n * function(tile, url) {\n *   tile.setLoader(function(extent, resolution, projection) {\n *     fetch(url).then(function(response) {\n *       response.arrayBuffer().then(function(data) {\n *         const format = tile.getFormat() // ol/format/MVT configured as source format\n *         const features = format.readFeatures(data, {\n *           extent: extent,\n *           featureProjection: projection\n *         });\n *         tile.setFeatures(features);\n *       });\n *     });\n *   });\n * }\n * ```\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get tile URL given a tile coordinate and the projection.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\n * used instead of defining each one separately in the `urls` option.\n * @property {number} [transition] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * When set to `false`, only one world\n * will be rendered. When set to `true`, tiles will be wrapped horizontally to\n * render multiple worlds.\n */\n/**\n * @classdesc\n * Class for layer sources providing vector data divided into a tile grid, to be\n * used with {@link module:ol/layer/VectorTile~VectorTile}. Although this source receives tiles\n * with vector features from the server, it is not meant for feature editing.\n * Features are optimized for rendering, their geometries are clipped at or near\n * tile boundaries and simplified for a view resolution. See\n * {@link module:ol/source/Vector} for vector sources that are suitable for feature\n * editing.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n * @api\n */\nvar VectorTile = /** @class */ (function (_super) {\n    __extends(VectorTile, _super);\n    /**\n     * @param {!Options} options Vector tile options.\n     */\n    function VectorTile(options) {\n        var _this = this;\n        var projection = options.projection || 'EPSG:3857';\n        var extent = options.extent || extentFromProjection(projection);\n        var tileGrid = options.tileGrid || createXYZ({\n            extent: extent,\n            maxZoom: options.maxZoom || 22,\n            minZoom: options.minZoom,\n            tileSize: options.tileSize || 512\n        });\n        _this = _super.call(this, {\n            attributions: options.attributions,\n            attributionsCollapsible: options.attributionsCollapsible,\n            cacheSize: options.cacheSize,\n            opaque: false,\n            projection: projection,\n            state: options.state,\n            tileGrid: tileGrid,\n            tileLoadFunction: options.tileLoadFunction ? options.tileLoadFunction : defaultLoadFunction,\n            tileUrlFunction: options.tileUrlFunction,\n            url: options.url,\n            urls: options.urls,\n            wrapX: options.wrapX === undefined ? true : options.wrapX,\n            transition: options.transition\n        }) || this;\n        /**\n         * @private\n         * @type {import(\"../format/Feature.js\").default}\n         */\n        _this.format_ = options.format ? options.format : null;\n        /**\n         * @type {Object<string, import(\"./VectorTile\").default>}\n         */\n        _this.loadingTiles_ = {};\n        /**\n         * @private\n         * @type {Object<string, import(\"../VectorTile.js\").default>}\n         */\n        _this.sourceTiles_ = {};\n        /**\n         * @private\n         * @type {Object<string, Array<import(\"../VectorTile.js\").default>>}\n         */\n        _this.sourceTilesByTileKey_ = {};\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.overlaps_ = options.overlaps == undefined ? true : options.overlaps;\n        /**\n         * @protected\n         * @type {typeof import(\"../VectorTile.js\").default}\n         */\n        _this.tileClass = options.tileClass ? options.tileClass : Tile;\n        /**\n         * @private\n         * @type {Object<string, import(\"../tilegrid/TileGrid.js\").default>}\n         */\n        _this.tileGrids_ = {};\n        return _this;\n    }\n    /**\n     * @return {boolean} The source can have overlapping geometries.\n     */\n    VectorTile.prototype.getOverlaps = function () {\n        return this.overlaps_;\n    };\n    /**\n     * clear {@link module:ol/TileCache~TileCache} and delete all source tiles\n     * @api\n     */\n    VectorTile.prototype.clear = function () {\n        this.tileCache.clear();\n        this.sourceTiles_ = {};\n        this.sourceTilesByTileKey_ = {};\n    };\n    /**\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../proj/Projection\").default} projection Projection.\n     * @param {VectorRenderTile} tile Vector image tile.\n     * @return {Array<import(\"../VectorTile\").default>} Tile keys.\n     */\n    VectorTile.prototype.getSourceTiles = function (pixelRatio, projection, tile) {\n        var sourceTiles = [];\n        var urlTileCoord = tile.wrappedTileCoord;\n        if (urlTileCoord) {\n            var tileGrid = this.getTileGridForProjection(projection);\n            var extent = tileGrid.getTileCoordExtent(urlTileCoord);\n            var z = urlTileCoord[0];\n            var resolution = tileGrid.getResolution(z);\n            // make extent 1 pixel smaller so we don't load tiles for < 0.5 pixel render space\n            bufferExtent(extent, -1 / resolution, extent);\n            var sourceTileGrid_1 = this.tileGrid;\n            var sourceExtent = sourceTileGrid_1.getExtent();\n            if (sourceExtent) {\n                getIntersection(extent, sourceExtent, extent);\n            }\n            var sourceZ_1 = sourceTileGrid_1.getZForResolution(resolution, 1);\n            var minZoom = sourceTileGrid_1.getMinZoom();\n            var loadedZ_1 = sourceZ_1 + 1;\n            var covered_1, empty_1;\n            do {\n                --loadedZ_1;\n                covered_1 = true;\n                empty_1 = true;\n                sourceTileGrid_1.forEachTileCoord(extent, loadedZ_1, function (sourceTileCoord) {\n                    var tileKey = getKey(sourceTileCoord);\n                    var sourceTile;\n                    if (tileKey in this.sourceTiles_) {\n                        sourceTile = this.sourceTiles_[tileKey];\n                        var state = sourceTile.getState();\n                        if (state === TileState.LOADED || state === TileState.ERROR || state === TileState.EMPTY) {\n                            empty_1 = empty_1 && state === TileState.EMPTY;\n                            sourceTiles.push(sourceTile);\n                            return;\n                        }\n                    }\n                    else if (loadedZ_1 === sourceZ_1) {\n                        var tileUrl = this.tileUrlFunction(sourceTileCoord, pixelRatio, projection);\n                        sourceTile = new this.tileClass(sourceTileCoord, tileUrl == undefined ? TileState.EMPTY : TileState.IDLE, tileUrl == undefined ? '' : tileUrl, this.format_, this.tileLoadFunction);\n                        sourceTile.extent = sourceTileGrid_1.getTileCoordExtent(sourceTileCoord);\n                        sourceTile.projection = projection;\n                        sourceTile.resolution = sourceTileGrid_1.getResolution(sourceTileCoord[0]);\n                        this.sourceTiles_[tileKey] = sourceTile;\n                        empty_1 = empty_1 && sourceTile.getState() === TileState.EMPTY;\n                        listen(sourceTile, EventType.CHANGE, this.handleTileChange, this);\n                        sourceTile.load();\n                    }\n                    else {\n                        empty_1 = false;\n                    }\n                    covered_1 = false;\n                    if (!sourceTile) {\n                        return;\n                    }\n                    if (sourceTile.getState() !== TileState.EMPTY && tile.getState() === TileState.IDLE) {\n                        tile.loadingSourceTiles++;\n                        var key_1 = listen(sourceTile, EventType.CHANGE, function () {\n                            var state = sourceTile.getState();\n                            var sourceTileKey = getKey(sourceTile.tileCoord);\n                            if (state === TileState.LOADED || state === TileState.ERROR) {\n                                if (state === TileState.LOADED) {\n                                    unlistenByKey(key_1);\n                                    tile.loadingSourceTiles--;\n                                    delete tile.errorSourceTileKeys[sourceTileKey];\n                                }\n                                else if (state === TileState.ERROR) {\n                                    tile.errorSourceTileKeys[sourceTileKey] = true;\n                                }\n                                if (tile.loadingSourceTiles - Object.keys(tile.errorSourceTileKeys).length === 0) {\n                                    tile.hifi = true;\n                                    tile.sourceZ = sourceZ_1;\n                                    tile.setState(isEmpty(tile.errorSourceTileKeys) ? TileState.LOADED : TileState.ERROR);\n                                }\n                            }\n                        });\n                    }\n                }.bind(this));\n                if (!covered_1) {\n                    sourceTiles.length = 0;\n                }\n            } while (!covered_1 && loadedZ_1 > minZoom);\n            if (!empty_1 && tile.getState() === TileState.IDLE) {\n                tile.setState(TileState.LOADING);\n            }\n            if (covered_1 || empty_1) {\n                tile.hifi = sourceZ_1 === loadedZ_1;\n                tile.sourceZ = loadedZ_1;\n                var previousSourceTiles = this.sourceTilesByTileKey_[getKey(tile.tileCoord)];\n                if (tile.getState() < TileState.LOADED) {\n                    tile.setState(empty_1 ? TileState.EMPTY : TileState.LOADED);\n                }\n                else if (!previousSourceTiles || !equals(sourceTiles, previousSourceTiles)) {\n                    this.removeSourceTiles(tile);\n                    this.addSourceTiles(tile, sourceTiles);\n                }\n            }\n        }\n        return sourceTiles;\n    };\n    /**\n     * @param {VectorRenderTile} tile Tile.\n     * @param {Array<import(\"../VectorTile\").default>} sourceTiles Source tiles.\n     */\n    VectorTile.prototype.addSourceTiles = function (tile, sourceTiles) {\n        this.sourceTilesByTileKey_[getKey(tile.tileCoord)] = sourceTiles;\n        for (var i = 0, ii = sourceTiles.length; i < ii; ++i) {\n            sourceTiles[i].consumers++;\n        }\n    };\n    /**\n     * @param {VectorRenderTile} tile Tile.\n     */\n    VectorTile.prototype.removeSourceTiles = function (tile) {\n        var tileKey = getKey(tile.tileCoord);\n        if (tileKey in this.sourceTilesByTileKey_) {\n            var sourceTiles = this.sourceTilesByTileKey_[tileKey];\n            for (var i = 0, ii = sourceTiles.length; i < ii; ++i) {\n                var sourceTile = sourceTiles[i];\n                sourceTile.consumers--;\n                if (sourceTile.consumers === 0) {\n                    sourceTile.dispose();\n                    delete this.sourceTiles_[getKey(sourceTile.tileCoord)];\n                }\n            }\n        }\n        delete this.sourceTilesByTileKey_[tileKey];\n    };\n    /**\n     * @inheritDoc\n     */\n    VectorTile.prototype.getTile = function (z, x, y, pixelRatio, projection) {\n        var tileCoordKey = getKeyZXY(z, x, y);\n        if (this.tileCache.containsKey(tileCoordKey)) {\n            return (\n            /** @type {!import(\"../Tile.js\").default} */ (this.tileCache.get(tileCoordKey)));\n        }\n        else {\n            var tileCoord = [z, x, y];\n            var urlTileCoord = this.getTileCoordForTileUrlFunction(tileCoord, projection);\n            var tile = new VectorRenderTile(tileCoord, urlTileCoord !== null ? TileState.IDLE : TileState.EMPTY, urlTileCoord, this.tileGrid, this.getSourceTiles.bind(this, pixelRatio, projection), this.removeSourceTiles.bind(this));\n            tile.key = this.getRevision().toString();\n            this.tileCache.set(tileCoordKey, tile);\n            return tile;\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    VectorTile.prototype.getTileGridForProjection = function (projection) {\n        var code = projection.getCode();\n        var tileGrid = this.tileGrids_[code];\n        if (!tileGrid) {\n            // A tile grid that matches the tile size of the source tile grid is more\n            // likely to have 1:1 relationships between source tiles and rendered tiles.\n            var sourceTileGrid = this.tileGrid;\n            tileGrid = this.tileGrids_[code] = createForProjection(projection, undefined, sourceTileGrid ? sourceTileGrid.getTileSize(sourceTileGrid.getMinZoom()) : undefined);\n        }\n        return tileGrid;\n    };\n    /**\n     * @inheritDoc\n     */\n    VectorTile.prototype.getTilePixelRatio = function (pixelRatio) {\n        return pixelRatio;\n    };\n    /**\n     * @inheritDoc\n     */\n    VectorTile.prototype.getTilePixelSize = function (z, pixelRatio, projection) {\n        var tileGrid = this.getTileGridForProjection(projection);\n        var tileSize = toSize(tileGrid.getTileSize(z), this.tmpSize);\n        return [Math.round(tileSize[0] * pixelRatio), Math.round(tileSize[1] * pixelRatio)];\n    };\n    return VectorTile;\n}(UrlTile));\nexport default VectorTile;\n/**\n * Sets the loader for a tile.\n * @param {import(\"../VectorTile.js\").default} tile Vector tile.\n * @param {string} url URL.\n */\nexport function defaultLoadFunction(tile, url) {\n    var loader = loadFeaturesXhr(url, tile.getFormat(), tile.onLoad.bind(tile), tile.onError.bind(tile));\n    tile.setLoader(loader);\n}\n//# sourceMappingURL=VectorTile.js.map","/**\n * @module ol/source/WMTSRequestEncoding\n */\n/**\n * Request encoding. One of 'KVP', 'REST'.\n * @enum {string}\n */\nexport default {\n    KVP: 'KVP',\n    REST: 'REST' // see spec §10\n};\n//# sourceMappingURL=WMTSRequestEncoding.js.map","/**\n * @module ol/source/WMTS\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { expandUrl, createFromTileUrlFunctions, nullTileUrlFunction } from '../tileurlfunction.js';\nimport { find, findIndex, includes } from '../array.js';\nimport { containsExtent } from '../extent.js';\nimport { assign } from '../obj.js';\nimport { get as getProjection, equivalent, transformExtent } from '../proj.js';\nimport TileImage from './TileImage.js';\nimport WMTSRequestEncoding from './WMTSRequestEncoding.js';\nimport { createFromCapabilitiesMatrixSet } from '../tilegrid/WMTS.js';\nimport { appendParams } from '../uri.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize] Tile cache size. The default depends on the screen size. Will increase if too small.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {import(\"../tilegrid/WMTS.js\").default} tileGrid Tile grid.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"./WMTSRequestEncoding.js\").default|string} [requestEncoding='KVP'] Request encoding.\n * @property {string} layer Layer name as advertised in the WMTS capabilities.\n * @property {string} style Style name as advertised in the WMTS capabilities.\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass]  Class used to instantiate image tiles. Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service.\n * For example, if the tile service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {string} [format='image/jpeg'] Image format. Only used when `requestEncoding` is `'KVP'`.\n * @property {string} [version='1.0.0'] WMTS version.\n * @property {string} matrixSet Matrix set.\n * @property {!Object} [dimensions] Additional \"dimensions\" for tile requests.\n * This is an object with properties named like the advertised WMTS dimensions.\n * @property {string} [url]  A URL for the service.\n * For the RESTful request encoding, this is a URL\n * template.  For KVP encoding, it is normal URL. A `{?-?}` template pattern,\n * for example `subdomain{a-f}.domain.com`, may be used instead of defining\n * each one separately in the `urls` option.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {Array<string>} [urls] An array of URLs.\n * Requests will be distributed among the URLs in this array.\n * @property {boolean} [wrapX=false] Whether to wrap the world horizontally.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n */\n/**\n * @classdesc\n * Layer source for tile data from WMTS servers.\n * @api\n */\nvar WMTS = /** @class */ (function (_super) {\n    __extends(WMTS, _super);\n    /**\n     * @param {Options} options WMTS options.\n     */\n    function WMTS(options) {\n        // TODO: add support for TileMatrixLimits\n        var _this = this;\n        var requestEncoding = options.requestEncoding !== undefined ?\n            /** @type {import(\"./WMTSRequestEncoding.js\").default} */ (options.requestEncoding) :\n            WMTSRequestEncoding.KVP;\n        // FIXME: should we create a default tileGrid?\n        // we could issue a getCapabilities xhr to retrieve missing configuration\n        var tileGrid = options.tileGrid;\n        var urls = options.urls;\n        if (urls === undefined && options.url !== undefined) {\n            urls = expandUrl(options.url);\n        }\n        _this = _super.call(this, {\n            attributions: options.attributions,\n            cacheSize: options.cacheSize,\n            crossOrigin: options.crossOrigin,\n            projection: options.projection,\n            reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n            tileClass: options.tileClass,\n            tileGrid: tileGrid,\n            tileLoadFunction: options.tileLoadFunction,\n            tilePixelRatio: options.tilePixelRatio,\n            tileUrlFunction: nullTileUrlFunction,\n            urls: urls,\n            wrapX: options.wrapX !== undefined ? options.wrapX : false,\n            transition: options.transition\n        }) || this;\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.version_ = options.version !== undefined ? options.version : '1.0.0';\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.format_ = options.format !== undefined ? options.format : 'image/jpeg';\n        /**\n         * @private\n         * @type {!Object}\n         */\n        _this.dimensions_ = options.dimensions !== undefined ? options.dimensions : {};\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.layer_ = options.layer;\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.matrixSet_ = options.matrixSet;\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.style_ = options.style;\n        // FIXME: should we guess this requestEncoding from options.url(s)\n        //        structure? that would mean KVP only if a template is not provided.\n        /**\n         * @private\n         * @type {import(\"./WMTSRequestEncoding.js\").default}\n         */\n        _this.requestEncoding_ = requestEncoding;\n        _this.setKey(_this.getKeyForDimensions_());\n        if (urls && urls.length > 0) {\n            _this.tileUrlFunction = createFromTileUrlFunctions(urls.map(createFromWMTSTemplate.bind(_this)));\n        }\n        return _this;\n    }\n    /**\n     * Set the URLs to use for requests.\n     * URLs may contain OCG conform URL Template Variables: {TileMatrix}, {TileRow}, {TileCol}.\n     * @override\n     */\n    WMTS.prototype.setUrls = function (urls) {\n        this.urls = urls;\n        var key = urls.join('\\n');\n        this.setTileUrlFunction(createFromTileUrlFunctions(urls.map(createFromWMTSTemplate.bind(this))), key);\n    };\n    /**\n     * Get the dimensions, i.e. those passed to the constructor through the\n     * \"dimensions\" option, and possibly updated using the updateDimensions\n     * method.\n     * @return {!Object} Dimensions.\n     * @api\n     */\n    WMTS.prototype.getDimensions = function () {\n        return this.dimensions_;\n    };\n    /**\n     * Return the image format of the WMTS source.\n     * @return {string} Format.\n     * @api\n     */\n    WMTS.prototype.getFormat = function () {\n        return this.format_;\n    };\n    /**\n     * Return the layer of the WMTS source.\n     * @return {string} Layer.\n     * @api\n     */\n    WMTS.prototype.getLayer = function () {\n        return this.layer_;\n    };\n    /**\n     * Return the matrix set of the WMTS source.\n     * @return {string} MatrixSet.\n     * @api\n     */\n    WMTS.prototype.getMatrixSet = function () {\n        return this.matrixSet_;\n    };\n    /**\n     * Return the request encoding, either \"KVP\" or \"REST\".\n     * @return {import(\"./WMTSRequestEncoding.js\").default} Request encoding.\n     * @api\n     */\n    WMTS.prototype.getRequestEncoding = function () {\n        return this.requestEncoding_;\n    };\n    /**\n     * Return the style of the WMTS source.\n     * @return {string} Style.\n     * @api\n     */\n    WMTS.prototype.getStyle = function () {\n        return this.style_;\n    };\n    /**\n     * Return the version of the WMTS source.\n     * @return {string} Version.\n     * @api\n     */\n    WMTS.prototype.getVersion = function () {\n        return this.version_;\n    };\n    /**\n     * @private\n     * @return {string} The key for the current dimensions.\n     */\n    WMTS.prototype.getKeyForDimensions_ = function () {\n        var i = 0;\n        var res = [];\n        for (var key in this.dimensions_) {\n            res[i++] = key + '-' + this.dimensions_[key];\n        }\n        return res.join('/');\n    };\n    /**\n     * Update the dimensions.\n     * @param {Object} dimensions Dimensions.\n     * @api\n     */\n    WMTS.prototype.updateDimensions = function (dimensions) {\n        assign(this.dimensions_, dimensions);\n        this.setKey(this.getKeyForDimensions_());\n    };\n    return WMTS;\n}(TileImage));\nexport default WMTS;\n/**\n * Generate source options from a capabilities object.\n * @param {Object} wmtsCap An object representing the capabilities document.\n * @param {!Object} config Configuration properties for the layer.  Defaults for\n *                  the layer will apply if not provided.\n *\n * Required config properties:\n *  - layer - {string} The layer identifier.\n *\n * Optional config properties:\n *  - matrixSet - {string} The matrix set identifier, required if there is\n *       more than one matrix set in the layer capabilities.\n *  - projection - {string} The desired CRS when no matrixSet is specified.\n *       eg: \"EPSG:3857\". If the desired projection is not available,\n *       an error is thrown.\n *  - requestEncoding - {string} url encoding format for the layer. Default is\n *       the first tile url format found in the GetCapabilities response.\n *  - style - {string} The name of the style\n *  - format - {string} Image format for the layer. Default is the first\n *       format returned in the GetCapabilities response.\n *  - crossOrigin - {string|null|undefined} Cross origin. Default is `undefined`.\n * @return {?Options} WMTS source options object or `null` if the layer was not found.\n * @api\n */\nexport function optionsFromCapabilities(wmtsCap, config) {\n    var layers = wmtsCap['Contents']['Layer'];\n    var l = find(layers, function (elt, index, array) {\n        return elt['Identifier'] == config['layer'];\n    });\n    if (l === null) {\n        return null;\n    }\n    var tileMatrixSets = wmtsCap['Contents']['TileMatrixSet'];\n    var idx;\n    if (l['TileMatrixSetLink'].length > 1) {\n        if ('projection' in config) {\n            idx = findIndex(l['TileMatrixSetLink'], function (elt, index, array) {\n                var tileMatrixSet = find(tileMatrixSets, function (el) {\n                    return el['Identifier'] == elt['TileMatrixSet'];\n                });\n                var supportedCRS = tileMatrixSet['SupportedCRS'];\n                var proj1 = getProjection(supportedCRS.replace(/urn:ogc:def:crs:(\\w+):(.*:)?(\\w+)$/, '$1:$3')) ||\n                    getProjection(supportedCRS);\n                var proj2 = getProjection(config['projection']);\n                if (proj1 && proj2) {\n                    return equivalent(proj1, proj2);\n                }\n                else {\n                    return supportedCRS == config['projection'];\n                }\n            });\n        }\n        else {\n            idx = findIndex(l['TileMatrixSetLink'], function (elt, index, array) {\n                return elt['TileMatrixSet'] == config['matrixSet'];\n            });\n        }\n    }\n    else {\n        idx = 0;\n    }\n    if (idx < 0) {\n        idx = 0;\n    }\n    var matrixSet = /** @type {string} */ (l['TileMatrixSetLink'][idx]['TileMatrixSet']);\n    var matrixLimits = /** @type {Array<Object>} */ (l['TileMatrixSetLink'][idx]['TileMatrixSetLimits']);\n    var format = /** @type {string} */ (l['Format'][0]);\n    if ('format' in config) {\n        format = config['format'];\n    }\n    idx = findIndex(l['Style'], function (elt, index, array) {\n        if ('style' in config) {\n            return elt['Title'] == config['style'];\n        }\n        else {\n            return elt['isDefault'];\n        }\n    });\n    if (idx < 0) {\n        idx = 0;\n    }\n    var style = /** @type {string} */ (l['Style'][idx]['Identifier']);\n    var dimensions = {};\n    if ('Dimension' in l) {\n        l['Dimension'].forEach(function (elt, index, array) {\n            var key = elt['Identifier'];\n            var value = elt['Default'];\n            if (value === undefined) {\n                value = elt['Value'][0];\n            }\n            dimensions[key] = value;\n        });\n    }\n    var matrixSets = wmtsCap['Contents']['TileMatrixSet'];\n    var matrixSetObj = find(matrixSets, function (elt, index, array) {\n        return elt['Identifier'] == matrixSet;\n    });\n    var projection;\n    var code = matrixSetObj['SupportedCRS'];\n    if (code) {\n        projection = getProjection(code.replace(/urn:ogc:def:crs:(\\w+):(.*:)?(\\w+)$/, '$1:$3')) ||\n            getProjection(code);\n    }\n    if ('projection' in config) {\n        var projConfig = getProjection(config['projection']);\n        if (projConfig) {\n            if (!projection || equivalent(projConfig, projection)) {\n                projection = projConfig;\n            }\n        }\n    }\n    var wgs84BoundingBox = l['WGS84BoundingBox'];\n    var extent, wrapX;\n    if (wgs84BoundingBox !== undefined) {\n        var wgs84ProjectionExtent = getProjection('EPSG:4326').getExtent();\n        wrapX = (wgs84BoundingBox[0] == wgs84ProjectionExtent[0] &&\n            wgs84BoundingBox[2] == wgs84ProjectionExtent[2]);\n        extent = transformExtent(wgs84BoundingBox, 'EPSG:4326', projection);\n        var projectionExtent = projection.getExtent();\n        if (projectionExtent) {\n            // If possible, do a sanity check on the extent - it should never be\n            // bigger than the validity extent of the projection of a matrix set.\n            if (!containsExtent(projectionExtent, extent)) {\n                extent = undefined;\n            }\n        }\n    }\n    var tileGrid = createFromCapabilitiesMatrixSet(matrixSetObj, extent, matrixLimits);\n    /** @type {!Array<string>} */\n    var urls = [];\n    var requestEncoding = config['requestEncoding'];\n    requestEncoding = requestEncoding !== undefined ? requestEncoding : '';\n    if ('OperationsMetadata' in wmtsCap && 'GetTile' in wmtsCap['OperationsMetadata']) {\n        var gets = wmtsCap['OperationsMetadata']['GetTile']['DCP']['HTTP']['Get'];\n        for (var i = 0, ii = gets.length; i < ii; ++i) {\n            if (gets[i]['Constraint']) {\n                var constraint = find(gets[i]['Constraint'], function (element) {\n                    return element['name'] == 'GetEncoding';\n                });\n                var encodings = constraint['AllowedValues']['Value'];\n                if (requestEncoding === '') {\n                    // requestEncoding not provided, use the first encoding from the list\n                    requestEncoding = encodings[0];\n                }\n                if (requestEncoding === WMTSRequestEncoding.KVP) {\n                    if (includes(encodings, WMTSRequestEncoding.KVP)) {\n                        urls.push(/** @type {string} */ (gets[i]['href']));\n                    }\n                }\n                else {\n                    break;\n                }\n            }\n            else if (gets[i]['href']) {\n                requestEncoding = WMTSRequestEncoding.KVP;\n                urls.push(/** @type {string} */ (gets[i]['href']));\n            }\n        }\n    }\n    if (urls.length === 0) {\n        requestEncoding = WMTSRequestEncoding.REST;\n        l['ResourceURL'].forEach(function (element) {\n            if (element['resourceType'] === 'tile') {\n                format = element['format'];\n                urls.push(/** @type {string} */ (element['template']));\n            }\n        });\n    }\n    return {\n        urls: urls,\n        layer: config['layer'],\n        matrixSet: matrixSet,\n        format: format,\n        projection: projection,\n        requestEncoding: requestEncoding,\n        tileGrid: tileGrid,\n        style: style,\n        dimensions: dimensions,\n        wrapX: wrapX,\n        crossOrigin: config['crossOrigin']\n    };\n}\n/**\n * @param {string} template Template.\n * @return {import(\"../Tile.js\").UrlFunction} Tile URL function.\n * @this {WMTS}\n */\nfunction createFromWMTSTemplate(template) {\n    var requestEncoding = this.requestEncoding_;\n    // context property names are lower case to allow for a case insensitive\n    // replacement as some services use different naming conventions\n    var context = {\n        'layer': this.layer_,\n        'style': this.style_,\n        'tilematrixset': this.matrixSet_\n    };\n    if (requestEncoding == WMTSRequestEncoding.KVP) {\n        assign(context, {\n            'Service': 'WMTS',\n            'Request': 'GetTile',\n            'Version': this.version_,\n            'Format': this.format_\n        });\n    }\n    // TODO: we may want to create our own appendParams function so that params\n    // order conforms to wmts spec guidance, and so that we can avoid to escape\n    // special template params\n    template = (requestEncoding == WMTSRequestEncoding.KVP) ?\n        appendParams(template, context) :\n        template.replace(/\\{(\\w+?)\\}/g, function (m, p) {\n            return (p.toLowerCase() in context) ? context[p.toLowerCase()] : m;\n        });\n    var tileGrid = /** @type {import(\"../tilegrid/WMTS.js\").default} */ (this.tileGrid);\n    var dimensions = this.dimensions_;\n    return (\n    /**\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n        if (!tileCoord) {\n            return undefined;\n        }\n        else {\n            var localContext_1 = {\n                'TileMatrix': tileGrid.getMatrixId(tileCoord[0]),\n                'TileCol': tileCoord[1],\n                'TileRow': tileCoord[2]\n            };\n            assign(localContext_1, dimensions);\n            var url = template;\n            if (requestEncoding == WMTSRequestEncoding.KVP) {\n                url = appendParams(url, localContext_1);\n            }\n            else {\n                url = url.replace(/\\{(\\w+?)\\}/g, function (m, p) {\n                    return localContext_1[p];\n                });\n            }\n            return url;\n        }\n    });\n}\n//# sourceMappingURL=WMTS.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/renderer/webgl/PointsLayer\n */\nimport LayerRenderer from '../Layer';\nimport WebGLArrayBuffer from '../../webgl/Buffer';\nimport { DYNAMIC_DRAW, ARRAY_BUFFER, ELEMENT_ARRAY_BUFFER, FLOAT } from '../../webgl';\nimport WebGLHelper, { DefaultAttrib } from '../../webgl/Helper';\nimport GeometryType from '../../geom/GeometryType';\nvar VERTEX_SHADER = \"\\n  precision mediump float;\\n  attribute vec2 a_position;\\n  attribute vec2 a_texCoord;\\n  attribute float a_rotateWithView;\\n  attribute vec2 a_offsets;\\n  attribute float a_opacity;\\n  attribute vec4 a_color;\\n  \\n  uniform mat4 u_projectionMatrix;\\n  uniform mat4 u_offsetScaleMatrix;\\n  uniform mat4 u_offsetRotateMatrix;\\n  \\n  varying vec2 v_texCoord;\\n  varying float v_opacity;\\n  varying vec4 v_color;\\n  \\n  void main(void) {\\n    mat4 offsetMatrix = u_offsetScaleMatrix;\\n    if (a_rotateWithView == 1.0) {\\n      offsetMatrix = u_offsetScaleMatrix * u_offsetRotateMatrix;\\n    }\\n    vec4 offsets = offsetMatrix * vec4(a_offsets, 0.0, 0.0);\\n    gl_Position = u_projectionMatrix * vec4(a_position, 0.0, 1.0) + offsets;\\n    v_texCoord = a_texCoord;\\n    v_opacity = a_opacity;\\n    v_color = a_color;\\n  }\";\nvar FRAGMENT_SHADER = \"\\n  precision mediump float;\\n  \\n  uniform sampler2D u_texture;\\n\\n  varying vec2 v_texCoord;\\n  varying float v_opacity;\\n  varying vec4 v_color;\\n  \\n  void main(void) {\\n    if (v_opacity == 0.0) {\\n      discard;\\n    }\\n    vec4 textureColor = texture2D(u_texture, v_texCoord);\\n    gl_FragColor = v_color * textureColor;\\n    gl_FragColor.a *= v_opacity;\\n    gl_FragColor.rgb *= gl_FragColor.a;\\n  }\";\n/**\n * @typedef {Object} PostProcessesOptions\n * @property {number} [scaleRatio] Scale ratio; if < 1, the post process will render to a texture smaller than\n * the main canvas that will then be sampled up (useful for saving resource on blur steps).\n * @property {string} [vertexShader] Vertex shader source\n * @property {string} [fragmentShader] Fragment shader source\n * @property {Object.<string,import(\"../../webgl/Helper\").UniformValue>} [uniforms] Uniform definitions for the post process step\n */\n/**\n * @typedef {Object} Options\n * @property {function(import(\"../../Feature\").default):number} [sizeCallback] Will be called on every feature in the\n * source to compute the size of the quad on screen (in pixels). This is only done on source change.\n * @property {function(import(\"../../Feature\").default, number):number} [coordCallback] Will be called on every feature in the\n * source to compute the coordinate of the quad center on screen (in pixels). This is only done on source change.\n * The second argument is 0 for `x` component and 1 for `y`.\n * @property {function(import(\"../../Feature\").default, number):number} [texCoordCallback] Will be called on every feature in the\n * source to compute the texture coordinates of each corner of the quad (without effect if no `texture` option defined). This is only done on source change.\n * The second argument is 0 for `u0` component, 1 for `v0`, 2 for `u1`, and 3 for `v1`.\n * @property {function(import(\"../../Feature\").default, Array<number>=):Array<number>} [colorCallback] Will be called on every feature in the\n * source to compute the color for use in the fragment shader (available as the `v_color` varying). This is only done on source change.\n * The return value should be between an array of R, G, B, A values between 0 and 1.  To reduce unnecessary\n * allocation, the function is called with a reusable array that can serve as the return value after updating\n * the R, G, B, and A values.\n * @property {function(import(\"../../Feature\").default):number} [opacityCallback] Will be called on every feature in the\n * source to compute the opacity of the quad on screen (from 0 to 1). This is only done on source change.\n * Note: this is multiplied with the color of the point which can also have an alpha value < 1.\n * @property {function(import(\"../../Feature\").default):boolean} [rotateWithViewCallback] Will be called on every feature in the\n * source to compute whether the quad on screen must stay upwards (`false`) or follow the view rotation (`true`).\n * This is only done on source change.\n * @property {HTMLCanvasElement|HTMLImageElement|ImageData} [texture] Texture to use on points. `texCoordCallback` and `sizeCallback`\n * must be defined for this to have any effect.\n * @property {string} [vertexShader] Vertex shader source\n * @property {string} [fragmentShader] Fragment shader source\n * @property {Object.<string,import(\"../../webgl/Helper\").UniformValue>} [uniforms] Uniform definitions for the post process steps\n * Please note that `u_texture` is reserved for the main texture slot.\n * @property {Array<PostProcessesOptions>} [postProcesses] Post-processes definitions\n */\n/**\n * @classdesc\n * WebGL vector renderer optimized for points.\n * All features will be rendered as quads (two triangles forming a square). New data will be flushed to the GPU\n * every time the vector source changes.\n *\n * Use shaders to customize the final output. The following attributes are available:\n * * `vec2 a_position`\n * * `vec2 a_texCoord`\n * * `vec2 a_offsets`\n * * `float a_rotateWithView`\n * * `float a_opacity`\n * * `float a_color`\n *\n * The following uniform is used for the main texture: `u_texture`.\n *\n * Please note that the main shader output should have premultiplied alpha, otherwise visual anomalies may occur.\n *\n * Points are rendered as quads with the following structure:\n *\n * ```\n *   (u0, v1)      (u1, v1)\n *  [3]----------[2]\n *   |`           |\n *   |  `         |\n *   |    `       |\n *   |      `     |\n *   |        `   |\n *   |          ` |\n *  [0]----------[1]\n *   (u0, v0)      (u1, v0)\n *  ```\n *\n * This uses {@link module:ol/webgl/Helper~WebGLHelper} internally.\n *\n * Default shaders are shown hereafter:\n *\n * * Vertex shader:\n *   ```\n *   precision mediump float;\n *\n *   attribute vec2 a_position;\n *   attribute vec2 a_texCoord;\n *   attribute float a_rotateWithView;\n *   attribute vec2 a_offsets;\n *   attribute float a_opacity;\n *   attribute vec4 a_color;\n *\n *   uniform mat4 u_projectionMatrix;\n *   uniform mat4 u_offsetScaleMatrix;\n *   uniform mat4 u_offsetRotateMatrix;\n *\n *   varying vec2 v_texCoord;\n *   varying float v_opacity;\n *   varying vec4 v_color;\n *\n *   void main(void) {\n *     mat4 offsetMatrix = u_offsetScaleMatrix;\n *     if (a_rotateWithView == 1.0) {\n *       offsetMatrix = u_offsetScaleMatrix * u_offsetRotateMatrix;\n *     }\n *     vec4 offsets = offsetMatrix * vec4(a_offsets, 0.0, 0.0);\n *     gl_Position = u_projectionMatrix * vec4(a_position, 0.0, 1.0) + offsets;\n *     v_texCoord = a_texCoord;\n *     v_opacity = a_opacity;\n *     v_color = a_color;\n *   }\n *   ```\n *\n * * Fragment shader:\n *   ```\n *   precision mediump float;\n *\n *   uniform sampler2D u_texture;\n *\n *   varying vec2 v_texCoord;\n *   varying float v_opacity;\n *   varying vec4 v_color;\n *\n *   void main(void) {\n *     if (v_opacity == 0.0) {\n *       discard;\n *     }\n *     vec4 textureColor = texture2D(u_texture, v_texCoord);\n *     gl_FragColor = v_color * textureColor;\n *     gl_FragColor.a *= v_opacity;\n *     gl_FragColor.rgb *= gl_FragColor.a;\n *   }\n *   ```\n *\n * @api\n */\nvar WebGLPointsLayerRenderer = /** @class */ (function (_super) {\n    __extends(WebGLPointsLayerRenderer, _super);\n    /**\n     * @param {import(\"../../layer/Vector.js\").default} vectorLayer Vector layer.\n     * @param {Options=} [opt_options] Options.\n     */\n    function WebGLPointsLayerRenderer(vectorLayer, opt_options) {\n        var _this = _super.call(this, vectorLayer) || this;\n        var options = opt_options || {};\n        var uniforms = options.uniforms || {};\n        uniforms.u_texture = options.texture || _this.getDefaultTexture();\n        _this.helper_ = new WebGLHelper({\n            postProcesses: options.postProcesses,\n            uniforms: uniforms\n        });\n        _this.sourceRevision_ = -1;\n        _this.verticesBuffer_ = new WebGLArrayBuffer([], DYNAMIC_DRAW);\n        _this.indicesBuffer_ = new WebGLArrayBuffer([], DYNAMIC_DRAW);\n        _this.program_ = _this.helper_.getProgram(options.fragmentShader || FRAGMENT_SHADER, options.vertexShader || VERTEX_SHADER);\n        _this.helper_.useProgram(_this.program_);\n        _this.sizeCallback_ = options.sizeCallback || function () {\n            return 1;\n        };\n        _this.coordCallback_ = options.coordCallback || function (feature, index) {\n            var geom = /** @type {import(\"../../geom/Point\").default} */ (feature.getGeometry());\n            return geom.getCoordinates()[index];\n        };\n        _this.opacityCallback_ = options.opacityCallback || function () {\n            return 1;\n        };\n        _this.texCoordCallback_ = options.texCoordCallback || function (feature, index) {\n            return index < 2 ? 0 : 1;\n        };\n        _this.colorArray_ = [1, 1, 1, 1];\n        _this.colorCallback_ = options.colorCallback || function (feature, color) {\n            return this.colorArray_;\n        };\n        _this.rotateWithViewCallback_ = options.rotateWithViewCallback || function () {\n            return false;\n        };\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    WebGLPointsLayerRenderer.prototype.disposeInternal = function () {\n        _super.prototype.disposeInternal.call(this);\n    };\n    /**\n     * @inheritDoc\n     */\n    WebGLPointsLayerRenderer.prototype.renderFrame = function (frameState, layerState) {\n        this.helper_.drawElements(0, this.indicesBuffer_.getArray().length);\n        this.helper_.finalizeDraw(frameState);\n        var canvas = this.helper_.getCanvas();\n        var opacity = layerState.opacity;\n        if (opacity !== parseFloat(canvas.style.opacity)) {\n            canvas.style.opacity = opacity;\n        }\n        return canvas;\n    };\n    /**\n     * @inheritDoc\n     */\n    WebGLPointsLayerRenderer.prototype.prepareFrame = function (frameState) {\n        var _this = this;\n        var vectorLayer = /** @type {import(\"../../layer/Vector.js\").default} */ (this.getLayer());\n        var vectorSource = vectorLayer.getSource();\n        var stride = 12;\n        this.helper_.prepareDraw(frameState);\n        if (this.sourceRevision_ < vectorSource.getRevision()) {\n            this.sourceRevision_ = vectorSource.getRevision();\n            this.verticesBuffer_.getArray().length = 0;\n            this.indicesBuffer_.getArray().length = 0;\n            var viewState = frameState.viewState;\n            var projection = viewState.projection;\n            var resolution = viewState.resolution;\n            // loop on features to fill the buffer\n            vectorSource.loadFeatures([-Infinity, -Infinity, Infinity, Infinity], resolution, projection);\n            vectorSource.forEachFeature(function (feature) {\n                if (!feature.getGeometry() || feature.getGeometry().getType() !== GeometryType.POINT) {\n                    return;\n                }\n                var x = _this.coordCallback_(feature, 0);\n                var y = _this.coordCallback_(feature, 1);\n                var u0 = _this.texCoordCallback_(feature, 0);\n                var v0 = _this.texCoordCallback_(feature, 1);\n                var u1 = _this.texCoordCallback_(feature, 2);\n                var v1 = _this.texCoordCallback_(feature, 3);\n                var size = _this.sizeCallback_(feature);\n                var opacity = _this.opacityCallback_(feature);\n                var rotateWithView = _this.rotateWithViewCallback_(feature) ? 1 : 0;\n                var color = _this.colorCallback_(feature, _this.colorArray_);\n                var red = color[0];\n                var green = color[1];\n                var blue = color[2];\n                var alpha = color[3];\n                var baseIndex = _this.verticesBuffer_.getArray().length / stride;\n                _this.verticesBuffer_.getArray().push(x, y, -size / 2, -size / 2, u0, v0, opacity, rotateWithView, red, green, blue, alpha, x, y, +size / 2, -size / 2, u1, v0, opacity, rotateWithView, red, green, blue, alpha, x, y, +size / 2, +size / 2, u1, v1, opacity, rotateWithView, red, green, blue, alpha, x, y, -size / 2, +size / 2, u0, v1, opacity, rotateWithView, red, green, blue, alpha);\n                _this.indicesBuffer_.getArray().push(baseIndex, baseIndex + 1, baseIndex + 3, baseIndex + 1, baseIndex + 2, baseIndex + 3);\n            });\n            this.helper_.flushBufferData(ARRAY_BUFFER, this.verticesBuffer_);\n            this.helper_.flushBufferData(ELEMENT_ARRAY_BUFFER, this.indicesBuffer_);\n        }\n        // write new data\n        this.helper_.bindBuffer(ARRAY_BUFFER, this.verticesBuffer_);\n        this.helper_.bindBuffer(ELEMENT_ARRAY_BUFFER, this.indicesBuffer_);\n        var bytesPerFloat = Float32Array.BYTES_PER_ELEMENT;\n        this.helper_.enableAttributeArray(DefaultAttrib.POSITION, 2, FLOAT, bytesPerFloat * stride, 0);\n        this.helper_.enableAttributeArray(DefaultAttrib.OFFSETS, 2, FLOAT, bytesPerFloat * stride, bytesPerFloat * 2);\n        this.helper_.enableAttributeArray(DefaultAttrib.TEX_COORD, 2, FLOAT, bytesPerFloat * stride, bytesPerFloat * 4);\n        this.helper_.enableAttributeArray(DefaultAttrib.OPACITY, 1, FLOAT, bytesPerFloat * stride, bytesPerFloat * 6);\n        this.helper_.enableAttributeArray(DefaultAttrib.ROTATE_WITH_VIEW, 1, FLOAT, bytesPerFloat * stride, bytesPerFloat * 7);\n        this.helper_.enableAttributeArray(DefaultAttrib.COLOR, 4, FLOAT, bytesPerFloat * stride, bytesPerFloat * 8);\n        return true;\n    };\n    /**\n     * Will return the last shader compilation errors. If no error happened, will return null;\n     * @return {string|null} Errors, or null if last compilation was successful\n     * @api\n     */\n    WebGLPointsLayerRenderer.prototype.getShaderCompileErrors = function () {\n        return this.helper_.getShaderCompileErrors();\n    };\n    /**\n     * Returns a texture of 1x1 pixel, white\n     * @private\n     * @return {ImageData} Image data.\n     */\n    WebGLPointsLayerRenderer.prototype.getDefaultTexture = function () {\n        var canvas = document.createElement('canvas');\n        var image = canvas.getContext('2d').createImageData(1, 1);\n        image.data[0] = image.data[1] = image.data[2] = image.data[3] = 255;\n        return image;\n    };\n    return WebGLPointsLayerRenderer;\n}(LayerRenderer));\nexport default WebGLPointsLayerRenderer;\n//# sourceMappingURL=PointsLayer.js.map","/**\n * @module ol/render/canvas/Instruction\n */\n/**\n * @enum {number}\n */\nvar Instruction = {\n    BEGIN_GEOMETRY: 0,\n    BEGIN_PATH: 1,\n    CIRCLE: 2,\n    CLOSE_PATH: 3,\n    CUSTOM: 4,\n    DRAW_CHARS: 5,\n    DRAW_IMAGE: 6,\n    END_GEOMETRY: 7,\n    FILL: 8,\n    MOVE_TO_LINE_TO: 9,\n    SET_FILL_STYLE: 10,\n    SET_STROKE_STYLE: 11,\n    STROKE: 12\n};\n/**\n * @type {Array<Instruction>}\n */\nexport var fillInstruction = [Instruction.FILL];\n/**\n * @type {Array<Instruction>}\n */\nexport var strokeInstruction = [Instruction.STROKE];\n/**\n * @type {Array<Instruction>}\n */\nexport var beginPathInstruction = [Instruction.BEGIN_PATH];\n/**\n * @type {Array<Instruction>}\n */\nexport var closePathInstruction = [Instruction.CLOSE_PATH];\nexport default Instruction;\n//# sourceMappingURL=Instruction.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/render/canvas/Builder\n */\nimport { equals, reverseSubArray } from '../../array.js';\nimport { asColorLike } from '../../colorlike.js';\nimport { buffer, clone, coordinateRelationship } from '../../extent.js';\nimport Relationship from '../../extent/Relationship.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport { inflateCoordinates, inflateCoordinatesArray, inflateMultiCoordinatesArray } from '../../geom/flat/inflate.js';\nimport VectorContext from '../VectorContext.js';\nimport { defaultFillStyle, defaultStrokeStyle, defaultMiterLimit, defaultLineWidth, defaultLineJoin, defaultLineDashOffset, defaultLineDash, defaultLineCap } from '../canvas.js';\nimport CanvasInstruction from './Instruction.js';\n/**\n * @typedef {Object} SerializableInstructions\n * @property {Array<*>} instructions The rendering instructions.\n * @property {Array<*>} hitDetectionInstructions The rendering hit detection instructions.\n * @property {Array<number>} coordinates The array of all coordinates.\n * @property {!Object<string, import(\"../canvas.js\").TextState>} [textStates] The text states (decluttering).\n * @property {!Object<string, import(\"../canvas.js\").FillState>} [fillStates] The fill states (decluttering).\n * @property {!Object<string, import(\"../canvas.js\").StrokeState>} [strokeStates] The stroke states (decluttering).\n */\nvar CanvasBuilder = /** @class */ (function (_super) {\n    __extends(CanvasBuilder, _super);\n    /**\n     * @param {number} tolerance Tolerance.\n     * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     */\n    function CanvasBuilder(tolerance, maxExtent, resolution, pixelRatio) {\n        var _this = _super.call(this) || this;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.tolerance = tolerance;\n        /**\n         * @protected\n         * @const\n         * @type {import(\"../../extent.js\").Extent}\n         */\n        _this.maxExtent = maxExtent;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.pixelRatio = pixelRatio;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.maxLineWidth = 0;\n        /**\n         * @protected\n         * @const\n         * @type {number}\n         */\n        _this.resolution = resolution;\n        /**\n         * @private\n         * @type {Array<*>}\n         */\n        _this.beginGeometryInstruction1_ = null;\n        /**\n         * @private\n         * @type {Array<*>}\n         */\n        _this.beginGeometryInstruction2_ = null;\n        /**\n         * @private\n         * @type {import(\"../../extent.js\").Extent}\n         */\n        _this.bufferedMaxExtent_ = null;\n        /**\n         * @protected\n         * @type {Array<*>}\n         */\n        _this.instructions = [];\n        /**\n         * @protected\n         * @type {Array<number>}\n         */\n        _this.coordinates = [];\n        /**\n         * @private\n         * @type {import(\"../../coordinate.js\").Coordinate}\n         */\n        _this.tmpCoordinate_ = [];\n        /**\n         * @protected\n         * @type {Array<*>}\n         */\n        _this.hitDetectionInstructions = [];\n        /**\n         * @protected\n         * @type {import(\"../canvas.js\").FillStrokeState}\n         */\n        _this.state = /** @type {import(\"../canvas.js\").FillStrokeState} */ ({});\n        return _this;\n    }\n    /**\n     * @protected\n     * @param {Array<number>} dashArray Dash array.\n     * @return {Array<number>} Dash array with pixel ratio applied\n     */\n    CanvasBuilder.prototype.applyPixelRatio = function (dashArray) {\n        var pixelRatio = this.pixelRatio;\n        return pixelRatio == 1 ? dashArray : dashArray.map(function (dash) {\n            return dash * pixelRatio;\n        });\n    };\n    /**\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     * @param {number} offset Offset.\n     * @param {number} end End.\n     * @param {number} stride Stride.\n     * @param {boolean} closed Last input coordinate equals first.\n     * @param {boolean} skipFirst Skip first coordinate.\n     * @protected\n     * @return {number} My end.\n     */\n    CanvasBuilder.prototype.appendFlatCoordinates = function (flatCoordinates, offset, end, stride, closed, skipFirst) {\n        var myEnd = this.coordinates.length;\n        var extent = this.getBufferedMaxExtent();\n        if (skipFirst) {\n            offset += stride;\n        }\n        var lastXCoord = flatCoordinates[offset];\n        var lastYCoord = flatCoordinates[offset + 1];\n        var nextCoord = this.tmpCoordinate_;\n        var skipped = true;\n        var i, lastRel, nextRel;\n        for (i = offset + stride; i < end; i += stride) {\n            nextCoord[0] = flatCoordinates[i];\n            nextCoord[1] = flatCoordinates[i + 1];\n            nextRel = coordinateRelationship(extent, nextCoord);\n            if (nextRel !== lastRel) {\n                if (skipped) {\n                    this.coordinates[myEnd++] = lastXCoord;\n                    this.coordinates[myEnd++] = lastYCoord;\n                }\n                this.coordinates[myEnd++] = nextCoord[0];\n                this.coordinates[myEnd++] = nextCoord[1];\n                skipped = false;\n            }\n            else if (nextRel === Relationship.INTERSECTING) {\n                this.coordinates[myEnd++] = nextCoord[0];\n                this.coordinates[myEnd++] = nextCoord[1];\n                skipped = false;\n            }\n            else {\n                skipped = true;\n            }\n            lastXCoord = nextCoord[0];\n            lastYCoord = nextCoord[1];\n            lastRel = nextRel;\n        }\n        // Last coordinate equals first or only one point to append:\n        if ((closed && skipped) || i === offset + stride) {\n            this.coordinates[myEnd++] = lastXCoord;\n            this.coordinates[myEnd++] = lastYCoord;\n        }\n        return myEnd;\n    };\n    /**\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     * @param {number} offset Offset.\n     * @param {Array<number>} ends Ends.\n     * @param {number} stride Stride.\n     * @param {Array<number>} builderEnds Builder ends.\n     * @return {number} Offset.\n     */\n    CanvasBuilder.prototype.drawCustomCoordinates_ = function (flatCoordinates, offset, ends, stride, builderEnds) {\n        for (var i = 0, ii = ends.length; i < ii; ++i) {\n            var end = ends[i];\n            var builderEnd = this.appendFlatCoordinates(flatCoordinates, offset, end, stride, false, false);\n            builderEnds.push(builderEnd);\n            offset = end;\n        }\n        return offset;\n    };\n    /**\n     * @inheritDoc.\n     */\n    CanvasBuilder.prototype.drawCustom = function (geometry, feature, renderer) {\n        this.beginGeometry(feature);\n        var type = geometry.getType();\n        var stride = geometry.getStride();\n        var builderBegin = this.coordinates.length;\n        var flatCoordinates, builderEnd, builderEnds, builderEndss;\n        var offset;\n        if (type == GeometryType.MULTI_POLYGON) {\n            geometry = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry);\n            flatCoordinates = geometry.getOrientedFlatCoordinates();\n            builderEndss = [];\n            var endss = geometry.getEndss();\n            offset = 0;\n            for (var i = 0, ii = endss.length; i < ii; ++i) {\n                var myEnds = [];\n                offset = this.drawCustomCoordinates_(flatCoordinates, offset, endss[i], stride, myEnds);\n                builderEndss.push(myEnds);\n            }\n            this.instructions.push([CanvasInstruction.CUSTOM,\n                builderBegin, builderEndss, geometry, renderer, inflateMultiCoordinatesArray]);\n        }\n        else if (type == GeometryType.POLYGON || type == GeometryType.MULTI_LINE_STRING) {\n            builderEnds = [];\n            flatCoordinates = (type == GeometryType.POLYGON) ?\n                /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry).getOrientedFlatCoordinates() :\n                geometry.getFlatCoordinates();\n            offset = this.drawCustomCoordinates_(flatCoordinates, 0, \n            /** @type {import(\"../../geom/Polygon.js\").default|import(\"../../geom/MultiLineString.js\").default} */ (geometry).getEnds(), stride, builderEnds);\n            this.instructions.push([CanvasInstruction.CUSTOM,\n                builderBegin, builderEnds, geometry, renderer, inflateCoordinatesArray]);\n        }\n        else if (type == GeometryType.LINE_STRING || type == GeometryType.MULTI_POINT) {\n            flatCoordinates = geometry.getFlatCoordinates();\n            builderEnd = this.appendFlatCoordinates(flatCoordinates, 0, flatCoordinates.length, stride, false, false);\n            this.instructions.push([CanvasInstruction.CUSTOM,\n                builderBegin, builderEnd, geometry, renderer, inflateCoordinates]);\n        }\n        else if (type == GeometryType.POINT) {\n            flatCoordinates = geometry.getFlatCoordinates();\n            this.coordinates.push(flatCoordinates[0], flatCoordinates[1]);\n            builderEnd = this.coordinates.length;\n            this.instructions.push([CanvasInstruction.CUSTOM,\n                builderBegin, builderEnd, geometry, renderer]);\n        }\n        this.endGeometry(feature);\n    };\n    /**\n     * @protected\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     */\n    CanvasBuilder.prototype.beginGeometry = function (feature) {\n        this.beginGeometryInstruction1_ = [CanvasInstruction.BEGIN_GEOMETRY, feature, 0];\n        this.instructions.push(this.beginGeometryInstruction1_);\n        this.beginGeometryInstruction2_ = [CanvasInstruction.BEGIN_GEOMETRY, feature, 0];\n        this.hitDetectionInstructions.push(this.beginGeometryInstruction2_);\n    };\n    /**\n     * @return {SerializableInstructions} the serializable instructions.\n     */\n    CanvasBuilder.prototype.finish = function () {\n        return {\n            instructions: this.instructions,\n            hitDetectionInstructions: this.hitDetectionInstructions,\n            coordinates: this.coordinates\n        };\n    };\n    /**\n     * Reverse the hit detection instructions.\n     */\n    CanvasBuilder.prototype.reverseHitDetectionInstructions = function () {\n        var hitDetectionInstructions = this.hitDetectionInstructions;\n        // step 1 - reverse array\n        hitDetectionInstructions.reverse();\n        // step 2 - reverse instructions within geometry blocks\n        var i;\n        var n = hitDetectionInstructions.length;\n        var instruction;\n        var type;\n        var begin = -1;\n        for (i = 0; i < n; ++i) {\n            instruction = hitDetectionInstructions[i];\n            type = /** @type {CanvasInstruction} */ (instruction[0]);\n            if (type == CanvasInstruction.END_GEOMETRY) {\n                begin = i;\n            }\n            else if (type == CanvasInstruction.BEGIN_GEOMETRY) {\n                instruction[2] = i;\n                reverseSubArray(this.hitDetectionInstructions, begin, i);\n                begin = -1;\n            }\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasBuilder.prototype.setFillStrokeStyle = function (fillStyle, strokeStyle) {\n        var state = this.state;\n        if (fillStyle) {\n            var fillStyleColor = fillStyle.getColor();\n            state.fillStyle = asColorLike(fillStyleColor ?\n                fillStyleColor : defaultFillStyle);\n        }\n        else {\n            state.fillStyle = undefined;\n        }\n        if (strokeStyle) {\n            var strokeStyleColor = strokeStyle.getColor();\n            state.strokeStyle = asColorLike(strokeStyleColor ?\n                strokeStyleColor : defaultStrokeStyle);\n            var strokeStyleLineCap = strokeStyle.getLineCap();\n            state.lineCap = strokeStyleLineCap !== undefined ?\n                strokeStyleLineCap : defaultLineCap;\n            var strokeStyleLineDash = strokeStyle.getLineDash();\n            state.lineDash = strokeStyleLineDash ?\n                strokeStyleLineDash.slice() : defaultLineDash;\n            var strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n            state.lineDashOffset = strokeStyleLineDashOffset ?\n                strokeStyleLineDashOffset : defaultLineDashOffset;\n            var strokeStyleLineJoin = strokeStyle.getLineJoin();\n            state.lineJoin = strokeStyleLineJoin !== undefined ?\n                strokeStyleLineJoin : defaultLineJoin;\n            var strokeStyleWidth = strokeStyle.getWidth();\n            state.lineWidth = strokeStyleWidth !== undefined ?\n                strokeStyleWidth : defaultLineWidth;\n            var strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n            state.miterLimit = strokeStyleMiterLimit !== undefined ?\n                strokeStyleMiterLimit : defaultMiterLimit;\n            if (state.lineWidth > this.maxLineWidth) {\n                this.maxLineWidth = state.lineWidth;\n                // invalidate the buffered max extent cache\n                this.bufferedMaxExtent_ = null;\n            }\n        }\n        else {\n            state.strokeStyle = undefined;\n            state.lineCap = undefined;\n            state.lineDash = null;\n            state.lineDashOffset = undefined;\n            state.lineJoin = undefined;\n            state.lineWidth = undefined;\n            state.miterLimit = undefined;\n        }\n    };\n    /**\n     * @param {import(\"../canvas.js\").FillStrokeState} state State.\n     * @return {Array<*>} Fill instruction.\n     */\n    CanvasBuilder.prototype.createFill = function (state) {\n        var fillStyle = state.fillStyle;\n        /** @type {Array<*>} */\n        var fillInstruction = [CanvasInstruction.SET_FILL_STYLE, fillStyle];\n        if (typeof fillStyle !== 'string') {\n            // Fill is a pattern or gradient - align it!\n            fillInstruction.push(true);\n        }\n        return fillInstruction;\n    };\n    /**\n     * @param {import(\"../canvas.js\").FillStrokeState} state State.\n     */\n    CanvasBuilder.prototype.applyStroke = function (state) {\n        this.instructions.push(this.createStroke(state));\n    };\n    /**\n     * @param {import(\"../canvas.js\").FillStrokeState} state State.\n     * @return {Array<*>} Stroke instruction.\n     */\n    CanvasBuilder.prototype.createStroke = function (state) {\n        return [\n            CanvasInstruction.SET_STROKE_STYLE,\n            state.strokeStyle, state.lineWidth * this.pixelRatio, state.lineCap,\n            state.lineJoin, state.miterLimit,\n            this.applyPixelRatio(state.lineDash), state.lineDashOffset * this.pixelRatio\n        ];\n    };\n    /**\n     * @param {import(\"../canvas.js\").FillStrokeState} state State.\n     * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState):Array<*>} createFill Create fill.\n     */\n    CanvasBuilder.prototype.updateFillStyle = function (state, createFill) {\n        var fillStyle = state.fillStyle;\n        if (typeof fillStyle !== 'string' || state.currentFillStyle != fillStyle) {\n            if (fillStyle !== undefined) {\n                this.instructions.push(createFill.call(this, state));\n            }\n            state.currentFillStyle = fillStyle;\n        }\n    };\n    /**\n     * @param {import(\"../canvas.js\").FillStrokeState} state State.\n     * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState): void} applyStroke Apply stroke.\n     */\n    CanvasBuilder.prototype.updateStrokeStyle = function (state, applyStroke) {\n        var strokeStyle = state.strokeStyle;\n        var lineCap = state.lineCap;\n        var lineDash = state.lineDash;\n        var lineDashOffset = state.lineDashOffset;\n        var lineJoin = state.lineJoin;\n        var lineWidth = state.lineWidth;\n        var miterLimit = state.miterLimit;\n        if (state.currentStrokeStyle != strokeStyle ||\n            state.currentLineCap != lineCap ||\n            (lineDash != state.currentLineDash && !equals(state.currentLineDash, lineDash)) ||\n            state.currentLineDashOffset != lineDashOffset ||\n            state.currentLineJoin != lineJoin ||\n            state.currentLineWidth != lineWidth ||\n            state.currentMiterLimit != miterLimit) {\n            if (strokeStyle !== undefined) {\n                applyStroke.call(this, state);\n            }\n            state.currentStrokeStyle = strokeStyle;\n            state.currentLineCap = lineCap;\n            state.currentLineDash = lineDash;\n            state.currentLineDashOffset = lineDashOffset;\n            state.currentLineJoin = lineJoin;\n            state.currentLineWidth = lineWidth;\n            state.currentMiterLimit = miterLimit;\n        }\n    };\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     */\n    CanvasBuilder.prototype.endGeometry = function (feature) {\n        this.beginGeometryInstruction1_[2] = this.instructions.length;\n        this.beginGeometryInstruction1_ = null;\n        this.beginGeometryInstruction2_[2] = this.hitDetectionInstructions.length;\n        this.beginGeometryInstruction2_ = null;\n        var endGeometryInstruction = [CanvasInstruction.END_GEOMETRY, feature];\n        this.instructions.push(endGeometryInstruction);\n        this.hitDetectionInstructions.push(endGeometryInstruction);\n    };\n    /**\n     * Get the buffered rendering extent.  Rendering will be clipped to the extent\n     * provided to the constructor.  To account for symbolizers that may intersect\n     * this extent, we calculate a buffered extent (e.g. based on stroke width).\n     * @return {import(\"../../extent.js\").Extent} The buffered rendering extent.\n     * @protected\n     */\n    CanvasBuilder.prototype.getBufferedMaxExtent = function () {\n        if (!this.bufferedMaxExtent_) {\n            this.bufferedMaxExtent_ = clone(this.maxExtent);\n            if (this.maxLineWidth > 0) {\n                var width = this.resolution * (this.maxLineWidth + 1) / 2;\n                buffer(this.bufferedMaxExtent_, width, this.bufferedMaxExtent_);\n            }\n        }\n        return this.bufferedMaxExtent_;\n    };\n    return CanvasBuilder;\n}(VectorContext));\nexport default CanvasBuilder;\n//# sourceMappingURL=Builder.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/render/canvas/ImageBuilder\n */\nimport CanvasInstruction from './Instruction.js';\nimport CanvasBuilder from './Builder.js';\nvar CanvasImageBuilder = /** @class */ (function (_super) {\n    __extends(CanvasImageBuilder, _super);\n    /**\n     * @param {number} tolerance Tolerance.\n     * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     */\n    function CanvasImageBuilder(tolerance, maxExtent, resolution, pixelRatio) {\n        var _this = _super.call(this, tolerance, maxExtent, resolution, pixelRatio) || this;\n        /**\n         * @private\n         * @type {import(\"../canvas.js\").DeclutterGroup}\n         */\n        _this.declutterGroup_ = null;\n        /**\n         * @private\n         * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n         */\n        _this.hitDetectionImage_ = null;\n        /**\n         * @private\n         * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n         */\n        _this.image_ = null;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.anchorX_ = undefined;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.anchorY_ = undefined;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.height_ = undefined;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.opacity_ = undefined;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.originX_ = undefined;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.originY_ = undefined;\n        /**\n         * @private\n         * @type {boolean|undefined}\n         */\n        _this.rotateWithView_ = undefined;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.rotation_ = undefined;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.scale_ = undefined;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.width_ = undefined;\n        return _this;\n    }\n    /**\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     * @param {number} offset Offset.\n     * @param {number} end End.\n     * @param {number} stride Stride.\n     * @private\n     * @return {number} My end.\n     */\n    CanvasImageBuilder.prototype.drawCoordinates_ = function (flatCoordinates, offset, end, stride) {\n        return this.appendFlatCoordinates(flatCoordinates, offset, end, stride, false, false);\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasImageBuilder.prototype.drawPoint = function (pointGeometry, feature) {\n        if (!this.image_) {\n            return;\n        }\n        this.beginGeometry(feature);\n        var flatCoordinates = pointGeometry.getFlatCoordinates();\n        var stride = pointGeometry.getStride();\n        var myBegin = this.coordinates.length;\n        var myEnd = this.drawCoordinates_(flatCoordinates, 0, flatCoordinates.length, stride);\n        this.instructions.push([\n            CanvasInstruction.DRAW_IMAGE, myBegin, myEnd, this.image_,\n            // Remaining arguments to DRAW_IMAGE are in alphabetical order\n            this.anchorX_, this.anchorY_, this.declutterGroup_, this.height_, this.opacity_,\n            this.originX_, this.originY_, this.rotateWithView_, this.rotation_,\n            this.scale_ * this.pixelRatio, this.width_\n        ]);\n        this.hitDetectionInstructions.push([\n            CanvasInstruction.DRAW_IMAGE, myBegin, myEnd, this.hitDetectionImage_,\n            // Remaining arguments to DRAW_IMAGE are in alphabetical order\n            this.anchorX_, this.anchorY_, this.declutterGroup_, this.height_, this.opacity_,\n            this.originX_, this.originY_, this.rotateWithView_, this.rotation_,\n            this.scale_, this.width_\n        ]);\n        this.endGeometry(feature);\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasImageBuilder.prototype.drawMultiPoint = function (multiPointGeometry, feature) {\n        if (!this.image_) {\n            return;\n        }\n        this.beginGeometry(feature);\n        var flatCoordinates = multiPointGeometry.getFlatCoordinates();\n        var stride = multiPointGeometry.getStride();\n        var myBegin = this.coordinates.length;\n        var myEnd = this.drawCoordinates_(flatCoordinates, 0, flatCoordinates.length, stride);\n        this.instructions.push([\n            CanvasInstruction.DRAW_IMAGE, myBegin, myEnd, this.image_,\n            // Remaining arguments to DRAW_IMAGE are in alphabetical order\n            this.anchorX_, this.anchorY_, this.declutterGroup_, this.height_, this.opacity_,\n            this.originX_, this.originY_, this.rotateWithView_, this.rotation_,\n            this.scale_ * this.pixelRatio, this.width_\n        ]);\n        this.hitDetectionInstructions.push([\n            CanvasInstruction.DRAW_IMAGE, myBegin, myEnd, this.hitDetectionImage_,\n            // Remaining arguments to DRAW_IMAGE are in alphabetical order\n            this.anchorX_, this.anchorY_, this.declutterGroup_, this.height_, this.opacity_,\n            this.originX_, this.originY_, this.rotateWithView_, this.rotation_,\n            this.scale_, this.width_\n        ]);\n        this.endGeometry(feature);\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasImageBuilder.prototype.finish = function () {\n        this.reverseHitDetectionInstructions();\n        // FIXME this doesn't really protect us against further calls to draw*Geometry\n        this.anchorX_ = undefined;\n        this.anchorY_ = undefined;\n        this.hitDetectionImage_ = null;\n        this.image_ = null;\n        this.height_ = undefined;\n        this.scale_ = undefined;\n        this.opacity_ = undefined;\n        this.originX_ = undefined;\n        this.originY_ = undefined;\n        this.rotateWithView_ = undefined;\n        this.rotation_ = undefined;\n        this.width_ = undefined;\n        return _super.prototype.finish.call(this);\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasImageBuilder.prototype.setImageStyle = function (imageStyle, declutterGroup) {\n        var anchor = imageStyle.getAnchor();\n        var size = imageStyle.getSize();\n        var hitDetectionImage = imageStyle.getHitDetectionImage(1);\n        var image = imageStyle.getImage(1);\n        var origin = imageStyle.getOrigin();\n        this.anchorX_ = anchor[0];\n        this.anchorY_ = anchor[1];\n        this.declutterGroup_ = /** @type {import(\"../canvas.js\").DeclutterGroup} */ (declutterGroup);\n        this.hitDetectionImage_ = hitDetectionImage;\n        this.image_ = image;\n        this.height_ = size[1];\n        this.opacity_ = imageStyle.getOpacity();\n        this.originX_ = origin[0];\n        this.originY_ = origin[1];\n        this.rotateWithView_ = imageStyle.getRotateWithView();\n        this.rotation_ = imageStyle.getRotation();\n        this.scale_ = imageStyle.getScale();\n        this.width_ = size[0];\n    };\n    return CanvasImageBuilder;\n}(CanvasBuilder));\nexport default CanvasImageBuilder;\n//# sourceMappingURL=ImageBuilder.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/render/canvas/LineStringBuilder\n */\nimport CanvasInstruction, { strokeInstruction, beginPathInstruction } from './Instruction.js';\nimport CanvasBuilder from './Builder.js';\nvar CanvasLineStringBuilder = /** @class */ (function (_super) {\n    __extends(CanvasLineStringBuilder, _super);\n    /**\n     * @param {number} tolerance Tolerance.\n     * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     */\n    function CanvasLineStringBuilder(tolerance, maxExtent, resolution, pixelRatio) {\n        return _super.call(this, tolerance, maxExtent, resolution, pixelRatio) || this;\n    }\n    /**\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     * @param {number} offset Offset.\n     * @param {number} end End.\n     * @param {number} stride Stride.\n     * @private\n     * @return {number} end.\n     */\n    CanvasLineStringBuilder.prototype.drawFlatCoordinates_ = function (flatCoordinates, offset, end, stride) {\n        var myBegin = this.coordinates.length;\n        var myEnd = this.appendFlatCoordinates(flatCoordinates, offset, end, stride, false, false);\n        var moveToLineToInstruction = [CanvasInstruction.MOVE_TO_LINE_TO, myBegin, myEnd];\n        this.instructions.push(moveToLineToInstruction);\n        this.hitDetectionInstructions.push(moveToLineToInstruction);\n        return end;\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasLineStringBuilder.prototype.drawLineString = function (lineStringGeometry, feature) {\n        var state = this.state;\n        var strokeStyle = state.strokeStyle;\n        var lineWidth = state.lineWidth;\n        if (strokeStyle === undefined || lineWidth === undefined) {\n            return;\n        }\n        this.updateStrokeStyle(state, this.applyStroke);\n        this.beginGeometry(feature);\n        this.hitDetectionInstructions.push([\n            CanvasInstruction.SET_STROKE_STYLE,\n            state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\n            state.miterLimit, state.lineDash, state.lineDashOffset\n        ], beginPathInstruction);\n        var flatCoordinates = lineStringGeometry.getFlatCoordinates();\n        var stride = lineStringGeometry.getStride();\n        this.drawFlatCoordinates_(flatCoordinates, 0, flatCoordinates.length, stride);\n        this.hitDetectionInstructions.push(strokeInstruction);\n        this.endGeometry(feature);\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasLineStringBuilder.prototype.drawMultiLineString = function (multiLineStringGeometry, feature) {\n        var state = this.state;\n        var strokeStyle = state.strokeStyle;\n        var lineWidth = state.lineWidth;\n        if (strokeStyle === undefined || lineWidth === undefined) {\n            return;\n        }\n        this.updateStrokeStyle(state, this.applyStroke);\n        this.beginGeometry(feature);\n        this.hitDetectionInstructions.push([\n            CanvasInstruction.SET_STROKE_STYLE,\n            state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\n            state.miterLimit, state.lineDash, state.lineDashOffset\n        ], beginPathInstruction);\n        var ends = multiLineStringGeometry.getEnds();\n        var flatCoordinates = multiLineStringGeometry.getFlatCoordinates();\n        var stride = multiLineStringGeometry.getStride();\n        var offset = 0;\n        for (var i = 0, ii = ends.length; i < ii; ++i) {\n            offset = this.drawFlatCoordinates_(flatCoordinates, offset, ends[i], stride);\n        }\n        this.hitDetectionInstructions.push(strokeInstruction);\n        this.endGeometry(feature);\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasLineStringBuilder.prototype.finish = function () {\n        var state = this.state;\n        if (state.lastStroke != undefined && state.lastStroke != this.coordinates.length) {\n            this.instructions.push(strokeInstruction);\n        }\n        this.reverseHitDetectionInstructions();\n        this.state = null;\n        return _super.prototype.finish.call(this);\n    };\n    /**\n     * @inheritDoc.\n     */\n    CanvasLineStringBuilder.prototype.applyStroke = function (state) {\n        if (state.lastStroke != undefined && state.lastStroke != this.coordinates.length) {\n            this.instructions.push(strokeInstruction);\n            state.lastStroke = this.coordinates.length;\n        }\n        state.lastStroke = 0;\n        _super.prototype.applyStroke.call(this, state);\n        this.instructions.push(beginPathInstruction);\n    };\n    return CanvasLineStringBuilder;\n}(CanvasBuilder));\nexport default CanvasLineStringBuilder;\n//# sourceMappingURL=LineStringBuilder.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/render/canvas/PolygonBuilder\n */\nimport { snap } from '../../geom/flat/simplify.js';\nimport { defaultFillStyle } from '../canvas.js';\nimport CanvasInstruction, { fillInstruction, strokeInstruction, beginPathInstruction, closePathInstruction } from './Instruction.js';\nimport CanvasBuilder from './Builder.js';\nvar CanvasPolygonBuilder = /** @class */ (function (_super) {\n    __extends(CanvasPolygonBuilder, _super);\n    /**\n     * @param {number} tolerance Tolerance.\n     * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     */\n    function CanvasPolygonBuilder(tolerance, maxExtent, resolution, pixelRatio) {\n        return _super.call(this, tolerance, maxExtent, resolution, pixelRatio) || this;\n    }\n    /**\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     * @param {number} offset Offset.\n     * @param {Array<number>} ends Ends.\n     * @param {number} stride Stride.\n     * @private\n     * @return {number} End.\n     */\n    CanvasPolygonBuilder.prototype.drawFlatCoordinatess_ = function (flatCoordinates, offset, ends, stride) {\n        var state = this.state;\n        var fill = state.fillStyle !== undefined;\n        var stroke = state.strokeStyle != undefined;\n        var numEnds = ends.length;\n        this.instructions.push(beginPathInstruction);\n        this.hitDetectionInstructions.push(beginPathInstruction);\n        for (var i = 0; i < numEnds; ++i) {\n            var end = ends[i];\n            var myBegin = this.coordinates.length;\n            var myEnd = this.appendFlatCoordinates(flatCoordinates, offset, end, stride, true, !stroke);\n            var moveToLineToInstruction = [CanvasInstruction.MOVE_TO_LINE_TO, myBegin, myEnd];\n            this.instructions.push(moveToLineToInstruction);\n            this.hitDetectionInstructions.push(moveToLineToInstruction);\n            if (stroke) {\n                // Performance optimization: only call closePath() when we have a stroke.\n                // Otherwise the ring is closed already (see appendFlatCoordinates above).\n                this.instructions.push(closePathInstruction);\n                this.hitDetectionInstructions.push(closePathInstruction);\n            }\n            offset = end;\n        }\n        if (fill) {\n            this.instructions.push(fillInstruction);\n            this.hitDetectionInstructions.push(fillInstruction);\n        }\n        if (stroke) {\n            this.instructions.push(strokeInstruction);\n            this.hitDetectionInstructions.push(strokeInstruction);\n        }\n        return offset;\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasPolygonBuilder.prototype.drawCircle = function (circleGeometry, feature) {\n        var state = this.state;\n        var fillStyle = state.fillStyle;\n        var strokeStyle = state.strokeStyle;\n        if (fillStyle === undefined && strokeStyle === undefined) {\n            return;\n        }\n        this.setFillStrokeStyles_();\n        this.beginGeometry(feature);\n        if (state.fillStyle !== undefined) {\n            this.hitDetectionInstructions.push([\n                CanvasInstruction.SET_FILL_STYLE,\n                defaultFillStyle\n            ]);\n        }\n        if (state.strokeStyle !== undefined) {\n            this.hitDetectionInstructions.push([\n                CanvasInstruction.SET_STROKE_STYLE,\n                state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\n                state.miterLimit, state.lineDash, state.lineDashOffset\n            ]);\n        }\n        var flatCoordinates = circleGeometry.getFlatCoordinates();\n        var stride = circleGeometry.getStride();\n        var myBegin = this.coordinates.length;\n        this.appendFlatCoordinates(flatCoordinates, 0, flatCoordinates.length, stride, false, false);\n        var circleInstruction = [CanvasInstruction.CIRCLE, myBegin];\n        this.instructions.push(beginPathInstruction, circleInstruction);\n        this.hitDetectionInstructions.push(beginPathInstruction, circleInstruction);\n        this.hitDetectionInstructions.push(fillInstruction);\n        if (state.fillStyle !== undefined) {\n            this.instructions.push(fillInstruction);\n        }\n        if (state.strokeStyle !== undefined) {\n            this.instructions.push(strokeInstruction);\n            this.hitDetectionInstructions.push(strokeInstruction);\n        }\n        this.endGeometry(feature);\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasPolygonBuilder.prototype.drawPolygon = function (polygonGeometry, feature) {\n        var state = this.state;\n        var fillStyle = state.fillStyle;\n        var strokeStyle = state.strokeStyle;\n        if (fillStyle === undefined && strokeStyle === undefined) {\n            return;\n        }\n        this.setFillStrokeStyles_();\n        this.beginGeometry(feature);\n        if (state.fillStyle !== undefined) {\n            this.hitDetectionInstructions.push([\n                CanvasInstruction.SET_FILL_STYLE,\n                defaultFillStyle\n            ]);\n        }\n        if (state.strokeStyle !== undefined) {\n            this.hitDetectionInstructions.push([\n                CanvasInstruction.SET_STROKE_STYLE,\n                state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\n                state.miterLimit, state.lineDash, state.lineDashOffset\n            ]);\n        }\n        var ends = polygonGeometry.getEnds();\n        var flatCoordinates = polygonGeometry.getOrientedFlatCoordinates();\n        var stride = polygonGeometry.getStride();\n        this.drawFlatCoordinatess_(flatCoordinates, 0, ends, stride);\n        this.endGeometry(feature);\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasPolygonBuilder.prototype.drawMultiPolygon = function (multiPolygonGeometry, feature) {\n        var state = this.state;\n        var fillStyle = state.fillStyle;\n        var strokeStyle = state.strokeStyle;\n        if (fillStyle === undefined && strokeStyle === undefined) {\n            return;\n        }\n        this.setFillStrokeStyles_();\n        this.beginGeometry(feature);\n        if (state.fillStyle !== undefined) {\n            this.hitDetectionInstructions.push([\n                CanvasInstruction.SET_FILL_STYLE,\n                defaultFillStyle\n            ]);\n        }\n        if (state.strokeStyle !== undefined) {\n            this.hitDetectionInstructions.push([\n                CanvasInstruction.SET_STROKE_STYLE,\n                state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\n                state.miterLimit, state.lineDash, state.lineDashOffset\n            ]);\n        }\n        var endss = multiPolygonGeometry.getEndss();\n        var flatCoordinates = multiPolygonGeometry.getOrientedFlatCoordinates();\n        var stride = multiPolygonGeometry.getStride();\n        var offset = 0;\n        for (var i = 0, ii = endss.length; i < ii; ++i) {\n            offset = this.drawFlatCoordinatess_(flatCoordinates, offset, endss[i], stride);\n        }\n        this.endGeometry(feature);\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasPolygonBuilder.prototype.finish = function () {\n        this.reverseHitDetectionInstructions();\n        this.state = null;\n        // We want to preserve topology when drawing polygons.  Polygons are\n        // simplified using quantization and point elimination. However, we might\n        // have received a mix of quantized and non-quantized geometries, so ensure\n        // that all are quantized by quantizing all coordinates in the batch.\n        var tolerance = this.tolerance;\n        if (tolerance !== 0) {\n            var coordinates = this.coordinates;\n            for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n                coordinates[i] = snap(coordinates[i], tolerance);\n            }\n        }\n        return _super.prototype.finish.call(this);\n    };\n    /**\n     * @private\n     */\n    CanvasPolygonBuilder.prototype.setFillStrokeStyles_ = function () {\n        var state = this.state;\n        var fillStyle = state.fillStyle;\n        if (fillStyle !== undefined) {\n            this.updateFillStyle(state, this.createFill);\n        }\n        if (state.strokeStyle !== undefined) {\n            this.updateStrokeStyle(state, this.applyStroke);\n        }\n    };\n    return CanvasPolygonBuilder;\n}(CanvasBuilder));\nexport default CanvasPolygonBuilder;\n//# sourceMappingURL=PolygonBuilder.js.map","/**\n * @module ol/geom/flat/straightchunk\n */\n/**\n * @param {number} maxAngle Maximum acceptable angle delta between segments.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Array<number>} Start and end of the first suitable chunk of the\n * given `flatCoordinates`.\n */\nexport function matchingChunk(maxAngle, flatCoordinates, offset, end, stride) {\n    var chunkStart = offset;\n    var chunkEnd = offset;\n    var chunkM = 0;\n    var m = 0;\n    var start = offset;\n    var acos, i, m12, m23, x1, y1, x12, y12, x23, y23;\n    for (i = offset; i < end; i += stride) {\n        var x2 = flatCoordinates[i];\n        var y2 = flatCoordinates[i + 1];\n        if (x1 !== undefined) {\n            x23 = x2 - x1;\n            y23 = y2 - y1;\n            m23 = Math.sqrt(x23 * x23 + y23 * y23);\n            if (x12 !== undefined) {\n                m += m12;\n                acos = Math.acos((x12 * x23 + y12 * y23) / (m12 * m23));\n                if (acos > maxAngle) {\n                    if (m > chunkM) {\n                        chunkM = m;\n                        chunkStart = start;\n                        chunkEnd = i;\n                    }\n                    m = 0;\n                    start = i - stride;\n                }\n            }\n            m12 = m23;\n            x12 = x23;\n            y12 = y23;\n        }\n        x1 = x2;\n        y1 = y2;\n    }\n    m += m23;\n    return m > chunkM ? [start, i] : [chunkStart, chunkEnd];\n}\n//# sourceMappingURL=straightchunk.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/render/canvas/TextBuilder\n */\nimport { getUid } from '../../util.js';\nimport { asColorLike } from '../../colorlike.js';\nimport { intersects } from '../../extent.js';\nimport { matchingChunk } from '../../geom/flat/straightchunk.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport { labelCache, defaultTextAlign, defaultPadding, defaultLineCap, defaultLineDashOffset, defaultLineDash, defaultLineJoin, defaultFillStyle, checkFont, defaultFont, defaultLineWidth, defaultMiterLimit, defaultStrokeStyle, defaultTextBaseline } from '../canvas.js';\nimport CanvasInstruction from './Instruction.js';\nimport CanvasBuilder from './Builder.js';\nimport TextPlacement from '../../style/TextPlacement.js';\n/**\n * @const\n * @enum {number}\n */\nexport var TEXT_ALIGN = {};\nTEXT_ALIGN['left'] = 0;\nTEXT_ALIGN['end'] = 0;\nTEXT_ALIGN['center'] = 0.5;\nTEXT_ALIGN['right'] = 1;\nTEXT_ALIGN['start'] = 1;\nTEXT_ALIGN['top'] = 0;\nTEXT_ALIGN['middle'] = 0.5;\nTEXT_ALIGN['hanging'] = 0.2;\nTEXT_ALIGN['alphabetic'] = 0.8;\nTEXT_ALIGN['ideographic'] = 0.8;\nTEXT_ALIGN['bottom'] = 1;\nvar CanvasTextBuilder = /** @class */ (function (_super) {\n    __extends(CanvasTextBuilder, _super);\n    /**\n     * @param {number} tolerance Tolerance.\n     * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     */\n    function CanvasTextBuilder(tolerance, maxExtent, resolution, pixelRatio) {\n        var _this = _super.call(this, tolerance, maxExtent, resolution, pixelRatio) || this;\n        /**\n         * @private\n         * @type {import(\"../canvas.js\").DeclutterGroup}\n         */\n        _this.declutterGroup_;\n        /**\n         * @private\n         * @type {Array<HTMLCanvasElement>}\n         */\n        _this.labels_ = null;\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.text_ = '';\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.textOffsetX_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.textOffsetY_ = 0;\n        /**\n         * @private\n         * @type {boolean|undefined}\n         */\n        _this.textRotateWithView_ = undefined;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.textRotation_ = 0;\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").FillState}\n         */\n        _this.textFillState_ = null;\n        /**\n         * @type {!Object<string, import(\"../canvas.js\").FillState>}\n         */\n        _this.fillStates = {};\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").StrokeState}\n         */\n        _this.textStrokeState_ = null;\n        /**\n         * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n         */\n        _this.strokeStates = {};\n        /**\n         * @private\n         * @type {import(\"../canvas.js\").TextState}\n         */\n        _this.textState_ = /** @type {import(\"../canvas.js\").TextState} */ ({});\n        /**\n         * @type {!Object<string, import(\"../canvas.js\").TextState>}\n         */\n        _this.textStates = {};\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.textKey_ = '';\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.fillKey_ = '';\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.strokeKey_ = '';\n        labelCache.prune();\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    CanvasTextBuilder.prototype.finish = function () {\n        var instructions = _super.prototype.finish.call(this);\n        instructions.textStates = this.textStates;\n        instructions.fillStates = this.fillStates;\n        instructions.strokeStates = this.strokeStates;\n        return instructions;\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasTextBuilder.prototype.drawText = function (geometry, feature) {\n        var fillState = this.textFillState_;\n        var strokeState = this.textStrokeState_;\n        var textState = this.textState_;\n        if (this.text_ === '' || !textState || (!fillState && !strokeState)) {\n            return;\n        }\n        var begin = this.coordinates.length;\n        var geometryType = geometry.getType();\n        var flatCoordinates = null;\n        var end = 2;\n        var stride = 2;\n        var i, ii;\n        if (textState.placement === TextPlacement.LINE) {\n            if (!intersects(this.getBufferedMaxExtent(), geometry.getExtent())) {\n                return;\n            }\n            var ends = void 0;\n            flatCoordinates = geometry.getFlatCoordinates();\n            stride = geometry.getStride();\n            if (geometryType == GeometryType.LINE_STRING) {\n                ends = [flatCoordinates.length];\n            }\n            else if (geometryType == GeometryType.MULTI_LINE_STRING) {\n                ends = geometry.getEnds();\n            }\n            else if (geometryType == GeometryType.POLYGON) {\n                ends = geometry.getEnds().slice(0, 1);\n            }\n            else if (geometryType == GeometryType.MULTI_POLYGON) {\n                var endss = geometry.getEndss();\n                ends = [];\n                for (i = 0, ii = endss.length; i < ii; ++i) {\n                    ends.push(endss[i][0]);\n                }\n            }\n            this.beginGeometry(feature);\n            var textAlign = textState.textAlign;\n            var flatOffset = 0;\n            var flatEnd = void 0;\n            for (var o = 0, oo = ends.length; o < oo; ++o) {\n                if (textAlign == undefined) {\n                    var range = matchingChunk(textState.maxAngle, flatCoordinates, flatOffset, ends[o], stride);\n                    flatOffset = range[0];\n                    flatEnd = range[1];\n                }\n                else {\n                    flatEnd = ends[o];\n                }\n                for (i = flatOffset; i < flatEnd; i += stride) {\n                    this.coordinates.push(flatCoordinates[i], flatCoordinates[i + 1]);\n                }\n                end = this.coordinates.length;\n                flatOffset = ends[o];\n                this.drawChars_(begin, end, this.declutterGroup_);\n                begin = end;\n            }\n            this.endGeometry(feature);\n        }\n        else {\n            var geometryWidths = null;\n            if (!textState.overflow) {\n                geometryWidths = [];\n            }\n            switch (geometryType) {\n                case GeometryType.POINT:\n                case GeometryType.MULTI_POINT:\n                    flatCoordinates = geometry.getFlatCoordinates();\n                    end = flatCoordinates.length;\n                    break;\n                case GeometryType.LINE_STRING:\n                    flatCoordinates = /** @type {import(\"../../geom/LineString.js\").default} */ (geometry).getFlatMidpoint();\n                    break;\n                case GeometryType.CIRCLE:\n                    flatCoordinates = /** @type {import(\"../../geom/Circle.js\").default} */ (geometry).getCenter();\n                    break;\n                case GeometryType.MULTI_LINE_STRING:\n                    flatCoordinates = /** @type {import(\"../../geom/MultiLineString.js\").default} */ (geometry).getFlatMidpoints();\n                    end = flatCoordinates.length;\n                    break;\n                case GeometryType.POLYGON:\n                    flatCoordinates = /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry).getFlatInteriorPoint();\n                    if (!textState.overflow) {\n                        geometryWidths.push(flatCoordinates[2] / this.resolution);\n                    }\n                    stride = 3;\n                    break;\n                case GeometryType.MULTI_POLYGON:\n                    var interiorPoints = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry).getFlatInteriorPoints();\n                    flatCoordinates = [];\n                    for (i = 0, ii = interiorPoints.length; i < ii; i += 3) {\n                        if (!textState.overflow) {\n                            geometryWidths.push(interiorPoints[i + 2] / this.resolution);\n                        }\n                        flatCoordinates.push(interiorPoints[i], interiorPoints[i + 1]);\n                    }\n                    end = flatCoordinates.length;\n                    if (end == 0) {\n                        return;\n                    }\n                    break;\n                default:\n            }\n            end = this.appendFlatCoordinates(flatCoordinates, 0, end, stride, false, false);\n            this.saveTextStates_();\n            if (textState.backgroundFill || textState.backgroundStroke) {\n                this.setFillStrokeStyle(textState.backgroundFill, textState.backgroundStroke);\n                if (textState.backgroundFill) {\n                    this.updateFillStyle(this.state, this.createFill);\n                    this.hitDetectionInstructions.push(this.createFill(this.state));\n                }\n                if (textState.backgroundStroke) {\n                    this.updateStrokeStyle(this.state, this.applyStroke);\n                    this.hitDetectionInstructions.push(this.createStroke(this.state));\n                }\n            }\n            this.beginGeometry(feature);\n            // The image is unknown at this stage so we pass null; it will be computed at render time.\n            // For clarity, we pass NaN for offsetX, offsetY, width and height, which will be computed at\n            // render time.\n            var pixelRatio_1 = this.pixelRatio;\n            this.instructions.push([CanvasInstruction.DRAW_IMAGE, begin, end,\n                null, NaN, NaN, this.declutterGroup_, NaN, 1, 0, 0,\n                this.textRotateWithView_, this.textRotation_, 1, NaN,\n                textState.padding == defaultPadding ?\n                    defaultPadding : textState.padding.map(function (p) {\n                    return p * pixelRatio_1;\n                }),\n                !!textState.backgroundFill, !!textState.backgroundStroke,\n                this.text_, this.textKey_, this.strokeKey_, this.fillKey_,\n                this.textOffsetX_, this.textOffsetY_, geometryWidths\n            ]);\n            this.hitDetectionInstructions.push([CanvasInstruction.DRAW_IMAGE, begin, end,\n                null, NaN, NaN, this.declutterGroup_, NaN, 1, 0, 0,\n                this.textRotateWithView_, this.textRotation_, 1 / this.pixelRatio, NaN,\n                textState.padding,\n                !!textState.backgroundFill, !!textState.backgroundStroke,\n                this.text_, this.textKey_, this.strokeKey_, this.fillKey_,\n                this.textOffsetX_, this.textOffsetY_, geometryWidths\n            ]);\n            this.endGeometry(feature);\n        }\n    };\n    /**\n     * @private\n     */\n    CanvasTextBuilder.prototype.saveTextStates_ = function () {\n        var strokeState = this.textStrokeState_;\n        var textState = this.textState_;\n        var fillState = this.textFillState_;\n        var strokeKey = this.strokeKey_;\n        if (strokeState) {\n            if (!(strokeKey in this.strokeStates)) {\n                this.strokeStates[strokeKey] = {\n                    strokeStyle: strokeState.strokeStyle,\n                    lineCap: strokeState.lineCap,\n                    lineDashOffset: strokeState.lineDashOffset,\n                    lineWidth: strokeState.lineWidth,\n                    lineJoin: strokeState.lineJoin,\n                    miterLimit: strokeState.miterLimit,\n                    lineDash: strokeState.lineDash\n                };\n            }\n        }\n        var textKey = this.textKey_;\n        if (!(textKey in this.textStates)) {\n            this.textStates[textKey] = {\n                font: textState.font,\n                textAlign: textState.textAlign || defaultTextAlign,\n                textBaseline: textState.textBaseline || defaultTextBaseline,\n                scale: textState.scale\n            };\n        }\n        var fillKey = this.fillKey_;\n        if (fillState) {\n            if (!(fillKey in this.fillStates)) {\n                this.fillStates[fillKey] = {\n                    fillStyle: fillState.fillStyle\n                };\n            }\n        }\n    };\n    /**\n     * @private\n     * @param {number} begin Begin.\n     * @param {number} end End.\n     * @param {import(\"../canvas.js\").DeclutterGroup} declutterGroup Declutter group.\n     */\n    CanvasTextBuilder.prototype.drawChars_ = function (begin, end, declutterGroup) {\n        var strokeState = this.textStrokeState_;\n        var textState = this.textState_;\n        var strokeKey = this.strokeKey_;\n        var textKey = this.textKey_;\n        var fillKey = this.fillKey_;\n        this.saveTextStates_();\n        var pixelRatio = this.pixelRatio;\n        var baseline = TEXT_ALIGN[textState.textBaseline];\n        var offsetY = this.textOffsetY_ * pixelRatio;\n        var text = this.text_;\n        var textScale = textState.scale;\n        var strokeWidth = strokeState ? strokeState.lineWidth * textScale / 2 : 0;\n        this.instructions.push([CanvasInstruction.DRAW_CHARS,\n            begin, end, baseline, declutterGroup,\n            textState.overflow, fillKey, textState.maxAngle,\n            pixelRatio,\n            offsetY, strokeKey, strokeWidth * pixelRatio, text, textKey, 1\n        ]);\n        this.hitDetectionInstructions.push([CanvasInstruction.DRAW_CHARS,\n            begin, end, baseline, declutterGroup,\n            textState.overflow, fillKey, textState.maxAngle,\n            1,\n            offsetY, strokeKey, strokeWidth, text, textKey, 1 / pixelRatio\n        ]);\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasTextBuilder.prototype.setTextStyle = function (textStyle, declutterGroup) {\n        var textState, fillState, strokeState;\n        if (!textStyle) {\n            this.text_ = '';\n        }\n        else {\n            this.declutterGroup_ = /** @type {import(\"../canvas.js\").DeclutterGroup} */ (declutterGroup);\n            var textFillStyle = textStyle.getFill();\n            if (!textFillStyle) {\n                fillState = this.textFillState_ = null;\n            }\n            else {\n                fillState = this.textFillState_;\n                if (!fillState) {\n                    fillState = this.textFillState_ = /** @type {import(\"../canvas.js\").FillState} */ ({});\n                }\n                fillState.fillStyle = asColorLike(textFillStyle.getColor() || defaultFillStyle);\n            }\n            var textStrokeStyle = textStyle.getStroke();\n            if (!textStrokeStyle) {\n                strokeState = this.textStrokeState_ = null;\n            }\n            else {\n                strokeState = this.textStrokeState_;\n                if (!strokeState) {\n                    strokeState = this.textStrokeState_ = /** @type {import(\"../canvas.js\").StrokeState} */ ({});\n                }\n                var lineDash = textStrokeStyle.getLineDash();\n                var lineDashOffset = textStrokeStyle.getLineDashOffset();\n                var lineWidth = textStrokeStyle.getWidth();\n                var miterLimit = textStrokeStyle.getMiterLimit();\n                strokeState.lineCap = textStrokeStyle.getLineCap() || defaultLineCap;\n                strokeState.lineDash = lineDash ? lineDash.slice() : defaultLineDash;\n                strokeState.lineDashOffset =\n                    lineDashOffset === undefined ? defaultLineDashOffset : lineDashOffset;\n                strokeState.lineJoin = textStrokeStyle.getLineJoin() || defaultLineJoin;\n                strokeState.lineWidth =\n                    lineWidth === undefined ? defaultLineWidth : lineWidth;\n                strokeState.miterLimit =\n                    miterLimit === undefined ? defaultMiterLimit : miterLimit;\n                strokeState.strokeStyle = asColorLike(textStrokeStyle.getColor() || defaultStrokeStyle);\n            }\n            textState = this.textState_;\n            var font = textStyle.getFont() || defaultFont;\n            checkFont(font);\n            var textScale = textStyle.getScale();\n            textState.overflow = textStyle.getOverflow();\n            textState.font = font;\n            textState.maxAngle = textStyle.getMaxAngle();\n            textState.placement = textStyle.getPlacement();\n            textState.textAlign = textStyle.getTextAlign();\n            textState.textBaseline = textStyle.getTextBaseline() || defaultTextBaseline;\n            textState.backgroundFill = textStyle.getBackgroundFill();\n            textState.backgroundStroke = textStyle.getBackgroundStroke();\n            textState.padding = textStyle.getPadding() || defaultPadding;\n            textState.scale = textScale === undefined ? 1 : textScale;\n            var textOffsetX = textStyle.getOffsetX();\n            var textOffsetY = textStyle.getOffsetY();\n            var textRotateWithView = textStyle.getRotateWithView();\n            var textRotation = textStyle.getRotation();\n            this.text_ = textStyle.getText() || '';\n            this.textOffsetX_ = textOffsetX === undefined ? 0 : textOffsetX;\n            this.textOffsetY_ = textOffsetY === undefined ? 0 : textOffsetY;\n            this.textRotateWithView_ = textRotateWithView === undefined ? false : textRotateWithView;\n            this.textRotation_ = textRotation === undefined ? 0 : textRotation;\n            this.strokeKey_ = strokeState ?\n                (typeof strokeState.strokeStyle == 'string' ? strokeState.strokeStyle : getUid(strokeState.strokeStyle)) +\n                    strokeState.lineCap + strokeState.lineDashOffset + '|' + strokeState.lineWidth +\n                    strokeState.lineJoin + strokeState.miterLimit + '[' + strokeState.lineDash.join() + ']' :\n                '';\n            this.textKey_ = textState.font + textState.scale + (textState.textAlign || '?');\n            this.fillKey_ = fillState ?\n                (typeof fillState.fillStyle == 'string' ? fillState.fillStyle : ('|' + getUid(fillState.fillStyle))) :\n                '';\n        }\n    };\n    return CanvasTextBuilder;\n}(CanvasBuilder));\nexport default CanvasTextBuilder;\n//# sourceMappingURL=TextBuilder.js.map","/**\n * @module ol/render/canvas/BuilderGroup\n */\nimport { createEmpty } from '../../extent.js';\nimport Builder from './Builder.js';\nimport ImageBuilder from './ImageBuilder.js';\nimport LineStringBuilder from './LineStringBuilder.js';\nimport PolygonBuilder from './PolygonBuilder.js';\nimport TextBuilder from './TextBuilder.js';\n/**\n * @type {Object<import(\"./BuilderType\").default, typeof Builder>}\n */\nvar BATCH_CONSTRUCTORS = {\n    'Circle': PolygonBuilder,\n    'Default': Builder,\n    'Image': ImageBuilder,\n    'LineString': LineStringBuilder,\n    'Polygon': PolygonBuilder,\n    'Text': TextBuilder\n};\nvar BuilderGroup = /** @class */ (function () {\n    /**\n     * @param {number} tolerance Tolerance.\n     * @param {import(\"../../extent.js\").Extent} maxExtent Max extent.\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {boolean} declutter Decluttering enabled.\n     */\n    function BuilderGroup(tolerance, maxExtent, resolution, pixelRatio, declutter) {\n        /**\n         * @type {boolean}\n         * @private\n         */\n        this.declutter_ = declutter;\n        /**\n         * @type {import(\"../canvas.js\").DeclutterGroup}\n         * @private\n         */\n        this.declutterGroup_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.tolerance_ = tolerance;\n        /**\n         * @private\n         * @type {import(\"../../extent.js\").Extent}\n         */\n        this.maxExtent_ = maxExtent;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.pixelRatio_ = pixelRatio;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.resolution_ = resolution;\n        /**\n         * @private\n         * @type {!Object<string, !Object<import(\"./BuilderType\").default, Builder>>}\n         */\n        this.buildersByZIndex_ = {};\n    }\n    /**\n     * @param {boolean} group Group with previous builder.\n     * @return {Array<*>} The resulting instruction group.\n     */\n    BuilderGroup.prototype.addDeclutter = function (group) {\n        var declutter = null;\n        if (this.declutter_) {\n            if (group) {\n                declutter = this.declutterGroup_;\n                /** @type {number} */ (declutter[4])++;\n            }\n            else {\n                declutter = this.declutterGroup_ = createEmpty();\n                declutter.push(1);\n            }\n        }\n        return declutter;\n    };\n    /**\n     * @return {!Object<string, !Object<import(\"./BuilderType\").default, import(\"./Builder.js\").SerializableInstructions>>} The serializable instructions\n     */\n    BuilderGroup.prototype.finish = function () {\n        var builderInstructions = {};\n        for (var zKey in this.buildersByZIndex_) {\n            builderInstructions[zKey] = builderInstructions[zKey] || {};\n            var builders = this.buildersByZIndex_[zKey];\n            for (var builderKey in builders) {\n                var builderInstruction = builders[builderKey].finish();\n                builderInstructions[zKey][builderKey] = builderInstruction;\n            }\n        }\n        return builderInstructions;\n    };\n    /**\n     * @param {number|undefined} zIndex Z index.\n     * @param {import(\"./BuilderType.js\").default} builderType Replay type.\n     * @return {import(\"../VectorContext.js\").default} Replay.\n     */\n    BuilderGroup.prototype.getBuilder = function (zIndex, builderType) {\n        var zIndexKey = zIndex !== undefined ? zIndex.toString() : '0';\n        var replays = this.buildersByZIndex_[zIndexKey];\n        if (replays === undefined) {\n            replays = {};\n            this.buildersByZIndex_[zIndexKey] = replays;\n        }\n        var replay = replays[builderType];\n        if (replay === undefined) {\n            var Constructor = BATCH_CONSTRUCTORS[builderType];\n            replay = new Constructor(this.tolerance_, this.maxExtent_, this.resolution_, this.pixelRatio_);\n            replays[builderType] = replay;\n        }\n        return replay;\n    };\n    return BuilderGroup;\n}());\nexport default BuilderGroup;\n//# sourceMappingURL=BuilderGroup.js.map","/**\n * @module ol/render/canvas/BuilderType\n */\n/**\n * @enum {string}\n */\nexport default {\n    CIRCLE: 'Circle',\n    DEFAULT: 'Default',\n    IMAGE: 'Image',\n    LINE_STRING: 'LineString',\n    POLYGON: 'Polygon',\n    TEXT: 'Text'\n};\n//# sourceMappingURL=BuilderType.js.map","/**\n * @module ol/geom/flat/length\n */\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Length.\n */\nexport function lineStringLength(flatCoordinates, offset, end, stride) {\n    var x1 = flatCoordinates[offset];\n    var y1 = flatCoordinates[offset + 1];\n    var length = 0;\n    for (var i = offset + stride; i < end; i += stride) {\n        var x2 = flatCoordinates[i];\n        var y2 = flatCoordinates[i + 1];\n        length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n        x1 = x2;\n        y1 = y2;\n    }\n    return length;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Perimeter.\n */\nexport function linearRingLength(flatCoordinates, offset, end, stride) {\n    var perimeter = lineStringLength(flatCoordinates, offset, end, stride);\n    var dx = flatCoordinates[end - stride] - flatCoordinates[offset];\n    var dy = flatCoordinates[end - stride + 1] - flatCoordinates[offset + 1];\n    perimeter += Math.sqrt(dx * dx + dy * dy);\n    return perimeter;\n}\n//# sourceMappingURL=length.js.map","/**\n * @module ol/geom/flat/textpath\n */\nimport { lerp } from '../../math.js';\n/**\n * @param {Array<number>} flatCoordinates Path to put text on.\n * @param {number} offset Start offset of the `flatCoordinates`.\n * @param {number} end End offset of the `flatCoordinates`.\n * @param {number} stride Stride.\n * @param {string} text Text to place on the path.\n * @param {number} startM m along the path where the text starts.\n * @param {number} maxAngle Max angle between adjacent chars in radians.\n * @param {number} scale The product of the text scale and the device pixel ratio.\n * @param {function(string, string, Object<string, number>):number} measureAndCacheTextWidth Measure and cache text width.\n * @param {string} font The font.\n * @param {Object<string, number>} cache A cache of measured widths.\n * @return {Array<Array<*>>} The result array of null if `maxAngle` was\n * exceeded. Entries of the array are x, y, anchorX, angle, chunk.\n */\nexport function drawTextOnPath(flatCoordinates, offset, end, stride, text, startM, maxAngle, scale, measureAndCacheTextWidth, font, cache) {\n    var result = [];\n    // Keep text upright\n    var reverse = flatCoordinates[offset] > flatCoordinates[end - stride];\n    var numChars = text.length;\n    var x1 = flatCoordinates[offset];\n    var y1 = flatCoordinates[offset + 1];\n    offset += stride;\n    var x2 = flatCoordinates[offset];\n    var y2 = flatCoordinates[offset + 1];\n    var segmentM = 0;\n    var segmentLength = Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2));\n    var chunk = '';\n    var chunkLength = 0;\n    var data, index, previousAngle;\n    for (var i = 0; i < numChars; ++i) {\n        index = reverse ? numChars - i - 1 : i;\n        var char = text.charAt(index);\n        chunk = reverse ? char + chunk : chunk + char;\n        var charLength = scale * measureAndCacheTextWidth(font, chunk, cache) - chunkLength;\n        chunkLength += charLength;\n        var charM = startM + charLength / 2;\n        while (offset < end - stride && segmentM + segmentLength < charM) {\n            x1 = x2;\n            y1 = y2;\n            offset += stride;\n            x2 = flatCoordinates[offset];\n            y2 = flatCoordinates[offset + 1];\n            segmentM += segmentLength;\n            segmentLength = Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2));\n        }\n        var segmentPos = charM - segmentM;\n        var angle = Math.atan2(y2 - y1, x2 - x1);\n        if (reverse) {\n            angle += angle > 0 ? -Math.PI : Math.PI;\n        }\n        if (previousAngle !== undefined) {\n            var delta = angle - previousAngle;\n            delta += (delta > Math.PI) ? -2 * Math.PI : (delta < -Math.PI) ? 2 * Math.PI : 0;\n            if (Math.abs(delta) > maxAngle) {\n                return null;\n            }\n        }\n        var interpolate = segmentPos / segmentLength;\n        var x = lerp(x1, x2, interpolate);\n        var y = lerp(y1, y2, interpolate);\n        if (previousAngle == angle) {\n            if (reverse) {\n                data[0] = x;\n                data[1] = y;\n                data[2] = charLength / 2;\n            }\n            data[4] = chunk;\n        }\n        else {\n            chunk = char;\n            chunkLength = charLength;\n            data = [x, y, charLength / 2, angle, chunk];\n            if (reverse) {\n                result.unshift(data);\n            }\n            else {\n                result.push(data);\n            }\n            previousAngle = angle;\n        }\n        startM += charLength;\n    }\n    return result;\n}\n//# sourceMappingURL=textpath.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/render/canvas/Executor\n */\nimport { getUid } from '../../util.js';\nimport { equals } from '../../array.js';\nimport { createEmpty, createOrUpdate, createOrUpdateEmpty, extend, intersects } from '../../extent.js';\nimport { lineStringLength } from '../../geom/flat/length.js';\nimport { drawTextOnPath } from '../../geom/flat/textpath.js';\nimport { transform2D } from '../../geom/flat/transform.js';\nimport { isEmpty } from '../../obj.js';\nimport { drawImage, defaultPadding, defaultTextBaseline } from '../canvas.js';\nimport CanvasInstruction from './Instruction.js';\nimport { TEXT_ALIGN } from './TextBuilder.js';\nimport { create as createTransform, compose as composeTransform, apply as applyTransform, setFromArray as transformSetFromArray } from '../../transform.js';\nimport { createCanvasContext2D } from '../../dom.js';\nimport { labelCache, defaultTextAlign, measureTextHeight, measureAndCacheTextWidth, measureTextWidths } from '../canvas.js';\nimport Disposable from '../../Disposable.js';\nimport rbush from 'rbush';\n/**\n * @typedef {Object} SerializableInstructions\n * @property {Array<*>} instructions The rendering instructions.\n * @property {Array<*>} hitDetectionInstructions The rendering hit detection instructions.\n * @property {Array<number>} coordinates The array of all coordinates.\n * @property {!Object<string, import(\"../canvas.js\").TextState>} textStates The text states (decluttering).\n * @property {!Object<string, import(\"../canvas.js\").FillState>} fillStates The fill states (decluttering).\n * @property {!Object<string, import(\"../canvas.js\").StrokeState>} strokeStates The stroke states (decluttering).\n */\n/**\n * @type {import(\"../../extent.js\").Extent}\n */\nvar tmpExtent = createEmpty();\n/**\n * @type {!import(\"../../transform.js\").Transform}\n */\nvar tmpTransform = createTransform();\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nvar p1 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nvar p2 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nvar p3 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nvar p4 = [];\nvar Executor = /** @class */ (function (_super) {\n    __extends(Executor, _super);\n    /**\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {boolean} overlaps The replay can have overlapping geometries.\n     * @param {SerializableInstructions} instructions The serializable instructions\n     */\n    function Executor(resolution, pixelRatio, overlaps, instructions) {\n        var _this = _super.call(this) || this;\n        /**\n         * @protected\n         * @type {boolean}\n         */\n        _this.overlaps = overlaps;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.pixelRatio = pixelRatio;\n        /**\n         * @protected\n         * @const\n         * @type {number}\n         */\n        _this.resolution = resolution;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.alignFill_;\n        /**\n         * @type {Array<*>}\n         */\n        _this.declutterItems = [];\n        /**\n         * @protected\n         * @type {Array<*>}\n         */\n        _this.instructions = instructions.instructions;\n        /**\n         * @protected\n         * @type {Array<number>}\n         */\n        _this.coordinates = instructions.coordinates;\n        /**\n         * @private\n         * @type {!Object<number,import(\"../../coordinate.js\").Coordinate|Array<import(\"../../coordinate.js\").Coordinate>|Array<Array<import(\"../../coordinate.js\").Coordinate>>>}\n         */\n        _this.coordinateCache_ = {};\n        /**\n         * @private\n         * @type {!import(\"../../transform.js\").Transform}\n         */\n        _this.renderedTransform_ = createTransform();\n        /**\n         * @protected\n         * @type {Array<*>}\n         */\n        _this.hitDetectionInstructions = instructions.hitDetectionInstructions;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.pixelCoordinates_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.viewRotation_ = 0;\n        /**\n         * @type {!Object<string, import(\"../canvas.js\").FillState>}\n         */\n        _this.fillStates = instructions.fillStates || {};\n        /**\n         * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n         */\n        _this.strokeStates = instructions.strokeStates || {};\n        /**\n         * @type {!Object<string, import(\"../canvas.js\").TextState>}\n         */\n        _this.textStates = instructions.textStates || {};\n        /**\n         * @private\n         * @type {Object<string, Object<string, number>>}\n         */\n        _this.widths_ = {};\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    Executor.prototype.disposeInternal = function () {\n        labelCache.release(this);\n        _super.prototype.disposeInternal.call(this);\n    };\n    /**\n     * @param {string} text Text.\n     * @param {string} textKey Text style key.\n     * @param {string} fillKey Fill style key.\n     * @param {string} strokeKey Stroke style key.\n     * @return {HTMLCanvasElement} Image.\n     */\n    Executor.prototype.getTextImage = function (text, textKey, fillKey, strokeKey) {\n        var label;\n        var key = strokeKey + textKey + text + fillKey + this.pixelRatio;\n        if (!labelCache.containsKey(key)) {\n            var strokeState = strokeKey ? this.strokeStates[strokeKey] : null;\n            var fillState = fillKey ? this.fillStates[fillKey] : null;\n            var textState = this.textStates[textKey];\n            var pixelRatio = this.pixelRatio;\n            var scale = textState.scale * pixelRatio;\n            var align = TEXT_ALIGN[textState.textAlign || defaultTextAlign];\n            var strokeWidth = strokeKey && strokeState.lineWidth ? strokeState.lineWidth : 0;\n            var lines = text.split('\\n');\n            var numLines = lines.length;\n            var widths = [];\n            var width = measureTextWidths(textState.font, lines, widths);\n            var lineHeight = measureTextHeight(textState.font);\n            var height = lineHeight * numLines;\n            var renderWidth = (width + strokeWidth);\n            var context = createCanvasContext2D(Math.ceil(renderWidth * scale), Math.ceil((height + strokeWidth) * scale));\n            label = context.canvas;\n            labelCache.set(key, label);\n            if (scale != 1) {\n                context.scale(scale, scale);\n            }\n            context.font = textState.font;\n            if (strokeKey) {\n                context.strokeStyle = strokeState.strokeStyle;\n                context.lineWidth = strokeWidth;\n                context.lineCap = /** @type {CanvasLineCap} */ (strokeState.lineCap);\n                context.lineJoin = /** @type {CanvasLineJoin} */ (strokeState.lineJoin);\n                context.miterLimit = strokeState.miterLimit;\n                if (context.setLineDash && strokeState.lineDash.length) {\n                    context.setLineDash(strokeState.lineDash);\n                    context.lineDashOffset = strokeState.lineDashOffset;\n                }\n            }\n            if (fillKey) {\n                context.fillStyle = fillState.fillStyle;\n            }\n            context.textBaseline = 'middle';\n            context.textAlign = 'center';\n            var leftRight = (0.5 - align);\n            var x = align * label.width / scale + leftRight * strokeWidth;\n            var i = void 0;\n            if (strokeKey) {\n                for (i = 0; i < numLines; ++i) {\n                    context.strokeText(lines[i], x + leftRight * widths[i], 0.5 * (strokeWidth + lineHeight) + i * lineHeight);\n                }\n            }\n            if (fillKey) {\n                for (i = 0; i < numLines; ++i) {\n                    context.fillText(lines[i], x + leftRight * widths[i], 0.5 * (strokeWidth + lineHeight) + i * lineHeight);\n                }\n            }\n        }\n        return labelCache.get(key, this);\n    };\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../coordinate.js\").Coordinate} p1 1st point of the background box.\n     * @param {import(\"../../coordinate.js\").Coordinate} p2 2nd point of the background box.\n     * @param {import(\"../../coordinate.js\").Coordinate} p3 3rd point of the background box.\n     * @param {import(\"../../coordinate.js\").Coordinate} p4 4th point of the background box.\n     * @param {Array<*>} fillInstruction Fill instruction.\n     * @param {Array<*>} strokeInstruction Stroke instruction.\n     */\n    Executor.prototype.replayTextBackground_ = function (context, p1, p2, p3, p4, fillInstruction, strokeInstruction) {\n        context.beginPath();\n        context.moveTo.apply(context, p1);\n        context.lineTo.apply(context, p2);\n        context.lineTo.apply(context, p3);\n        context.lineTo.apply(context, p4);\n        context.lineTo.apply(context, p1);\n        if (fillInstruction) {\n            this.alignFill_ = /** @type {boolean} */ (fillInstruction[2]);\n            this.fill_(context);\n        }\n        if (strokeInstruction) {\n            this.setStrokeStyle_(context, /** @type {Array<*>} */ (strokeInstruction));\n            context.stroke();\n        }\n    };\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {number} x X.\n     * @param {number} y Y.\n     * @param {HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} image Image.\n     * @param {number} anchorX Anchor X.\n     * @param {number} anchorY Anchor Y.\n     * @param {import(\"../canvas.js\").DeclutterGroup} declutterGroup Declutter group.\n     * @param {number} height Height.\n     * @param {number} opacity Opacity.\n     * @param {number} originX Origin X.\n     * @param {number} originY Origin Y.\n     * @param {number} rotation Rotation.\n     * @param {number} scale Scale.\n     * @param {boolean} snapToPixel Snap to pixel.\n     * @param {number} width Width.\n     * @param {Array<number>} padding Padding.\n     * @param {Array<*>} fillInstruction Fill instruction.\n     * @param {Array<*>} strokeInstruction Stroke instruction.\n     */\n    Executor.prototype.replayImage_ = function (context, x, y, image, anchorX, anchorY, declutterGroup, height, opacity, originX, originY, rotation, scale, snapToPixel, width, padding, fillInstruction, strokeInstruction) {\n        var fillStroke = fillInstruction || strokeInstruction;\n        anchorX *= scale;\n        anchorY *= scale;\n        x -= anchorX;\n        y -= anchorY;\n        var w = (width + originX > image.width) ? image.width - originX : width;\n        var h = (height + originY > image.height) ? image.height - originY : height;\n        var boxW = padding[3] + w * scale + padding[1];\n        var boxH = padding[0] + h * scale + padding[2];\n        var boxX = x - padding[3];\n        var boxY = y - padding[0];\n        if (fillStroke || rotation !== 0) {\n            p1[0] = p4[0] = boxX;\n            p1[1] = p2[1] = boxY;\n            p2[0] = p3[0] = boxX + boxW;\n            p3[1] = p4[1] = boxY + boxH;\n        }\n        var transform = null;\n        if (rotation !== 0) {\n            var centerX = x + anchorX;\n            var centerY = y + anchorY;\n            transform = composeTransform(tmpTransform, centerX, centerY, 1, 1, rotation, -centerX, -centerY);\n            applyTransform(tmpTransform, p1);\n            applyTransform(tmpTransform, p2);\n            applyTransform(tmpTransform, p3);\n            applyTransform(tmpTransform, p4);\n            createOrUpdate(Math.min(p1[0], p2[0], p3[0], p4[0]), Math.min(p1[1], p2[1], p3[1], p4[1]), Math.max(p1[0], p2[0], p3[0], p4[0]), Math.max(p1[1], p2[1], p3[1], p4[1]), tmpExtent);\n        }\n        else {\n            createOrUpdate(boxX, boxY, boxX + boxW, boxY + boxH, tmpExtent);\n        }\n        var canvas = context.canvas;\n        var strokePadding = strokeInstruction ? (strokeInstruction[2] * scale / 2) : 0;\n        var intersects = tmpExtent[0] - strokePadding <= canvas.width && tmpExtent[2] + strokePadding >= 0 &&\n            tmpExtent[1] - strokePadding <= canvas.height && tmpExtent[3] + strokePadding >= 0;\n        if (snapToPixel) {\n            x = Math.round(x);\n            y = Math.round(y);\n        }\n        if (declutterGroup) {\n            if (!intersects && declutterGroup[4] == 1) {\n                return;\n            }\n            extend(declutterGroup, tmpExtent);\n            var declutterArgs = intersects ?\n                [context, transform ? transform.slice(0) : null, opacity, image, originX, originY, w, h, x, y, scale] :\n                null;\n            if (declutterArgs && fillStroke) {\n                declutterArgs.push(fillInstruction, strokeInstruction, p1, p2, p3, p4);\n            }\n            declutterGroup.push(declutterArgs);\n        }\n        else if (intersects) {\n            if (fillStroke) {\n                this.replayTextBackground_(context, p1, p2, p3, p4, \n                /** @type {Array<*>} */ (fillInstruction), \n                /** @type {Array<*>} */ (strokeInstruction));\n            }\n            drawImage(context, transform, opacity, image, originX, originY, w, h, x, y, scale);\n        }\n    };\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} context Context.\n     */\n    Executor.prototype.fill_ = function (context) {\n        if (this.alignFill_) {\n            var origin_1 = applyTransform(this.renderedTransform_, [0, 0]);\n            var repeatSize = 512 * this.pixelRatio;\n            context.save();\n            context.translate(origin_1[0] % repeatSize, origin_1[1] % repeatSize);\n            context.rotate(this.viewRotation_);\n        }\n        context.fill();\n        if (this.alignFill_) {\n            context.restore();\n        }\n    };\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {Array<*>} instruction Instruction.\n     */\n    Executor.prototype.setStrokeStyle_ = function (context, instruction) {\n        context.strokeStyle = /** @type {import(\"../../colorlike.js\").ColorLike} */ (instruction[1]);\n        context.lineWidth = /** @type {number} */ (instruction[2]);\n        context.lineCap = /** @type {CanvasLineCap} */ (instruction[3]);\n        context.lineJoin = /** @type {CanvasLineJoin} */ (instruction[4]);\n        context.miterLimit = /** @type {number} */ (instruction[5]);\n        if (context.setLineDash) {\n            context.lineDashOffset = /** @type {number} */ (instruction[7]);\n            context.setLineDash(/** @type {Array<number>} */ (instruction[6]));\n        }\n    };\n    /**\n     * @param {import(\"../canvas.js\").DeclutterGroup} declutterGroup Declutter group.\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {?} declutterTree Declutter tree.\n     * @return {?} Declutter tree.\n     */\n    Executor.prototype.renderDeclutter = function (declutterGroup, feature, declutterTree) {\n        if (declutterGroup && declutterGroup.length > 5) {\n            var groupCount = declutterGroup[4];\n            if (groupCount == 1 || groupCount == declutterGroup.length - 5) {\n                /** @type {import(\"../../structs/RBush.js\").Entry} */\n                var box = {\n                    minX: /** @type {number} */ (declutterGroup[0]),\n                    minY: /** @type {number} */ (declutterGroup[1]),\n                    maxX: /** @type {number} */ (declutterGroup[2]),\n                    maxY: /** @type {number} */ (declutterGroup[3]),\n                    value: feature\n                };\n                if (!declutterTree) {\n                    declutterTree = rbush(9, undefined);\n                }\n                if (!declutterTree.collides(box)) {\n                    declutterTree.insert(box);\n                    for (var j = 5, jj = declutterGroup.length; j < jj; ++j) {\n                        var declutterData = /** @type {Array} */ (declutterGroup[j]);\n                        if (declutterData) {\n                            if (declutterData.length > 11) {\n                                this.replayTextBackground_(declutterData[0], declutterData[13], declutterData[14], declutterData[15], declutterData[16], declutterData[11], declutterData[12]);\n                            }\n                            drawImage.apply(undefined, declutterData);\n                        }\n                    }\n                }\n                declutterGroup.length = 5;\n                createOrUpdateEmpty(declutterGroup);\n            }\n        }\n        return declutterTree;\n    };\n    /**\n     * @private\n     * @param {string} text The text to draw.\n     * @param {string} textKey The key of the text state.\n     * @param {string} strokeKey The key for the stroke state.\n     * @param {string} fillKey The key for the fill state.\n     * @return {{label: HTMLCanvasElement, anchorX: number, anchorY: number}} The text image and its anchor.\n     */\n    Executor.prototype.drawTextImageWithPointPlacement_ = function (text, textKey, strokeKey, fillKey) {\n        var textState = this.textStates[textKey];\n        var label = this.getTextImage(text, textKey, fillKey, strokeKey);\n        var strokeState = this.strokeStates[strokeKey];\n        var pixelRatio = this.pixelRatio;\n        var align = TEXT_ALIGN[textState.textAlign || defaultTextAlign];\n        var baseline = TEXT_ALIGN[textState.textBaseline || defaultTextBaseline];\n        var strokeWidth = strokeState && strokeState.lineWidth ? strokeState.lineWidth : 0;\n        var anchorX = align * label.width / pixelRatio + 2 * (0.5 - align) * strokeWidth;\n        var anchorY = baseline * label.height / pixelRatio + 2 * (0.5 - baseline) * strokeWidth;\n        return {\n            label: label,\n            anchorX: anchorX,\n            anchorY: anchorY\n        };\n    };\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../transform.js\").Transform} transform Transform.\n     * @param {Object<string, boolean>} skippedFeaturesHash Ids of features\n     *     to skip.\n     * @param {Array<*>} instructions Instructions array.\n     * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n     * @param {function(import(\"../../Feature.js\").FeatureLike): T|undefined} featureCallback Feature callback.\n     * @param {import(\"../../extent.js\").Extent=} opt_hitExtent Only check features that intersect this\n     *     extent.\n     * @return {T|undefined} Callback result.\n     * @template T\n     */\n    Executor.prototype.execute_ = function (context, transform, skippedFeaturesHash, instructions, snapToPixel, featureCallback, opt_hitExtent) {\n        this.declutterItems.length = 0;\n        /** @type {Array<number>} */\n        var pixelCoordinates;\n        if (this.pixelCoordinates_ && equals(transform, this.renderedTransform_)) {\n            pixelCoordinates = this.pixelCoordinates_;\n        }\n        else {\n            if (!this.pixelCoordinates_) {\n                this.pixelCoordinates_ = [];\n            }\n            pixelCoordinates = transform2D(this.coordinates, 0, this.coordinates.length, 2, transform, this.pixelCoordinates_);\n            transformSetFromArray(this.renderedTransform_, transform);\n        }\n        var skipFeatures = !isEmpty(skippedFeaturesHash);\n        var i = 0; // instruction index\n        var ii = instructions.length; // end of instructions\n        var d = 0; // data index\n        var dd; // end of per-instruction data\n        var anchorX, anchorY, prevX, prevY, roundX, roundY, declutterGroup, image, text, textKey;\n        var strokeKey, fillKey;\n        var pendingFill = 0;\n        var pendingStroke = 0;\n        var lastFillInstruction = null;\n        var lastStrokeInstruction = null;\n        var coordinateCache = this.coordinateCache_;\n        var viewRotation = this.viewRotation_;\n        var state = /** @type {import(\"../../render.js\").State} */ ({\n            context: context,\n            pixelRatio: this.pixelRatio,\n            resolution: this.resolution,\n            rotation: viewRotation\n        });\n        // When the batch size gets too big, performance decreases. 200 is a good\n        // balance between batch size and number of fill/stroke instructions.\n        var batchSize = this.instructions != instructions || this.overlaps ? 0 : 200;\n        var /** @type {import(\"../../Feature.js\").FeatureLike} */ feature;\n        var x, y;\n        while (i < ii) {\n            var instruction = instructions[i];\n            var type = /** @type {CanvasInstruction} */ (instruction[0]);\n            switch (type) {\n                case CanvasInstruction.BEGIN_GEOMETRY:\n                    feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (instruction[1]);\n                    if ((skipFeatures && skippedFeaturesHash[getUid(feature)]) || !feature.getGeometry()) {\n                        i = /** @type {number} */ (instruction[2]);\n                    }\n                    else if (opt_hitExtent !== undefined && !intersects(opt_hitExtent, feature.getGeometry().getExtent())) {\n                        i = /** @type {number} */ (instruction[2]) + 1;\n                    }\n                    else {\n                        ++i;\n                    }\n                    break;\n                case CanvasInstruction.BEGIN_PATH:\n                    if (pendingFill > batchSize) {\n                        this.fill_(context);\n                        pendingFill = 0;\n                    }\n                    if (pendingStroke > batchSize) {\n                        context.stroke();\n                        pendingStroke = 0;\n                    }\n                    if (!pendingFill && !pendingStroke) {\n                        context.beginPath();\n                        prevX = prevY = NaN;\n                    }\n                    ++i;\n                    break;\n                case CanvasInstruction.CIRCLE:\n                    d = /** @type {number} */ (instruction[1]);\n                    var x1 = pixelCoordinates[d];\n                    var y1 = pixelCoordinates[d + 1];\n                    var x2 = pixelCoordinates[d + 2];\n                    var y2 = pixelCoordinates[d + 3];\n                    var dx = x2 - x1;\n                    var dy = y2 - y1;\n                    var r = Math.sqrt(dx * dx + dy * dy);\n                    context.moveTo(x1 + r, y1);\n                    context.arc(x1, y1, r, 0, 2 * Math.PI, true);\n                    ++i;\n                    break;\n                case CanvasInstruction.CLOSE_PATH:\n                    context.closePath();\n                    ++i;\n                    break;\n                case CanvasInstruction.CUSTOM:\n                    d = /** @type {number} */ (instruction[1]);\n                    dd = instruction[2];\n                    var geometry = /** @type {import(\"../../geom/SimpleGeometry.js\").default} */ (instruction[3]);\n                    var renderer = instruction[4];\n                    var fn = instruction.length == 6 ? instruction[5] : undefined;\n                    state.geometry = geometry;\n                    state.feature = feature;\n                    if (!(i in coordinateCache)) {\n                        coordinateCache[i] = [];\n                    }\n                    var coords = coordinateCache[i];\n                    if (fn) {\n                        fn(pixelCoordinates, d, dd, 2, coords);\n                    }\n                    else {\n                        coords[0] = pixelCoordinates[d];\n                        coords[1] = pixelCoordinates[d + 1];\n                        coords.length = 2;\n                    }\n                    renderer(coords, state);\n                    ++i;\n                    break;\n                case CanvasInstruction.DRAW_IMAGE:\n                    d = /** @type {number} */ (instruction[1]);\n                    dd = /** @type {number} */ (instruction[2]);\n                    image = /** @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} */ (instruction[3]);\n                    // Remaining arguments in DRAW_IMAGE are in alphabetical order\n                    anchorX = /** @type {number} */ (instruction[4]);\n                    anchorY = /** @type {number} */ (instruction[5]);\n                    declutterGroup = featureCallback ? null : /** @type {import(\"../canvas.js\").DeclutterGroup} */ (instruction[6]);\n                    var height = /** @type {number} */ (instruction[7]);\n                    var opacity = /** @type {number} */ (instruction[8]);\n                    var originX = /** @type {number} */ (instruction[9]);\n                    var originY = /** @type {number} */ (instruction[10]);\n                    var rotateWithView = /** @type {boolean} */ (instruction[11]);\n                    var rotation = /** @type {number} */ (instruction[12]);\n                    var scale = /** @type {number} */ (instruction[13]);\n                    var width = /** @type {number} */ (instruction[14]);\n                    if (!image && instruction.length >= 19) {\n                        // create label images\n                        text = /** @type {string} */ (instruction[18]);\n                        textKey = /** @type {string} */ (instruction[19]);\n                        strokeKey = /** @type {string} */ (instruction[20]);\n                        fillKey = /** @type {string} */ (instruction[21]);\n                        var labelWithAnchor = this.drawTextImageWithPointPlacement_(text, textKey, strokeKey, fillKey);\n                        image = instruction[3] = labelWithAnchor.label;\n                        var textOffsetX = /** @type {number} */ (instruction[22]);\n                        anchorX = instruction[4] = (labelWithAnchor.anchorX - textOffsetX) * this.pixelRatio;\n                        var textOffsetY = /** @type {number} */ (instruction[23]);\n                        anchorY = instruction[5] = (labelWithAnchor.anchorY - textOffsetY) * this.pixelRatio;\n                        height = instruction[7] = image.height;\n                        width = instruction[14] = image.width;\n                    }\n                    var geometryWidths = void 0;\n                    if (instruction.length > 24) {\n                        geometryWidths = /** @type {number} */ (instruction[24]);\n                    }\n                    var padding = void 0, backgroundFill = void 0, backgroundStroke = void 0;\n                    if (instruction.length > 16) {\n                        padding = /** @type {Array<number>} */ (instruction[15]);\n                        backgroundFill = /** @type {boolean} */ (instruction[16]);\n                        backgroundStroke = /** @type {boolean} */ (instruction[17]);\n                    }\n                    else {\n                        padding = defaultPadding;\n                        backgroundFill = backgroundStroke = false;\n                    }\n                    if (rotateWithView) {\n                        rotation += viewRotation;\n                    }\n                    var widthIndex = 0;\n                    for (; d < dd; d += 2) {\n                        if (geometryWidths && geometryWidths[widthIndex++] < width / this.pixelRatio) {\n                            continue;\n                        }\n                        this.replayImage_(context, pixelCoordinates[d], pixelCoordinates[d + 1], image, anchorX, anchorY, declutterGroup, height, opacity, originX, originY, rotation, scale, snapToPixel, width, padding, backgroundFill ? /** @type {Array<*>} */ (lastFillInstruction) : null, backgroundStroke ? /** @type {Array<*>} */ (lastStrokeInstruction) : null);\n                    }\n                    this.declutterItems.push(this, declutterGroup, feature);\n                    ++i;\n                    break;\n                case CanvasInstruction.DRAW_CHARS:\n                    var begin = /** @type {number} */ (instruction[1]);\n                    var end = /** @type {number} */ (instruction[2]);\n                    var baseline = /** @type {number} */ (instruction[3]);\n                    declutterGroup = featureCallback ? null : /** @type {import(\"../canvas.js\").DeclutterGroup} */ (instruction[4]);\n                    var overflow = /** @type {number} */ (instruction[5]);\n                    fillKey = /** @type {string} */ (instruction[6]);\n                    var maxAngle = /** @type {number} */ (instruction[7]);\n                    var measurePixelRatio = /** @type {number} */ (instruction[8]);\n                    var offsetY = /** @type {number} */ (instruction[9]);\n                    strokeKey = /** @type {string} */ (instruction[10]);\n                    var strokeWidth = /** @type {number} */ (instruction[11]);\n                    text = /** @type {string} */ (instruction[12]);\n                    textKey = /** @type {string} */ (instruction[13]);\n                    var pixelRatioScale = /** @type {number} */ (instruction[14]);\n                    var textState = this.textStates[textKey];\n                    var font = textState.font;\n                    var textScale = textState.scale * measurePixelRatio;\n                    var cachedWidths = void 0;\n                    if (font in this.widths_) {\n                        cachedWidths = this.widths_[font];\n                    }\n                    else {\n                        cachedWidths = this.widths_[font] = {};\n                    }\n                    var pathLength = lineStringLength(pixelCoordinates, begin, end, 2);\n                    var textLength = textScale * measureAndCacheTextWidth(font, text, cachedWidths);\n                    if (overflow || textLength <= pathLength) {\n                        var textAlign = this.textStates[textKey].textAlign;\n                        var startM = (pathLength - textLength) * TEXT_ALIGN[textAlign];\n                        var parts = drawTextOnPath(pixelCoordinates, begin, end, 2, text, startM, maxAngle, textScale, measureAndCacheTextWidth, font, cachedWidths);\n                        if (parts) {\n                            var c = void 0, cc = void 0, chars = void 0, label = void 0, part = void 0;\n                            if (strokeKey) {\n                                for (c = 0, cc = parts.length; c < cc; ++c) {\n                                    part = parts[c]; // x, y, anchorX, rotation, chunk\n                                    chars = /** @type {string} */ (part[4]);\n                                    label = this.getTextImage(chars, textKey, '', strokeKey);\n                                    anchorX = /** @type {number} */ (part[2]) + strokeWidth;\n                                    anchorY = baseline * label.height + (0.5 - baseline) * 2 * strokeWidth - offsetY;\n                                    this.replayImage_(context, \n                                    /** @type {number} */ (part[0]), /** @type {number} */ (part[1]), label, anchorX, anchorY, declutterGroup, label.height, 1, 0, 0, \n                                    /** @type {number} */ (part[3]), pixelRatioScale, false, label.width, defaultPadding, null, null);\n                                }\n                            }\n                            if (fillKey) {\n                                for (c = 0, cc = parts.length; c < cc; ++c) {\n                                    part = parts[c]; // x, y, anchorX, rotation, chunk\n                                    chars = /** @type {string} */ (part[4]);\n                                    label = this.getTextImage(chars, textKey, fillKey, '');\n                                    anchorX = /** @type {number} */ (part[2]);\n                                    anchorY = baseline * label.height - offsetY;\n                                    this.replayImage_(context, \n                                    /** @type {number} */ (part[0]), /** @type {number} */ (part[1]), label, anchorX, anchorY, declutterGroup, label.height, 1, 0, 0, \n                                    /** @type {number} */ (part[3]), pixelRatioScale, false, label.width, defaultPadding, null, null);\n                                }\n                            }\n                        }\n                    }\n                    this.declutterItems.push(this, declutterGroup, feature);\n                    ++i;\n                    break;\n                case CanvasInstruction.END_GEOMETRY:\n                    if (featureCallback !== undefined) {\n                        feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (instruction[1]);\n                        var result = featureCallback(feature);\n                        if (result) {\n                            return result;\n                        }\n                    }\n                    ++i;\n                    break;\n                case CanvasInstruction.FILL:\n                    if (batchSize) {\n                        pendingFill++;\n                    }\n                    else {\n                        this.fill_(context);\n                    }\n                    ++i;\n                    break;\n                case CanvasInstruction.MOVE_TO_LINE_TO:\n                    d = /** @type {number} */ (instruction[1]);\n                    dd = /** @type {number} */ (instruction[2]);\n                    x = pixelCoordinates[d];\n                    y = pixelCoordinates[d + 1];\n                    roundX = (x + 0.5) | 0;\n                    roundY = (y + 0.5) | 0;\n                    if (roundX !== prevX || roundY !== prevY) {\n                        context.moveTo(x, y);\n                        prevX = roundX;\n                        prevY = roundY;\n                    }\n                    for (d += 2; d < dd; d += 2) {\n                        x = pixelCoordinates[d];\n                        y = pixelCoordinates[d + 1];\n                        roundX = (x + 0.5) | 0;\n                        roundY = (y + 0.5) | 0;\n                        if (d == dd - 2 || roundX !== prevX || roundY !== prevY) {\n                            context.lineTo(x, y);\n                            prevX = roundX;\n                            prevY = roundY;\n                        }\n                    }\n                    ++i;\n                    break;\n                case CanvasInstruction.SET_FILL_STYLE:\n                    lastFillInstruction = instruction;\n                    this.alignFill_ = instruction[2];\n                    if (pendingFill) {\n                        this.fill_(context);\n                        pendingFill = 0;\n                        if (pendingStroke) {\n                            context.stroke();\n                            pendingStroke = 0;\n                        }\n                    }\n                    context.fillStyle = /** @type {import(\"../../colorlike.js\").ColorLike} */ (instruction[1]);\n                    ++i;\n                    break;\n                case CanvasInstruction.SET_STROKE_STYLE:\n                    lastStrokeInstruction = instruction;\n                    if (pendingStroke) {\n                        context.stroke();\n                        pendingStroke = 0;\n                    }\n                    this.setStrokeStyle_(context, /** @type {Array<*>} */ (instruction));\n                    ++i;\n                    break;\n                case CanvasInstruction.STROKE:\n                    if (batchSize) {\n                        pendingStroke++;\n                    }\n                    else {\n                        context.stroke();\n                    }\n                    ++i;\n                    break;\n                default:\n                    ++i; // consume the instruction anyway, to avoid an infinite loop\n                    break;\n            }\n        }\n        if (pendingFill) {\n            this.fill_(context);\n        }\n        if (pendingStroke) {\n            context.stroke();\n        }\n        return undefined;\n    };\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../transform.js\").Transform} transform Transform.\n     * @param {number} viewRotation View rotation.\n     * @param {Object<string, boolean>} skippedFeaturesHash Ids of features\n     *     to skip.\n     * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n     */\n    Executor.prototype.execute = function (context, transform, viewRotation, skippedFeaturesHash, snapToPixel) {\n        this.viewRotation_ = viewRotation;\n        this.execute_(context, transform, skippedFeaturesHash, this.instructions, snapToPixel, undefined, undefined);\n    };\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../transform.js\").Transform} transform Transform.\n     * @param {number} viewRotation View rotation.\n     * @param {Object<string, boolean>} skippedFeaturesHash Ids of features\n     *     to skip.\n     * @param {function(import(\"../../Feature.js\").FeatureLike): T=} opt_featureCallback\n     *     Feature callback.\n     * @param {import(\"../../extent.js\").Extent=} opt_hitExtent Only check features that intersect this\n     *     extent.\n     * @return {T|undefined} Callback result.\n     * @template T\n     */\n    Executor.prototype.executeHitDetection = function (context, transform, viewRotation, skippedFeaturesHash, opt_featureCallback, opt_hitExtent) {\n        this.viewRotation_ = viewRotation;\n        return this.execute_(context, transform, skippedFeaturesHash, this.hitDetectionInstructions, true, opt_featureCallback, opt_hitExtent);\n    };\n    return Executor;\n}(Disposable));\nexport default Executor;\n//# sourceMappingURL=Executor.js.map","/**\n * @module ol/render/canvas/ExecutorGroup\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { numberSafeCompareFunction } from '../../array.js';\nimport { createCanvasContext2D } from '../../dom.js';\nimport { buffer, createEmpty, extendCoordinate } from '../../extent.js';\nimport { transform2D } from '../../geom/flat/transform.js';\nimport { isEmpty } from '../../obj.js';\nimport BuilderType from './BuilderType.js';\nimport { create as createTransform, compose as composeTransform } from '../../transform.js';\nimport Executor from './Executor.js';\nimport Disposable from '../../Disposable.js';\n/**\n * @const\n * @type {Array<BuilderType>}\n */\nvar ORDER = [\n    BuilderType.POLYGON,\n    BuilderType.CIRCLE,\n    BuilderType.LINE_STRING,\n    BuilderType.IMAGE,\n    BuilderType.TEXT,\n    BuilderType.DEFAULT\n];\nvar ExecutorGroup = /** @class */ (function (_super) {\n    __extends(ExecutorGroup, _super);\n    /**\n     * @param {import(\"../../extent.js\").Extent} maxExtent Max extent for clipping. When a\n     * `maxExtent` was set on the Buillder for this executor group, the same `maxExtent`\n     * should be set here, unless the target context does not exceet that extent (which\n     * can be the case when rendering to tiles).\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {boolean} overlaps The executor group can have overlapping geometries.\n     * @param {!Object<string, !Object<BuilderType, import(\"./Builder.js\").SerializableInstructions>>} allInstructions\n     * The serializable instructions.\n     * @param {number=} opt_renderBuffer Optional rendering buffer.\n     */\n    function ExecutorGroup(maxExtent, resolution, pixelRatio, overlaps, allInstructions, opt_renderBuffer) {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {import(\"../../extent.js\").Extent}\n         */\n        _this.maxExtent_ = maxExtent;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.overlaps_ = overlaps;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.pixelRatio_ = pixelRatio;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.resolution_ = resolution;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.renderBuffer_ = opt_renderBuffer;\n        /**\n         * @private\n         * @type {!Object<string, !Object<BuilderType, import(\"./Executor\").default>>}\n         */\n        _this.executorsByZIndex_ = {};\n        /**\n         * @private\n         * @type {CanvasRenderingContext2D}\n         */\n        _this.hitDetectionContext_ = createCanvasContext2D(1, 1);\n        /**\n         * @private\n         * @type {import(\"../../transform.js\").Transform}\n         */\n        _this.hitDetectionTransform_ = createTransform();\n        _this.createExecutors_(allInstructions);\n        return _this;\n    }\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../transform.js\").Transform} transform Transform.\n     */\n    ExecutorGroup.prototype.clip = function (context, transform) {\n        var flatClipCoords = this.getClipCoords(transform);\n        context.beginPath();\n        context.moveTo(flatClipCoords[0], flatClipCoords[1]);\n        context.lineTo(flatClipCoords[2], flatClipCoords[3]);\n        context.lineTo(flatClipCoords[4], flatClipCoords[5]);\n        context.lineTo(flatClipCoords[6], flatClipCoords[7]);\n        context.clip();\n    };\n    /**\n     * Create executors and populate them using the provided instructions.\n     * @private\n     * @param {!Object<string, !Object<BuilderType, import(\"./Builder.js\").SerializableInstructions>>} allInstructions The serializable instructions\n     */\n    ExecutorGroup.prototype.createExecutors_ = function (allInstructions) {\n        for (var zIndex in allInstructions) {\n            var executors = this.executorsByZIndex_[zIndex];\n            if (executors === undefined) {\n                this.executorsByZIndex_[zIndex] = executors = {};\n            }\n            var instructionByZindex = allInstructions[zIndex];\n            for (var builderType in instructionByZindex) {\n                var instructions = instructionByZindex[builderType];\n                executors[builderType] = new Executor(this.resolution_, this.pixelRatio_, this.overlaps_, instructions);\n            }\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    ExecutorGroup.prototype.disposeInternal = function () {\n        for (var z in this.executorsByZIndex_) {\n            var executors = this.executorsByZIndex_[z];\n            for (var key in executors) {\n                executors[key].disposeInternal();\n            }\n        }\n        var canvas = this.hitDetectionContext_.canvas;\n        canvas.width = canvas.height = 0;\n        _super.prototype.disposeInternal.call(this);\n    };\n    /**\n     * @param {Array<BuilderType>} executors Executors.\n     * @return {boolean} Has executors of the provided types.\n     */\n    ExecutorGroup.prototype.hasExecutors = function (executors) {\n        for (var zIndex in this.executorsByZIndex_) {\n            var candidates = this.executorsByZIndex_[zIndex];\n            for (var i = 0, ii = executors.length; i < ii; ++i) {\n                if (executors[i] in candidates) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    };\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {number} resolution Resolution.\n     * @param {number} rotation Rotation.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @param {Object<string, boolean>} skippedFeaturesHash Ids of features to skip.\n     * @param {function(import(\"../../Feature.js\").FeatureLike): T} callback Feature callback.\n     * @param {Array<import(\"../../Feature.js\").FeatureLike>} declutteredFeatures Decluttered features.\n     * @return {T|undefined} Callback result.\n     * @template T\n     */\n    ExecutorGroup.prototype.forEachFeatureAtCoordinate = function (coordinate, resolution, rotation, hitTolerance, skippedFeaturesHash, callback, declutteredFeatures) {\n        hitTolerance = Math.round(hitTolerance);\n        var contextSize = hitTolerance * 2 + 1;\n        var transform = composeTransform(this.hitDetectionTransform_, hitTolerance + 0.5, hitTolerance + 0.5, 1 / resolution, -1 / resolution, -rotation, -coordinate[0], -coordinate[1]);\n        var context = this.hitDetectionContext_;\n        if (context.canvas.width !== contextSize || context.canvas.height !== contextSize) {\n            context.canvas.width = contextSize;\n            context.canvas.height = contextSize;\n        }\n        else {\n            context.clearRect(0, 0, contextSize, contextSize);\n        }\n        /**\n         * @type {import(\"../../extent.js\").Extent}\n         */\n        var hitExtent;\n        if (this.renderBuffer_ !== undefined) {\n            hitExtent = createEmpty();\n            extendCoordinate(hitExtent, coordinate);\n            buffer(hitExtent, resolution * (this.renderBuffer_ + hitTolerance), hitExtent);\n        }\n        var mask = getCircleArray(hitTolerance);\n        var builderType;\n        /**\n         * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n         * @return {?} Callback result.\n         */\n        function featureCallback(feature) {\n            var imageData = context.getImageData(0, 0, contextSize, contextSize).data;\n            for (var i_1 = 0; i_1 < contextSize; i_1++) {\n                for (var j_1 = 0; j_1 < contextSize; j_1++) {\n                    if (mask[i_1][j_1]) {\n                        if (imageData[(j_1 * contextSize + i_1) * 4 + 3] > 0) {\n                            var result_1 = void 0;\n                            if (!(declutteredFeatures && (builderType == BuilderType.IMAGE || builderType == BuilderType.TEXT)) ||\n                                declutteredFeatures.indexOf(feature) !== -1) {\n                                result_1 = callback(feature);\n                            }\n                            if (result_1) {\n                                return result_1;\n                            }\n                            else {\n                                context.clearRect(0, 0, contextSize, contextSize);\n                                return undefined;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        /** @type {Array<number>} */\n        var zs = Object.keys(this.executorsByZIndex_).map(Number);\n        zs.sort(numberSafeCompareFunction);\n        var i, j, executors, executor, result;\n        for (i = zs.length - 1; i >= 0; --i) {\n            var zIndexKey = zs[i].toString();\n            executors = this.executorsByZIndex_[zIndexKey];\n            for (j = ORDER.length - 1; j >= 0; --j) {\n                builderType = ORDER[j];\n                executor = executors[builderType];\n                if (executor !== undefined) {\n                    result = executor.executeHitDetection(context, transform, rotation, skippedFeaturesHash, featureCallback, hitExtent);\n                    if (result) {\n                        return result;\n                    }\n                }\n            }\n        }\n        return undefined;\n    };\n    /**\n     * @param {import(\"../../transform.js\").Transform} transform Transform.\n     * @return {Array<number>} Clip coordinates.\n     */\n    ExecutorGroup.prototype.getClipCoords = function (transform) {\n        var maxExtent = this.maxExtent_;\n        if (!maxExtent) {\n            return null;\n        }\n        var minX = maxExtent[0];\n        var minY = maxExtent[1];\n        var maxX = maxExtent[2];\n        var maxY = maxExtent[3];\n        var flatClipCoords = [minX, minY, minX, maxY, maxX, maxY, maxX, minY];\n        transform2D(flatClipCoords, 0, 8, 2, transform, flatClipCoords);\n        return flatClipCoords;\n    };\n    /**\n     * @return {boolean} Is empty.\n     */\n    ExecutorGroup.prototype.isEmpty = function () {\n        return isEmpty(this.executorsByZIndex_);\n    };\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../transform.js\").Transform} transform Transform.\n     * @param {number} viewRotation View rotation.\n     * @param {Object<string, boolean>} skippedFeaturesHash Ids of features to skip.\n     * @param {boolean} snapToPixel Snap point symbols and test to integer pixel.\n     * @param {Array<BuilderType>=} opt_builderTypes Ordered replay types to replay.\n     *     Default is {@link module:ol/render/replay~ORDER}\n     * @param {Object<string, import(\"../canvas.js\").DeclutterGroup>=} opt_declutterReplays Declutter replays.\n     */\n    ExecutorGroup.prototype.execute = function (context, transform, viewRotation, skippedFeaturesHash, snapToPixel, opt_builderTypes, opt_declutterReplays) {\n        /** @type {Array<number>} */\n        var zs = Object.keys(this.executorsByZIndex_).map(Number);\n        zs.sort(numberSafeCompareFunction);\n        // setup clipping so that the parts of over-simplified geometries are not\n        // visible outside the current extent when panning\n        if (this.maxExtent_) {\n            context.save();\n            this.clip(context, transform);\n        }\n        var builderTypes = opt_builderTypes ? opt_builderTypes : ORDER;\n        var i, ii, j, jj, replays, replay;\n        for (i = 0, ii = zs.length; i < ii; ++i) {\n            var zIndexKey = zs[i].toString();\n            replays = this.executorsByZIndex_[zIndexKey];\n            for (j = 0, jj = builderTypes.length; j < jj; ++j) {\n                var builderType = builderTypes[j];\n                replay = replays[builderType];\n                if (replay !== undefined) {\n                    if (opt_declutterReplays &&\n                        (builderType == BuilderType.IMAGE || builderType == BuilderType.TEXT)) {\n                        var declutter = opt_declutterReplays[zIndexKey];\n                        if (!declutter) {\n                            opt_declutterReplays[zIndexKey] = [replay, transform.slice(0)];\n                        }\n                        else {\n                            declutter.push(replay, transform.slice(0));\n                        }\n                    }\n                    else {\n                        replay.execute(context, transform, viewRotation, skippedFeaturesHash, snapToPixel);\n                    }\n                }\n            }\n        }\n        if (this.maxExtent_) {\n            context.restore();\n        }\n    };\n    return ExecutorGroup;\n}(Disposable));\n/**\n * This cache is used for storing calculated pixel circles for increasing performance.\n * It is a static property to allow each Replaygroup to access it.\n * @type {Object<number, Array<Array<(boolean|undefined)>>>}\n */\nvar circleArrayCache = {\n    0: [[true]]\n};\n/**\n * This method fills a row in the array from the given coordinate to the\n * middle with `true`.\n * @param {Array<Array<(boolean|undefined)>>} array The array that will be altered.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n */\nfunction fillCircleArrayRowToMiddle(array, x, y) {\n    var i;\n    var radius = Math.floor(array.length / 2);\n    if (x >= radius) {\n        for (i = radius; i < x; i++) {\n            array[i][y] = true;\n        }\n    }\n    else if (x < radius) {\n        for (i = x + 1; i < radius; i++) {\n            array[i][y] = true;\n        }\n    }\n}\n/**\n * This methods creates a circle inside a fitting array. Points inside the\n * circle are marked by true, points on the outside are undefined.\n * It uses the midpoint circle algorithm.\n * A cache is used to increase performance.\n * @param {number} radius Radius.\n * @returns {Array<Array<(boolean|undefined)>>} An array with marked circle points.\n */\nexport function getCircleArray(radius) {\n    if (circleArrayCache[radius] !== undefined) {\n        return circleArrayCache[radius];\n    }\n    var arraySize = radius * 2 + 1;\n    var arr = new Array(arraySize);\n    for (var i = 0; i < arraySize; i++) {\n        arr[i] = new Array(arraySize);\n    }\n    var x = radius;\n    var y = 0;\n    var error = 0;\n    while (x >= y) {\n        fillCircleArrayRowToMiddle(arr, radius + x, radius + y);\n        fillCircleArrayRowToMiddle(arr, radius + y, radius + x);\n        fillCircleArrayRowToMiddle(arr, radius - y, radius + x);\n        fillCircleArrayRowToMiddle(arr, radius - x, radius + y);\n        fillCircleArrayRowToMiddle(arr, radius - x, radius - y);\n        fillCircleArrayRowToMiddle(arr, radius - y, radius - x);\n        fillCircleArrayRowToMiddle(arr, radius + y, radius - x);\n        fillCircleArrayRowToMiddle(arr, radius + x, radius - y);\n        y++;\n        error += 1 + 2 * y;\n        if (2 * (error - x) + 1 > 0) {\n            x -= 1;\n            error += 1 - 2 * x;\n        }\n    }\n    circleArrayCache[radius] = arr;\n    return arr;\n}\n/**\n * @param {!Object<string, Array<*>>} declutterReplays Declutter replays.\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n * @param {Array<Array<*>>} declutterItems Declutter items.\n */\nexport function replayDeclutter(declutterReplays, context, rotation, snapToPixel, declutterItems) {\n    var zs = Object.keys(declutterReplays).map(Number).sort(numberSafeCompareFunction);\n    var skippedFeatureUids = {};\n    for (var z = 0, zz = zs.length; z < zz; ++z) {\n        var executorData = declutterReplays[zs[z].toString()];\n        var currentExecutor = void 0;\n        for (var i = 0, ii = executorData.length; i < ii;) {\n            var executor = executorData[i++];\n            if (executor !== currentExecutor) {\n                currentExecutor = executor;\n                declutterItems.push(executor.declutterItems);\n            }\n            var transform = executorData[i++];\n            executor.execute(context, transform, rotation, skippedFeatureUids, snapToPixel);\n        }\n    }\n}\nexport default ExecutorGroup;\n//# sourceMappingURL=ExecutorGroup.js.map","/**\n * @module ol/renderer/vector\n */\nimport { getUid } from '../util.js';\nimport ImageState from '../ImageState.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport BuilderType from '../render/canvas/BuilderType.js';\n/**\n * Tolerance for geometry simplification in device pixels.\n * @type {number}\n */\nvar SIMPLIFY_TOLERANCE = 0.5;\n/**\n * @const\n * @type {Object<import(\"../geom/GeometryType.js\").default,\n *                function(import(\"../render/canvas/BuilderGroup.js\").default, import(\"../geom/Geometry.js\").default,\n *                         import(\"../style/Style.js\").default, Object): void>}\n */\nvar GEOMETRY_RENDERERS = {\n    'Point': renderPointGeometry,\n    'LineString': renderLineStringGeometry,\n    'Polygon': renderPolygonGeometry,\n    'MultiPoint': renderMultiPointGeometry,\n    'MultiLineString': renderMultiLineStringGeometry,\n    'MultiPolygon': renderMultiPolygonGeometry,\n    'GeometryCollection': renderGeometryCollectionGeometry,\n    'Circle': renderCircleGeometry\n};\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature1 Feature 1.\n * @param {import(\"../Feature.js\").FeatureLike} feature2 Feature 2.\n * @return {number} Order.\n */\nexport function defaultOrder(feature1, feature2) {\n    return parseInt(getUid(feature1), 10) - parseInt(getUid(feature2), 10);\n}\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Squared pixel tolerance.\n */\nexport function getSquaredTolerance(resolution, pixelRatio) {\n    var tolerance = getTolerance(resolution, pixelRatio);\n    return tolerance * tolerance;\n}\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Pixel tolerance.\n */\nexport function getTolerance(resolution, pixelRatio) {\n    return SIMPLIFY_TOLERANCE * resolution / pixelRatio;\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n */\nfunction renderCircleGeometry(builderGroup, geometry, style, feature) {\n    var fillStyle = style.getFill();\n    var strokeStyle = style.getStroke();\n    if (fillStyle || strokeStyle) {\n        var circleReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.CIRCLE);\n        circleReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n        circleReplay.drawCircle(geometry, feature);\n    }\n    var textStyle = style.getText();\n    if (textStyle) {\n        var textReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.TEXT);\n        textReplay.setTextStyle(textStyle, builderGroup.addDeclutter(false));\n        textReplay.drawText(geometry, feature);\n    }\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {function(this: T, import(\"../events/Event.js\").default): void} listener Listener function.\n * @param {T} thisArg Value to use as `this` when executing `listener`.\n * @return {boolean} `true` if style is loading.\n * @template T\n */\nexport function renderFeature(replayGroup, feature, style, squaredTolerance, listener, thisArg) {\n    var loading = false;\n    var imageStyle = style.getImage();\n    if (imageStyle) {\n        var imageState = imageStyle.getImageState();\n        if (imageState == ImageState.LOADED || imageState == ImageState.ERROR) {\n            imageStyle.unlistenImageChange(listener, thisArg);\n        }\n        else {\n            if (imageState == ImageState.IDLE) {\n                imageStyle.load();\n            }\n            imageState = imageStyle.getImageState();\n            imageStyle.listenImageChange(listener, thisArg);\n            loading = true;\n        }\n    }\n    renderFeatureInternal(replayGroup, feature, style, squaredTolerance);\n    return loading;\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n */\nfunction renderFeatureInternal(replayGroup, feature, style, squaredTolerance) {\n    var geometry = style.getGeometryFunction()(feature);\n    if (!geometry) {\n        return;\n    }\n    var simplifiedGeometry = geometry.getSimplifiedGeometry(squaredTolerance);\n    var renderer = style.getRenderer();\n    if (renderer) {\n        renderGeometry(replayGroup, simplifiedGeometry, style, feature);\n    }\n    else {\n        var geometryRenderer = GEOMETRY_RENDERERS[simplifiedGeometry.getType()];\n        geometryRenderer(replayGroup, simplifiedGeometry, style, feature);\n    }\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderGeometry(replayGroup, geometry, style, feature) {\n    if (geometry.getType() == GeometryType.GEOMETRY_COLLECTION) {\n        var geometries = /** @type {import(\"../geom/GeometryCollection.js\").default} */ (geometry).getGeometries();\n        for (var i = 0, ii = geometries.length; i < ii; ++i) {\n            renderGeometry(replayGroup, geometries[i], style, feature);\n        }\n        return;\n    }\n    var replay = replayGroup.getBuilder(style.getZIndex(), BuilderType.DEFAULT);\n    replay.drawCustom(/** @type {import(\"../geom/SimpleGeometry.js\").default} */ (geometry), feature, style.getRenderer());\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n */\nfunction renderGeometryCollectionGeometry(replayGroup, geometry, style, feature) {\n    var geometries = geometry.getGeometriesArray();\n    var i, ii;\n    for (i = 0, ii = geometries.length; i < ii; ++i) {\n        var geometryRenderer = GEOMETRY_RENDERERS[geometries[i].getType()];\n        geometryRenderer(replayGroup, geometries[i], style, feature);\n    }\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/LineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderLineStringGeometry(builderGroup, geometry, style, feature) {\n    var strokeStyle = style.getStroke();\n    if (strokeStyle) {\n        var lineStringReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.LINE_STRING);\n        lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n        lineStringReplay.drawLineString(geometry, feature);\n    }\n    var textStyle = style.getText();\n    if (textStyle) {\n        var textReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.TEXT);\n        textReplay.setTextStyle(textStyle, builderGroup.addDeclutter(false));\n        textReplay.drawText(geometry, feature);\n    }\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiLineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderMultiLineStringGeometry(builderGroup, geometry, style, feature) {\n    var strokeStyle = style.getStroke();\n    if (strokeStyle) {\n        var lineStringReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.LINE_STRING);\n        lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n        lineStringReplay.drawMultiLineString(geometry, feature);\n    }\n    var textStyle = style.getText();\n    if (textStyle) {\n        var textReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.TEXT);\n        textReplay.setTextStyle(textStyle, builderGroup.addDeclutter(false));\n        textReplay.drawText(geometry, feature);\n    }\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n */\nfunction renderMultiPolygonGeometry(builderGroup, geometry, style, feature) {\n    var fillStyle = style.getFill();\n    var strokeStyle = style.getStroke();\n    if (strokeStyle || fillStyle) {\n        var polygonReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.POLYGON);\n        polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n        polygonReplay.drawMultiPolygon(geometry, feature);\n    }\n    var textStyle = style.getText();\n    if (textStyle) {\n        var textReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.TEXT);\n        textReplay.setTextStyle(textStyle, builderGroup.addDeclutter(false));\n        textReplay.drawText(geometry, feature);\n    }\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Point.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderPointGeometry(builderGroup, geometry, style, feature) {\n    var imageStyle = style.getImage();\n    if (imageStyle) {\n        if (imageStyle.getImageState() != ImageState.LOADED) {\n            return;\n        }\n        var imageReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.IMAGE);\n        imageReplay.setImageStyle(imageStyle, builderGroup.addDeclutter(false));\n        imageReplay.drawPoint(geometry, feature);\n    }\n    var textStyle = style.getText();\n    if (textStyle) {\n        var textReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.TEXT);\n        textReplay.setTextStyle(textStyle, builderGroup.addDeclutter(!!imageStyle));\n        textReplay.drawText(geometry, feature);\n    }\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPoint.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderMultiPointGeometry(builderGroup, geometry, style, feature) {\n    var imageStyle = style.getImage();\n    if (imageStyle) {\n        if (imageStyle.getImageState() != ImageState.LOADED) {\n            return;\n        }\n        var imageReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.IMAGE);\n        imageReplay.setImageStyle(imageStyle, builderGroup.addDeclutter(false));\n        imageReplay.drawMultiPoint(geometry, feature);\n    }\n    var textStyle = style.getText();\n    if (textStyle) {\n        var textReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.TEXT);\n        textReplay.setTextStyle(textStyle, builderGroup.addDeclutter(!!imageStyle));\n        textReplay.drawText(geometry, feature);\n    }\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Polygon.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderPolygonGeometry(builderGroup, geometry, style, feature) {\n    var fillStyle = style.getFill();\n    var strokeStyle = style.getStroke();\n    if (fillStyle || strokeStyle) {\n        var polygonReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.POLYGON);\n        polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n        polygonReplay.drawPolygon(geometry, feature);\n    }\n    var textStyle = style.getText();\n    if (textStyle) {\n        var textReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.TEXT);\n        textReplay.setTextStyle(textStyle, builderGroup.addDeclutter(false));\n        textReplay.drawText(geometry, feature);\n    }\n}\n//# sourceMappingURL=vector.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/renderer/canvas/VectorLayer\n */\nimport { getUid } from '../../util.js';\nimport ViewHint from '../../ViewHint.js';\nimport { listen, unlisten } from '../../events.js';\nimport EventType from '../../events/EventType.js';\nimport { buffer, createEmpty, containsExtent, getWidth } from '../../extent.js';\nimport { labelCache } from '../../render/canvas.js';\nimport CanvasBuilderGroup from '../../render/canvas/BuilderGroup.js';\nimport ExecutorGroup, { replayDeclutter } from '../../render/canvas/ExecutorGroup.js';\nimport CanvasLayerRenderer from './Layer.js';\nimport { defaultOrder as defaultRenderOrder, getTolerance as getRenderTolerance, getSquaredTolerance as getSquaredRenderTolerance, renderFeature } from '../vector.js';\nimport { toString as transformToString, makeScale, makeInverse } from '../../transform.js';\n/**\n * @classdesc\n * Canvas renderer for vector layers.\n * @api\n */\nvar CanvasVectorLayerRenderer = /** @class */ (function (_super) {\n    __extends(CanvasVectorLayerRenderer, _super);\n    /**\n     * @param {import(\"../../layer/Vector.js\").default} vectorLayer Vector layer.\n     */\n    function CanvasVectorLayerRenderer(vectorLayer) {\n        var _this = _super.call(this, vectorLayer) || this;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.dirty_ = false;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.renderedRevision_ = -1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.renderedResolution_ = NaN;\n        /**\n         * @private\n         * @type {import(\"../../extent.js\").Extent}\n         */\n        _this.renderedExtent_ = createEmpty();\n        /**\n         * @private\n         * @type {function(import(\"../../Feature.js\").default, import(\"../../Feature.js\").default): number|null}\n         */\n        _this.renderedRenderOrder_ = null;\n        /**\n         * @private\n         * @type {import(\"../../render/canvas/ExecutorGroup\").default}\n         */\n        _this.replayGroup_ = null;\n        /**\n         * A new replay group had to be created by `prepareFrame()`\n         * @type {boolean}\n         */\n        _this.replayGroupChanged = true;\n        listen(labelCache, EventType.CLEAR, _this.handleFontsChanged_, _this);\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    CanvasVectorLayerRenderer.prototype.disposeInternal = function () {\n        unlisten(labelCache, EventType.CLEAR, this.handleFontsChanged_, this);\n        _super.prototype.disposeInternal.call(this);\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasVectorLayerRenderer.prototype.renderFrame = function (frameState, layerState) {\n        var context = this.context;\n        var canvas = context.canvas;\n        var replayGroup = this.replayGroup_;\n        if (!replayGroup || replayGroup.isEmpty()) {\n            if (canvas.width > 0) {\n                canvas.width = 0;\n            }\n            return canvas;\n        }\n        var pixelRatio = frameState.pixelRatio;\n        // set forward and inverse pixel transforms\n        makeScale(this.pixelTransform_, 1 / pixelRatio, 1 / pixelRatio);\n        makeInverse(this.inversePixelTransform_, this.pixelTransform_);\n        // resize and clear\n        var width = Math.round(frameState.size[0] * pixelRatio);\n        var height = Math.round(frameState.size[1] * pixelRatio);\n        if (canvas.width != width || canvas.height != height) {\n            canvas.width = width;\n            canvas.height = height;\n            var canvasTransform = transformToString(this.pixelTransform_);\n            if (canvas.style.transform !== canvasTransform) {\n                canvas.style.transform = canvasTransform;\n            }\n        }\n        else {\n            context.clearRect(0, 0, width, height);\n        }\n        this.preRender(context, frameState);\n        var extent = frameState.extent;\n        var viewState = frameState.viewState;\n        var projection = viewState.projection;\n        var rotation = viewState.rotation;\n        var projectionExtent = projection.getExtent();\n        var vectorSource = this.getLayer().getSource();\n        // clipped rendering if layer extent is set\n        var clipExtent = layerState.extent;\n        var clipped = clipExtent !== undefined;\n        if (clipped) {\n            this.clip(context, frameState, clipExtent);\n        }\n        var viewHints = frameState.viewHints;\n        var snapToPixel = !(viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]);\n        var transform = this.getRenderTransform(frameState, width, height, 0);\n        var skippedFeatureUids = layerState.managed ? frameState.skippedFeatureUids : {};\n        var declutterReplays = /** @type {import(\"../../layer/Vector.js\").default} */ (this.getLayer()).getDeclutter() ? {} : null;\n        replayGroup.execute(context, transform, rotation, skippedFeatureUids, snapToPixel, undefined, declutterReplays);\n        if (vectorSource.getWrapX() && projection.canWrapX() && !containsExtent(projectionExtent, extent)) {\n            var startX = extent[0];\n            var worldWidth = getWidth(projectionExtent);\n            var world = 0;\n            var offsetX = void 0;\n            while (startX < projectionExtent[0]) {\n                --world;\n                offsetX = worldWidth * world;\n                var transform_1 = this.getRenderTransform(frameState, width, height, offsetX);\n                replayGroup.execute(context, transform_1, rotation, skippedFeatureUids, snapToPixel, undefined, declutterReplays);\n                startX += worldWidth;\n            }\n            world = 0;\n            startX = extent[2];\n            while (startX > projectionExtent[2]) {\n                ++world;\n                offsetX = worldWidth * world;\n                var transform_2 = this.getRenderTransform(frameState, width, height, offsetX);\n                replayGroup.execute(context, transform_2, rotation, skippedFeatureUids, snapToPixel, undefined, declutterReplays);\n                startX -= worldWidth;\n            }\n        }\n        if (declutterReplays) {\n            var viewHints_1 = frameState.viewHints;\n            var hifi = !(viewHints_1[ViewHint.ANIMATING] || viewHints_1[ViewHint.INTERACTING]);\n            replayDeclutter(declutterReplays, context, rotation, hifi, frameState.declutterItems);\n        }\n        if (clipped) {\n            context.restore();\n        }\n        this.postRender(context, frameState);\n        var opacity = layerState.opacity;\n        if (opacity !== parseFloat(canvas.style.opacity)) {\n            canvas.style.opacity = opacity;\n        }\n        return canvas;\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasVectorLayerRenderer.prototype.forEachFeatureAtCoordinate = function (coordinate, frameState, hitTolerance, callback, declutteredFeatures) {\n        if (!this.replayGroup_) {\n            return undefined;\n        }\n        else {\n            var resolution = frameState.viewState.resolution;\n            var rotation = frameState.viewState.rotation;\n            var layer_1 = this.getLayer();\n            /** @type {!Object<string, boolean>} */\n            var features_1 = {};\n            var result = this.replayGroup_.forEachFeatureAtCoordinate(coordinate, resolution, rotation, hitTolerance, {}, \n            /**\n             * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n             * @return {?} Callback result.\n             */\n            function (feature) {\n                var key = getUid(feature);\n                if (!(key in features_1)) {\n                    features_1[key] = true;\n                    return callback(feature, layer_1);\n                }\n            }, declutteredFeatures);\n            return result;\n        }\n    };\n    /**\n     * @param {import(\"../../events/Event.js\").default} event Event.\n     */\n    CanvasVectorLayerRenderer.prototype.handleFontsChanged_ = function (event) {\n        var layer = this.getLayer();\n        if (layer.getVisible() && this.replayGroup_) {\n            layer.changed();\n        }\n    };\n    /**\n     * Handle changes in image style state.\n     * @param {import(\"../../events/Event.js\").default} event Image style change event.\n     * @private\n     */\n    CanvasVectorLayerRenderer.prototype.handleStyleImageChange_ = function (event) {\n        this.renderIfReadyAndVisible();\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasVectorLayerRenderer.prototype.prepareFrame = function (frameState, layerState) {\n        var vectorLayer = /** @type {import(\"../../layer/Vector.js\").default} */ (this.getLayer());\n        var vectorSource = vectorLayer.getSource();\n        var animating = frameState.viewHints[ViewHint.ANIMATING];\n        var interacting = frameState.viewHints[ViewHint.INTERACTING];\n        var updateWhileAnimating = vectorLayer.getUpdateWhileAnimating();\n        var updateWhileInteracting = vectorLayer.getUpdateWhileInteracting();\n        if (!this.dirty_ && (!updateWhileAnimating && animating) ||\n            (!updateWhileInteracting && interacting)) {\n            return true;\n        }\n        var frameStateExtent = frameState.extent;\n        var viewState = frameState.viewState;\n        var projection = viewState.projection;\n        var resolution = viewState.resolution;\n        var pixelRatio = frameState.pixelRatio;\n        var vectorLayerRevision = vectorLayer.getRevision();\n        var vectorLayerRenderBuffer = vectorLayer.getRenderBuffer();\n        var vectorLayerRenderOrder = vectorLayer.getRenderOrder();\n        if (vectorLayerRenderOrder === undefined) {\n            vectorLayerRenderOrder = defaultRenderOrder;\n        }\n        var extent = buffer(frameStateExtent, vectorLayerRenderBuffer * resolution);\n        var projectionExtent = viewState.projection.getExtent();\n        if (vectorSource.getWrapX() && viewState.projection.canWrapX() &&\n            !containsExtent(projectionExtent, frameState.extent)) {\n            // For the replay group, we need an extent that intersects the real world\n            // (-180° to +180°). To support geometries in a coordinate range from -540°\n            // to +540°, we add at least 1 world width on each side of the projection\n            // extent. If the viewport is wider than the world, we need to add half of\n            // the viewport width to make sure we cover the whole viewport.\n            var worldWidth = getWidth(projectionExtent);\n            var gutter = Math.max(getWidth(extent) / 2, worldWidth);\n            extent[0] = projectionExtent[0] - gutter;\n            extent[2] = projectionExtent[2] + gutter;\n        }\n        if (!this.dirty_ &&\n            this.renderedResolution_ == resolution &&\n            this.renderedRevision_ == vectorLayerRevision &&\n            this.renderedRenderOrder_ == vectorLayerRenderOrder &&\n            containsExtent(this.renderedExtent_, extent)) {\n            this.replayGroupChanged = false;\n            return true;\n        }\n        if (this.replayGroup_) {\n            this.replayGroup_.dispose();\n        }\n        this.replayGroup_ = null;\n        this.dirty_ = false;\n        var replayGroup = new CanvasBuilderGroup(getRenderTolerance(resolution, pixelRatio), extent, resolution, pixelRatio, vectorLayer.getDeclutter());\n        vectorSource.loadFeatures(extent, resolution, projection);\n        /**\n         * @param {import(\"../../Feature.js\").default} feature Feature.\n         * @this {CanvasVectorLayerRenderer}\n         */\n        var render = function (feature) {\n            var styles;\n            var styleFunction = feature.getStyleFunction() || vectorLayer.getStyleFunction();\n            if (styleFunction) {\n                styles = styleFunction(feature, resolution);\n            }\n            if (styles) {\n                var dirty = this.renderFeature(feature, resolution, pixelRatio, styles, replayGroup);\n                this.dirty_ = this.dirty_ || dirty;\n            }\n        }.bind(this);\n        if (vectorLayerRenderOrder) {\n            /** @type {Array<import(\"../../Feature.js\").default>} */\n            var features_2 = [];\n            vectorSource.forEachFeatureInExtent(extent, \n            /**\n             * @param {import(\"../../Feature.js\").default} feature Feature.\n             */\n            function (feature) {\n                features_2.push(feature);\n            });\n            features_2.sort(vectorLayerRenderOrder);\n            for (var i = 0, ii = features_2.length; i < ii; ++i) {\n                render(features_2[i]);\n            }\n        }\n        else {\n            vectorSource.forEachFeatureInExtent(extent, render);\n        }\n        var replayGroupInstructions = replayGroup.finish();\n        var executorGroup = new ExecutorGroup(extent, resolution, pixelRatio, vectorSource.getOverlaps(), replayGroupInstructions, vectorLayer.getRenderBuffer());\n        this.renderedResolution_ = resolution;\n        this.renderedRevision_ = vectorLayerRevision;\n        this.renderedRenderOrder_ = vectorLayerRenderOrder;\n        this.renderedExtent_ = extent;\n        this.replayGroup_ = executorGroup;\n        this.replayGroupChanged = true;\n        return true;\n    };\n    /**\n     * @param {import(\"../../Feature.js\").default} feature Feature.\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../../style/Style.js\").default|Array<import(\"../../style/Style.js\").default>} styles The style or array of styles.\n     * @param {import(\"../../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n     * @return {boolean} `true` if an image is loading.\n     */\n    CanvasVectorLayerRenderer.prototype.renderFeature = function (feature, resolution, pixelRatio, styles, builderGroup) {\n        if (!styles) {\n            return false;\n        }\n        var loading = false;\n        if (Array.isArray(styles)) {\n            for (var i = 0, ii = styles.length; i < ii; ++i) {\n                loading = renderFeature(builderGroup, feature, styles[i], getSquaredRenderTolerance(resolution, pixelRatio), this.handleStyleImageChange_, this) || loading;\n            }\n        }\n        else {\n            loading = renderFeature(builderGroup, feature, styles, getSquaredRenderTolerance(resolution, pixelRatio), this.handleStyleImageChange_, this);\n        }\n        return loading;\n    };\n    return CanvasVectorLayerRenderer;\n}(CanvasLayerRenderer));\nexport default CanvasVectorLayerRenderer;\n//# sourceMappingURL=VectorLayer.js.map","/**\n * @module ol/layer/VectorTileRenderType\n */\n/**\n * @enum {string}\n * Render mode for vector tiles:\n *  * `'image'`: Vector tiles are rendered as images. Great performance, but\n *    point symbols and texts are always rotated with the view and pixels are\n *    scaled during zoom animations.\n *  * `'hybrid'`: Polygon and line elements are rendered as images, so pixels\n *    are scaled during zoom animations. Point symbols and texts are accurately\n *    rendered as vectors and can stay upright on rotated views.\n * @api\n */\nexport default {\n    IMAGE: 'image',\n    HYBRID: 'hybrid'\n};\n//# sourceMappingURL=VectorTileRenderType.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/renderer/canvas/VectorTileLayer\n */\nimport { getUid } from '../../util.js';\nimport { createCanvasContext2D } from '../../dom.js';\nimport TileState from '../../TileState.js';\nimport ViewHint from '../../ViewHint.js';\nimport { listen, unlisten, unlistenByKey } from '../../events.js';\nimport EventType from '../../events/EventType.js';\nimport { buffer, containsCoordinate, equals, getIntersection, getTopLeft, intersects } from '../../extent.js';\nimport VectorTileRenderType from '../../layer/VectorTileRenderType.js';\nimport ReplayType from '../../render/canvas/BuilderType.js';\nimport { labelCache } from '../../render/canvas.js';\nimport CanvasBuilderGroup from '../../render/canvas/BuilderGroup.js';\nimport CanvasTileLayerRenderer from './TileLayer.js';\nimport { getSquaredTolerance as getSquaredRenderTolerance, renderFeature } from '../vector.js';\nimport { apply as applyTransform, create as createTransform, compose as composeTransform, reset as resetTransform, scale as scaleTransform, translate as translateTransform, toString as transformToString, makeScale, makeInverse } from '../../transform.js';\nimport CanvasExecutorGroup, { replayDeclutter } from '../../render/canvas/ExecutorGroup.js';\nimport { clear, isEmpty } from '../../obj.js';\n/**\n * @type {!Object<string, Array<import(\"../../render/canvas/BuilderType.js\").default>>}\n */\nvar IMAGE_REPLAYS = {\n    'image': [ReplayType.POLYGON, ReplayType.CIRCLE,\n        ReplayType.LINE_STRING, ReplayType.IMAGE, ReplayType.TEXT],\n    'hybrid': [ReplayType.POLYGON, ReplayType.LINE_STRING]\n};\n/**\n * @type {!Object<string, Array<import(\"../../render/canvas/BuilderType.js\").default>>}\n */\nvar VECTOR_REPLAYS = {\n    'image': [ReplayType.DEFAULT],\n    'hybrid': [ReplayType.IMAGE, ReplayType.TEXT, ReplayType.DEFAULT]\n};\n/**\n * @classdesc\n * Canvas renderer for vector tile layers.\n * @api\n */\nvar CanvasVectorTileLayerRenderer = /** @class */ (function (_super) {\n    __extends(CanvasVectorTileLayerRenderer, _super);\n    /**\n     * @param {import(\"../../layer/VectorTile.js\").default} layer VectorTile layer.\n     */\n    function CanvasVectorTileLayerRenderer(layer) {\n        var _this = _super.call(this, layer) || this;\n        var baseCanvas = _this.context.canvas;\n        /**\n         * @private\n         * @type {CanvasRenderingContext2D}\n         */\n        _this.overlayContext_ = createCanvasContext2D();\n        var overlayCanvas = _this.overlayContext_.canvas;\n        overlayCanvas.style.position = 'absolute';\n        overlayCanvas.style.transformOrigin = 'top left';\n        var container = document.createElement('div');\n        var style = container.style;\n        style.position = 'absolute';\n        style.width = '100%';\n        style.height = '100%';\n        container.appendChild(baseCanvas);\n        container.appendChild(overlayCanvas);\n        /**\n         * @private\n         * @type {HTMLElement}\n         */\n        _this.container_ = container;\n        /**\n         * The transform for rendered pixels to viewport CSS pixels for the overlay canvas.\n         * @private\n         * @type {import(\"../../transform.js\").Transform}\n         */\n        _this.overlayPixelTransform_ = createTransform();\n        /**\n         * The transform for viewport CSS pixels to rendered pixels for the overlay canvas.\n         * @private\n         * @type {import(\"../../transform.js\").Transform}\n         */\n        _this.inverseOverlayPixelTransform_ = createTransform();\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.dirty_ = false;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.renderedLayerRevision_;\n        /**\n         * @private\n         * @type {!Object<string, import(\"../../VectorRenderTile.js\").default>}\n         */\n        _this.renderTileImageQueue_ = {};\n        /**\n         * @type {Object<string, import(\"../../events.js\").EventsKey>}\n         */\n        _this.tileListenerKeys_ = {};\n        /**\n         * @private\n         * @type {import(\"../../transform.js\").Transform}\n         */\n        _this.tmpTransform_ = createTransform();\n        // Use nearest lower resolution.\n        _this.zDirection = 1;\n        listen(labelCache, EventType.CLEAR, _this.handleFontsChanged_, _this);\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    CanvasVectorTileLayerRenderer.prototype.disposeInternal = function () {\n        unlisten(labelCache, EventType.CLEAR, this.handleFontsChanged_, this);\n        this.overlayContext_.canvas.width = this.overlayContext_.canvas.height = 0;\n        _super.prototype.disposeInternal.call(this);\n    };\n    /**\n     * @param {import(\"../../VectorRenderTile.js\").default} tile Tile.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../../proj/Projection\").default} projection Projection.\n     */\n    CanvasVectorTileLayerRenderer.prototype.prepareTile = function (tile, pixelRatio, projection) {\n        var tileUid = getUid(tile);\n        var state = tile.getState();\n        if (((state === TileState.LOADED && tile.hifi) ||\n            state === TileState.ERROR || state === TileState.ABORT) &&\n            tileUid in this.tileListenerKeys_) {\n            unlistenByKey(this.tileListenerKeys_[tileUid]);\n            delete this.tileListenerKeys_[tileUid];\n        }\n        if (state === TileState.LOADED || state === TileState.ERROR) {\n            this.updateExecutorGroup_(tile, pixelRatio, projection);\n            if (this.tileImageNeedsRender_(tile, pixelRatio, projection)) {\n                this.renderTileImageQueue_[tileUid] = tile;\n            }\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasVectorTileLayerRenderer.prototype.getTile = function (z, x, y, frameState) {\n        var tile = /** @type {import(\"../../VectorRenderTile.js\").default} */ (_super.prototype.getTile.call(this, z, x, y, frameState));\n        var pixelRatio = frameState.pixelRatio;\n        var viewState = frameState.viewState;\n        var resolution = viewState.resolution;\n        var projection = viewState.projection;\n        if (tile.getState() < TileState.LOADED) {\n            tile.wantedResolution = resolution;\n            var tileUid = getUid(tile);\n            if (!(tileUid in this.tileListenerKeys_)) {\n                var listenerKey = listen(tile, EventType.CHANGE, this.prepareTile.bind(this, tile, pixelRatio, projection));\n                this.tileListenerKeys_[tileUid] = listenerKey;\n            }\n        }\n        else {\n            var viewHints = frameState.viewHints;\n            var hifi = !(viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]);\n            if (hifi || !tile.wantedResolution) {\n                tile.wantedResolution = resolution;\n            }\n            this.prepareTile(tile, pixelRatio, projection);\n        }\n        return tile;\n    };\n    /**\n     * @inheritdoc\n     */\n    CanvasVectorTileLayerRenderer.prototype.isDrawableTile = function (tile) {\n        return _super.prototype.isDrawableTile.call(this, tile) && tile.hasContext(this.getLayer());\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasVectorTileLayerRenderer.prototype.getTileImage = function (tile) {\n        return tile.getImage(this.getLayer());\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasVectorTileLayerRenderer.prototype.prepareFrame = function (frameState, layerState) {\n        var layerRevision = this.getLayer().getRevision();\n        if (this.renderedLayerRevision_ != layerRevision) {\n            this.renderedTiles.length = 0;\n        }\n        this.renderedLayerRevision_ = layerRevision;\n        return _super.prototype.prepareFrame.call(this, frameState, layerState);\n    };\n    /**\n     * @param {import(\"../../VectorRenderTile.js\").default} tile Tile.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n     * @private\n     */\n    CanvasVectorTileLayerRenderer.prototype.updateExecutorGroup_ = function (tile, pixelRatio, projection) {\n        var layer = /** @type {import(\"../../layer/VectorTile.js\").default} */ (this.getLayer());\n        var revision = layer.getRevision();\n        var renderOrder = layer.getRenderOrder() || null;\n        var resolution = tile.wantedResolution;\n        var builderState = tile.getReplayState(layer);\n        if (!builderState.dirty && builderState.renderedResolution === resolution &&\n            builderState.renderedRevision == revision &&\n            builderState.renderedRenderOrder == renderOrder && builderState.renderedZ === tile.sourceZ) {\n            return;\n        }\n        var source = layer.getSource();\n        var sourceTileGrid = source.getTileGrid();\n        var tileGrid = source.getTileGridForProjection(projection);\n        var tileExtent = tileGrid.getTileCoordExtent(tile.wrappedTileCoord);\n        var sourceTiles = source.getSourceTiles(pixelRatio, projection, tile);\n        var layerUid = getUid(layer);\n        var executorGroups = tile.executorGroups[layerUid];\n        if (executorGroups) {\n            for (var i = 0, ii = executorGroups.length; i < ii; ++i) {\n                executorGroups[i].dispose();\n            }\n        }\n        tile.executorGroups[layerUid] = [];\n        var _loop_1 = function (t, tt) {\n            var sourceTile = sourceTiles[t];\n            if (sourceTile.getState() != TileState.LOADED) {\n                return \"continue\";\n            }\n            var sourceTileCoord = sourceTile.tileCoord;\n            var sourceTileExtent = sourceTileGrid.getTileCoordExtent(sourceTileCoord);\n            var sharedExtent = getIntersection(tileExtent, sourceTileExtent);\n            var bufferedExtent = equals(sourceTileExtent, sharedExtent) ? null :\n                buffer(sharedExtent, layer.getRenderBuffer() * resolution, this_1.tmpExtent);\n            builderState.dirty = false;\n            var builderGroup = new CanvasBuilderGroup(0, sharedExtent, resolution, pixelRatio, layer.getDeclutter());\n            var squaredTolerance = getSquaredRenderTolerance(resolution, pixelRatio);\n            /**\n             * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n             * @this {CanvasVectorTileLayerRenderer}\n             */\n            var render = function (feature) {\n                var styles;\n                var styleFunction = feature.getStyleFunction() || layer.getStyleFunction();\n                if (styleFunction) {\n                    styles = styleFunction(feature, resolution);\n                }\n                if (styles) {\n                    var dirty = this.renderFeature(feature, squaredTolerance, styles, builderGroup);\n                    this.dirty_ = this.dirty_ || dirty;\n                    builderState.dirty = builderState.dirty || dirty;\n                }\n            };\n            var features = sourceTile.getFeatures();\n            if (renderOrder && renderOrder !== builderState.renderedRenderOrder) {\n                features.sort(renderOrder);\n            }\n            for (var i = 0, ii = features.length; i < ii; ++i) {\n                var feature = features[i];\n                if (!bufferedExtent || intersects(bufferedExtent, feature.getGeometry().getExtent())) {\n                    render.call(this_1, feature);\n                }\n            }\n            var executorGroupInstructions = builderGroup.finish();\n            // no need to clip when the render tile is covered by a single source tile\n            var replayExtent = layer.getDeclutter() && sourceTiles.length === 1 ?\n                null :\n                sharedExtent;\n            var renderingReplayGroup = new CanvasExecutorGroup(replayExtent, resolution, pixelRatio, source.getOverlaps(), executorGroupInstructions, layer.getRenderBuffer());\n            tile.executorGroups[layerUid].push(renderingReplayGroup);\n        };\n        var this_1 = this;\n        for (var t = 0, tt = sourceTiles.length; t < tt; ++t) {\n            _loop_1(t, tt);\n        }\n        builderState.renderedRevision = revision;\n        builderState.renderedZ = tile.sourceZ;\n        builderState.renderedRenderOrder = renderOrder;\n        builderState.renderedResolution = resolution;\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasVectorTileLayerRenderer.prototype.forEachFeatureAtCoordinate = function (coordinate, frameState, hitTolerance, callback, declutteredFeatures) {\n        var resolution = frameState.viewState.resolution;\n        var rotation = frameState.viewState.rotation;\n        hitTolerance = hitTolerance == undefined ? 0 : hitTolerance;\n        var layer = /** @type {import(\"../../layer/VectorTile.js\").default} */ (this.getLayer());\n        var declutter = layer.getDeclutter();\n        var source = layer.getSource();\n        var tileGrid = source.getTileGridForProjection(frameState.viewState.projection);\n        /** @type {!Object<string, boolean>} */\n        var features = {};\n        var renderedTiles = /** @type {Array<import(\"../../VectorRenderTile.js\").default>} */ (this.renderedTiles);\n        var found;\n        var i, ii;\n        for (i = 0, ii = renderedTiles.length; i < ii; ++i) {\n            var tile = renderedTiles[i];\n            if (!declutter) {\n                // When not decluttering, we only need to consider the tile that contains the given\n                // coordinate, because each feature will be rendered for each tile that contains it.\n                var tileExtent = tileGrid.getTileCoordExtent(tile.wrappedTileCoord);\n                if (!containsCoordinate(tileExtent, coordinate)) {\n                    continue;\n                }\n            }\n            var executorGroups = tile.executorGroups[getUid(layer)];\n            for (var t = 0, tt = executorGroups.length; t < tt; ++t) {\n                var executorGroup = executorGroups[t];\n                found = found || executorGroup.forEachFeatureAtCoordinate(coordinate, resolution, rotation, hitTolerance, {}, \n                /**\n                 * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n                 * @return {?} Callback result.\n                 */\n                function (feature) {\n                    var key = feature.getId();\n                    if (key === undefined) {\n                        key = getUid(feature);\n                    }\n                    if (!(key in features)) {\n                        features[key] = true;\n                        return callback(feature, layer);\n                    }\n                }, declutteredFeatures);\n            }\n        }\n        return found;\n    };\n    /**\n     * @param {import(\"../../VectorTile.js\").default} tile Tile.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @return {import(\"../../transform.js\").Transform} transform Transform.\n     * @private\n     */\n    CanvasVectorTileLayerRenderer.prototype.getReplayTransform_ = function (tile, frameState) {\n        var layer = this.getLayer();\n        var source = layer.getSource();\n        var tileGrid = source.getTileGrid();\n        var tileCoord = tile.tileCoord;\n        var tileResolution = tileGrid.getResolution(tileCoord[0]);\n        var viewState = frameState.viewState;\n        var pixelRatio = frameState.pixelRatio;\n        var renderResolution = viewState.resolution / pixelRatio;\n        var tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent);\n        var center = viewState.center;\n        var origin = getTopLeft(tileExtent);\n        var size = frameState.size;\n        var offsetX = Math.round(pixelRatio * size[0] / 2);\n        var offsetY = Math.round(pixelRatio * size[1] / 2);\n        return composeTransform(this.tmpTransform_, offsetX, offsetY, tileResolution / renderResolution, tileResolution / renderResolution, viewState.rotation, (origin[0] - center[0]) / tileResolution, (center[1] - origin[1]) / tileResolution);\n    };\n    /**\n     * @param {import(\"../../events/Event.js\").default} event Event.\n     */\n    CanvasVectorTileLayerRenderer.prototype.handleFontsChanged_ = function (event) {\n        var layer = this.getLayer();\n        if (layer.getVisible() && this.renderedLayerRevision_ !== undefined) {\n            layer.changed();\n        }\n    };\n    /**\n     * Handle changes in image style state.\n     * @param {import(\"../../events/Event.js\").default} event Image style change event.\n     * @private\n     */\n    CanvasVectorTileLayerRenderer.prototype.handleStyleImageChange_ = function (event) {\n        this.renderIfReadyAndVisible();\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasVectorTileLayerRenderer.prototype.renderFrame = function (frameState, layerState) {\n        _super.prototype.renderFrame.call(this, frameState, layerState);\n        var layer = /** @type {import(\"../../layer/VectorTile.js\").default} */ (this.getLayer());\n        var viewHints = frameState.viewHints;\n        var hifi = !(viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]);\n        var renderMode = layer.getRenderMode();\n        if (renderMode === VectorTileRenderType.IMAGE) {\n            this.renderTileImages_(hifi, frameState);\n            return this.container_;\n        }\n        if (!isEmpty(this.renderTileImageQueue_) && !this.extentChanged) {\n            this.renderTileImages_(hifi, frameState);\n            return this.container_;\n        }\n        var context = this.overlayContext_;\n        var declutterReplays = layer.getDeclutter() ? {} : null;\n        var source = layer.getSource();\n        var replayTypes = VECTOR_REPLAYS[renderMode];\n        var pixelRatio = frameState.pixelRatio;\n        var rotation = frameState.viewState.rotation;\n        var size = frameState.size;\n        // set forward and inverse pixel transforms\n        makeScale(this.overlayPixelTransform_, 1 / pixelRatio, 1 / pixelRatio);\n        makeInverse(this.inverseOverlayPixelTransform_, this.overlayPixelTransform_);\n        // resize and clear\n        var canvas = context.canvas;\n        var width = Math.round(size[0] * pixelRatio);\n        var height = Math.round(size[1] * pixelRatio);\n        if (canvas.width != width || canvas.height != height) {\n            canvas.width = width;\n            canvas.height = height;\n            var canvasTransform = transformToString(this.overlayPixelTransform_);\n            if (canvas.style.transform !== canvasTransform) {\n                canvas.style.transform = canvasTransform;\n            }\n        }\n        else {\n            context.clearRect(0, 0, width, height);\n        }\n        var tiles = this.renderedTiles;\n        var tileGrid = source.getTileGridForProjection(frameState.viewState.projection);\n        var clips = [];\n        for (var i = tiles.length - 1; i >= 0; --i) {\n            var tile = /** @type {import(\"../../VectorRenderTile.js\").default} */ (tiles[i]);\n            if (tile.getState() == TileState.ABORT) {\n                continue;\n            }\n            var tileCoord = tile.tileCoord;\n            var tileExtent = tileGrid.getTileCoordExtent(tile.wrappedTileCoord);\n            var worldOffset = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent)[0] - tileExtent[0];\n            var transform = this.getRenderTransform(frameState, width, height, worldOffset);\n            var executorGroups = tile.executorGroups[getUid(layer)];\n            for (var t = 0, tt = executorGroups.length; t < tt; ++t) {\n                var executorGroup = executorGroups[t];\n                if (!executorGroup.hasExecutors(replayTypes)) {\n                    // sourceTile has no instructions of the types we want to render\n                    continue;\n                }\n                var currentZ = tile.tileCoord[0];\n                var zs = void 0, currentClip = void 0;\n                if (!declutterReplays) {\n                    zs = [];\n                    currentClip = executorGroup.getClipCoords(transform);\n                    context.save();\n                    // Create a clip mask for regions in this low resolution tile that are\n                    // already filled by a higher resolution tile\n                    for (var j = 0, jj = clips.length; j < jj; ++j) {\n                        var clip = clips[j];\n                        if (currentZ < zs[j]) {\n                            context.beginPath();\n                            // counter-clockwise (outer ring) for current tile\n                            context.moveTo(currentClip[0], currentClip[1]);\n                            context.lineTo(currentClip[2], currentClip[3]);\n                            context.lineTo(currentClip[4], currentClip[5]);\n                            context.lineTo(currentClip[6], currentClip[7]);\n                            // clockwise (inner ring) for higher resolution tile\n                            context.moveTo(clip[6], clip[7]);\n                            context.lineTo(clip[4], clip[5]);\n                            context.lineTo(clip[2], clip[3]);\n                            context.lineTo(clip[0], clip[1]);\n                            context.clip();\n                        }\n                    }\n                }\n                executorGroup.execute(context, transform, rotation, {}, hifi, replayTypes, declutterReplays);\n                if (!declutterReplays) {\n                    context.restore();\n                    clips.push(currentClip);\n                    zs.push(currentZ);\n                }\n            }\n        }\n        if (declutterReplays) {\n            replayDeclutter(declutterReplays, context, rotation, hifi, frameState.declutterItems);\n        }\n        var opacity = layerState.opacity;\n        if (opacity !== parseFloat(canvas.style.opacity)) {\n            canvas.style.opacity = opacity;\n        }\n        // Now that we have rendered the tiles we have already, let's prepare new tile images\n        // for the next frame\n        this.renderTileImages_(hifi, frameState);\n        return this.container_;\n    };\n    /**\n     * @param {boolean} hifi We have time to render a high fidelity map image.\n     * @param {import('../../PluggableMap.js').FrameState} frameState Frame state.\n     */\n    CanvasVectorTileLayerRenderer.prototype.renderTileImages_ = function (hifi, frameState) {\n        // When we don't have time to render hifi, only render tiles until we have used up\n        // half of the frame budget of 16 ms\n        for (var uid in this.renderTileImageQueue_) {\n            if (!hifi && Date.now() - frameState.time > 8) {\n                break;\n            }\n            var tile = this.renderTileImageQueue_[uid];\n            frameState.animate = true;\n            delete this.renderTileImageQueue_[uid];\n            var layer = /** @type {import(\"../../layer/VectorTile.js\").default} */ (this.getLayer());\n            var viewState = frameState.viewState;\n            var tileGrid = layer.getSource().getTileGridForProjection(viewState.projection);\n            var tileResolution = tileGrid.getResolution(tile.tileCoord[0]);\n            var renderPixelRatio = frameState.pixelRatio / tile.wantedResolution * tileResolution;\n            this.renderTileImage_(tile, frameState.pixelRatio, renderPixelRatio, viewState.projection);\n        }\n        clear(this.renderTileImageQueue_);\n    };\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {number} squaredTolerance Squared tolerance.\n     * @param {import(\"../../style/Style.js\").default|Array<import(\"../../style/Style.js\").default>} styles The style or array of styles.\n     * @param {import(\"../../render/canvas/BuilderGroup.js\").default} executorGroup Replay group.\n     * @return {boolean} `true` if an image is loading.\n     */\n    CanvasVectorTileLayerRenderer.prototype.renderFeature = function (feature, squaredTolerance, styles, executorGroup) {\n        if (!styles) {\n            return false;\n        }\n        var loading = false;\n        if (Array.isArray(styles)) {\n            for (var i = 0, ii = styles.length; i < ii; ++i) {\n                loading = renderFeature(executorGroup, feature, styles[i], squaredTolerance, this.handleStyleImageChange_, this) || loading;\n            }\n        }\n        else {\n            loading = renderFeature(executorGroup, feature, styles, squaredTolerance, this.handleStyleImageChange_, this);\n        }\n        return loading;\n    };\n    /**\n     * @param {import(\"../../VectorRenderTile.js\").default} tile Tile.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n     * @return {boolean} A new tile image was rendered.\n     * @private\n     */\n    CanvasVectorTileLayerRenderer.prototype.tileImageNeedsRender_ = function (tile, pixelRatio, projection) {\n        var layer = /** @type {import(\"../../layer/VectorTile.js\").default} */ (this.getLayer());\n        var replayState = tile.getReplayState(layer);\n        var revision = layer.getRevision();\n        var sourceZ = tile.sourceZ;\n        var resolution = tile.wantedResolution;\n        return replayState.renderedTileResolution !== resolution || replayState.renderedTileRevision !== revision || replayState.renderedTileZ !== sourceZ;\n    };\n    /**\n     * @param {import(\"../../VectorRenderTile.js\").default} tile Tile.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {number} renderPixelRatio Render pixel ratio.\n     * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n     * @private\n     */\n    CanvasVectorTileLayerRenderer.prototype.renderTileImage_ = function (tile, pixelRatio, renderPixelRatio, projection) {\n        var layer = /** @type {import(\"../../layer/VectorTile.js\").default} */ (this.getLayer());\n        var replayState = tile.getReplayState(layer);\n        var revision = layer.getRevision();\n        var executorGroups = tile.executorGroups[getUid(layer)];\n        replayState.renderedTileRevision = revision;\n        replayState.renderedTileZ = tile.sourceZ;\n        var tileCoord = tile.wrappedTileCoord;\n        var z = tileCoord[0];\n        var source = layer.getSource();\n        var tileGrid = source.getTileGridForProjection(projection);\n        var resolution = tileGrid.getResolution(z);\n        var context = tile.getContext(layer);\n        // Increase tile size when overzooming for low pixel ratio, to avoid blurry tiles\n        pixelRatio = Math.max(pixelRatio, renderPixelRatio / pixelRatio);\n        var size = source.getTilePixelSize(z, pixelRatio, projection);\n        context.canvas.width = size[0];\n        context.canvas.height = size[1];\n        var canvasTransform = resetTransform(this.tmpTransform_);\n        var renderScale = pixelRatio / renderPixelRatio;\n        scaleTransform(canvasTransform, renderScale, renderScale);\n        context.setTransform.apply(context, canvasTransform);\n        var tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent);\n        for (var i = 0, ii = executorGroups.length; i < ii; ++i) {\n            var executorGroup = executorGroups[i];\n            var pixelScale = renderPixelRatio / resolution;\n            var transform = resetTransform(this.tmpTransform_);\n            scaleTransform(transform, pixelScale, -pixelScale);\n            translateTransform(transform, -tileExtent[0], -tileExtent[3]);\n            executorGroup.execute(context, transform, 0, {}, true, IMAGE_REPLAYS[layer.getRenderMode()]);\n        }\n        replayState.renderedTileResolution = tile.wantedResolution;\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasVectorTileLayerRenderer.prototype.getDataAtPixel = function (pixel, frameState, hitTolerance) {\n        var data = _super.prototype.getDataAtPixel.call(this, pixel, frameState, hitTolerance);\n        if (data) {\n            return data;\n        }\n        var renderPixel = applyTransform(this.inverseOverlayPixelTransform_, pixel.slice());\n        var context = this.overlayContext_;\n        try {\n            data = context.getImageData(Math.round(renderPixel[0]), Math.round(renderPixel[1]), 1, 1).data;\n        }\n        catch (err) {\n            if (err.name === 'SecurityError') {\n                // tainted canvas, we assume there is data at the given pixel (although there might not be)\n                return new Uint8Array();\n            }\n            return data;\n        }\n        if (data[3] === 0) {\n            return null;\n        }\n        return data;\n    };\n    return CanvasVectorTileLayerRenderer;\n}(CanvasTileLayerRenderer));\nexport default CanvasVectorTileLayerRenderer;\n//# sourceMappingURL=VectorTileLayer.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/layer/BaseVector\n */\nimport Layer from './Layer.js';\nimport { assign } from '../obj.js';\nimport { createDefaultStyle, toFunction as toStyleFunction } from '../style/Style.js';\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the viewport extent used by the\n * renderer when getting features from the vector source for the rendering or hit-detection.\n * Recommended value: the size of the largest symbol, line width or label.\n * @property {import(\"../source/Vector.js\").default} [source] Source.\n * @property {import(\"../PluggableMap.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link module:ol/Map#addLayer}.\n * @property {boolean} [declutter=false] Declutter images and text. Decluttering is applied to all\n * image and text styles of all Vector and VectorTile layers that have set this to `true`. The priority\n * is defined by the z-index of the layer, the `zIndex` of the style and the render order of features.\n * Higher z-index means higher priority. Within the same z-index, a feature rendered before another has\n * higher priority.\n * @property {import(\"../style/Style.js\").StyleLike} [style] Layer style. See\n * {@link module:ol/style} for default style which will be used if this is not defined.\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will\n * be recreated during animations. This means that no vectors will be shown clipped, but the\n * setting will have a performance impact for large amounts of vector data. When set to `false`,\n * batches will be recreated when no animation is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will\n * be recreated during interactions. See also `updateWhileAnimating`.\n */\n/**\n * @enum {string}\n * @private\n */\nvar Property = {\n    RENDER_ORDER: 'renderOrder'\n};\n/**\n * @classdesc\n * Vector data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Vector.js\").default|import(\"../source/VectorTile.js\").default} VectorSourceType\n * @extends {Layer<VectorSourceType>}\n * @api\n */\nvar BaseVectorLayer = /** @class */ (function (_super) {\n    __extends(BaseVectorLayer, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function BaseVectorLayer(opt_options) {\n        var _this = this;\n        var options = opt_options ?\n            opt_options : /** @type {Options} */ ({});\n        var baseOptions = assign({}, options);\n        delete baseOptions.style;\n        delete baseOptions.renderBuffer;\n        delete baseOptions.updateWhileAnimating;\n        delete baseOptions.updateWhileInteracting;\n        _this = _super.call(this, baseOptions) || this;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.declutter_ = options.declutter !== undefined ? options.declutter : false;\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.renderBuffer_ = options.renderBuffer !== undefined ?\n            options.renderBuffer : 100;\n        /**\n         * User provided style.\n         * @type {import(\"../style/Style.js\").StyleLike}\n         * @private\n         */\n        _this.style_ = null;\n        /**\n         * Style function for use within the library.\n         * @type {import(\"../style/Style.js\").StyleFunction|undefined}\n         * @private\n         */\n        _this.styleFunction_ = undefined;\n        _this.setStyle(options.style);\n        /**\n         * @type {boolean}\n         * @private\n         */\n        _this.updateWhileAnimating_ = options.updateWhileAnimating !== undefined ?\n            options.updateWhileAnimating : false;\n        /**\n         * @type {boolean}\n         * @private\n         */\n        _this.updateWhileInteracting_ = options.updateWhileInteracting !== undefined ?\n            options.updateWhileInteracting : false;\n        return _this;\n    }\n    /**\n     * @return {boolean} Declutter.\n     */\n    BaseVectorLayer.prototype.getDeclutter = function () {\n        return this.declutter_;\n    };\n    /**\n     * @return {number|undefined} Render buffer.\n     */\n    BaseVectorLayer.prototype.getRenderBuffer = function () {\n        return this.renderBuffer_;\n    };\n    /**\n     * @return {function(import(\"../Feature.js\").default, import(\"../Feature.js\").default): number|null|undefined} Render\n     *     order.\n     */\n    BaseVectorLayer.prototype.getRenderOrder = function () {\n        return (\n        /** @type {import(\"../render.js\").OrderFunction|null|undefined} */ (this.get(Property.RENDER_ORDER)));\n    };\n    /**\n     * Get the style for features.  This returns whatever was passed to the `style`\n     * option at construction or to the `setStyle` method.\n     * @return {import(\"../style/Style.js\").StyleLike}\n     *     Layer style.\n     * @api\n     */\n    BaseVectorLayer.prototype.getStyle = function () {\n        return this.style_;\n    };\n    /**\n     * Get the style function.\n     * @return {import(\"../style/Style.js\").StyleFunction|undefined} Layer style function.\n     * @api\n     */\n    BaseVectorLayer.prototype.getStyleFunction = function () {\n        return this.styleFunction_;\n    };\n    /**\n     * @return {boolean} Whether the rendered layer should be updated while\n     *     animating.\n     */\n    BaseVectorLayer.prototype.getUpdateWhileAnimating = function () {\n        return this.updateWhileAnimating_;\n    };\n    /**\n     * @return {boolean} Whether the rendered layer should be updated while\n     *     interacting.\n     */\n    BaseVectorLayer.prototype.getUpdateWhileInteracting = function () {\n        return this.updateWhileInteracting_;\n    };\n    /**\n     * @param {import(\"../render.js\").OrderFunction|null|undefined} renderOrder\n     *     Render order.\n     */\n    BaseVectorLayer.prototype.setRenderOrder = function (renderOrder) {\n        this.set(Property.RENDER_ORDER, renderOrder);\n    };\n    /**\n     * Set the style for features.  This can be a single style object, an array\n     * of styles, or a function that takes a feature and resolution and returns\n     * an array of styles. If it is `undefined` the default style is used. If\n     * it is `null` the layer has no style (a `null` style), so only features\n     * that have their own styles will be rendered in the layer. See\n     * {@link module:ol/style} for information on the default style.\n     * @param {import(\"../style/Style.js\").default|Array<import(\"../style/Style.js\").default>|import(\"../style/Style.js\").StyleFunction|null|undefined} style Layer style.\n     * @api\n     */\n    BaseVectorLayer.prototype.setStyle = function (style) {\n        this.style_ = style !== undefined ? style : createDefaultStyle;\n        this.styleFunction_ = style === null ?\n            undefined : toStyleFunction(this.style_);\n        this.changed();\n    };\n    return BaseVectorLayer;\n}(Layer));\nexport default BaseVectorLayer;\n//# sourceMappingURL=BaseVector.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/layer/Vector\n */\nimport BaseVectorLayer from './BaseVector.js';\nimport CanvasVectorLayerRenderer from '../renderer/canvas/VectorLayer.js';\n/**\n * @typedef {import(\"./BaseVector.js\").Options} Options\n */\n/**\n * @classdesc\n * Vector data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @extends {BaseVectorLayer<import(\"../source/Vector.js\").default>}\n * @api\n */\nvar VectorLayer = /** @class */ (function (_super) {\n    __extends(VectorLayer, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function VectorLayer(opt_options) {\n        return _super.call(this, opt_options) || this;\n    }\n    /**\n     * Create a renderer for this layer.\n     * @return {import(\"../renderer/Layer.js\").default} A layer renderer.\n     * @protected\n     */\n    VectorLayer.prototype.createRenderer = function () {\n        return new CanvasVectorLayerRenderer(this);\n    };\n    return VectorLayer;\n}(BaseVectorLayer));\nexport default VectorLayer;\n//# sourceMappingURL=Vector.js.map","/**\n * @module ol/geom/flat/interpolate\n */\nimport { binarySearch } from '../../array.js';\nimport { lerp } from '../../math.js';\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} fraction Fraction.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Destination.\n */\nexport function interpolatePoint(flatCoordinates, offset, end, stride, fraction, opt_dest) {\n    var pointX = NaN;\n    var pointY = NaN;\n    var n = (end - offset) / stride;\n    if (n === 1) {\n        pointX = flatCoordinates[offset];\n        pointY = flatCoordinates[offset + 1];\n    }\n    else if (n == 2) {\n        pointX = (1 - fraction) * flatCoordinates[offset] +\n            fraction * flatCoordinates[offset + stride];\n        pointY = (1 - fraction) * flatCoordinates[offset + 1] +\n            fraction * flatCoordinates[offset + stride + 1];\n    }\n    else if (n !== 0) {\n        var x1 = flatCoordinates[offset];\n        var y1 = flatCoordinates[offset + 1];\n        var length_1 = 0;\n        var cumulativeLengths = [0];\n        for (var i = offset + stride; i < end; i += stride) {\n            var x2 = flatCoordinates[i];\n            var y2 = flatCoordinates[i + 1];\n            length_1 += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n            cumulativeLengths.push(length_1);\n            x1 = x2;\n            y1 = y2;\n        }\n        var target = fraction * length_1;\n        var index = binarySearch(cumulativeLengths, target);\n        if (index < 0) {\n            var t = (target - cumulativeLengths[-index - 2]) /\n                (cumulativeLengths[-index - 1] - cumulativeLengths[-index - 2]);\n            var o = offset + (-index - 2) * stride;\n            pointX = lerp(flatCoordinates[o], flatCoordinates[o + stride], t);\n            pointY = lerp(flatCoordinates[o + 1], flatCoordinates[o + stride + 1], t);\n        }\n        else {\n            pointX = flatCoordinates[offset + index * stride];\n            pointY = flatCoordinates[offset + index * stride + 1];\n        }\n    }\n    if (opt_dest) {\n        opt_dest[0] = pointX;\n        opt_dest[1] = pointY;\n        return opt_dest;\n    }\n    else {\n        return [pointX, pointY];\n    }\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @return {import(\"../../coordinate.js\").Coordinate} Coordinate.\n */\nexport function lineStringCoordinateAtM(flatCoordinates, offset, end, stride, m, extrapolate) {\n    if (end == offset) {\n        return null;\n    }\n    var coordinate;\n    if (m < flatCoordinates[offset + stride - 1]) {\n        if (extrapolate) {\n            coordinate = flatCoordinates.slice(offset, offset + stride);\n            coordinate[stride - 1] = m;\n            return coordinate;\n        }\n        else {\n            return null;\n        }\n    }\n    else if (flatCoordinates[end - 1] < m) {\n        if (extrapolate) {\n            coordinate = flatCoordinates.slice(end - stride, end);\n            coordinate[stride - 1] = m;\n            return coordinate;\n        }\n        else {\n            return null;\n        }\n    }\n    // FIXME use O(1) search\n    if (m == flatCoordinates[offset + stride - 1]) {\n        return flatCoordinates.slice(offset, offset + stride);\n    }\n    var lo = offset / stride;\n    var hi = end / stride;\n    while (lo < hi) {\n        var mid = (lo + hi) >> 1;\n        if (m < flatCoordinates[(mid + 1) * stride - 1]) {\n            hi = mid;\n        }\n        else {\n            lo = mid + 1;\n        }\n    }\n    var m0 = flatCoordinates[lo * stride - 1];\n    if (m == m0) {\n        return flatCoordinates.slice((lo - 1) * stride, (lo - 1) * stride + stride);\n    }\n    var m1 = flatCoordinates[(lo + 1) * stride - 1];\n    var t = (m - m0) / (m1 - m0);\n    coordinate = [];\n    for (var i = 0; i < stride - 1; ++i) {\n        coordinate.push(lerp(flatCoordinates[(lo - 1) * stride + i], flatCoordinates[lo * stride + i], t));\n    }\n    coordinate.push(m);\n    return coordinate;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @param {boolean} interpolate Interpolate.\n * @return {import(\"../../coordinate.js\").Coordinate} Coordinate.\n */\nexport function lineStringsCoordinateAtM(flatCoordinates, offset, ends, stride, m, extrapolate, interpolate) {\n    if (interpolate) {\n        return lineStringCoordinateAtM(flatCoordinates, offset, ends[ends.length - 1], stride, m, extrapolate);\n    }\n    var coordinate;\n    if (m < flatCoordinates[stride - 1]) {\n        if (extrapolate) {\n            coordinate = flatCoordinates.slice(0, stride);\n            coordinate[stride - 1] = m;\n            return coordinate;\n        }\n        else {\n            return null;\n        }\n    }\n    if (flatCoordinates[flatCoordinates.length - 1] < m) {\n        if (extrapolate) {\n            coordinate = flatCoordinates.slice(flatCoordinates.length - stride);\n            coordinate[stride - 1] = m;\n            return coordinate;\n        }\n        else {\n            return null;\n        }\n    }\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        var end = ends[i];\n        if (offset == end) {\n            continue;\n        }\n        if (m < flatCoordinates[offset + stride - 1]) {\n            return null;\n        }\n        else if (m <= flatCoordinates[end - 1]) {\n            return lineStringCoordinateAtM(flatCoordinates, offset, end, stride, m, false);\n        }\n        offset = end;\n    }\n    return null;\n}\n//# sourceMappingURL=interpolate.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/LineString\n */\nimport { extend } from '../array.js';\nimport { closestSquaredDistanceXY } from '../extent.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport { assignClosestPoint, maxSquaredDelta } from './flat/closest.js';\nimport { deflateCoordinates } from './flat/deflate.js';\nimport { inflateCoordinates } from './flat/inflate.js';\nimport { interpolatePoint, lineStringCoordinateAtM } from './flat/interpolate.js';\nimport { intersectsLineString } from './flat/intersectsextent.js';\nimport { lineStringLength } from './flat/length.js';\nimport { forEach as forEachSegment } from './flat/segments.js';\nimport { douglasPeucker } from './flat/simplify.js';\n/**\n * @classdesc\n * Linestring geometry.\n *\n * @api\n */\nvar LineString = /** @class */ (function (_super) {\n    __extends(LineString, _super);\n    /**\n     * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n     *     For internal use, flat coordinates in combination with `opt_layout` are also accepted.\n     * @param {GeometryLayout=} opt_layout Layout.\n     */\n    function LineString(coordinates, opt_layout) {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {import(\"../coordinate.js\").Coordinate}\n         */\n        _this.flatMidpoint_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.flatMidpointRevision_ = -1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDelta_ = -1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDeltaRevision_ = -1;\n        if (opt_layout !== undefined && !Array.isArray(coordinates[0])) {\n            _this.setFlatCoordinates(opt_layout, /** @type {Array<number>} */ (coordinates));\n        }\n        else {\n            _this.setCoordinates(/** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (coordinates), opt_layout);\n        }\n        return _this;\n    }\n    /**\n     * Append the passed coordinate to the coordinates of the linestring.\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @api\n     */\n    LineString.prototype.appendCoordinate = function (coordinate) {\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = coordinate.slice();\n        }\n        else {\n            extend(this.flatCoordinates, coordinate);\n        }\n        this.changed();\n    };\n    /**\n     * Make a complete copy of the geometry.\n     * @return {!LineString} Clone.\n     * @override\n     * @api\n     */\n    LineString.prototype.clone = function () {\n        return new LineString(this.flatCoordinates.slice(), this.layout);\n    };\n    /**\n     * @inheritDoc\n     */\n    LineString.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\n        if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n            return minSquaredDistance;\n        }\n        if (this.maxDeltaRevision_ != this.getRevision()) {\n            this.maxDelta_ = Math.sqrt(maxSquaredDelta(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, 0));\n            this.maxDeltaRevision_ = this.getRevision();\n        }\n        return assignClosestPoint(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, this.maxDelta_, false, x, y, closestPoint, minSquaredDistance);\n    };\n    /**\n     * Iterate over each segment, calling the provided callback.\n     * If the callback returns a truthy value the function returns that\n     * value immediately. Otherwise the function returns `false`.\n     *\n     * @param {function(this: S, import(\"../coordinate.js\").Coordinate, import(\"../coordinate.js\").Coordinate): T} callback Function\n     *     called for each segment.\n     * @return {T|boolean} Value.\n     * @template T,S\n     * @api\n     */\n    LineString.prototype.forEachSegment = function (callback) {\n        return forEachSegment(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, callback);\n    };\n    /**\n     * Returns the coordinate at `m` using linear interpolation, or `null` if no\n     * such coordinate exists.\n     *\n     * `opt_extrapolate` controls extrapolation beyond the range of Ms in the\n     * MultiLineString. If `opt_extrapolate` is `true` then Ms less than the first\n     * M will return the first coordinate and Ms greater than the last M will\n     * return the last coordinate.\n     *\n     * @param {number} m M.\n     * @param {boolean=} opt_extrapolate Extrapolate. Default is `false`.\n     * @return {import(\"../coordinate.js\").Coordinate} Coordinate.\n     * @api\n     */\n    LineString.prototype.getCoordinateAtM = function (m, opt_extrapolate) {\n        if (this.layout != GeometryLayout.XYM &&\n            this.layout != GeometryLayout.XYZM) {\n            return null;\n        }\n        var extrapolate = opt_extrapolate !== undefined ? opt_extrapolate : false;\n        return lineStringCoordinateAtM(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, m, extrapolate);\n    };\n    /**\n     * Return the coordinates of the linestring.\n     * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n     * @override\n     * @api\n     */\n    LineString.prototype.getCoordinates = function () {\n        return inflateCoordinates(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n    };\n    /**\n     * Return the coordinate at the provided fraction along the linestring.\n     * The `fraction` is a number between 0 and 1, where 0 is the start of the\n     * linestring and 1 is the end.\n     * @param {number} fraction Fraction.\n     * @param {import(\"../coordinate.js\").Coordinate=} opt_dest Optional coordinate whose values will\n     *     be modified. If not provided, a new coordinate will be returned.\n     * @return {import(\"../coordinate.js\").Coordinate} Coordinate of the interpolated point.\n     * @api\n     */\n    LineString.prototype.getCoordinateAt = function (fraction, opt_dest) {\n        return interpolatePoint(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, fraction, opt_dest);\n    };\n    /**\n     * Return the length of the linestring on projected plane.\n     * @return {number} Length (on projected plane).\n     * @api\n     */\n    LineString.prototype.getLength = function () {\n        return lineStringLength(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n    };\n    /**\n     * @return {Array<number>} Flat midpoint.\n     */\n    LineString.prototype.getFlatMidpoint = function () {\n        if (this.flatMidpointRevision_ != this.getRevision()) {\n            this.flatMidpoint_ = this.getCoordinateAt(0.5, this.flatMidpoint_);\n            this.flatMidpointRevision_ = this.getRevision();\n        }\n        return this.flatMidpoint_;\n    };\n    /**\n     * @inheritDoc\n     */\n    LineString.prototype.getSimplifiedGeometryInternal = function (squaredTolerance) {\n        var simplifiedFlatCoordinates = [];\n        simplifiedFlatCoordinates.length = douglasPeucker(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, squaredTolerance, simplifiedFlatCoordinates, 0);\n        return new LineString(simplifiedFlatCoordinates, GeometryLayout.XY);\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    LineString.prototype.getType = function () {\n        return GeometryType.LINE_STRING;\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    LineString.prototype.intersectsExtent = function (extent) {\n        return intersectsLineString(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, extent);\n    };\n    /**\n     * Set the coordinates of the linestring.\n     * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n     * @param {GeometryLayout=} opt_layout Layout.\n     * @override\n     * @api\n     */\n    LineString.prototype.setCoordinates = function (coordinates, opt_layout) {\n        this.setLayout(opt_layout, coordinates, 1);\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = [];\n        }\n        this.flatCoordinates.length = deflateCoordinates(this.flatCoordinates, 0, coordinates, this.stride);\n        this.changed();\n    };\n    return LineString;\n}(SimpleGeometry));\nexport default LineString;\n//# sourceMappingURL=LineString.js.map","/**\n * @module ol/geom/flat/geodesic\n */\nimport { squaredSegmentDistance, toRadians, toDegrees } from '../../math.js';\nimport { get as getProjection, getTransform } from '../../proj.js';\n/**\n * @param {function(number): import(\"../../coordinate.js\").Coordinate} interpolate Interpolate function.\n * @param {import(\"../../proj.js\").TransformFunction} transform Transform from longitude/latitude to\n *     projected coordinates.\n * @param {number} squaredTolerance Squared tolerance.\n * @return {Array<number>} Flat coordinates.\n */\nfunction line(interpolate, transform, squaredTolerance) {\n    // FIXME reduce garbage generation\n    // FIXME optimize stack operations\n    /** @type {Array<number>} */\n    var flatCoordinates = [];\n    var geoA = interpolate(0);\n    var geoB = interpolate(1);\n    var a = transform(geoA);\n    var b = transform(geoB);\n    /** @type {Array<import(\"../../coordinate.js\").Coordinate>} */\n    var geoStack = [geoB, geoA];\n    /** @type {Array<import(\"../../coordinate.js\").Coordinate>} */\n    var stack = [b, a];\n    /** @type {Array<number>} */\n    var fractionStack = [1, 0];\n    /** @type {!Object<string, boolean>} */\n    var fractions = {};\n    var maxIterations = 1e5;\n    var geoM, m, fracA, fracB, fracM, key;\n    while (--maxIterations > 0 && fractionStack.length > 0) {\n        // Pop the a coordinate off the stack\n        fracA = fractionStack.pop();\n        geoA = geoStack.pop();\n        a = stack.pop();\n        // Add the a coordinate if it has not been added yet\n        key = fracA.toString();\n        if (!(key in fractions)) {\n            flatCoordinates.push(a[0], a[1]);\n            fractions[key] = true;\n        }\n        // Pop the b coordinate off the stack\n        fracB = fractionStack.pop();\n        geoB = geoStack.pop();\n        b = stack.pop();\n        // Find the m point between the a and b coordinates\n        fracM = (fracA + fracB) / 2;\n        geoM = interpolate(fracM);\n        m = transform(geoM);\n        if (squaredSegmentDistance(m[0], m[1], a[0], a[1], b[0], b[1]) < squaredTolerance) {\n            // If the m point is sufficiently close to the straight line, then we\n            // discard it.  Just use the b coordinate and move on to the next line\n            // segment.\n            flatCoordinates.push(b[0], b[1]);\n            key = fracB.toString();\n            fractions[key] = true;\n        }\n        else {\n            // Otherwise, we need to subdivide the current line segment.  Split it\n            // into two and push the two line segments onto the stack.\n            fractionStack.push(fracB, fracM, fracM, fracA);\n            stack.push(b, m, m, a);\n            geoStack.push(geoB, geoM, geoM, geoA);\n        }\n    }\n    return flatCoordinates;\n}\n/**\n * Generate a great-circle arcs between two lat/lon points.\n * @param {number} lon1 Longitude 1 in degrees.\n * @param {number} lat1 Latitude 1 in degrees.\n * @param {number} lon2 Longitude 2 in degrees.\n * @param {number} lat2 Latitude 2 in degrees.\n * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n * @param {number} squaredTolerance Squared tolerance.\n * @return {Array<number>} Flat coordinates.\n */\nexport function greatCircleArc(lon1, lat1, lon2, lat2, projection, squaredTolerance) {\n    var geoProjection = getProjection('EPSG:4326');\n    var cosLat1 = Math.cos(toRadians(lat1));\n    var sinLat1 = Math.sin(toRadians(lat1));\n    var cosLat2 = Math.cos(toRadians(lat2));\n    var sinLat2 = Math.sin(toRadians(lat2));\n    var cosDeltaLon = Math.cos(toRadians(lon2 - lon1));\n    var sinDeltaLon = Math.sin(toRadians(lon2 - lon1));\n    var d = sinLat1 * sinLat2 + cosLat1 * cosLat2 * cosDeltaLon;\n    return line(\n    /**\n     * @param {number} frac Fraction.\n     * @return {import(\"../../coordinate.js\").Coordinate} Coordinate.\n     */\n    function (frac) {\n        if (1 <= d) {\n            return [lon2, lat2];\n        }\n        var D = frac * Math.acos(d);\n        var cosD = Math.cos(D);\n        var sinD = Math.sin(D);\n        var y = sinDeltaLon * cosLat2;\n        var x = cosLat1 * sinLat2 - sinLat1 * cosLat2 * cosDeltaLon;\n        var theta = Math.atan2(y, x);\n        var lat = Math.asin(sinLat1 * cosD + cosLat1 * sinD * Math.cos(theta));\n        var lon = toRadians(lon1) +\n            Math.atan2(Math.sin(theta) * sinD * cosLat1, cosD - sinLat1 * Math.sin(lat));\n        return [toDegrees(lon), toDegrees(lat)];\n    }, getTransform(geoProjection, projection), squaredTolerance);\n}\n/**\n * Generate a meridian (line at constant longitude).\n * @param {number} lon Longitude.\n * @param {number} lat1 Latitude 1.\n * @param {number} lat2 Latitude 2.\n * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n * @param {number} squaredTolerance Squared tolerance.\n * @return {Array<number>} Flat coordinates.\n */\nexport function meridian(lon, lat1, lat2, projection, squaredTolerance) {\n    var epsg4326Projection = getProjection('EPSG:4326');\n    return line(\n    /**\n     * @param {number} frac Fraction.\n     * @return {import(\"../../coordinate.js\").Coordinate} Coordinate.\n     */\n    function (frac) {\n        return [lon, lat1 + ((lat2 - lat1) * frac)];\n    }, getTransform(epsg4326Projection, projection), squaredTolerance);\n}\n/**\n * Generate a parallel (line at constant latitude).\n * @param {number} lat Latitude.\n * @param {number} lon1 Longitude 1.\n * @param {number} lon2 Longitude 2.\n * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n * @param {number} squaredTolerance Squared tolerance.\n * @return {Array<number>} Flat coordinates.\n */\nexport function parallel(lat, lon1, lon2, projection, squaredTolerance) {\n    var epsg4326Projection = getProjection('EPSG:4326');\n    return line(\n    /**\n     * @param {number} frac Fraction.\n     * @return {import(\"../../coordinate.js\").Coordinate} Coordinate.\n     */\n    function (frac) {\n        return [lon1 + ((lon2 - lon1) * frac), lat];\n    }, getTransform(epsg4326Projection, projection), squaredTolerance);\n}\n//# sourceMappingURL=geodesic.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/layer/Graticule\n */\nimport VectorLayer from './Vector.js';\nimport { assign } from '../obj.js';\nimport { degreesToStringHDMS } from '../coordinate';\nimport Text from '../style/Text';\nimport Fill from '../style/Fill';\nimport Stroke from '../style/Stroke';\nimport LineString from '../geom/LineString.js';\nimport VectorSource from '../source/Vector';\nimport { equivalent as equivalentProjection, get as getProjection, getTransform, transformExtent } from '../proj';\nimport { getCenter, intersects, equals, getIntersection, isEmpty } from '../extent';\nimport { clamp } from '../math';\nimport Style from '../style/Style';\nimport Feature from '../Feature';\nimport { bbox } from '../loadingstrategy';\nimport { meridian, parallel } from '../geom/flat/geodesic';\nimport GeometryLayout from '../geom/GeometryLayout';\nimport Point from '../geom/Point';\nimport Collection from '../Collection';\n/**\n * @type {Stroke}\n * @private\n * @const\n */\nvar DEFAULT_STROKE_STYLE = new Stroke({\n    color: 'rgba(0,0,0,0.2)'\n});\n/**\n * @type {Array<number>}\n * @private\n */\nvar INTERVALS = [\n    90, 45, 30, 20, 10, 5, 2, 1, 0.5, 0.2, 0.1, 0.05, 0.01, 0.005, 0.002, 0.001\n];\n/**\n * @typedef {Object} GraticuleLabelDataType\n * @property {Point} geom\n * @property {string} text\n */\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [maxLines=100] The maximum number of meridians and\n * parallels from the center of the map. The default value of 100 means that at\n * most 200 meridians and 200 parallels will be displayed. The default value is\n * appropriate for conformal projections like Spherical Mercator. If you\n * increase the value, more lines will be drawn and the drawing performance will\n * decrease.\n * @property {Stroke} [strokeStyle='rgba(0,0,0,0.2)'] The\n * stroke style to use for drawing the graticule. If not provided, a not fully\n * opaque black will be used.\n * @property {number} [targetSize=100] The target size of the graticule cells,\n * in pixels.\n * @property {boolean} [showLabels=false] Render a label with the respective\n * latitude/longitude for each graticule line.\n * @property {function(number):string} [lonLabelFormatter] Label formatter for\n * longitudes. This function is called with the longitude as argument, and\n * should return a formatted string representing the longitude. By default,\n * labels are formatted as degrees, minutes, seconds and hemisphere.\n * @property {function(number):string} [latLabelFormatter] Label formatter for\n * latitudes. This function is called with the latitude as argument, and\n * should return a formatted string representing the latitude. By default,\n * labels are formatted as degrees, minutes, seconds and hemisphere.\n * @property {number} [lonLabelPosition=0] Longitude label position in fractions\n * (0..1) of view extent. 0 means at the bottom of the viewport, 1 means at the\n * top.\n * @property {number} [latLabelPosition=1] Latitude label position in fractions\n * (0..1) of view extent. 0 means at the left of the viewport, 1 means at the\n * right.\n * @property {Text} [lonLabelStyle] Longitude label text\n * style. If not provided, the following style will be used:\n * ```js\n * new Text({\n *   font: '12px Calibri,sans-serif',\n *   textBaseline: 'bottom',\n *   fill: new Fill({\n *     color: 'rgba(0,0,0,1)'\n *   }),\n *   stroke: new Stroke({\n *     color: 'rgba(255,255,255,1)',\n *     width: 3\n *   })\n * });\n * ```\n * Note that the default's `textBaseline` configuration will not work well for\n * `lonLabelPosition` configurations that position labels close to the top of\n * the viewport.\n * @property {Text} [latLabelStyle] Latitude label text style.\n * If not provided, the following style will be used:\n * ```js\n * new Text({\n *   font: '12px Calibri,sans-serif',\n *   textAlign: 'end',\n *   fill: new Fill({\n *     color: 'rgba(0,0,0,1)'\n *   }),\n *   stroke: Stroke({\n *     color: 'rgba(255,255,255,1)',\n *     width: 3\n *   })\n * });\n * ```\n * Note that the default's `textAlign` configuration will not work well for\n * `latLabelPosition` configurations that position labels close to the left of\n * the viewport.\n * @property {Array<number>} [intervals=[90, 45, 30, 20, 10, 5, 2, 1, 0.5, 0.2, 0.1, 0.05, 0.01, 0.005, 0.002, 0.001]]\n * Intervals (in degrees) for the graticule. Example to limit graticules to 30 and 10 degrees intervals:\n * ```js\n * [30, 10]\n * ```\n * @property {boolean} [wrapX=true] Whether to repeat the graticule horizontally.\n */\n/**\n * @classdesc\n * Layer that renders a grid for a coordinate system.\n *\n * @fires import(\"../render/Event.js\").RenderEvent\n * @api\n */\nvar Graticule = /** @class */ (function (_super) {\n    __extends(Graticule, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function Graticule(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        var baseOptions = assign({\n            updateWhileAnimating: true,\n            updateWhileInteracting: true,\n            renderBuffer: 0\n        }, options);\n        delete baseOptions.maxLines;\n        delete baseOptions.strokeStyle;\n        delete baseOptions.targetSize;\n        delete baseOptions.showLabels;\n        delete baseOptions.lonLabelFormatter;\n        delete baseOptions.latLabelFormatter;\n        delete baseOptions.lonLabelPosition;\n        delete baseOptions.latLabelPosition;\n        delete baseOptions.lonLabelStyle;\n        delete baseOptions.latLabelStyle;\n        delete baseOptions.intervals;\n        _this = _super.call(this, baseOptions) || this;\n        /**\n         * @type {import(\"../proj/Projection.js\").default}\n         */\n        _this.projection_ = null;\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.maxLat_ = Infinity;\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.maxLon_ = Infinity;\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.minLat_ = -Infinity;\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.minLon_ = -Infinity;\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.maxLatP_ = Infinity;\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.maxLonP_ = Infinity;\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.minLatP_ = -Infinity;\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.minLonP_ = -Infinity;\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.targetSize_ = options.targetSize !== undefined ? options.targetSize : 100;\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.maxLines_ = options.maxLines !== undefined ? options.maxLines : 100;\n        /**\n         * @type {Array<LineString>}\n         * @private\n         */\n        _this.meridians_ = [];\n        /**\n         * @type {Array<LineString>}\n         * @private\n         */\n        _this.parallels_ = [];\n        /**\n         * @type {Stroke}\n         * @private\n         */\n        _this.strokeStyle_ = options.strokeStyle !== undefined ? options.strokeStyle : DEFAULT_STROKE_STYLE;\n        /**\n         * @type {import(\"../proj.js\").TransformFunction|undefined}\n         * @private\n         */\n        _this.fromLonLatTransform_ = undefined;\n        /**\n         * @type {import(\"../proj.js\").TransformFunction|undefined}\n         * @private\n         */\n        _this.toLonLatTransform_ = undefined;\n        /**\n         * @type {import(\"../coordinate.js\").Coordinate}\n         * @private\n         */\n        _this.projectionCenterLonLat_ = null;\n        /**\n         * @type {Array<GraticuleLabelDataType>}\n         * @private\n         */\n        _this.meridiansLabels_ = null;\n        /**\n         * @type {Array<GraticuleLabelDataType>}\n         * @private\n         */\n        _this.parallelsLabels_ = null;\n        if (options.showLabels) {\n            /**\n             * @type {null|function(number):string}\n             * @private\n             */\n            _this.lonLabelFormatter_ = options.lonLabelFormatter == undefined ?\n                degreesToStringHDMS.bind(_this, 'EW') : options.lonLabelFormatter;\n            /**\n             * @type {function(number):string}\n             * @private\n             */\n            _this.latLabelFormatter_ = options.latLabelFormatter == undefined ?\n                degreesToStringHDMS.bind(_this, 'NS') : options.latLabelFormatter;\n            /**\n             * Longitude label position in fractions (0..1) of view extent. 0 means\n             * bottom, 1 means top.\n             * @type {number}\n             * @private\n             */\n            _this.lonLabelPosition_ = options.lonLabelPosition == undefined ? 0 :\n                options.lonLabelPosition;\n            /**\n             * Latitude Label position in fractions (0..1) of view extent. 0 means left, 1\n             * means right.\n             * @type {number}\n             * @private\n             */\n            _this.latLabelPosition_ = options.latLabelPosition == undefined ? 1 :\n                options.latLabelPosition;\n            /**\n             * @type {Object.<string,Style>}\n             * @private\n             */\n            _this.lonLabelStyleCache_ = {};\n            /**\n             * @private\n             * @param {import(\"../Feature\").default} feature Feature\n             * @return {Style} style\n             */\n            _this.lonLabelStyle_ = function (feature) {\n                var label = feature.get('graticule_label');\n                if (!this.lonLabelStyleCache_[label]) {\n                    this.lonLabelStyleCache_[label] = new Style({\n                        text: options.lonLabelStyle !== undefined ? options.lonLabelStyle :\n                            new Text({\n                                text: label,\n                                font: '12px Calibri,sans-serif',\n                                textBaseline: 'bottom',\n                                fill: new Fill({\n                                    color: 'rgba(0,0,0,1)'\n                                }),\n                                stroke: new Stroke({\n                                    color: 'rgba(255,255,255,1)',\n                                    width: 3\n                                })\n                            })\n                    });\n                }\n                return this.lonLabelStyleCache_[label];\n            }.bind(_this);\n            /**\n             * @type {Object.<string,Style>}\n             * @private\n             */\n            _this.latLabelStyleCache_ = {};\n            /**\n             * @private\n             * @param {import(\"../Feature\").default} feature Feature\n             * @return {Style} style\n             */\n            _this.latLabelStyle_ = function (feature) {\n                var label = feature.get('graticule_label');\n                if (!this.latLabelStyleCache_[label]) {\n                    this.latLabelStyleCache_[label] = new Style({\n                        text: options.latLabelStyle !== undefined ? options.latLabelStyle :\n                            new Text({\n                                text: label,\n                                font: '12px Calibri,sans-serif',\n                                textAlign: 'right',\n                                fill: new Fill({\n                                    color: 'rgba(0,0,0,1)'\n                                }),\n                                stroke: new Stroke({\n                                    color: 'rgba(255,255,255,1)',\n                                    width: 3\n                                })\n                            })\n                    });\n                }\n                return this.latLabelStyleCache_[label];\n            }.bind(_this);\n            _this.meridiansLabels_ = [];\n            _this.parallelsLabels_ = [];\n        }\n        /**\n         * @type {Array<number>}\n         * @private\n         */\n        _this.intervals_ = options.intervals !== undefined ? options.intervals : INTERVALS;\n        // use a source with a custom loader for lines & text\n        _this.setSource(new VectorSource({\n            loader: _this.loaderFunction.bind(_this),\n            strategy: bbox,\n            features: new Collection(),\n            overlaps: false,\n            useSpatialIndex: false,\n            wrapX: options.wrapX\n        }));\n        /**\n         * feature pool to use when updating graticule\n         * @type {Array<Feature>}\n         * @private\n         */\n        _this.featurePool_ = [];\n        /**\n         * @type {Style}\n         * @private\n         */\n        _this.lineStyle_ = new Style({\n            stroke: _this.strokeStyle_\n        });\n        /**\n         * @type {import(\"../extent.js\").Extent}\n         */\n        _this.renderedExtent_ = null;\n        _this.setRenderOrder(null);\n        _this.tmpExtent_ = null;\n        return _this;\n    }\n    /**\n     * Update geometries in the source based on current view\n     * @param {import(\"../extent\").Extent} extent Extent\n     * @param {number} resolution Resolution\n     * @param {import(\"../proj/Projection.js\").default} projection Projection\n     */\n    Graticule.prototype.loaderFunction = function (extent, resolution, projection) {\n        var source = this.getSource();\n        // only consider the intersection between our own extent & the requested one\n        var layerExtent = this.getExtent() || [-Infinity, -Infinity, Infinity, Infinity];\n        var renderExtent = getIntersection(layerExtent, extent, this.tmpExtent_);\n        // we should not keep track of loaded extents\n        setTimeout(function () {\n            source.removeLoadedExtent(extent);\n        }, 0);\n        if (this.renderedExtent_ && equals(this.renderedExtent_, renderExtent)) {\n            return;\n        }\n        this.renderedExtent_ = renderExtent;\n        // bail out if nothing to render\n        if (isEmpty(renderExtent)) {\n            return;\n        }\n        // update projection info\n        var center = getCenter(renderExtent);\n        var squaredTolerance = resolution * resolution / 4;\n        var updateProjectionInfo = !this.projection_ ||\n            !equivalentProjection(this.projection_, projection);\n        if (updateProjectionInfo) {\n            this.updateProjectionInfo_(projection);\n        }\n        this.createGraticule_(renderExtent, center, resolution, squaredTolerance);\n        // first make sure we have enough features in the pool\n        var featureCount = this.meridians_.length + this.parallels_.length;\n        if (this.meridiansLabels_) {\n            featureCount += this.meridiansLabels_.length;\n        }\n        if (this.parallelsLabels_) {\n            featureCount += this.parallelsLabels_.length;\n        }\n        var feature;\n        while (featureCount > this.featurePool_.length) {\n            feature = new Feature();\n            this.featurePool_.push(feature);\n        }\n        var featuresColl = source.getFeaturesCollection();\n        featuresColl.clear();\n        var poolIndex = 0;\n        // add features for the lines & labels\n        var i, l;\n        for (i = 0, l = this.meridians_.length; i < l; ++i) {\n            feature = this.featurePool_[poolIndex++];\n            feature.setGeometry(this.meridians_[i]);\n            feature.setStyle(this.lineStyle_);\n            featuresColl.push(feature);\n        }\n        for (i = 0, l = this.parallels_.length; i < l; ++i) {\n            feature = this.featurePool_[poolIndex++];\n            feature.setGeometry(this.parallels_[i]);\n            feature.setStyle(this.lineStyle_);\n            featuresColl.push(feature);\n        }\n        var labelData;\n        if (this.meridiansLabels_) {\n            for (i = 0, l = this.meridiansLabels_.length; i < l; ++i) {\n                labelData = this.meridiansLabels_[i];\n                feature = this.featurePool_[poolIndex++];\n                feature.setGeometry(labelData.geom);\n                feature.setStyle(this.lonLabelStyle_);\n                feature.set('graticule_label', labelData.text);\n                featuresColl.push(feature);\n            }\n        }\n        if (this.parallelsLabels_) {\n            for (i = 0, l = this.parallelsLabels_.length; i < l; ++i) {\n                labelData = this.parallelsLabels_[i];\n                feature = this.featurePool_[poolIndex++];\n                feature.setGeometry(labelData.geom);\n                feature.setStyle(this.latLabelStyle_);\n                feature.set('graticule_label', labelData.text);\n                featuresColl.push(feature);\n            }\n        }\n    };\n    /**\n     * @param {number} lon Longitude.\n     * @param {number} minLat Minimal latitude.\n     * @param {number} maxLat Maximal latitude.\n     * @param {number} squaredTolerance Squared tolerance.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {number} index Index.\n     * @return {number} Index.\n     * @private\n     */\n    Graticule.prototype.addMeridian_ = function (lon, minLat, maxLat, squaredTolerance, extent, index) {\n        var lineString = this.getMeridian_(lon, minLat, maxLat, squaredTolerance, index);\n        if (intersects(lineString.getExtent(), extent)) {\n            if (this.meridiansLabels_) {\n                var textPoint = this.getMeridianPoint_(lineString, extent, index);\n                this.meridiansLabels_[index] = {\n                    geom: textPoint,\n                    text: this.lonLabelFormatter_(lon)\n                };\n            }\n            this.meridians_[index++] = lineString;\n        }\n        return index;\n    };\n    /**\n     * @param {number} lat Latitude.\n     * @param {number} minLon Minimal longitude.\n     * @param {number} maxLon Maximal longitude.\n     * @param {number} squaredTolerance Squared tolerance.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {number} index Index.\n     * @return {number} Index.\n     * @private\n     */\n    Graticule.prototype.addParallel_ = function (lat, minLon, maxLon, squaredTolerance, extent, index) {\n        var lineString = this.getParallel_(lat, minLon, maxLon, squaredTolerance, index);\n        if (intersects(lineString.getExtent(), extent)) {\n            if (this.parallelsLabels_) {\n                var textPoint = this.getParallelPoint_(lineString, extent, index);\n                this.parallelsLabels_[index] = {\n                    geom: textPoint,\n                    text: this.latLabelFormatter_(lat)\n                };\n            }\n            this.parallels_[index++] = lineString;\n        }\n        return index;\n    };\n    /**\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {import(\"../coordinate.js\").Coordinate} center Center.\n     * @param {number} resolution Resolution.\n     * @param {number} squaredTolerance Squared tolerance.\n     * @private\n     */\n    Graticule.prototype.createGraticule_ = function (extent, center, resolution, squaredTolerance) {\n        var interval = this.getInterval_(resolution);\n        if (interval == -1) {\n            this.meridians_.length = this.parallels_.length = 0;\n            if (this.meridiansLabels_) {\n                this.meridiansLabels_.length = 0;\n            }\n            if (this.parallelsLabels_) {\n                this.parallelsLabels_.length = 0;\n            }\n            return;\n        }\n        var centerLonLat = this.toLonLatTransform_(center);\n        var centerLon = centerLonLat[0];\n        var centerLat = centerLonLat[1];\n        var maxLines = this.maxLines_;\n        var cnt, idx, lat, lon;\n        var validExtent = [\n            Math.max(extent[0], this.minLonP_),\n            Math.max(extent[1], this.minLatP_),\n            Math.min(extent[2], this.maxLonP_),\n            Math.min(extent[3], this.maxLatP_)\n        ];\n        validExtent = transformExtent(validExtent, this.projection_, 'EPSG:4326');\n        var maxLat = validExtent[3];\n        var maxLon = validExtent[2];\n        var minLat = validExtent[1];\n        var minLon = validExtent[0];\n        // Create meridians\n        centerLon = Math.floor(centerLon / interval) * interval;\n        lon = clamp(centerLon, this.minLon_, this.maxLon_);\n        idx = this.addMeridian_(lon, minLat, maxLat, squaredTolerance, extent, 0);\n        cnt = 0;\n        while (lon != this.minLon_ && cnt++ < maxLines) {\n            lon = Math.max(lon - interval, this.minLon_);\n            idx = this.addMeridian_(lon, minLat, maxLat, squaredTolerance, extent, idx);\n        }\n        lon = clamp(centerLon, this.minLon_, this.maxLon_);\n        cnt = 0;\n        while (lon != this.maxLon_ && cnt++ < maxLines) {\n            lon = Math.min(lon + interval, this.maxLon_);\n            idx = this.addMeridian_(lon, minLat, maxLat, squaredTolerance, extent, idx);\n        }\n        this.meridians_.length = idx;\n        if (this.meridiansLabels_) {\n            this.meridiansLabels_.length = idx;\n        }\n        // Create parallels\n        centerLat = Math.floor(centerLat / interval) * interval;\n        lat = clamp(centerLat, this.minLat_, this.maxLat_);\n        idx = this.addParallel_(lat, minLon, maxLon, squaredTolerance, extent, 0);\n        cnt = 0;\n        while (lat != this.minLat_ && cnt++ < maxLines) {\n            lat = Math.max(lat - interval, this.minLat_);\n            idx = this.addParallel_(lat, minLon, maxLon, squaredTolerance, extent, idx);\n        }\n        lat = clamp(centerLat, this.minLat_, this.maxLat_);\n        cnt = 0;\n        while (lat != this.maxLat_ && cnt++ < maxLines) {\n            lat = Math.min(lat + interval, this.maxLat_);\n            idx = this.addParallel_(lat, minLon, maxLon, squaredTolerance, extent, idx);\n        }\n        this.parallels_.length = idx;\n        if (this.parallelsLabels_) {\n            this.parallelsLabels_.length = idx;\n        }\n    };\n    /**\n     * @param {number} resolution Resolution.\n     * @return {number} The interval in degrees.\n     * @private\n     */\n    Graticule.prototype.getInterval_ = function (resolution) {\n        var centerLon = this.projectionCenterLonLat_[0];\n        var centerLat = this.projectionCenterLonLat_[1];\n        var interval = -1;\n        var target = Math.pow(this.targetSize_ * resolution, 2);\n        /** @type {Array<number>} **/\n        var p1 = [];\n        /** @type {Array<number>} **/\n        var p2 = [];\n        for (var i = 0, ii = this.intervals_.length; i < ii; ++i) {\n            var delta = this.intervals_[i] / 2;\n            p1[0] = centerLon - delta;\n            p1[1] = centerLat - delta;\n            p2[0] = centerLon + delta;\n            p2[1] = centerLat + delta;\n            this.fromLonLatTransform_(p1, p1);\n            this.fromLonLatTransform_(p2, p2);\n            var dist = Math.pow(p2[0] - p1[0], 2) + Math.pow(p2[1] - p1[1], 2);\n            if (dist <= target) {\n                break;\n            }\n            interval = this.intervals_[i];\n        }\n        return interval;\n    };\n    /**\n     * @param {number} lon Longitude.\n     * @param {number} minLat Minimal latitude.\n     * @param {number} maxLat Maximal latitude.\n     * @param {number} squaredTolerance Squared tolerance.\n     * @return {LineString} The meridian line string.\n     * @param {number} index Index.\n     * @private\n     */\n    Graticule.prototype.getMeridian_ = function (lon, minLat, maxLat, squaredTolerance, index) {\n        var flatCoordinates = meridian(lon, minLat, maxLat, this.projection_, squaredTolerance);\n        var lineString = this.meridians_[index];\n        if (!lineString) {\n            lineString = this.meridians_[index] = new LineString(flatCoordinates, GeometryLayout.XY);\n        }\n        else {\n            lineString.setFlatCoordinates(GeometryLayout.XY, flatCoordinates);\n            lineString.changed();\n        }\n        return lineString;\n    };\n    /**\n     * @param {LineString} lineString Meridian\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {number} index Index.\n     * @return {Point} Meridian point.\n     * @private\n     */\n    Graticule.prototype.getMeridianPoint_ = function (lineString, extent, index) {\n        var flatCoordinates = lineString.getFlatCoordinates();\n        var clampedBottom = Math.max(extent[1], flatCoordinates[1]);\n        var clampedTop = Math.min(extent[3], flatCoordinates[flatCoordinates.length - 1]);\n        var lat = clamp(extent[1] + Math.abs(extent[1] - extent[3]) * this.lonLabelPosition_, clampedBottom, clampedTop);\n        var coordinate = [flatCoordinates[0], lat];\n        var point;\n        if (index in this.meridiansLabels_) {\n            point = this.meridiansLabels_[index].geom;\n            point.setCoordinates(coordinate);\n        }\n        else {\n            point = new Point(coordinate);\n        }\n        return point;\n    };\n    /**\n     * Get the list of meridians.  Meridians are lines of equal longitude.\n     * @return {Array<LineString>} The meridians.\n     * @api\n     */\n    Graticule.prototype.getMeridians = function () {\n        return this.meridians_;\n    };\n    /**\n     * @param {number} lat Latitude.\n     * @param {number} minLon Minimal longitude.\n     * @param {number} maxLon Maximal longitude.\n     * @param {number} squaredTolerance Squared tolerance.\n     * @return {LineString} The parallel line string.\n     * @param {number} index Index.\n     * @private\n     */\n    Graticule.prototype.getParallel_ = function (lat, minLon, maxLon, squaredTolerance, index) {\n        var flatCoordinates = parallel(lat, minLon, maxLon, this.projection_, squaredTolerance);\n        var lineString = this.parallels_[index];\n        if (!lineString) {\n            lineString = new LineString(flatCoordinates, GeometryLayout.XY);\n        }\n        else {\n            lineString.setFlatCoordinates(GeometryLayout.XY, flatCoordinates);\n            lineString.changed();\n        }\n        return lineString;\n    };\n    /**\n     * @param {LineString} lineString Parallels.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {number} index Index.\n     * @return {Point} Parallel point.\n     * @private\n     */\n    Graticule.prototype.getParallelPoint_ = function (lineString, extent, index) {\n        var flatCoordinates = lineString.getFlatCoordinates();\n        var clampedLeft = Math.max(extent[0], flatCoordinates[0]);\n        var clampedRight = Math.min(extent[2], flatCoordinates[flatCoordinates.length - 2]);\n        var lon = clamp(extent[0] + Math.abs(extent[0] - extent[2]) * this.latLabelPosition_, clampedLeft, clampedRight);\n        var coordinate = [lon, flatCoordinates[1]];\n        var point;\n        if (index in this.parallelsLabels_) {\n            point = this.parallelsLabels_[index].geom;\n            point.setCoordinates(coordinate);\n        }\n        else {\n            point = new Point(coordinate);\n        }\n        return point;\n    };\n    /**\n     * Get the list of parallels.  Parallels are lines of equal latitude.\n     * @return {Array<LineString>} The parallels.\n     * @api\n     */\n    Graticule.prototype.getParallels = function () {\n        return this.parallels_;\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @private\n     */\n    Graticule.prototype.updateProjectionInfo_ = function (projection) {\n        var epsg4326Projection = getProjection('EPSG:4326');\n        var worldExtent = projection.getWorldExtent();\n        var worldExtentP = transformExtent(worldExtent, epsg4326Projection, projection);\n        this.maxLat_ = worldExtent[3];\n        this.maxLon_ = worldExtent[2];\n        this.minLat_ = worldExtent[1];\n        this.minLon_ = worldExtent[0];\n        this.maxLatP_ = worldExtentP[3];\n        this.maxLonP_ = worldExtentP[2];\n        this.minLatP_ = worldExtentP[1];\n        this.minLonP_ = worldExtentP[0];\n        this.fromLonLatTransform_ = getTransform(epsg4326Projection, projection);\n        this.toLonLatTransform_ = getTransform(projection, epsg4326Projection);\n        this.projectionCenterLonLat_ = this.toLonLatTransform_(getCenter(projection.getExtent()));\n        this.projection_ = projection;\n    };\n    return Graticule;\n}(VectorLayer));\nexport default Graticule;\n//# sourceMappingURL=Graticule.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/layer/Heatmap\n */\nimport { listen } from '../events.js';\nimport { getChangeEventType } from '../Object.js';\nimport { createCanvasContext2D } from '../dom.js';\nimport VectorLayer from './Vector.js';\nimport { assign } from '../obj.js';\nimport WebGLPointsLayerRenderer from '../renderer/webgl/PointsLayer';\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {Array<string>} [gradient=['#00f', '#0ff', '#0f0', '#ff0', '#f00']] The color gradient\n * of the heatmap, specified as an array of CSS color strings.\n * @property {number} [radius=8] Radius size in pixels.\n * @property {number} [blur=15] Blur size in pixels.\n * @property {string|function(import(\"../Feature.js\").default):number} [weight='weight'] The feature\n * attribute to use for the weight or a function that returns a weight from a feature. Weight values\n * should range from 0 to 1 (and values outside will be clamped to that range).\n * @property {import(\"../source/Vector.js\").default} [source] Source.\n */\n/**\n * @enum {string}\n * @private\n */\nvar Property = {\n    BLUR: 'blur',\n    GRADIENT: 'gradient',\n    RADIUS: 'radius'\n};\n/**\n * @const\n * @type {Array<string>}\n */\nvar DEFAULT_GRADIENT = ['#00f', '#0ff', '#0f0', '#ff0', '#f00'];\n/**\n * @classdesc\n * Layer for rendering vector data as a heatmap.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @fires import(\"../render/Event.js\").RenderEvent\n * @api\n */\nvar Heatmap = /** @class */ (function (_super) {\n    __extends(Heatmap, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function Heatmap(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        var baseOptions = assign({}, options);\n        delete baseOptions.gradient;\n        delete baseOptions.radius;\n        delete baseOptions.blur;\n        delete baseOptions.weight;\n        _this = _super.call(this, baseOptions) || this;\n        /**\n         * @private\n         * @type {HTMLCanvasElement}\n         */\n        _this.gradient_ = null;\n        listen(_this, getChangeEventType(Property.GRADIENT), _this.handleGradientChanged_, _this);\n        _this.setGradient(options.gradient ? options.gradient : DEFAULT_GRADIENT);\n        _this.setBlur(options.blur !== undefined ? options.blur : 15);\n        _this.setRadius(options.radius !== undefined ? options.radius : 8);\n        var weight = options.weight ? options.weight : 'weight';\n        if (typeof weight === 'string') {\n            _this.weightFunction_ = function (feature) {\n                return feature.get(weight);\n            };\n        }\n        else {\n            _this.weightFunction_ = weight;\n        }\n        // For performance reasons, don't sort the features before rendering.\n        // The render order is not relevant for a heatmap representation.\n        _this.setRenderOrder(null);\n        return _this;\n    }\n    /**\n     * Return the blur size in pixels.\n     * @return {number} Blur size in pixels.\n     * @api\n     * @observable\n     */\n    Heatmap.prototype.getBlur = function () {\n        return /** @type {number} */ (this.get(Property.BLUR));\n    };\n    /**\n     * Return the gradient colors as array of strings.\n     * @return {Array<string>} Colors.\n     * @api\n     * @observable\n     */\n    Heatmap.prototype.getGradient = function () {\n        return /** @type {Array<string>} */ (this.get(Property.GRADIENT));\n    };\n    /**\n     * Return the size of the radius in pixels.\n     * @return {number} Radius size in pixel.\n     * @api\n     * @observable\n     */\n    Heatmap.prototype.getRadius = function () {\n        return /** @type {number} */ (this.get(Property.RADIUS));\n    };\n    /**\n     * @private\n     */\n    Heatmap.prototype.handleGradientChanged_ = function () {\n        this.gradient_ = createGradient(this.getGradient());\n    };\n    /**\n     * Set the blur size in pixels.\n     * @param {number} blur Blur size in pixels.\n     * @api\n     * @observable\n     */\n    Heatmap.prototype.setBlur = function (blur) {\n        this.set(Property.BLUR, blur);\n    };\n    /**\n     * Set the gradient colors as array of strings.\n     * @param {Array<string>} colors Gradient.\n     * @api\n     * @observable\n     */\n    Heatmap.prototype.setGradient = function (colors) {\n        this.set(Property.GRADIENT, colors);\n    };\n    /**\n     * Set the size of the radius in pixels.\n     * @param {number} radius Radius size in pixel.\n     * @api\n     * @observable\n     */\n    Heatmap.prototype.setRadius = function (radius) {\n        this.set(Property.RADIUS, radius);\n    };\n    /**\n     * @inheritDoc\n     */\n    Heatmap.prototype.createRenderer = function () {\n        return new WebGLPointsLayerRenderer(this, {\n            vertexShader: \"\\n        precision mediump float;\\n        attribute vec2 a_position;\\n        attribute vec2 a_texCoord;\\n        attribute float a_rotateWithView;\\n        attribute vec2 a_offsets;\\n        attribute float a_opacity;\\n\\n        uniform mat4 u_projectionMatrix;\\n        uniform mat4 u_offsetScaleMatrix;\\n        uniform mat4 u_offsetRotateMatrix;\\n        uniform float u_size;\\n\\n        varying vec2 v_texCoord;\\n        varying float v_opacity;\\n\\n        void main(void) {\\n          mat4 offsetMatrix = u_offsetScaleMatrix;\\n          if (a_rotateWithView == 1.0) {\\n            offsetMatrix = u_offsetScaleMatrix * u_offsetRotateMatrix;\\n          }\\n          vec4 offsets = offsetMatrix * vec4(a_offsets, 0.0, 0.0);\\n          gl_Position = u_projectionMatrix * vec4(a_position, 0.0, 1.0) + offsets * u_size;\\n          v_texCoord = a_texCoord;\\n          v_opacity = a_opacity;\\n        }\",\n            fragmentShader: \"\\n        precision mediump float;\\n        uniform float u_resolution;\\n        uniform float u_blurSlope;\\n\\n        varying vec2 v_texCoord;\\n        varying float v_opacity;\\n\\n        void main(void) {\\n          vec2 texCoord = v_texCoord * 2.0 - vec2(1.0, 1.0);\\n          float sqRadius = texCoord.x * texCoord.x + texCoord.y * texCoord.y;\\n          float value = (1.0 - sqrt(sqRadius)) * u_blurSlope;\\n          float alpha = smoothstep(0.0, 1.0, value) * v_opacity;\\n          gl_FragColor = vec4(alpha, alpha, alpha, alpha);\\n        }\",\n            uniforms: {\n                u_size: function () {\n                    return (this.get(Property.RADIUS) + this.get(Property.BLUR)) * 2;\n                }.bind(this),\n                u_blurSlope: function () {\n                    return this.get(Property.RADIUS) / Math.max(1, this.get(Property.BLUR));\n                }.bind(this),\n                u_resolution: function (frameState) {\n                    return frameState.viewState.resolution;\n                }\n            },\n            postProcesses: [\n                {\n                    fragmentShader: \"\\n            precision mediump float;\\n\\n            uniform sampler2D u_image;\\n            uniform sampler2D u_gradientTexture;\\n\\n            varying vec2 v_texCoord;\\n            varying vec2 v_screenCoord;\\n\\n            void main() {\\n              vec4 color = texture2D(u_image, v_texCoord);\\n              gl_FragColor.a = color.a;\\n              gl_FragColor.rgb = texture2D(u_gradientTexture, vec2(0.5, color.a)).rgb;\\n              gl_FragColor.rgb *= gl_FragColor.a;\\n            }\",\n                    uniforms: {\n                        u_gradientTexture: this.gradient_\n                    }\n                }\n            ],\n            opacityCallback: this.weightFunction_\n        });\n    };\n    return Heatmap;\n}(VectorLayer));\n/**\n * @param {Array<string>} colors A list of colored.\n * @return {HTMLCanvasElement} canvas with gradient texture.\n */\nfunction createGradient(colors) {\n    var width = 1;\n    var height = 256;\n    var context = createCanvasContext2D(width, height);\n    var gradient = context.createLinearGradient(0, 0, width, height);\n    var step = 1 / (colors.length - 1);\n    for (var i = 0, ii = colors.length; i < ii; ++i) {\n        gradient.addColorStop(i * step, colors[i]);\n    }\n    context.fillStyle = gradient;\n    context.fillRect(0, 0, width, height);\n    return context.canvas;\n}\nexport default Heatmap;\n//# sourceMappingURL=Heatmap.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/renderer/canvas/ImageLayer\n */\nimport ImageCanvas from '../../ImageCanvas.js';\nimport ViewHint from '../../ViewHint.js';\nimport { equals } from '../../array.js';\nimport { getHeight, getWidth, isEmpty, scaleFromCenter } from '../../extent.js';\nimport { assign } from '../../obj.js';\nimport CanvasImageLayerRenderer from './ImageLayer.js';\nimport CanvasVectorLayerRenderer from './VectorLayer.js';\nimport { listen } from '../../events.js';\nimport EventType from '../../events/EventType.js';\nimport ImageState from '../../ImageState.js';\nimport { renderDeclutterItems } from '../../render.js';\n/**\n * @classdesc\n * Canvas renderer for image layers.\n * @api\n */\nvar CanvasVectorImageLayerRenderer = /** @class */ (function (_super) {\n    __extends(CanvasVectorImageLayerRenderer, _super);\n    /**\n     * @param {import(\"../../layer/VectorImage.js\").default} layer Vector image layer.\n     */\n    function CanvasVectorImageLayerRenderer(layer) {\n        var _this = _super.call(this, layer) || this;\n        /**\n         * @type {!Array<string>}\n         */\n        _this.skippedFeatures_ = [];\n        /**\n         * @private\n         * @type {import(\"./VectorLayer.js\").default}\n         */\n        _this.vectorRenderer_ = new CanvasVectorLayerRenderer(layer);\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.layerImageRatio_ = layer.getImageRatio();\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    CanvasVectorImageLayerRenderer.prototype.disposeInternal = function () {\n        this.vectorRenderer_.dispose();\n        _super.prototype.disposeInternal.call(this);\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasVectorImageLayerRenderer.prototype.prepareFrame = function (frameState, layerState) {\n        var pixelRatio = frameState.pixelRatio;\n        var viewState = frameState.viewState;\n        var viewResolution = viewState.resolution;\n        var hints = frameState.viewHints;\n        var vectorRenderer = this.vectorRenderer_;\n        var renderedExtent = frameState.extent;\n        if (this.layerImageRatio_ !== 1) {\n            renderedExtent = renderedExtent.slice(0);\n            scaleFromCenter(renderedExtent, this.layerImageRatio_);\n        }\n        if (!hints[ViewHint.ANIMATING] && !hints[ViewHint.INTERACTING] && !isEmpty(renderedExtent)) {\n            var skippedFeatures_1 = this.skippedFeatures_;\n            var context = vectorRenderer.context;\n            var imageFrameState_1 = /** @type {import(\"../../PluggableMap.js\").FrameState} */ (assign({}, frameState, {\n                declutterItems: [],\n                size: [\n                    getWidth(renderedExtent) / viewResolution,\n                    getHeight(renderedExtent) / viewResolution\n                ],\n                viewState: /** @type {import(\"../../View.js\").State} */ (assign({}, frameState.viewState, {\n                    rotation: 0\n                }))\n            }));\n            var newSkippedFeatures_1 = Object.keys(imageFrameState_1.skippedFeatureUids).sort();\n            var image_1 = new ImageCanvas(renderedExtent, viewResolution, pixelRatio, context.canvas, function (callback) {\n                if (vectorRenderer.prepareFrame(imageFrameState_1, layerState) &&\n                    (vectorRenderer.replayGroupChanged ||\n                        !equals(skippedFeatures_1, newSkippedFeatures_1))) {\n                    vectorRenderer.renderFrame(imageFrameState_1, layerState);\n                    renderDeclutterItems(imageFrameState_1, null);\n                    skippedFeatures_1 = newSkippedFeatures_1;\n                    callback();\n                }\n            });\n            listen(image_1, EventType.CHANGE, function () {\n                if (image_1.getState() === ImageState.LOADED) {\n                    this.image_ = image_1;\n                    this.skippedFeatures_ = skippedFeatures_1;\n                }\n            }, this);\n            image_1.load();\n        }\n        if (this.image_) {\n            var image = this.image_;\n            var imageResolution = image.getResolution();\n            var imagePixelRatio = image.getPixelRatio();\n            this.renderedResolution = imageResolution * pixelRatio / imagePixelRatio;\n        }\n        return !!this.image_;\n    };\n    /**\n     * @override\n     */\n    CanvasVectorImageLayerRenderer.prototype.preRender = function () { };\n    /**\n     * @override\n     */\n    CanvasVectorImageLayerRenderer.prototype.postRender = function () { };\n    /**\n     * @inheritDoc\n     */\n    CanvasVectorImageLayerRenderer.prototype.forEachFeatureAtCoordinate = function (coordinate, frameState, hitTolerance, callback, declutteredFeatures) {\n        if (this.vectorRenderer_) {\n            return this.vectorRenderer_.forEachFeatureAtCoordinate(coordinate, frameState, hitTolerance, callback, declutteredFeatures);\n        }\n        else {\n            return _super.prototype.forEachFeatureAtCoordinate.call(this, coordinate, frameState, hitTolerance, callback, declutteredFeatures);\n        }\n    };\n    return CanvasVectorImageLayerRenderer;\n}(CanvasImageLayerRenderer));\nexport default CanvasVectorImageLayerRenderer;\n//# sourceMappingURL=VectorImageLayer.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/layer/VectorImage\n */\nimport BaseVectorLayer from './BaseVector.js';\nimport { assign } from '../obj.js';\nimport CanvasVectorImageLayerRenderer from '../renderer/canvas/VectorImageLayer.js';\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the viewport extent used by the\n * renderer when getting features from the vector source for the rendering or hit-detection.\n * Recommended value: the size of the largest symbol, line width or label.\n * @property {import(\"../source/Vector.js\").default} [source] Source.\n * @property {import(\"../PluggableMap.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link module:ol/Map#addLayer}.\n * @property {boolean} [declutter=false] Declutter images and text on this layer. The priority is defined\n * by the `zIndex` of the style and the render order of features. Higher z-index means higher priority.\n * Within the same z-index, a feature rendered before another has higher priority.\n * @property {import(\"../style/Style.js\").StyleLike} [style] Layer style. See\n * {@link module:ol/style} for default style which will be used if this is not defined.\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will\n * be recreated during animations. This means that no vectors will be shown clipped, but the\n * setting will have a performance impact for large amounts of vector data. When set to `false`,\n * batches will be recreated when no animation is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will\n * be recreated during interactions. See also `updateWhileAnimating`.\n * @property {number} [imageRatio=1] Ratio by which the rendered extent should be larger than the\n * viewport extent. A larger ratio avoids cut images during panning, but will cause a decrease in performance.\n */\n/**\n * @classdesc\n * Vector data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @api\n */\nvar VectorImageLayer = /** @class */ (function (_super) {\n    __extends(VectorImageLayer, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function VectorImageLayer(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : /** @type {Options} */ ({});\n        var baseOptions = assign({}, options);\n        delete baseOptions.imageRatio;\n        _this = _super.call(this, baseOptions) || this;\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.imageRatio_ = options.imageRatio !== undefined ? options.imageRatio : 1;\n        return _this;\n    }\n    /**\n     * @return {number} Ratio between rendered extent size and viewport extent size.\n     */\n    VectorImageLayer.prototype.getImageRatio = function () {\n        return this.imageRatio_;\n    };\n    /**\n     * Create a renderer for this layer.\n     * @return {import(\"../renderer/Layer.js\").default} A layer renderer.\n     * @protected\n     */\n    VectorImageLayer.prototype.createRenderer = function () {\n        return new CanvasVectorImageLayerRenderer(this);\n    };\n    return VectorImageLayer;\n}(BaseVectorLayer));\nexport default VectorImageLayer;\n//# sourceMappingURL=VectorImage.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/layer/VectorTile\n */\nimport { assert } from '../asserts.js';\nimport TileProperty from './TileProperty.js';\nimport BaseVectorLayer from './BaseVector.js';\nimport VectorTileRenderType from './VectorTileRenderType.js';\nimport CanvasVectorTileLayerRenderer from '../renderer/canvas/VectorTileLayer.js';\nimport { assign } from '../obj.js';\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the tile extent used by the\n * renderer when getting features from the vector tile for the rendering or hit-detection.\n * Recommended value: Vector tiles are usually generated with a buffer, so this value should match\n * the largest possible buffer of the used tiles. It should be at least the size of the largest\n * point symbol or line width.\n * @property {import(\"./VectorTileRenderType.js\").default|string} [renderMode='hybrid'] Render mode for vector tiles:\n *  * `'image'`: Vector tiles are rendered as images. Great performance, but point symbols and texts\n *    are always rotated with the view and pixels are scaled during zoom animations. When `declutter`\n *    is set to `true`, the decluttering is done per tile resulting in labels and point symbols getting\n *    cut off at tile boundaries.\n *  * `'hybrid'`: Polygon and line elements are rendered as images, so pixels are scaled during zoom\n *    animations. Point symbols and texts are accurately rendered as vectors and can stay upright on\n *    rotated views.\n *\n * @property {import(\"../source/VectorTile.js\").default} [source] Source.\n * @property {import(\"../PluggableMap.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link module:ol/Map#addLayer}.\n * @property {boolean} [declutter=false] Declutter images and text. Decluttering is applied to all\n * image and text styles of all Vector and VectorTile layers that have set this to `true`. The priority\n * is defined by the z-index of the layer, the `zIndex` of the style and the render order of features.\n * Higher z-index means higher priority. Within the same z-index, a feature rendered before another has\n * higher priority.\n * @property {import(\"../style/Style.js\").StyleLike} [style] Layer style. See\n * {@link module:ol/style} for default style which will be used if this is not defined.\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will be\n * recreated during animations. This means that no vectors will be shown clipped, but the setting\n * will have a performance impact for large amounts of vector data. When set to `false`, batches\n * will be recreated when no animation is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will be\n * recreated during interactions. See also `updateWhileAnimating`.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {boolean} [useInterimTilesOnError=true] Use interim tiles on error.\n */\n/**\n * @classdesc\n * Layer for vector tile data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @param {Options=} opt_options Options.\n * @extends {BaseVectorLayer<import(\"../source/VectorTile.js\").default>}\n * @api\n */\nvar VectorTileLayer = /** @class */ (function (_super) {\n    __extends(VectorTileLayer, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function VectorTileLayer(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        var baseOptions = /** @type {Object} */ (assign({}, options));\n        delete baseOptions.preload;\n        delete baseOptions.useInterimTilesOnError;\n        _this = _super.call(this, /** @type {import(\"./Vector.js\").Options} */ (baseOptions)) || this;\n        var renderMode = options.renderMode || VectorTileRenderType.HYBRID;\n        assert(renderMode == undefined ||\n            renderMode == VectorTileRenderType.IMAGE ||\n            renderMode == VectorTileRenderType.HYBRID, 28); // `renderMode` must be `'image'` or `'hybrid'`\n        /**\n         * @private\n         * @type {VectorTileRenderType}\n         */\n        _this.renderMode_ = renderMode;\n        _this.setPreload(options.preload ? options.preload : 0);\n        _this.setUseInterimTilesOnError(options.useInterimTilesOnError !== undefined ?\n            options.useInterimTilesOnError : true);\n        return _this;\n    }\n    /**\n     * Create a renderer for this layer.\n     * @return {import(\"../renderer/Layer.js\").default} A layer renderer.\n     * @protected\n     */\n    VectorTileLayer.prototype.createRenderer = function () {\n        return new CanvasVectorTileLayerRenderer(this);\n    };\n    /**\n     * @return {VectorTileRenderType} The render mode.\n     */\n    VectorTileLayer.prototype.getRenderMode = function () {\n        return this.renderMode_;\n    };\n    /**\n     * Return the level as number to which we will preload tiles up to.\n     * @return {number} The level to preload tiles up to.\n     * @observable\n     * @api\n     */\n    VectorTileLayer.prototype.getPreload = function () {\n        return /** @type {number} */ (this.get(TileProperty.PRELOAD));\n    };\n    /**\n     * Whether we use interim tiles on error.\n     * @return {boolean} Use interim tiles on error.\n     * @observable\n     * @api\n     */\n    VectorTileLayer.prototype.getUseInterimTilesOnError = function () {\n        return /** @type {boolean} */ (this.get(TileProperty.USE_INTERIM_TILES_ON_ERROR));\n    };\n    /**\n     * Set the level as number to which we will preload tiles up to.\n     * @param {number} preload The level to preload tiles up to.\n     * @observable\n     * @api\n     */\n    VectorTileLayer.prototype.setPreload = function (preload) {\n        this.set(TileProperty.PRELOAD, preload);\n    };\n    /**\n     * Set whether we use interim tiles on error.\n     * @param {boolean} useInterimTilesOnError Use interim tiles on error.\n     * @observable\n     * @api\n     */\n    VectorTileLayer.prototype.setUseInterimTilesOnError = function (useInterimTilesOnError) {\n        this.set(TileProperty.USE_INTERIM_TILES_ON_ERROR, useInterimTilesOnError);\n    };\n    return VectorTileLayer;\n}(BaseVectorLayer));\nexport default VectorTileLayer;\n//# sourceMappingURL=VectorTile.js.map","/**\n * @module ol/interaction/DragAndDrop\n */\n// FIXME should handle all geo-referenced data, not just vector data\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { TRUE } from '../functions.js';\nimport { listen, unlistenByKey } from '../events.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport Interaction from './Interaction.js';\nimport { get as getProjection } from '../proj.js';\n/**\n * @typedef {Object} Options\n * @property {Array<typeof import(\"../format/Feature.js\").default>} [formatConstructors] Format constructors.\n * @property {import(\"../source/Vector.js\").default} [source] Optional vector source where features will be added.  If a source is provided\n * all existing features will be removed and new features will be added when\n * they are dropped on the target.  If you want to add features to a vector\n * source without removing the existing features (append only), instead of\n * providing the source option listen for the \"addfeatures\" event.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Target projection. By default, the map's view's projection is used.\n * @property {HTMLElement} [target] The element that is used as the drop target, default is the viewport element.\n */\n/**\n * @enum {string}\n */\nvar DragAndDropEventType = {\n    /**\n     * Triggered when features are added\n     * @event DragAndDropEvent#addfeatures\n     * @api\n     */\n    ADD_FEATURES: 'addfeatures'\n};\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/DragAndDrop~DragAndDrop} instances are instances\n * of this type.\n */\nvar DragAndDropEvent = /** @class */ (function (_super) {\n    __extends(DragAndDropEvent, _super);\n    /**\n     * @param {DragAndDropEventType} type Type.\n     * @param {File} file File.\n     * @param {Array<import(\"../Feature.js\").default>=} opt_features Features.\n     * @param {import(\"../proj/Projection.js\").default=} opt_projection Projection.\n     */\n    function DragAndDropEvent(type, file, opt_features, opt_projection) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * The features parsed from dropped data.\n         * @type {Array<import(\"../Feature.js\").FeatureLike>|undefined}\n         * @api\n         */\n        _this.features = opt_features;\n        /**\n         * The dropped file.\n         * @type {File}\n         * @api\n         */\n        _this.file = file;\n        /**\n         * The feature projection.\n         * @type {import(\"../proj/Projection.js\").default|undefined}\n         * @api\n         */\n        _this.projection = opt_projection;\n        return _this;\n    }\n    return DragAndDropEvent;\n}(Event));\n/**\n * @classdesc\n * Handles input of vector data by drag and drop.\n * @api\n *\n * @fires DragAndDropEvent\n */\nvar DragAndDrop = /** @class */ (function (_super) {\n    __extends(DragAndDrop, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function DragAndDrop(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, {\n            handleEvent: TRUE\n        }) || this;\n        /**\n         * @private\n         * @type {Array<typeof import(\"../format/Feature.js\").default>}\n         */\n        _this.formatConstructors_ = options.formatConstructors ?\n            options.formatConstructors : [];\n        /**\n         * @private\n         * @type {import(\"../proj/Projection.js\").default}\n         */\n        _this.projection_ = options.projection ?\n            getProjection(options.projection) : null;\n        /**\n         * @private\n         * @type {Array<import(\"../events.js\").EventsKey>}\n         */\n        _this.dropListenKeys_ = null;\n        /**\n         * @private\n         * @type {import(\"../source/Vector.js\").default}\n         */\n        _this.source_ = options.source || null;\n        /**\n         * @private\n         * @type {HTMLElement}\n         */\n        _this.target = options.target ? options.target : null;\n        return _this;\n    }\n    /**\n     * @param {File} file File.\n     * @param {Event} event Load event.\n     * @private\n     */\n    DragAndDrop.prototype.handleResult_ = function (file, event) {\n        var result = event.target.result;\n        var map = this.getMap();\n        var projection = this.projection_;\n        if (!projection) {\n            var view = map.getView();\n            projection = view.getProjection();\n        }\n        var formatConstructors = this.formatConstructors_;\n        var features = [];\n        for (var i = 0, ii = formatConstructors.length; i < ii; ++i) {\n            var format = new formatConstructors[i]();\n            features = this.tryReadFeatures_(format, result, {\n                featureProjection: projection\n            });\n            if (features && features.length > 0) {\n                break;\n            }\n        }\n        if (this.source_) {\n            this.source_.clear();\n            this.source_.addFeatures(features);\n        }\n        this.dispatchEvent(new DragAndDropEvent(DragAndDropEventType.ADD_FEATURES, file, features, projection));\n    };\n    /**\n     * @private\n     */\n    DragAndDrop.prototype.registerListeners_ = function () {\n        var map = this.getMap();\n        if (map) {\n            var dropArea = this.target ? this.target : map.getViewport();\n            this.dropListenKeys_ = [\n                listen(dropArea, EventType.DROP, handleDrop, this),\n                listen(dropArea, EventType.DRAGENTER, handleStop, this),\n                listen(dropArea, EventType.DRAGOVER, handleStop, this),\n                listen(dropArea, EventType.DROP, handleStop, this)\n            ];\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    DragAndDrop.prototype.setActive = function (active) {\n        _super.prototype.setActive.call(this, active);\n        if (active) {\n            this.registerListeners_();\n        }\n        else {\n            this.unregisterListeners_();\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    DragAndDrop.prototype.setMap = function (map) {\n        this.unregisterListeners_();\n        _super.prototype.setMap.call(this, map);\n        if (this.getActive()) {\n            this.registerListeners_();\n        }\n    };\n    /**\n     * @param {import(\"../format/Feature.js\").default} format Format.\n     * @param {string} text Text.\n     * @param {import(\"../format/Feature.js\").ReadOptions} options Read options.\n     * @private\n     * @return {Array<import(\"../Feature.js\").FeatureLike>} Features.\n     */\n    DragAndDrop.prototype.tryReadFeatures_ = function (format, text, options) {\n        try {\n            return format.readFeatures(text, options);\n        }\n        catch (e) {\n            return null;\n        }\n    };\n    /**\n     * @private\n     */\n    DragAndDrop.prototype.unregisterListeners_ = function () {\n        if (this.dropListenKeys_) {\n            this.dropListenKeys_.forEach(unlistenByKey);\n            this.dropListenKeys_ = null;\n        }\n    };\n    return DragAndDrop;\n}(Interaction));\n/**\n * @param {DragEvent} event Event.\n * @this {DragAndDrop}\n */\nfunction handleDrop(event) {\n    var files = event.dataTransfer.files;\n    for (var i = 0, ii = files.length; i < ii; ++i) {\n        var file = files.item(i);\n        var reader = new FileReader();\n        reader.addEventListener(EventType.LOAD, this.handleResult_.bind(this, file));\n        reader.readAsText(file);\n    }\n}\n/**\n * @param {DragEvent} event Event.\n */\nfunction handleStop(event) {\n    event.stopPropagation();\n    event.preventDefault();\n    event.dataTransfer.dropEffect = 'copy';\n}\nexport default DragAndDrop;\n//# sourceMappingURL=DragAndDrop.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/DragRotateAndZoom\n */\nimport { shiftKeyOnly, mouseOnly } from '../events/condition.js';\nimport PointerInteraction from './Pointer.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~shiftKeyOnly}.\n * @property {number} [duration=400] Animation duration in milliseconds.\n */\n/**\n * @classdesc\n * Allows the user to zoom and rotate the map by clicking and dragging\n * on the map.  By default, this interaction is limited to when the shift\n * key is held down.\n *\n * This interaction is only supported for mouse devices.\n *\n * And this interaction is not included in the default interactions.\n * @api\n */\nvar DragRotateAndZoom = /** @class */ (function (_super) {\n    __extends(DragRotateAndZoom, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function DragRotateAndZoom(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, /** @type {import(\"./Pointer.js\").Options} */ (options)) || this;\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.condition_ = options.condition ? options.condition : shiftKeyOnly;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.lastAngle_ = undefined;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.lastMagnitude_ = undefined;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.lastScaleDelta_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 400;\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    DragRotateAndZoom.prototype.handleDragEvent = function (mapBrowserEvent) {\n        if (!mouseOnly(mapBrowserEvent)) {\n            return;\n        }\n        var map = mapBrowserEvent.map;\n        var size = map.getSize();\n        var offset = mapBrowserEvent.pixel;\n        var deltaX = offset[0] - size[0] / 2;\n        var deltaY = size[1] / 2 - offset[1];\n        var theta = Math.atan2(deltaY, deltaX);\n        var magnitude = Math.sqrt(deltaX * deltaX + deltaY * deltaY);\n        var view = map.getView();\n        if (this.lastAngle_ !== undefined) {\n            var angleDelta = this.lastAngle_ - theta;\n            view.adjustRotation(angleDelta);\n        }\n        this.lastAngle_ = theta;\n        if (this.lastMagnitude_ !== undefined) {\n            view.adjustResolution(this.lastMagnitude_ / magnitude);\n        }\n        if (this.lastMagnitude_ !== undefined) {\n            this.lastScaleDelta_ = this.lastMagnitude_ / magnitude;\n        }\n        this.lastMagnitude_ = magnitude;\n    };\n    /**\n     * @inheritDoc\n     */\n    DragRotateAndZoom.prototype.handleUpEvent = function (mapBrowserEvent) {\n        if (!mouseOnly(mapBrowserEvent)) {\n            return true;\n        }\n        var map = mapBrowserEvent.map;\n        var view = map.getView();\n        var direction = this.lastScaleDelta_ > 1 ? 1 : -1;\n        view.endInteraction(this.duration_, direction);\n        this.lastScaleDelta_ = 0;\n        return false;\n    };\n    /**\n     * @inheritDoc\n     */\n    DragRotateAndZoom.prototype.handleDownEvent = function (mapBrowserEvent) {\n        if (!mouseOnly(mapBrowserEvent)) {\n            return false;\n        }\n        if (this.condition_(mapBrowserEvent)) {\n            mapBrowserEvent.map.getView().beginInteraction();\n            this.lastAngle_ = undefined;\n            this.lastMagnitude_ = undefined;\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    return DragRotateAndZoom;\n}(PointerInteraction));\nexport default DragRotateAndZoom;\n//# sourceMappingURL=DragRotateAndZoom.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/Circle\n */\nimport { createOrUpdate, forEachCorner, intersects } from '../extent.js';\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport { deflateCoordinate } from './flat/deflate.js';\nimport { rotate, translate } from './flat/transform.js';\n/**\n * @classdesc\n * Circle geometry.\n *\n * @api\n */\nvar Circle = /** @class */ (function (_super) {\n    __extends(Circle, _super);\n    /**\n     * @param {!import(\"../coordinate.js\").Coordinate} center Center.\n     *     For internal use, flat coordinates in combination with `opt_layout` and no\n     *     `opt_radius` are also accepted.\n     * @param {number=} opt_radius Radius.\n     * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n     */\n    function Circle(center, opt_radius, opt_layout) {\n        var _this = _super.call(this) || this;\n        if (opt_layout !== undefined && opt_radius === undefined) {\n            _this.setFlatCoordinates(opt_layout, center);\n        }\n        else {\n            var radius = opt_radius ? opt_radius : 0;\n            _this.setCenterAndRadius(center, radius, opt_layout);\n        }\n        return _this;\n    }\n    /**\n     * Make a complete copy of the geometry.\n     * @return {!Circle} Clone.\n     * @override\n     * @api\n     */\n    Circle.prototype.clone = function () {\n        return new Circle(this.flatCoordinates.slice(), undefined, this.layout);\n    };\n    /**\n     * @inheritDoc\n     */\n    Circle.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\n        var flatCoordinates = this.flatCoordinates;\n        var dx = x - flatCoordinates[0];\n        var dy = y - flatCoordinates[1];\n        var squaredDistance = dx * dx + dy * dy;\n        if (squaredDistance < minSquaredDistance) {\n            if (squaredDistance === 0) {\n                for (var i = 0; i < this.stride; ++i) {\n                    closestPoint[i] = flatCoordinates[i];\n                }\n            }\n            else {\n                var delta = this.getRadius() / Math.sqrt(squaredDistance);\n                closestPoint[0] = flatCoordinates[0] + delta * dx;\n                closestPoint[1] = flatCoordinates[1] + delta * dy;\n                for (var i = 2; i < this.stride; ++i) {\n                    closestPoint[i] = flatCoordinates[i];\n                }\n            }\n            closestPoint.length = this.stride;\n            return squaredDistance;\n        }\n        else {\n            return minSquaredDistance;\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    Circle.prototype.containsXY = function (x, y) {\n        var flatCoordinates = this.flatCoordinates;\n        var dx = x - flatCoordinates[0];\n        var dy = y - flatCoordinates[1];\n        return dx * dx + dy * dy <= this.getRadiusSquared_();\n    };\n    /**\n     * Return the center of the circle as {@link module:ol/coordinate~Coordinate coordinate}.\n     * @return {import(\"../coordinate.js\").Coordinate} Center.\n     * @api\n     */\n    Circle.prototype.getCenter = function () {\n        return this.flatCoordinates.slice(0, this.stride);\n    };\n    /**\n     * @inheritDoc\n     */\n    Circle.prototype.computeExtent = function (extent) {\n        var flatCoordinates = this.flatCoordinates;\n        var radius = flatCoordinates[this.stride] - flatCoordinates[0];\n        return createOrUpdate(flatCoordinates[0] - radius, flatCoordinates[1] - radius, flatCoordinates[0] + radius, flatCoordinates[1] + radius, extent);\n    };\n    /**\n     * Return the radius of the circle.\n     * @return {number} Radius.\n     * @api\n     */\n    Circle.prototype.getRadius = function () {\n        return Math.sqrt(this.getRadiusSquared_());\n    };\n    /**\n     * @private\n     * @return {number} Radius squared.\n     */\n    Circle.prototype.getRadiusSquared_ = function () {\n        var dx = this.flatCoordinates[this.stride] - this.flatCoordinates[0];\n        var dy = this.flatCoordinates[this.stride + 1] - this.flatCoordinates[1];\n        return dx * dx + dy * dy;\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    Circle.prototype.getType = function () {\n        return GeometryType.CIRCLE;\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    Circle.prototype.intersectsExtent = function (extent) {\n        var circleExtent = this.getExtent();\n        if (intersects(extent, circleExtent)) {\n            var center = this.getCenter();\n            if (extent[0] <= center[0] && extent[2] >= center[0]) {\n                return true;\n            }\n            if (extent[1] <= center[1] && extent[3] >= center[1]) {\n                return true;\n            }\n            return forEachCorner(extent, this.intersectsCoordinate.bind(this));\n        }\n        return false;\n    };\n    /**\n     * Set the center of the circle as {@link module:ol/coordinate~Coordinate coordinate}.\n     * @param {import(\"../coordinate.js\").Coordinate} center Center.\n     * @api\n     */\n    Circle.prototype.setCenter = function (center) {\n        var stride = this.stride;\n        var radius = this.flatCoordinates[stride] - this.flatCoordinates[0];\n        var flatCoordinates = center.slice();\n        flatCoordinates[stride] = flatCoordinates[0] + radius;\n        for (var i = 1; i < stride; ++i) {\n            flatCoordinates[stride + i] = center[i];\n        }\n        this.setFlatCoordinates(this.layout, flatCoordinates);\n        this.changed();\n    };\n    /**\n     * Set the center (as {@link module:ol/coordinate~Coordinate coordinate}) and the radius (as\n     * number) of the circle.\n     * @param {!import(\"../coordinate.js\").Coordinate} center Center.\n     * @param {number} radius Radius.\n     * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n     * @api\n     */\n    Circle.prototype.setCenterAndRadius = function (center, radius, opt_layout) {\n        this.setLayout(opt_layout, center, 0);\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = [];\n        }\n        /** @type {Array<number>} */\n        var flatCoordinates = this.flatCoordinates;\n        var offset = deflateCoordinate(flatCoordinates, 0, center, this.stride);\n        flatCoordinates[offset++] = flatCoordinates[0] + radius;\n        for (var i = 1, ii = this.stride; i < ii; ++i) {\n            flatCoordinates[offset++] = flatCoordinates[i];\n        }\n        flatCoordinates.length = offset;\n        this.changed();\n    };\n    /**\n     * @inheritDoc\n     */\n    Circle.prototype.getCoordinates = function () {\n        return null;\n    };\n    /**\n     * @inheritDoc\n     */\n    Circle.prototype.setCoordinates = function (coordinates, opt_layout) { };\n    /**\n     * Set the radius of the circle. The radius is in the units of the projection.\n     * @param {number} radius Radius.\n     * @api\n     */\n    Circle.prototype.setRadius = function (radius) {\n        this.flatCoordinates[this.stride] = this.flatCoordinates[0] + radius;\n        this.changed();\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    Circle.prototype.rotate = function (angle, anchor) {\n        var center = this.getCenter();\n        var stride = this.getStride();\n        this.setCenter(rotate(center, 0, center.length, stride, angle, anchor, center));\n        this.changed();\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    Circle.prototype.translate = function (deltaX, deltaY) {\n        var center = this.getCenter();\n        var stride = this.getStride();\n        this.setCenter(translate(center, 0, center.length, stride, deltaX, deltaY, center));\n        this.changed();\n    };\n    return Circle;\n}(SimpleGeometry));\n/**\n * Transform each coordinate of the circle from one coordinate reference system\n * to another. The geometry is modified in place.\n * If you do not want the geometry modified in place, first clone() it and\n * then use this function on the clone.\n *\n * Internally a circle is currently represented by two points: the center of\n * the circle `[cx, cy]`, and the point to the right of the circle\n * `[cx + r, cy]`. This `transform` function just transforms these two points.\n * So the resulting geometry is also a circle, and that circle does not\n * correspond to the shape that would be obtained by transforming every point\n * of the original circle.\n *\n * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\n *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\n *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n * @return {Circle} This geometry.  Note that original geometry is\n *     modified in place.\n * @function\n * @api\n */\nCircle.prototype.transform;\nexport default Circle;\n//# sourceMappingURL=Circle.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/MultiLineString\n */\nimport { extend } from '../array.js';\nimport { closestSquaredDistanceXY } from '../extent.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport LineString from './LineString.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport { assignClosestArrayPoint, arrayMaxSquaredDelta } from './flat/closest.js';\nimport { deflateCoordinatesArray } from './flat/deflate.js';\nimport { inflateCoordinatesArray } from './flat/inflate.js';\nimport { interpolatePoint, lineStringsCoordinateAtM } from './flat/interpolate.js';\nimport { intersectsLineStringArray } from './flat/intersectsextent.js';\nimport { douglasPeuckerArray } from './flat/simplify.js';\n/**\n * @classdesc\n * Multi-linestring geometry.\n *\n * @api\n */\nvar MultiLineString = /** @class */ (function (_super) {\n    __extends(MultiLineString, _super);\n    /**\n     * @param {Array<Array<import(\"../coordinate.js\").Coordinate>|LineString>|Array<number>} coordinates\n     *     Coordinates or LineString geometries. (For internal use, flat coordinates in\n     *     combination with `opt_layout` and `opt_ends` are also accepted.)\n     * @param {GeometryLayout=} opt_layout Layout.\n     * @param {Array<number>=} opt_ends Flat coordinate ends for internal use.\n     */\n    function MultiLineString(coordinates, opt_layout, opt_ends) {\n        var _this = _super.call(this) || this;\n        /**\n         * @type {Array<number>}\n         * @private\n         */\n        _this.ends_ = [];\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDelta_ = -1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDeltaRevision_ = -1;\n        if (Array.isArray(coordinates[0])) {\n            _this.setCoordinates(/** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (coordinates), opt_layout);\n        }\n        else if (opt_layout !== undefined && opt_ends) {\n            _this.setFlatCoordinates(opt_layout, /** @type {Array<number>} */ (coordinates));\n            _this.ends_ = opt_ends;\n        }\n        else {\n            var layout = _this.getLayout();\n            var lineStrings = /** @type {Array<LineString>} */ (coordinates);\n            var flatCoordinates = [];\n            var ends = [];\n            for (var i = 0, ii = lineStrings.length; i < ii; ++i) {\n                var lineString = lineStrings[i];\n                if (i === 0) {\n                    layout = lineString.getLayout();\n                }\n                extend(flatCoordinates, lineString.getFlatCoordinates());\n                ends.push(flatCoordinates.length);\n            }\n            _this.setFlatCoordinates(layout, flatCoordinates);\n            _this.ends_ = ends;\n        }\n        return _this;\n    }\n    /**\n     * Append the passed linestring to the multilinestring.\n     * @param {LineString} lineString LineString.\n     * @api\n     */\n    MultiLineString.prototype.appendLineString = function (lineString) {\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = lineString.getFlatCoordinates().slice();\n        }\n        else {\n            extend(this.flatCoordinates, lineString.getFlatCoordinates().slice());\n        }\n        this.ends_.push(this.flatCoordinates.length);\n        this.changed();\n    };\n    /**\n     * Make a complete copy of the geometry.\n     * @return {!MultiLineString} Clone.\n     * @override\n     * @api\n     */\n    MultiLineString.prototype.clone = function () {\n        return new MultiLineString(this.flatCoordinates.slice(), this.layout, this.ends_.slice());\n    };\n    /**\n     * @inheritDoc\n     */\n    MultiLineString.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\n        if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n            return minSquaredDistance;\n        }\n        if (this.maxDeltaRevision_ != this.getRevision()) {\n            this.maxDelta_ = Math.sqrt(arrayMaxSquaredDelta(this.flatCoordinates, 0, this.ends_, this.stride, 0));\n            this.maxDeltaRevision_ = this.getRevision();\n        }\n        return assignClosestArrayPoint(this.flatCoordinates, 0, this.ends_, this.stride, this.maxDelta_, false, x, y, closestPoint, minSquaredDistance);\n    };\n    /**\n     * Returns the coordinate at `m` using linear interpolation, or `null` if no\n     * such coordinate exists.\n     *\n     * `opt_extrapolate` controls extrapolation beyond the range of Ms in the\n     * MultiLineString. If `opt_extrapolate` is `true` then Ms less than the first\n     * M will return the first coordinate and Ms greater than the last M will\n     * return the last coordinate.\n     *\n     * `opt_interpolate` controls interpolation between consecutive LineStrings\n     * within the MultiLineString. If `opt_interpolate` is `true` the coordinates\n     * will be linearly interpolated between the last coordinate of one LineString\n     * and the first coordinate of the next LineString.  If `opt_interpolate` is\n     * `false` then the function will return `null` for Ms falling between\n     * LineStrings.\n     *\n     * @param {number} m M.\n     * @param {boolean=} opt_extrapolate Extrapolate. Default is `false`.\n     * @param {boolean=} opt_interpolate Interpolate. Default is `false`.\n     * @return {import(\"../coordinate.js\").Coordinate} Coordinate.\n     * @api\n     */\n    MultiLineString.prototype.getCoordinateAtM = function (m, opt_extrapolate, opt_interpolate) {\n        if ((this.layout != GeometryLayout.XYM &&\n            this.layout != GeometryLayout.XYZM) ||\n            this.flatCoordinates.length === 0) {\n            return null;\n        }\n        var extrapolate = opt_extrapolate !== undefined ? opt_extrapolate : false;\n        var interpolate = opt_interpolate !== undefined ? opt_interpolate : false;\n        return lineStringsCoordinateAtM(this.flatCoordinates, 0, this.ends_, this.stride, m, extrapolate, interpolate);\n    };\n    /**\n     * Return the coordinates of the multilinestring.\n     * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n     * @override\n     * @api\n     */\n    MultiLineString.prototype.getCoordinates = function () {\n        return inflateCoordinatesArray(this.flatCoordinates, 0, this.ends_, this.stride);\n    };\n    /**\n     * @return {Array<number>} Ends.\n     */\n    MultiLineString.prototype.getEnds = function () {\n        return this.ends_;\n    };\n    /**\n     * Return the linestring at the specified index.\n     * @param {number} index Index.\n     * @return {LineString} LineString.\n     * @api\n     */\n    MultiLineString.prototype.getLineString = function (index) {\n        if (index < 0 || this.ends_.length <= index) {\n            return null;\n        }\n        return new LineString(this.flatCoordinates.slice(index === 0 ? 0 : this.ends_[index - 1], this.ends_[index]), this.layout);\n    };\n    /**\n     * Return the linestrings of this multilinestring.\n     * @return {Array<LineString>} LineStrings.\n     * @api\n     */\n    MultiLineString.prototype.getLineStrings = function () {\n        var flatCoordinates = this.flatCoordinates;\n        var ends = this.ends_;\n        var layout = this.layout;\n        /** @type {Array<LineString>} */\n        var lineStrings = [];\n        var offset = 0;\n        for (var i = 0, ii = ends.length; i < ii; ++i) {\n            var end = ends[i];\n            var lineString = new LineString(flatCoordinates.slice(offset, end), layout);\n            lineStrings.push(lineString);\n            offset = end;\n        }\n        return lineStrings;\n    };\n    /**\n     * @return {Array<number>} Flat midpoints.\n     */\n    MultiLineString.prototype.getFlatMidpoints = function () {\n        var midpoints = [];\n        var flatCoordinates = this.flatCoordinates;\n        var offset = 0;\n        var ends = this.ends_;\n        var stride = this.stride;\n        for (var i = 0, ii = ends.length; i < ii; ++i) {\n            var end = ends[i];\n            var midpoint = interpolatePoint(flatCoordinates, offset, end, stride, 0.5);\n            extend(midpoints, midpoint);\n            offset = end;\n        }\n        return midpoints;\n    };\n    /**\n     * @inheritDoc\n     */\n    MultiLineString.prototype.getSimplifiedGeometryInternal = function (squaredTolerance) {\n        var simplifiedFlatCoordinates = [];\n        var simplifiedEnds = [];\n        simplifiedFlatCoordinates.length = douglasPeuckerArray(this.flatCoordinates, 0, this.ends_, this.stride, squaredTolerance, simplifiedFlatCoordinates, 0, simplifiedEnds);\n        return new MultiLineString(simplifiedFlatCoordinates, GeometryLayout.XY, simplifiedEnds);\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    MultiLineString.prototype.getType = function () {\n        return GeometryType.MULTI_LINE_STRING;\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    MultiLineString.prototype.intersectsExtent = function (extent) {\n        return intersectsLineStringArray(this.flatCoordinates, 0, this.ends_, this.stride, extent);\n    };\n    /**\n     * Set the coordinates of the multilinestring.\n     * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n     * @param {GeometryLayout=} opt_layout Layout.\n     * @override\n     * @api\n     */\n    MultiLineString.prototype.setCoordinates = function (coordinates, opt_layout) {\n        this.setLayout(opt_layout, coordinates, 2);\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = [];\n        }\n        var ends = deflateCoordinatesArray(this.flatCoordinates, 0, coordinates, this.stride, this.ends_);\n        this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n        this.changed();\n    };\n    return MultiLineString;\n}(SimpleGeometry));\nexport default MultiLineString;\n//# sourceMappingURL=MultiLineString.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/MultiPoint\n */\nimport { extend } from '../array.js';\nimport { closestSquaredDistanceXY, containsXY } from '../extent.js';\nimport GeometryType from './GeometryType.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport { deflateCoordinates } from './flat/deflate.js';\nimport { inflateCoordinates } from './flat/inflate.js';\nimport { squaredDistance as squaredDx } from '../math.js';\n/**\n * @classdesc\n * Multi-point geometry.\n *\n * @api\n */\nvar MultiPoint = /** @class */ (function (_super) {\n    __extends(MultiPoint, _super);\n    /**\n     * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n     *     For internal use, flat coordinates in combination with `opt_layout` are also accepted.\n     * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n     */\n    function MultiPoint(coordinates, opt_layout) {\n        var _this = _super.call(this) || this;\n        if (opt_layout && !Array.isArray(coordinates[0])) {\n            _this.setFlatCoordinates(opt_layout, /** @type {Array<number>} */ (coordinates));\n        }\n        else {\n            _this.setCoordinates(/** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (coordinates), opt_layout);\n        }\n        return _this;\n    }\n    /**\n     * Append the passed point to this multipoint.\n     * @param {Point} point Point.\n     * @api\n     */\n    MultiPoint.prototype.appendPoint = function (point) {\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = point.getFlatCoordinates().slice();\n        }\n        else {\n            extend(this.flatCoordinates, point.getFlatCoordinates());\n        }\n        this.changed();\n    };\n    /**\n     * Make a complete copy of the geometry.\n     * @return {!MultiPoint} Clone.\n     * @override\n     * @api\n     */\n    MultiPoint.prototype.clone = function () {\n        var multiPoint = new MultiPoint(this.flatCoordinates.slice(), this.layout);\n        return multiPoint;\n    };\n    /**\n     * @inheritDoc\n     */\n    MultiPoint.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\n        if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n            return minSquaredDistance;\n        }\n        var flatCoordinates = this.flatCoordinates;\n        var stride = this.stride;\n        for (var i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n            var squaredDistance = squaredDx(x, y, flatCoordinates[i], flatCoordinates[i + 1]);\n            if (squaredDistance < minSquaredDistance) {\n                minSquaredDistance = squaredDistance;\n                for (var j = 0; j < stride; ++j) {\n                    closestPoint[j] = flatCoordinates[i + j];\n                }\n                closestPoint.length = stride;\n            }\n        }\n        return minSquaredDistance;\n    };\n    /**\n     * Return the coordinates of the multipoint.\n     * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n     * @override\n     * @api\n     */\n    MultiPoint.prototype.getCoordinates = function () {\n        return inflateCoordinates(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n    };\n    /**\n     * Return the point at the specified index.\n     * @param {number} index Index.\n     * @return {Point} Point.\n     * @api\n     */\n    MultiPoint.prototype.getPoint = function (index) {\n        var n = !this.flatCoordinates ? 0 : this.flatCoordinates.length / this.stride;\n        if (index < 0 || n <= index) {\n            return null;\n        }\n        return new Point(this.flatCoordinates.slice(index * this.stride, (index + 1) * this.stride), this.layout);\n    };\n    /**\n     * Return the points of this multipoint.\n     * @return {Array<Point>} Points.\n     * @api\n     */\n    MultiPoint.prototype.getPoints = function () {\n        var flatCoordinates = this.flatCoordinates;\n        var layout = this.layout;\n        var stride = this.stride;\n        /** @type {Array<Point>} */\n        var points = [];\n        for (var i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n            var point = new Point(flatCoordinates.slice(i, i + stride), layout);\n            points.push(point);\n        }\n        return points;\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    MultiPoint.prototype.getType = function () {\n        return GeometryType.MULTI_POINT;\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    MultiPoint.prototype.intersectsExtent = function (extent) {\n        var flatCoordinates = this.flatCoordinates;\n        var stride = this.stride;\n        for (var i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n            var x = flatCoordinates[i];\n            var y = flatCoordinates[i + 1];\n            if (containsXY(extent, x, y)) {\n                return true;\n            }\n        }\n        return false;\n    };\n    /**\n     * Set the coordinates of the multipoint.\n     * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n     * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n     * @override\n     * @api\n     */\n    MultiPoint.prototype.setCoordinates = function (coordinates, opt_layout) {\n        this.setLayout(opt_layout, coordinates, 1);\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = [];\n        }\n        this.flatCoordinates.length = deflateCoordinates(this.flatCoordinates, 0, coordinates, this.stride);\n        this.changed();\n    };\n    return MultiPoint;\n}(SimpleGeometry));\nexport default MultiPoint;\n//# sourceMappingURL=MultiPoint.js.map","/**\n * @module ol/geom/flat/center\n */\nimport { createEmpty, createOrUpdateFromFlatCoordinates } from '../../extent.js';\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {Array<number>} Flat centers.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n    var flatCenters = [];\n    var extent = createEmpty();\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        extent = createOrUpdateFromFlatCoordinates(flatCoordinates, offset, ends[0], stride);\n        flatCenters.push((extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2);\n        offset = ends[ends.length - 1];\n    }\n    return flatCenters;\n}\n//# sourceMappingURL=center.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/MultiPolygon\n */\nimport { extend } from '../array.js';\nimport { closestSquaredDistanceXY } from '../extent.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport MultiPoint from './MultiPoint.js';\nimport Polygon from './Polygon.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport { linearRingss as linearRingssArea } from './flat/area.js';\nimport { linearRingss as linearRingssCenter } from './flat/center.js';\nimport { assignClosestMultiArrayPoint, multiArrayMaxSquaredDelta } from './flat/closest.js';\nimport { linearRingssContainsXY } from './flat/contains.js';\nimport { deflateMultiCoordinatesArray } from './flat/deflate.js';\nimport { inflateMultiCoordinatesArray } from './flat/inflate.js';\nimport { getInteriorPointsOfMultiArray } from './flat/interiorpoint.js';\nimport { intersectsLinearRingMultiArray } from './flat/intersectsextent.js';\nimport { linearRingssAreOriented, orientLinearRingsArray } from './flat/orient.js';\nimport { quantizeMultiArray } from './flat/simplify.js';\n/**\n * @classdesc\n * Multi-polygon geometry.\n *\n * @api\n */\nvar MultiPolygon = /** @class */ (function (_super) {\n    __extends(MultiPolygon, _super);\n    /**\n     * @param {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>|Polygon>|Array<number>} coordinates Coordinates.\n     *     For internal use, flat coordinates in combination with `opt_layout` and `opt_endss` are also accepted.\n     * @param {GeometryLayout=} opt_layout Layout.\n     * @param {Array<Array<number>>=} opt_endss Array of ends for internal use with flat coordinates.\n     */\n    function MultiPolygon(coordinates, opt_layout, opt_endss) {\n        var _this = _super.call(this) || this;\n        /**\n         * @type {Array<Array<number>>}\n         * @private\n         */\n        _this.endss_ = [];\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.flatInteriorPointsRevision_ = -1;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.flatInteriorPoints_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDelta_ = -1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDeltaRevision_ = -1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.orientedRevision_ = -1;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.orientedFlatCoordinates_ = null;\n        if (!opt_endss && !Array.isArray(coordinates[0])) {\n            var layout = _this.getLayout();\n            var polygons = /** @type {Array<Polygon>} */ (coordinates);\n            var flatCoordinates = [];\n            var endss = [];\n            for (var i = 0, ii = polygons.length; i < ii; ++i) {\n                var polygon = polygons[i];\n                if (i === 0) {\n                    layout = polygon.getLayout();\n                }\n                var offset = flatCoordinates.length;\n                var ends = polygon.getEnds();\n                for (var j = 0, jj = ends.length; j < jj; ++j) {\n                    ends[j] += offset;\n                }\n                extend(flatCoordinates, polygon.getFlatCoordinates());\n                endss.push(ends);\n            }\n            opt_layout = layout;\n            coordinates = flatCoordinates;\n            opt_endss = endss;\n        }\n        if (opt_layout !== undefined && opt_endss) {\n            _this.setFlatCoordinates(opt_layout, /** @type {Array<number>} */ (coordinates));\n            _this.endss_ = opt_endss;\n        }\n        else {\n            _this.setCoordinates(/** @type {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} */ (coordinates), opt_layout);\n        }\n        return _this;\n    }\n    /**\n     * Append the passed polygon to this multipolygon.\n     * @param {Polygon} polygon Polygon.\n     * @api\n     */\n    MultiPolygon.prototype.appendPolygon = function (polygon) {\n        /** @type {Array<number>} */\n        var ends;\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = polygon.getFlatCoordinates().slice();\n            ends = polygon.getEnds().slice();\n            this.endss_.push();\n        }\n        else {\n            var offset = this.flatCoordinates.length;\n            extend(this.flatCoordinates, polygon.getFlatCoordinates());\n            ends = polygon.getEnds().slice();\n            for (var i = 0, ii = ends.length; i < ii; ++i) {\n                ends[i] += offset;\n            }\n        }\n        this.endss_.push(ends);\n        this.changed();\n    };\n    /**\n     * Make a complete copy of the geometry.\n     * @return {!MultiPolygon} Clone.\n     * @override\n     * @api\n     */\n    MultiPolygon.prototype.clone = function () {\n        var len = this.endss_.length;\n        var newEndss = new Array(len);\n        for (var i = 0; i < len; ++i) {\n            newEndss[i] = this.endss_[i].slice();\n        }\n        return new MultiPolygon(this.flatCoordinates.slice(), this.layout, newEndss);\n    };\n    /**\n     * @inheritDoc\n     */\n    MultiPolygon.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\n        if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n            return minSquaredDistance;\n        }\n        if (this.maxDeltaRevision_ != this.getRevision()) {\n            this.maxDelta_ = Math.sqrt(multiArrayMaxSquaredDelta(this.flatCoordinates, 0, this.endss_, this.stride, 0));\n            this.maxDeltaRevision_ = this.getRevision();\n        }\n        return assignClosestMultiArrayPoint(this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);\n    };\n    /**\n     * @inheritDoc\n     */\n    MultiPolygon.prototype.containsXY = function (x, y) {\n        return linearRingssContainsXY(this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, x, y);\n    };\n    /**\n     * Return the area of the multipolygon on projected plane.\n     * @return {number} Area (on projected plane).\n     * @api\n     */\n    MultiPolygon.prototype.getArea = function () {\n        return linearRingssArea(this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride);\n    };\n    /**\n     * Get the coordinate array for this geometry.  This array has the structure\n     * of a GeoJSON coordinate array for multi-polygons.\n     *\n     * @param {boolean=} opt_right Orient coordinates according to the right-hand\n     *     rule (counter-clockwise for exterior and clockwise for interior rings).\n     *     If `false`, coordinates will be oriented according to the left-hand rule\n     *     (clockwise for exterior and counter-clockwise for interior rings).\n     *     By default, coordinate orientation will depend on how the geometry was\n     *     constructed.\n     * @return {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} Coordinates.\n     * @override\n     * @api\n     */\n    MultiPolygon.prototype.getCoordinates = function (opt_right) {\n        var flatCoordinates;\n        if (opt_right !== undefined) {\n            flatCoordinates = this.getOrientedFlatCoordinates().slice();\n            orientLinearRingsArray(flatCoordinates, 0, this.endss_, this.stride, opt_right);\n        }\n        else {\n            flatCoordinates = this.flatCoordinates;\n        }\n        return inflateMultiCoordinatesArray(flatCoordinates, 0, this.endss_, this.stride);\n    };\n    /**\n     * @return {Array<Array<number>>} Endss.\n     */\n    MultiPolygon.prototype.getEndss = function () {\n        return this.endss_;\n    };\n    /**\n     * @return {Array<number>} Flat interior points.\n     */\n    MultiPolygon.prototype.getFlatInteriorPoints = function () {\n        if (this.flatInteriorPointsRevision_ != this.getRevision()) {\n            var flatCenters = linearRingssCenter(this.flatCoordinates, 0, this.endss_, this.stride);\n            this.flatInteriorPoints_ = getInteriorPointsOfMultiArray(this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, flatCenters);\n            this.flatInteriorPointsRevision_ = this.getRevision();\n        }\n        return this.flatInteriorPoints_;\n    };\n    /**\n     * Return the interior points as {@link module:ol/geom/MultiPoint multipoint}.\n     * @return {MultiPoint} Interior points as XYM coordinates, where M is\n     * the length of the horizontal intersection that the point belongs to.\n     * @api\n     */\n    MultiPolygon.prototype.getInteriorPoints = function () {\n        return new MultiPoint(this.getFlatInteriorPoints().slice(), GeometryLayout.XYM);\n    };\n    /**\n     * @return {Array<number>} Oriented flat coordinates.\n     */\n    MultiPolygon.prototype.getOrientedFlatCoordinates = function () {\n        if (this.orientedRevision_ != this.getRevision()) {\n            var flatCoordinates = this.flatCoordinates;\n            if (linearRingssAreOriented(flatCoordinates, 0, this.endss_, this.stride)) {\n                this.orientedFlatCoordinates_ = flatCoordinates;\n            }\n            else {\n                this.orientedFlatCoordinates_ = flatCoordinates.slice();\n                this.orientedFlatCoordinates_.length =\n                    orientLinearRingsArray(this.orientedFlatCoordinates_, 0, this.endss_, this.stride);\n            }\n            this.orientedRevision_ = this.getRevision();\n        }\n        return this.orientedFlatCoordinates_;\n    };\n    /**\n     * @inheritDoc\n     */\n    MultiPolygon.prototype.getSimplifiedGeometryInternal = function (squaredTolerance) {\n        var simplifiedFlatCoordinates = [];\n        var simplifiedEndss = [];\n        simplifiedFlatCoordinates.length = quantizeMultiArray(this.flatCoordinates, 0, this.endss_, this.stride, Math.sqrt(squaredTolerance), simplifiedFlatCoordinates, 0, simplifiedEndss);\n        return new MultiPolygon(simplifiedFlatCoordinates, GeometryLayout.XY, simplifiedEndss);\n    };\n    /**\n     * Return the polygon at the specified index.\n     * @param {number} index Index.\n     * @return {Polygon} Polygon.\n     * @api\n     */\n    MultiPolygon.prototype.getPolygon = function (index) {\n        if (index < 0 || this.endss_.length <= index) {\n            return null;\n        }\n        var offset;\n        if (index === 0) {\n            offset = 0;\n        }\n        else {\n            var prevEnds = this.endss_[index - 1];\n            offset = prevEnds[prevEnds.length - 1];\n        }\n        var ends = this.endss_[index].slice();\n        var end = ends[ends.length - 1];\n        if (offset !== 0) {\n            for (var i = 0, ii = ends.length; i < ii; ++i) {\n                ends[i] -= offset;\n            }\n        }\n        return new Polygon(this.flatCoordinates.slice(offset, end), this.layout, ends);\n    };\n    /**\n     * Return the polygons of this multipolygon.\n     * @return {Array<Polygon>} Polygons.\n     * @api\n     */\n    MultiPolygon.prototype.getPolygons = function () {\n        var layout = this.layout;\n        var flatCoordinates = this.flatCoordinates;\n        var endss = this.endss_;\n        var polygons = [];\n        var offset = 0;\n        for (var i = 0, ii = endss.length; i < ii; ++i) {\n            var ends = endss[i].slice();\n            var end = ends[ends.length - 1];\n            if (offset !== 0) {\n                for (var j = 0, jj = ends.length; j < jj; ++j) {\n                    ends[j] -= offset;\n                }\n            }\n            var polygon = new Polygon(flatCoordinates.slice(offset, end), layout, ends);\n            polygons.push(polygon);\n            offset = end;\n        }\n        return polygons;\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    MultiPolygon.prototype.getType = function () {\n        return GeometryType.MULTI_POLYGON;\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    MultiPolygon.prototype.intersectsExtent = function (extent) {\n        return intersectsLinearRingMultiArray(this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, extent);\n    };\n    /**\n     * Set the coordinates of the multipolygon.\n     * @param {!Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} coordinates Coordinates.\n     * @param {GeometryLayout=} opt_layout Layout.\n     * @override\n     * @api\n     */\n    MultiPolygon.prototype.setCoordinates = function (coordinates, opt_layout) {\n        this.setLayout(opt_layout, coordinates, 3);\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = [];\n        }\n        var endss = deflateMultiCoordinatesArray(this.flatCoordinates, 0, coordinates, this.stride, this.endss_);\n        if (endss.length === 0) {\n            this.flatCoordinates.length = 0;\n        }\n        else {\n            var lastEnds = endss[endss.length - 1];\n            this.flatCoordinates.length = lastEnds.length === 0 ?\n                0 : lastEnds[lastEnds.length - 1];\n        }\n        this.changed();\n    };\n    return MultiPolygon;\n}(SimpleGeometry));\nexport default MultiPolygon;\n//# sourceMappingURL=MultiPolygon.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/Draw\n */\nimport EventType from '../events/EventType.js';\nimport Feature from '../Feature.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport MapBrowserPointerEvent from '../MapBrowserPointerEvent.js';\nimport { getChangeEventType } from '../Object.js';\nimport { squaredDistance as squaredCoordinateDistance } from '../coordinate.js';\nimport { listen } from '../events.js';\nimport Event from '../events/Event.js';\nimport { noModifierKeys, always, shiftKeyOnly } from '../events/condition.js';\nimport { boundingExtent, getBottomLeft, getBottomRight, getTopLeft, getTopRight } from '../extent.js';\nimport { TRUE, FALSE } from '../functions.js';\nimport Circle from '../geom/Circle.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport { POINTER_TYPE } from '../pointer/MouseSource.js';\nimport Point from '../geom/Point.js';\nimport Polygon, { fromCircle, makeRegular } from '../geom/Polygon.js';\nimport PointerInteraction from './Pointer.js';\nimport InteractionProperty from './Property.js';\nimport VectorLayer from '../layer/Vector.js';\nimport VectorSource from '../source/Vector.js';\nimport { createEditingStyle } from '../style/Style.js';\n/**\n * @typedef {Object} Options\n * @property {GeometryType} type Geometry type of\n * the geometries being drawn with this instance.\n * @property {number} [clickTolerance=6] The maximum distance in pixels between\n * \"down\" and \"up\" for a \"up\" event to be considered a \"click\" event and\n * actually add a point/vertex to the geometry being drawn.  The default of `6`\n * was chosen for the draw interaction to behave correctly on mouse as well as\n * on touch devices.\n * @property {import(\"../Collection.js\").default<Feature>} [features]\n * Destination collection for the drawn features.\n * @property {VectorSource} [source] Destination source for\n * the drawn features.\n * @property {number} [dragVertexDelay=500] Delay in milliseconds after pointerdown\n * before the current vertex can be dragged to its exact position.\n * @property {number} [snapTolerance=12] Pixel distance for snapping to the\n * drawing finish.\n * @property {boolean} [stopClick=false] Stop click, singleclick, and\n * doubleclick events from firing during drawing.\n * @property {number} [maxPoints] The number of points that can be drawn before\n * a polygon ring or line string is finished. By default there is no\n * restriction.\n * @property {number} [minPoints] The number of points that must be drawn\n * before a polygon ring or line string can be finished. Default is `3` for\n * polygon rings and `2` for line strings.\n * @property {import(\"../events/condition.js\").Condition} [finishCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether the drawing can be finished.\n * @property {import(\"../style/Style.js\").StyleLike} [style]\n * Style for sketch features.\n * @property {GeometryFunction} [geometryFunction]\n * Function that is called when a geometry's coordinates are updated.\n * @property {string} [geometryName] Geometry name to use for features created\n * by the draw interaction.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * By default {@link module:ol/events/condition~noModifierKeys}, i.e. a click,\n * adds a vertex or deactivates freehand drawing.\n * @property {boolean} [freehand=false] Operate in freehand mode for lines,\n * polygons, and circles.  This makes the interaction always operate in freehand\n * mode and takes precedence over any `freehandCondition` option.\n * @property {import(\"../events/condition.js\").Condition} [freehandCondition]\n * Condition that activates freehand drawing for lines and polygons. This\n * function takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and\n * returns a boolean to indicate whether that event should be handled. The\n * default is {@link module:ol/events/condition~shiftKeyOnly}, meaning that the\n * Shift key activates freehand drawing.\n * @property {boolean} [wrapX=false] Wrap the world horizontally on the sketch\n * overlay.\n */\n/**\n * Coordinate type when drawing points.\n * @typedef {import(\"../coordinate.js\").Coordinate} PointCoordType\n */\n/**\n * Coordinate type when drawing lines.\n * @typedef {Array<import(\"../coordinate.js\").Coordinate>} LineCoordType\n */\n/**\n * Coordinate type when drawing polygons.\n * @typedef {Array<Array<import(\"../coordinate.js\").Coordinate>>} PolyCoordType\n */\n/**\n * Types used for drawing coordinates.\n * @typedef {PointCoordType|LineCoordType|PolyCoordType} SketchCoordType\n */\n/**\n * Function that takes an array of coordinates and an optional existing geometry as\n * arguments, and returns a geometry. The optional existing geometry is the\n * geometry that is returned when the function is called without a second\n * argument.\n * @typedef {function(!SketchCoordType, import(\"../geom/SimpleGeometry.js\").default=):\n *     import(\"../geom/SimpleGeometry.js\").default} GeometryFunction\n */\n/**\n * Draw mode.  This collapses multi-part geometry types with their single-part\n * cousins.\n * @enum {string}\n */\nvar Mode = {\n    POINT: 'Point',\n    LINE_STRING: 'LineString',\n    POLYGON: 'Polygon',\n    CIRCLE: 'Circle'\n};\n/**\n * @enum {string}\n */\nvar DrawEventType = {\n    /**\n     * Triggered upon feature draw start\n     * @event DrawEvent#drawstart\n     * @api\n     */\n    DRAWSTART: 'drawstart',\n    /**\n     * Triggered upon feature draw end\n     * @event DrawEvent#drawend\n     * @api\n     */\n    DRAWEND: 'drawend'\n};\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Draw~Draw} instances are\n * instances of this type.\n */\nvar DrawEvent = /** @class */ (function (_super) {\n    __extends(DrawEvent, _super);\n    /**\n     * @param {DrawEventType} type Type.\n     * @param {Feature} feature The feature drawn.\n     */\n    function DrawEvent(type, feature) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * The feature being drawn.\n         * @type {Feature}\n         * @api\n         */\n        _this.feature = feature;\n        return _this;\n    }\n    return DrawEvent;\n}(Event));\n/**\n * @classdesc\n * Interaction for drawing feature geometries.\n *\n * @fires DrawEvent\n * @api\n */\nvar Draw = /** @class */ (function (_super) {\n    __extends(Draw, _super);\n    /**\n     * @param {Options} options Options.\n     */\n    function Draw(options) {\n        var _this = this;\n        var pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (options);\n        if (!pointerOptions.stopDown) {\n            pointerOptions.stopDown = FALSE;\n        }\n        _this = _super.call(this, pointerOptions) || this;\n        /**\n         * @type {boolean}\n         * @private\n         */\n        _this.shouldHandle_ = false;\n        /**\n         * @type {import(\"../pixel.js\").Pixel}\n         * @private\n         */\n        _this.downPx_ = null;\n        /**\n         * @type {?}\n         * @private\n         */\n        _this.downTimeout_;\n        /**\n         * @type {number|undefined}\n         * @private\n         */\n        _this.lastDragTime_;\n        /**\n         * @type {boolean}\n         * @private\n         */\n        _this.freehand_ = false;\n        /**\n         * Target source for drawn features.\n         * @type {VectorSource}\n         * @private\n         */\n        _this.source_ = options.source ? options.source : null;\n        /**\n         * Target collection for drawn features.\n         * @type {import(\"../Collection.js\").default<Feature>}\n         * @private\n         */\n        _this.features_ = options.features ? options.features : null;\n        /**\n         * Pixel distance for snapping.\n         * @type {number}\n         * @private\n         */\n        _this.snapTolerance_ = options.snapTolerance ? options.snapTolerance : 12;\n        /**\n         * Geometry type.\n         * @type {GeometryType}\n         * @private\n         */\n        _this.type_ = /** @type {GeometryType} */ (options.type);\n        /**\n         * Drawing mode (derived from geometry type.\n         * @type {Mode}\n         * @private\n         */\n        _this.mode_ = getMode(_this.type_);\n        /**\n         * Stop click, singleclick, and doubleclick events from firing during drawing.\n         * Default is `false`.\n         * @type {boolean}\n         * @private\n         */\n        _this.stopClick_ = !!options.stopClick;\n        /**\n         * The number of points that must be drawn before a polygon ring or line\n         * string can be finished.  The default is 3 for polygon rings and 2 for\n         * line strings.\n         * @type {number}\n         * @private\n         */\n        _this.minPoints_ = options.minPoints ?\n            options.minPoints :\n            (_this.mode_ === Mode.POLYGON ? 3 : 2);\n        /**\n         * The number of points that can be drawn before a polygon ring or line string\n         * is finished. The default is no restriction.\n         * @type {number}\n         * @private\n         */\n        _this.maxPoints_ = options.maxPoints ? options.maxPoints : Infinity;\n        /**\n         * A function to decide if a potential finish coordinate is permissible\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.finishCondition_ = options.finishCondition ? options.finishCondition : TRUE;\n        var geometryFunction = options.geometryFunction;\n        if (!geometryFunction) {\n            if (_this.type_ === GeometryType.CIRCLE) {\n                /**\n                 * @param {!LineCoordType} coordinates The coordinates.\n                 * @param {import(\"../geom/SimpleGeometry.js\").default=} opt_geometry Optional geometry.\n                 * @return {import(\"../geom/SimpleGeometry.js\").default} A geometry.\n                 */\n                geometryFunction = function (coordinates, opt_geometry) {\n                    var circle = opt_geometry ? /** @type {Circle} */ (opt_geometry) :\n                        new Circle([NaN, NaN]);\n                    var squaredLength = squaredCoordinateDistance(coordinates[0], coordinates[1]);\n                    circle.setCenterAndRadius(coordinates[0], Math.sqrt(squaredLength));\n                    return circle;\n                };\n            }\n            else {\n                var Constructor_1;\n                var mode_1 = _this.mode_;\n                if (mode_1 === Mode.POINT) {\n                    Constructor_1 = Point;\n                }\n                else if (mode_1 === Mode.LINE_STRING) {\n                    Constructor_1 = LineString;\n                }\n                else if (mode_1 === Mode.POLYGON) {\n                    Constructor_1 = Polygon;\n                }\n                /**\n                 * @param {!LineCoordType} coordinates The coordinates.\n                 * @param {import(\"../geom/SimpleGeometry.js\").default=} opt_geometry Optional geometry.\n                 * @return {import(\"../geom/SimpleGeometry.js\").default} A geometry.\n                 */\n                geometryFunction = function (coordinates, opt_geometry) {\n                    var geometry = opt_geometry;\n                    if (geometry) {\n                        if (mode_1 === Mode.POLYGON) {\n                            if (coordinates[0].length) {\n                                // Add a closing coordinate to match the first\n                                geometry.setCoordinates([coordinates[0].concat([coordinates[0][0]])]);\n                            }\n                            else {\n                                geometry.setCoordinates([]);\n                            }\n                        }\n                        else {\n                            geometry.setCoordinates(coordinates);\n                        }\n                    }\n                    else {\n                        geometry = new Constructor_1(coordinates);\n                    }\n                    return geometry;\n                };\n            }\n        }\n        /**\n         * @type {GeometryFunction}\n         * @private\n         */\n        _this.geometryFunction_ = geometryFunction;\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.dragVertexDelay_ = options.dragVertexDelay !== undefined ? options.dragVertexDelay : 500;\n        /**\n         * Finish coordinate for the feature (first point for polygons, last point for\n         * linestrings).\n         * @type {import(\"../coordinate.js\").Coordinate}\n         * @private\n         */\n        _this.finishCoordinate_ = null;\n        /**\n         * Sketch feature.\n         * @type {Feature}\n         * @private\n         */\n        _this.sketchFeature_ = null;\n        /**\n         * Sketch point.\n         * @type {Feature}\n         * @private\n         */\n        _this.sketchPoint_ = null;\n        /**\n         * Sketch coordinates. Used when drawing a line or polygon.\n         * @type {SketchCoordType}\n         * @private\n         */\n        _this.sketchCoords_ = null;\n        /**\n         * Sketch line. Used when drawing polygon.\n         * @type {Feature}\n         * @private\n         */\n        _this.sketchLine_ = null;\n        /**\n         * Sketch line coordinates. Used when drawing a polygon or circle.\n         * @type {LineCoordType}\n         * @private\n         */\n        _this.sketchLineCoords_ = null;\n        /**\n         * Squared tolerance for handling up events.  If the squared distance\n         * between a down and up event is greater than this tolerance, up events\n         * will not be handled.\n         * @type {number}\n         * @private\n         */\n        _this.squaredClickTolerance_ = options.clickTolerance ?\n            options.clickTolerance * options.clickTolerance : 36;\n        /**\n         * Draw overlay where our sketch features are drawn.\n         * @type {VectorLayer}\n         * @private\n         */\n        _this.overlay_ = new VectorLayer({\n            source: new VectorSource({\n                useSpatialIndex: false,\n                wrapX: options.wrapX ? options.wrapX : false\n            }),\n            style: options.style ? options.style :\n                getDefaultStyleFunction(),\n            updateWhileInteracting: true\n        });\n        /**\n         * Name of the geometry attribute for newly created features.\n         * @type {string|undefined}\n         * @private\n         */\n        _this.geometryName_ = options.geometryName;\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.condition_ = options.condition ? options.condition : noModifierKeys;\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.freehandCondition_;\n        if (options.freehand) {\n            _this.freehandCondition_ = always;\n        }\n        else {\n            _this.freehandCondition_ = options.freehandCondition ?\n                options.freehandCondition : shiftKeyOnly;\n        }\n        listen(_this, getChangeEventType(InteractionProperty.ACTIVE), _this.updateState_, _this);\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    Draw.prototype.setMap = function (map) {\n        _super.prototype.setMap.call(this, map);\n        this.updateState_();\n    };\n    /**\n     * Get the overlay layer that this interaction renders sketch features to.\n     * @return {VectorLayer} Overlay layer.\n     * @api\n     */\n    Draw.prototype.getOverlay = function () {\n        return this.overlay_;\n    };\n    /**\n     * Handles the {@link module:ol/MapBrowserEvent map browser event} and may actually draw or finish the drawing.\n     * @override\n     * @api\n     */\n    Draw.prototype.handleEvent = function (event) {\n        if (event.originalEvent.type === EventType.CONTEXTMENU) {\n            // Avoid context menu for long taps when drawing on mobile\n            event.preventDefault();\n        }\n        this.freehand_ = this.mode_ !== Mode.POINT && this.freehandCondition_(event);\n        var move = event.type === MapBrowserEventType.POINTERMOVE;\n        var pass = true;\n        if (!this.freehand_ && this.lastDragTime_ && event.type === MapBrowserEventType.POINTERDRAG) {\n            var now = Date.now();\n            if (now - this.lastDragTime_ >= this.dragVertexDelay_) {\n                this.downPx_ = event.pixel;\n                this.shouldHandle_ = !this.freehand_;\n                move = true;\n            }\n            else {\n                this.lastDragTime_ = undefined;\n            }\n            if (this.shouldHandle_ && this.downTimeout_ !== undefined) {\n                clearTimeout(this.downTimeout_);\n                this.downTimeout_ = undefined;\n            }\n        }\n        if (this.freehand_ &&\n            event.type === MapBrowserEventType.POINTERDRAG &&\n            this.sketchFeature_ !== null) {\n            this.addToDrawing_(event);\n            pass = false;\n        }\n        else if (this.freehand_ &&\n            event.type === MapBrowserEventType.POINTERDOWN) {\n            pass = false;\n        }\n        else if (move) {\n            pass = event.type === MapBrowserEventType.POINTERMOVE;\n            if (pass && this.freehand_) {\n                pass = this.handlePointerMove_(event);\n            }\n            else if ( /** @type {MapBrowserPointerEvent} */(event).pointerEvent.pointerType == POINTER_TYPE ||\n                (event.type === MapBrowserEventType.POINTERDRAG && this.downTimeout_ === undefined)) {\n                this.handlePointerMove_(event);\n            }\n        }\n        else if (event.type === MapBrowserEventType.DBLCLICK) {\n            pass = false;\n        }\n        return _super.prototype.handleEvent.call(this, event) && pass;\n    };\n    /**\n     * @inheritDoc\n     */\n    Draw.prototype.handleDownEvent = function (event) {\n        this.shouldHandle_ = !this.freehand_;\n        if (this.freehand_) {\n            this.downPx_ = event.pixel;\n            if (!this.finishCoordinate_) {\n                this.startDrawing_(event);\n            }\n            return true;\n        }\n        else if (this.condition_(event)) {\n            this.lastDragTime_ = Date.now();\n            this.downTimeout_ = setTimeout(function () {\n                this.handlePointerMove_(new MapBrowserPointerEvent(MapBrowserEventType.POINTERMOVE, event.map, event.pointerEvent, false, event.frameState));\n            }.bind(this), this.dragVertexDelay_);\n            this.downPx_ = event.pixel;\n            return true;\n        }\n        else {\n            this.lastDragTime_ = undefined;\n            return false;\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    Draw.prototype.handleUpEvent = function (event) {\n        var pass = true;\n        if (this.downTimeout_) {\n            clearTimeout(this.downTimeout_);\n            this.downTimeout_ = undefined;\n        }\n        this.handlePointerMove_(event);\n        var circleMode = this.mode_ === Mode.CIRCLE;\n        if (this.shouldHandle_) {\n            if (!this.finishCoordinate_) {\n                this.startDrawing_(event);\n                if (this.mode_ === Mode.POINT) {\n                    this.finishDrawing();\n                }\n            }\n            else if (this.freehand_ || circleMode) {\n                this.finishDrawing();\n            }\n            else if (this.atFinish_(event)) {\n                if (this.finishCondition_(event)) {\n                    this.finishDrawing();\n                }\n            }\n            else {\n                this.addToDrawing_(event);\n            }\n            pass = false;\n        }\n        else if (this.freehand_) {\n            this.finishCoordinate_ = null;\n            this.abortDrawing_();\n        }\n        if (!pass && this.stopClick_) {\n            event.stopPropagation();\n        }\n        return pass;\n    };\n    /**\n     * Handle move events.\n     * @param {import(\"../MapBrowserEvent.js\").default} event A move event.\n     * @return {boolean} Pass the event to other interactions.\n     * @private\n     */\n    Draw.prototype.handlePointerMove_ = function (event) {\n        if (this.downPx_ &&\n            ((!this.freehand_ && this.shouldHandle_) ||\n                (this.freehand_ && !this.shouldHandle_))) {\n            var downPx = this.downPx_;\n            var clickPx = event.pixel;\n            var dx = downPx[0] - clickPx[0];\n            var dy = downPx[1] - clickPx[1];\n            var squaredDistance = dx * dx + dy * dy;\n            this.shouldHandle_ = this.freehand_ ?\n                squaredDistance > this.squaredClickTolerance_ :\n                squaredDistance <= this.squaredClickTolerance_;\n            if (!this.shouldHandle_) {\n                return true;\n            }\n        }\n        if (this.finishCoordinate_) {\n            this.modifyDrawing_(event);\n        }\n        else {\n            this.createOrUpdateSketchPoint_(event);\n        }\n        return true;\n    };\n    /**\n     * Determine if an event is within the snapping tolerance of the start coord.\n     * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n     * @return {boolean} The event is within the snapping tolerance of the start.\n     * @private\n     */\n    Draw.prototype.atFinish_ = function (event) {\n        var at = false;\n        if (this.sketchFeature_) {\n            var potentiallyDone = false;\n            var potentiallyFinishCoordinates = [this.finishCoordinate_];\n            if (this.mode_ === Mode.LINE_STRING) {\n                potentiallyDone = this.sketchCoords_.length > this.minPoints_;\n            }\n            else if (this.mode_ === Mode.POLYGON) {\n                var sketchCoords = /** @type {PolyCoordType} */ (this.sketchCoords_);\n                potentiallyDone = sketchCoords[0].length > this.minPoints_;\n                potentiallyFinishCoordinates = [sketchCoords[0][0], sketchCoords[0][sketchCoords[0].length - 2]];\n            }\n            if (potentiallyDone) {\n                var map = event.map;\n                for (var i = 0, ii = potentiallyFinishCoordinates.length; i < ii; i++) {\n                    var finishCoordinate = potentiallyFinishCoordinates[i];\n                    var finishPixel = map.getPixelFromCoordinate(finishCoordinate);\n                    var pixel = event.pixel;\n                    var dx = pixel[0] - finishPixel[0];\n                    var dy = pixel[1] - finishPixel[1];\n                    var snapTolerance = this.freehand_ ? 1 : this.snapTolerance_;\n                    at = Math.sqrt(dx * dx + dy * dy) <= snapTolerance;\n                    if (at) {\n                        this.finishCoordinate_ = finishCoordinate;\n                        break;\n                    }\n                }\n            }\n        }\n        return at;\n    };\n    /**\n     * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n     * @private\n     */\n    Draw.prototype.createOrUpdateSketchPoint_ = function (event) {\n        var coordinates = event.coordinate.slice();\n        if (!this.sketchPoint_) {\n            this.sketchPoint_ = new Feature(new Point(coordinates));\n            this.updateSketchFeatures_();\n        }\n        else {\n            var sketchPointGeom = /** @type {Point} */ (this.sketchPoint_.getGeometry());\n            sketchPointGeom.setCoordinates(coordinates);\n        }\n    };\n    /**\n     * Start the drawing.\n     * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n     * @private\n     */\n    Draw.prototype.startDrawing_ = function (event) {\n        var start = event.coordinate;\n        this.finishCoordinate_ = start;\n        if (this.mode_ === Mode.POINT) {\n            this.sketchCoords_ = start.slice();\n        }\n        else if (this.mode_ === Mode.POLYGON) {\n            this.sketchCoords_ = [[start.slice(), start.slice()]];\n            this.sketchLineCoords_ = this.sketchCoords_[0];\n        }\n        else {\n            this.sketchCoords_ = [start.slice(), start.slice()];\n        }\n        if (this.sketchLineCoords_) {\n            this.sketchLine_ = new Feature(new LineString(this.sketchLineCoords_));\n        }\n        var geometry = this.geometryFunction_(this.sketchCoords_);\n        this.sketchFeature_ = new Feature();\n        if (this.geometryName_) {\n            this.sketchFeature_.setGeometryName(this.geometryName_);\n        }\n        this.sketchFeature_.setGeometry(geometry);\n        this.updateSketchFeatures_();\n        this.dispatchEvent(new DrawEvent(DrawEventType.DRAWSTART, this.sketchFeature_));\n    };\n    /**\n     * Modify the drawing.\n     * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n     * @private\n     */\n    Draw.prototype.modifyDrawing_ = function (event) {\n        var coordinate = event.coordinate;\n        var geometry = /** @type {import(\"../geom/SimpleGeometry.js\").default} */ (this.sketchFeature_.getGeometry());\n        var coordinates, last;\n        if (this.mode_ === Mode.POINT) {\n            last = this.sketchCoords_;\n        }\n        else if (this.mode_ === Mode.POLYGON) {\n            coordinates = /** @type {PolyCoordType} */ (this.sketchCoords_)[0];\n            last = coordinates[coordinates.length - 1];\n            if (this.atFinish_(event)) {\n                // snap to finish\n                coordinate = this.finishCoordinate_.slice();\n            }\n        }\n        else {\n            coordinates = this.sketchCoords_;\n            last = coordinates[coordinates.length - 1];\n        }\n        last[0] = coordinate[0];\n        last[1] = coordinate[1];\n        this.geometryFunction_(/** @type {!LineCoordType} */ (this.sketchCoords_), geometry);\n        if (this.sketchPoint_) {\n            var sketchPointGeom = /** @type {Point} */ (this.sketchPoint_.getGeometry());\n            sketchPointGeom.setCoordinates(coordinate);\n        }\n        /** @type {LineString} */\n        var sketchLineGeom;\n        if (geometry.getType() == GeometryType.POLYGON &&\n            this.mode_ !== Mode.POLYGON) {\n            if (!this.sketchLine_) {\n                this.sketchLine_ = new Feature();\n            }\n            var ring = /** @type {Polygon} */ (geometry).getLinearRing(0);\n            sketchLineGeom = /** @type {LineString} */ (this.sketchLine_.getGeometry());\n            if (!sketchLineGeom) {\n                sketchLineGeom = new LineString(ring.getFlatCoordinates(), ring.getLayout());\n                this.sketchLine_.setGeometry(sketchLineGeom);\n            }\n            else {\n                sketchLineGeom.setFlatCoordinates(ring.getLayout(), ring.getFlatCoordinates());\n                sketchLineGeom.changed();\n            }\n        }\n        else if (this.sketchLineCoords_) {\n            sketchLineGeom = /** @type {LineString} */ (this.sketchLine_.getGeometry());\n            sketchLineGeom.setCoordinates(this.sketchLineCoords_);\n        }\n        this.updateSketchFeatures_();\n    };\n    /**\n     * Add a new coordinate to the drawing.\n     * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n     * @private\n     */\n    Draw.prototype.addToDrawing_ = function (event) {\n        var coordinate = event.coordinate;\n        var geometry = /** @type {import(\"../geom/SimpleGeometry.js\").default} */ (this.sketchFeature_.getGeometry());\n        var done;\n        var coordinates;\n        if (this.mode_ === Mode.LINE_STRING) {\n            this.finishCoordinate_ = coordinate.slice();\n            coordinates = /** @type {LineCoordType} */ (this.sketchCoords_);\n            if (coordinates.length >= this.maxPoints_) {\n                if (this.freehand_) {\n                    coordinates.pop();\n                }\n                else {\n                    done = true;\n                }\n            }\n            coordinates.push(coordinate.slice());\n            this.geometryFunction_(coordinates, geometry);\n        }\n        else if (this.mode_ === Mode.POLYGON) {\n            coordinates = /** @type {PolyCoordType} */ (this.sketchCoords_)[0];\n            if (coordinates.length >= this.maxPoints_) {\n                if (this.freehand_) {\n                    coordinates.pop();\n                }\n                else {\n                    done = true;\n                }\n            }\n            coordinates.push(coordinate.slice());\n            if (done) {\n                this.finishCoordinate_ = coordinates[0];\n            }\n            this.geometryFunction_(this.sketchCoords_, geometry);\n        }\n        this.updateSketchFeatures_();\n        if (done) {\n            this.finishDrawing();\n        }\n    };\n    /**\n     * Remove last point of the feature currently being drawn.\n     * @api\n     */\n    Draw.prototype.removeLastPoint = function () {\n        if (!this.sketchFeature_) {\n            return;\n        }\n        var geometry = /** @type {import(\"../geom/SimpleGeometry.js\").default} */ (this.sketchFeature_.getGeometry());\n        var coordinates;\n        /** @type {LineString} */\n        var sketchLineGeom;\n        if (this.mode_ === Mode.LINE_STRING) {\n            coordinates = /** @type {LineCoordType} */ (this.sketchCoords_);\n            coordinates.splice(-2, 1);\n            this.geometryFunction_(coordinates, geometry);\n            if (coordinates.length >= 2) {\n                this.finishCoordinate_ = coordinates[coordinates.length - 2].slice();\n            }\n        }\n        else if (this.mode_ === Mode.POLYGON) {\n            coordinates = /** @type {PolyCoordType} */ (this.sketchCoords_)[0];\n            coordinates.splice(-2, 1);\n            sketchLineGeom = /** @type {LineString} */ (this.sketchLine_.getGeometry());\n            sketchLineGeom.setCoordinates(coordinates);\n            this.geometryFunction_(this.sketchCoords_, geometry);\n        }\n        if (coordinates.length === 0) {\n            this.finishCoordinate_ = null;\n        }\n        this.updateSketchFeatures_();\n    };\n    /**\n     * Stop drawing and add the sketch feature to the target layer.\n     * The {@link module:ol/interaction/Draw~DrawEventType.DRAWEND} event is\n     * dispatched before inserting the feature.\n     * @api\n     */\n    Draw.prototype.finishDrawing = function () {\n        var sketchFeature = this.abortDrawing_();\n        if (!sketchFeature) {\n            return;\n        }\n        var coordinates = this.sketchCoords_;\n        var geometry = /** @type {import(\"../geom/SimpleGeometry.js\").default} */ (sketchFeature.getGeometry());\n        if (this.mode_ === Mode.LINE_STRING) {\n            // remove the redundant last point\n            coordinates.pop();\n            this.geometryFunction_(coordinates, geometry);\n        }\n        else if (this.mode_ === Mode.POLYGON) {\n            // remove the redundant last point in ring\n            /** @type {PolyCoordType} */ (coordinates)[0].pop();\n            this.geometryFunction_(coordinates, geometry);\n            coordinates = geometry.getCoordinates();\n        }\n        // cast multi-part geometries\n        if (this.type_ === GeometryType.MULTI_POINT) {\n            sketchFeature.setGeometry(new MultiPoint([/** @type {PointCoordType} */ (coordinates)]));\n        }\n        else if (this.type_ === GeometryType.MULTI_LINE_STRING) {\n            sketchFeature.setGeometry(new MultiLineString([/** @type {LineCoordType} */ (coordinates)]));\n        }\n        else if (this.type_ === GeometryType.MULTI_POLYGON) {\n            sketchFeature.setGeometry(new MultiPolygon([/** @type {PolyCoordType} */ (coordinates)]));\n        }\n        // First dispatch event to allow full set up of feature\n        this.dispatchEvent(new DrawEvent(DrawEventType.DRAWEND, sketchFeature));\n        // Then insert feature\n        if (this.features_) {\n            this.features_.push(sketchFeature);\n        }\n        if (this.source_) {\n            this.source_.addFeature(sketchFeature);\n        }\n    };\n    /**\n     * Stop drawing without adding the sketch feature to the target layer.\n     * @return {Feature} The sketch feature (or null if none).\n     * @private\n     */\n    Draw.prototype.abortDrawing_ = function () {\n        this.finishCoordinate_ = null;\n        var sketchFeature = this.sketchFeature_;\n        if (sketchFeature) {\n            this.sketchFeature_ = null;\n            this.sketchPoint_ = null;\n            this.sketchLine_ = null;\n            this.overlay_.getSource().clear(true);\n        }\n        return sketchFeature;\n    };\n    /**\n     * Extend an existing geometry by adding additional points. This only works\n     * on features with `LineString` geometries, where the interaction will\n     * extend lines by adding points to the end of the coordinates array.\n     * @param {!Feature} feature Feature to be extended.\n     * @api\n     */\n    Draw.prototype.extend = function (feature) {\n        var geometry = feature.getGeometry();\n        var lineString = /** @type {LineString} */ (geometry);\n        this.sketchFeature_ = feature;\n        this.sketchCoords_ = lineString.getCoordinates();\n        var last = this.sketchCoords_[this.sketchCoords_.length - 1];\n        this.finishCoordinate_ = last.slice();\n        this.sketchCoords_.push(last.slice());\n        this.updateSketchFeatures_();\n        this.dispatchEvent(new DrawEvent(DrawEventType.DRAWSTART, this.sketchFeature_));\n    };\n    /**\n     * Redraw the sketch features.\n     * @private\n     */\n    Draw.prototype.updateSketchFeatures_ = function () {\n        var sketchFeatures = [];\n        if (this.sketchFeature_) {\n            sketchFeatures.push(this.sketchFeature_);\n        }\n        if (this.sketchLine_) {\n            sketchFeatures.push(this.sketchLine_);\n        }\n        if (this.sketchPoint_) {\n            sketchFeatures.push(this.sketchPoint_);\n        }\n        var overlaySource = this.overlay_.getSource();\n        overlaySource.clear(true);\n        overlaySource.addFeatures(sketchFeatures);\n    };\n    /**\n     * @private\n     */\n    Draw.prototype.updateState_ = function () {\n        var map = this.getMap();\n        var active = this.getActive();\n        if (!map || !active) {\n            this.abortDrawing_();\n        }\n        this.overlay_.setMap(active ? map : null);\n    };\n    return Draw;\n}(PointerInteraction));\n/**\n * @return {import(\"../style/Style.js\").StyleFunction} Styles.\n */\nfunction getDefaultStyleFunction() {\n    var styles = createEditingStyle();\n    return function (feature, resolution) {\n        return styles[feature.getGeometry().getType()];\n    };\n}\n/**\n * Create a `geometryFunction` for `type: 'Circle'` that will create a regular\n * polygon with a user specified number of sides and start angle instead of an\n * `import(\"../geom/Circle.js\").Circle` geometry.\n * @param {number=} opt_sides Number of sides of the regular polygon. Default is\n *     32.\n * @param {number=} opt_angle Angle of the first point in radians. 0 means East.\n *     Default is the angle defined by the heading from the center of the\n *     regular polygon to the current pointer position.\n * @return {GeometryFunction} Function that draws a\n *     polygon.\n * @api\n */\nexport function createRegularPolygon(opt_sides, opt_angle) {\n    return function (coordinates, opt_geometry) {\n        var center = /** @type {LineCoordType} */ (coordinates)[0];\n        var end = /** @type {LineCoordType} */ (coordinates)[1];\n        var radius = Math.sqrt(squaredCoordinateDistance(center, end));\n        var geometry = opt_geometry ? /** @type {Polygon} */ (opt_geometry) :\n            fromCircle(new Circle(center), opt_sides);\n        var angle = opt_angle;\n        if (!opt_angle) {\n            var x = end[0] - center[0];\n            var y = end[1] - center[1];\n            angle = Math.atan(y / x) - (x < 0 ? Math.PI : 0);\n        }\n        makeRegular(geometry, center, radius, angle);\n        return geometry;\n    };\n}\n/**\n * Create a `geometryFunction` that will create a box-shaped polygon (aligned\n * with the coordinate system axes).  Use this with the draw interaction and\n * `type: 'Circle'` to return a box instead of a circle geometry.\n * @return {GeometryFunction} Function that draws a box-shaped polygon.\n * @api\n */\nexport function createBox() {\n    return (function (coordinates, opt_geometry) {\n        var extent = boundingExtent(/** @type {LineCoordType} */ (coordinates));\n        var boxCoordinates = [[\n                getBottomLeft(extent),\n                getBottomRight(extent),\n                getTopRight(extent),\n                getTopLeft(extent),\n                getBottomLeft(extent)\n            ]];\n        var geometry = opt_geometry;\n        if (geometry) {\n            geometry.setCoordinates(boxCoordinates);\n        }\n        else {\n            geometry = new Polygon(boxCoordinates);\n        }\n        return geometry;\n    });\n}\n/**\n * Get the drawing mode.  The mode for mult-part geometries is the same as for\n * their single-part cousins.\n * @param {GeometryType} type Geometry type.\n * @return {Mode} Drawing mode.\n */\nfunction getMode(type) {\n    var mode;\n    if (type === GeometryType.POINT ||\n        type === GeometryType.MULTI_POINT) {\n        mode = Mode.POINT;\n    }\n    else if (type === GeometryType.LINE_STRING ||\n        type === GeometryType.MULTI_LINE_STRING) {\n        mode = Mode.LINE_STRING;\n    }\n    else if (type === GeometryType.POLYGON ||\n        type === GeometryType.MULTI_POLYGON) {\n        mode = Mode.POLYGON;\n    }\n    else if (type === GeometryType.CIRCLE) {\n        mode = Mode.CIRCLE;\n    }\n    return (\n    /** @type {!Mode} */ (mode));\n}\nexport default Draw;\n//# sourceMappingURL=Draw.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/Extent\n */\nimport Feature from '../Feature.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport { squaredDistanceToSegment, closestOnSegment, distance as coordinateDistance, squaredDistance as squaredCoordinateDistance } from '../coordinate.js';\nimport Event from '../events/Event.js';\nimport { boundingExtent, getArea } from '../extent.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport Point from '../geom/Point.js';\nimport { fromExtent as polygonFromExtent } from '../geom/Polygon.js';\nimport PointerInteraction from './Pointer.js';\nimport VectorLayer from '../layer/Vector.js';\nimport VectorSource from '../source/Vector.js';\nimport { createEditingStyle } from '../style/Style.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"../extent.js\").Extent} [extent] Initial extent. Defaults to no\n * initial extent.\n * @property {import(\"../style/Style.js\").StyleLike} [boxStyle]\n * Style for the drawn extent box. Defaults to\n * {@link module:ol/style/Style~createEditing()['Polygon']}\n * @property {number} [pixelTolerance=10] Pixel tolerance for considering the\n * pointer close enough to a segment or vertex for editing.\n * @property {import(\"../style/Style.js\").StyleLike} [pointerStyle]\n * Style for the cursor used to draw the extent. Defaults to\n * {@link module:ol/style/Style~createEditing()['Point']}\n * @property {boolean} [wrapX=false] Wrap the drawn extent across multiple maps\n * in the X direction? Only affects visuals, not functionality.\n */\n/**\n * @enum {string}\n */\nvar ExtentEventType = {\n    /**\n     * Triggered after the extent is changed\n     * @event ExtentEvent#extentchanged\n     * @api\n     */\n    EXTENTCHANGED: 'extentchanged'\n};\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Extent~Extent} instances are\n * instances of this type.\n */\nvar ExtentEvent = /** @class */ (function (_super) {\n    __extends(ExtentEvent, _super);\n    /**\n     * @param {import(\"../extent.js\").Extent} extent the new extent\n     */\n    function ExtentEvent(extent) {\n        var _this = _super.call(this, ExtentEventType.EXTENTCHANGED) || this;\n        /**\n         * The current extent.\n         * @type {import(\"../extent.js\").Extent}\n         * @api\n         */\n        _this.extent = extent;\n        return _this;\n    }\n    return ExtentEvent;\n}(Event));\n/**\n * @classdesc\n * Allows the user to draw a vector box by clicking and dragging on the map.\n * Once drawn, the vector box can be modified by dragging its vertices or edges.\n * This interaction is only supported for mouse devices.\n *\n * @fires ExtentEvent\n * @api\n */\nvar Extent = /** @class */ (function (_super) {\n    __extends(Extent, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function Extent(opt_options) {\n        var _this = this;\n        var options = opt_options || {};\n        _this = _super.call(this, /** @type {import(\"./Pointer.js\").Options} */ (options)) || this;\n        /**\n         * Extent of the drawn box\n         * @type {import(\"../extent.js\").Extent}\n         * @private\n         */\n        _this.extent_ = null;\n        /**\n         * Handler for pointer move events\n         * @type {function (import(\"../coordinate.js\").Coordinate): import(\"../extent.js\").Extent|null}\n         * @private\n         */\n        _this.pointerHandler_ = null;\n        /**\n         * Pixel threshold to snap to extent\n         * @type {number}\n         * @private\n         */\n        _this.pixelTolerance_ = options.pixelTolerance !== undefined ?\n            options.pixelTolerance : 10;\n        /**\n         * Is the pointer snapped to an extent vertex\n         * @type {boolean}\n         * @private\n         */\n        _this.snappedToVertex_ = false;\n        /**\n         * Feature for displaying the visible extent\n         * @type {Feature}\n         * @private\n         */\n        _this.extentFeature_ = null;\n        /**\n         * Feature for displaying the visible pointer\n         * @type {Feature}\n         * @private\n         */\n        _this.vertexFeature_ = null;\n        if (!opt_options) {\n            opt_options = {};\n        }\n        /**\n         * Layer for the extentFeature\n         * @type {VectorLayer}\n         * @private\n         */\n        _this.extentOverlay_ = new VectorLayer({\n            source: new VectorSource({\n                useSpatialIndex: false,\n                wrapX: !!opt_options.wrapX\n            }),\n            style: opt_options.boxStyle ? opt_options.boxStyle : getDefaultExtentStyleFunction(),\n            updateWhileAnimating: true,\n            updateWhileInteracting: true\n        });\n        /**\n         * Layer for the vertexFeature\n         * @type {VectorLayer}\n         * @private\n         */\n        _this.vertexOverlay_ = new VectorLayer({\n            source: new VectorSource({\n                useSpatialIndex: false,\n                wrapX: !!opt_options.wrapX\n            }),\n            style: opt_options.pointerStyle ? opt_options.pointerStyle : getDefaultPointerStyleFunction(),\n            updateWhileAnimating: true,\n            updateWhileInteracting: true\n        });\n        if (opt_options.extent) {\n            _this.setExtent(opt_options.extent);\n        }\n        return _this;\n    }\n    /**\n     * @param {import(\"../pixel.js\").Pixel} pixel cursor location\n     * @param {import(\"../PluggableMap.js\").default} map map\n     * @returns {import(\"../coordinate.js\").Coordinate|null} snapped vertex on extent\n     * @private\n     */\n    Extent.prototype.snapToVertex_ = function (pixel, map) {\n        var pixelCoordinate = map.getCoordinateFromPixel(pixel);\n        var sortByDistance = function (a, b) {\n            return squaredDistanceToSegment(pixelCoordinate, a) -\n                squaredDistanceToSegment(pixelCoordinate, b);\n        };\n        var extent = this.getExtent();\n        if (extent) {\n            //convert extents to line segments and find the segment closest to pixelCoordinate\n            var segments = getSegments(extent);\n            segments.sort(sortByDistance);\n            var closestSegment = segments[0];\n            var vertex = (closestOnSegment(pixelCoordinate, closestSegment));\n            var vertexPixel = map.getPixelFromCoordinate(vertex);\n            //if the distance is within tolerance, snap to the segment\n            if (coordinateDistance(pixel, vertexPixel) <= this.pixelTolerance_) {\n                //test if we should further snap to a vertex\n                var pixel1 = map.getPixelFromCoordinate(closestSegment[0]);\n                var pixel2 = map.getPixelFromCoordinate(closestSegment[1]);\n                var squaredDist1 = squaredCoordinateDistance(vertexPixel, pixel1);\n                var squaredDist2 = squaredCoordinateDistance(vertexPixel, pixel2);\n                var dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n                this.snappedToVertex_ = dist <= this.pixelTolerance_;\n                if (this.snappedToVertex_) {\n                    vertex = squaredDist1 > squaredDist2 ?\n                        closestSegment[1] : closestSegment[0];\n                }\n                return vertex;\n            }\n        }\n        return null;\n    };\n    /**\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent pointer move event\n     * @private\n     */\n    Extent.prototype.handlePointerMove_ = function (mapBrowserEvent) {\n        var pixel = mapBrowserEvent.pixel;\n        var map = mapBrowserEvent.map;\n        var vertex = this.snapToVertex_(pixel, map);\n        if (!vertex) {\n            vertex = map.getCoordinateFromPixel(pixel);\n        }\n        this.createOrUpdatePointerFeature_(vertex);\n    };\n    /**\n     * @param {import(\"../extent.js\").Extent} extent extent\n     * @returns {Feature} extent as featrue\n     * @private\n     */\n    Extent.prototype.createOrUpdateExtentFeature_ = function (extent) {\n        var extentFeature = this.extentFeature_;\n        if (!extentFeature) {\n            if (!extent) {\n                extentFeature = new Feature({});\n            }\n            else {\n                extentFeature = new Feature(polygonFromExtent(extent));\n            }\n            this.extentFeature_ = extentFeature;\n            this.extentOverlay_.getSource().addFeature(extentFeature);\n        }\n        else {\n            if (!extent) {\n                extentFeature.setGeometry(undefined);\n            }\n            else {\n                extentFeature.setGeometry(polygonFromExtent(extent));\n            }\n        }\n        return extentFeature;\n    };\n    /**\n     * @param {import(\"../coordinate.js\").Coordinate} vertex location of feature\n     * @returns {Feature} vertex as feature\n     * @private\n     */\n    Extent.prototype.createOrUpdatePointerFeature_ = function (vertex) {\n        var vertexFeature = this.vertexFeature_;\n        if (!vertexFeature) {\n            vertexFeature = new Feature(new Point(vertex));\n            this.vertexFeature_ = vertexFeature;\n            this.vertexOverlay_.getSource().addFeature(vertexFeature);\n        }\n        else {\n            var geometry = /** @type {Point} */ (vertexFeature.getGeometry());\n            geometry.setCoordinates(vertex);\n        }\n        return vertexFeature;\n    };\n    /**\n     * @inheritDoc\n     */\n    Extent.prototype.handleEvent = function (mapBrowserEvent) {\n        if (!( /** @type {import(\"../MapBrowserPointerEvent.js\").default} */(mapBrowserEvent).pointerEvent)) {\n            return true;\n        }\n        //display pointer (if not dragging)\n        if (mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE && !this.handlingDownUpSequence) {\n            this.handlePointerMove_(mapBrowserEvent);\n        }\n        //call pointer to determine up/down/drag\n        _super.prototype.handleEvent.call(this, mapBrowserEvent);\n        //return false to stop propagation\n        return false;\n    };\n    /**\n     * @inheritDoc\n     */\n    Extent.prototype.handleDownEvent = function (mapBrowserEvent) {\n        var pixel = mapBrowserEvent.pixel;\n        var map = mapBrowserEvent.map;\n        var extent = this.getExtent();\n        var vertex = this.snapToVertex_(pixel, map);\n        //find the extent corner opposite the passed corner\n        var getOpposingPoint = function (point) {\n            var x_ = null;\n            var y_ = null;\n            if (point[0] == extent[0]) {\n                x_ = extent[2];\n            }\n            else if (point[0] == extent[2]) {\n                x_ = extent[0];\n            }\n            if (point[1] == extent[1]) {\n                y_ = extent[3];\n            }\n            else if (point[1] == extent[3]) {\n                y_ = extent[1];\n            }\n            if (x_ !== null && y_ !== null) {\n                return [x_, y_];\n            }\n            return null;\n        };\n        if (vertex && extent) {\n            var x = (vertex[0] == extent[0] || vertex[0] == extent[2]) ? vertex[0] : null;\n            var y = (vertex[1] == extent[1] || vertex[1] == extent[3]) ? vertex[1] : null;\n            //snap to point\n            if (x !== null && y !== null) {\n                this.pointerHandler_ = getPointHandler(getOpposingPoint(vertex));\n                //snap to edge\n            }\n            else if (x !== null) {\n                this.pointerHandler_ = getEdgeHandler(getOpposingPoint([x, extent[1]]), getOpposingPoint([x, extent[3]]));\n            }\n            else if (y !== null) {\n                this.pointerHandler_ = getEdgeHandler(getOpposingPoint([extent[0], y]), getOpposingPoint([extent[2], y]));\n            }\n            //no snap - new bbox\n        }\n        else {\n            vertex = map.getCoordinateFromPixel(pixel);\n            this.setExtent([vertex[0], vertex[1], vertex[0], vertex[1]]);\n            this.pointerHandler_ = getPointHandler(vertex);\n        }\n        return true; //event handled; start downup sequence\n    };\n    /**\n     * @inheritDoc\n     */\n    Extent.prototype.handleDragEvent = function (mapBrowserEvent) {\n        if (this.pointerHandler_) {\n            var pixelCoordinate = mapBrowserEvent.coordinate;\n            this.setExtent(this.pointerHandler_(pixelCoordinate));\n            this.createOrUpdatePointerFeature_(pixelCoordinate);\n        }\n        return true;\n    };\n    /**\n     * @inheritDoc\n     */\n    Extent.prototype.handleUpEvent = function (mapBrowserEvent) {\n        this.pointerHandler_ = null;\n        //If bbox is zero area, set to null;\n        var extent = this.getExtent();\n        if (!extent || getArea(extent) === 0) {\n            this.setExtent(null);\n        }\n        return false; //Stop handling downup sequence\n    };\n    /**\n     * @inheritDoc\n     */\n    Extent.prototype.setMap = function (map) {\n        this.extentOverlay_.setMap(map);\n        this.vertexOverlay_.setMap(map);\n        _super.prototype.setMap.call(this, map);\n    };\n    /**\n     * Returns the current drawn extent in the view projection\n     *\n     * @return {import(\"../extent.js\").Extent} Drawn extent in the view projection.\n     * @api\n     */\n    Extent.prototype.getExtent = function () {\n        return this.extent_;\n    };\n    /**\n     * Manually sets the drawn extent, using the view projection.\n     *\n     * @param {import(\"../extent.js\").Extent} extent Extent\n     * @api\n     */\n    Extent.prototype.setExtent = function (extent) {\n        //Null extent means no bbox\n        this.extent_ = extent ? extent : null;\n        this.createOrUpdateExtentFeature_(extent);\n        this.dispatchEvent(new ExtentEvent(this.extent_));\n    };\n    return Extent;\n}(PointerInteraction));\n/**\n * Returns the default style for the drawn bbox\n *\n * @return {import(\"../style/Style.js\").StyleFunction} Default Extent style\n */\nfunction getDefaultExtentStyleFunction() {\n    var style = createEditingStyle();\n    return function (feature, resolution) {\n        return style[GeometryType.POLYGON];\n    };\n}\n/**\n * Returns the default style for the pointer\n *\n * @return {import(\"../style/Style.js\").StyleFunction} Default pointer style\n */\nfunction getDefaultPointerStyleFunction() {\n    var style = createEditingStyle();\n    return function (feature, resolution) {\n        return style[GeometryType.POINT];\n    };\n}\n/**\n * @param {import(\"../coordinate.js\").Coordinate} fixedPoint corner that will be unchanged in the new extent\n * @returns {function (import(\"../coordinate.js\").Coordinate): import(\"../extent.js\").Extent} event handler\n */\nfunction getPointHandler(fixedPoint) {\n    return function (point) {\n        return boundingExtent([fixedPoint, point]);\n    };\n}\n/**\n * @param {import(\"../coordinate.js\").Coordinate} fixedP1 first corner that will be unchanged in the new extent\n * @param {import(\"../coordinate.js\").Coordinate} fixedP2 second corner that will be unchanged in the new extent\n * @returns {function (import(\"../coordinate.js\").Coordinate): import(\"../extent.js\").Extent|null} event handler\n */\nfunction getEdgeHandler(fixedP1, fixedP2) {\n    if (fixedP1[0] == fixedP2[0]) {\n        return function (point) {\n            return boundingExtent([fixedP1, [point[0], fixedP2[1]]]);\n        };\n    }\n    else if (fixedP1[1] == fixedP2[1]) {\n        return function (point) {\n            return boundingExtent([fixedP1, [fixedP2[0], point[1]]]);\n        };\n    }\n    else {\n        return null;\n    }\n}\n/**\n * @param {import(\"../extent.js\").Extent} extent extent\n * @returns {Array<Array<import(\"../coordinate.js\").Coordinate>>} extent line segments\n */\nfunction getSegments(extent) {\n    return [\n        [[extent[0], extent[1]], [extent[0], extent[3]]],\n        [[extent[0], extent[3]], [extent[2], extent[3]]],\n        [[extent[2], extent[3]], [extent[2], extent[1]]],\n        [[extent[2], extent[1]], [extent[0], extent[1]]]\n    ];\n}\nexport default Extent;\n//# sourceMappingURL=Extent.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/Modify\n */\nimport { getUid } from '../util.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Feature from '../Feature.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport { equals } from '../array.js';\nimport { equals as coordinatesEqual, distance as coordinateDistance, squaredDistance as squaredCoordinateDistance, squaredDistanceToSegment, closestOnSegment } from '../coordinate.js';\nimport { listen, unlisten } from '../events.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport { always, primaryAction, altKeyOnly, singleClick } from '../events/condition.js';\nimport { boundingExtent, buffer, createOrUpdateFromCoordinate } from '../extent.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport Point from '../geom/Point.js';\nimport PointerInteraction from './Pointer.js';\nimport VectorLayer from '../layer/Vector.js';\nimport VectorSource from '../source/Vector.js';\nimport VectorEventType from '../source/VectorEventType.js';\nimport RBush from '../structs/RBush.js';\nimport { createEditingStyle } from '../style/Style.js';\n/**\n * The segment index assigned to a circle's center when\n * breaking up a circle into ModifySegmentDataType segments.\n * @type {number}\n */\nvar CIRCLE_CENTER_INDEX = 0;\n/**\n * The segment index assigned to a circle's circumference when\n * breaking up a circle into ModifySegmentDataType segments.\n * @type {number}\n */\nvar CIRCLE_CIRCUMFERENCE_INDEX = 1;\n/**\n * @enum {string}\n */\nvar ModifyEventType = {\n    /**\n     * Triggered upon feature modification start\n     * @event ModifyEvent#modifystart\n     * @api\n     */\n    MODIFYSTART: 'modifystart',\n    /**\n     * Triggered upon feature modification end\n     * @event ModifyEvent#modifyend\n     * @api\n     */\n    MODIFYEND: 'modifyend'\n};\n/**\n * @typedef {Object} SegmentData\n * @property {Array<number>} [depth]\n * @property {Feature} feature\n * @property {import(\"../geom/SimpleGeometry.js\").default} geometry\n * @property {number} [index]\n * @property {Array<import(\"../extent.js\").Extent>} segment\n * @property {Array<SegmentData>} [featureSegments]\n */\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event will be considered to add or move a\n * vertex to the sketch. Default is\n * {@link module:ol/events/condition~primaryAction}.\n * @property {import(\"../events/condition.js\").Condition} [deleteCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. By default,\n * {@link module:ol/events/condition~singleClick} with\n * {@link module:ol/events/condition~altKeyOnly} results in a vertex deletion.\n * @property {import(\"../events/condition.js\").Condition} [insertVertexCondition] A\n * function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and\n * returns a boolean to indicate whether a new vertex should be added to the sketch\n * features. Default is {@link module:ol/events/condition~always}.\n * @property {number} [pixelTolerance=10] Pixel tolerance for considering the\n * pointer close enough to a segment or vertex for editing.\n * @property {import(\"../style/Style.js\").StyleLike} [style]\n * Style used for the features being modified. By default the default edit\n * style is used (see {@link module:ol/style}).\n * @property {VectorSource} [source] The vector source with\n * features to modify.  If a vector source is not provided, a feature collection\n * must be provided with the features option.\n * @property {Collection<Feature>} [features]\n * The features the interaction works on.  If a feature collection is not\n * provided, a vector source must be provided with the source option.\n * @property {boolean} [wrapX=false] Wrap the world horizontally on the sketch\n * overlay.\n */\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Modify~Modify} instances are\n * instances of this type.\n */\nvar ModifyEvent = /** @class */ (function (_super) {\n    __extends(ModifyEvent, _super);\n    /**\n     * @param {ModifyEventType} type Type.\n     * @param {Collection<Feature>} features\n     * The features modified.\n     * @param {import(\"../MapBrowserPointerEvent.js\").default} mapBrowserPointerEvent\n     * Associated {@link module:ol/MapBrowserPointerEvent}.\n     */\n    function ModifyEvent(type, features, mapBrowserPointerEvent) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * The features being modified.\n         * @type {Collection<Feature>}\n         * @api\n         */\n        _this.features = features;\n        /**\n         * Associated {@link module:ol/MapBrowserEvent}.\n         * @type {import(\"../MapBrowserEvent.js\").default}\n         * @api\n         */\n        _this.mapBrowserEvent = mapBrowserPointerEvent;\n        return _this;\n    }\n    return ModifyEvent;\n}(Event));\nexport { ModifyEvent };\n/**\n * @classdesc\n * Interaction for modifying feature geometries.  To modify features that have\n * been added to an existing source, construct the modify interaction with the\n * `source` option.  If you want to modify features in a collection (for example,\n * the collection used by a select interaction), construct the interaction with\n * the `features` option.  The interaction must be constructed with either a\n * `source` or `features` option.\n *\n * By default, the interaction will allow deletion of vertices when the `alt`\n * key is pressed.  To configure the interaction with a different condition\n * for deletion, use the `deleteCondition` option.\n * @fires ModifyEvent\n * @api\n */\nvar Modify = /** @class */ (function (_super) {\n    __extends(Modify, _super);\n    /**\n     * @param {Options} options Options.\n     */\n    function Modify(options) {\n        var _this = _super.call(this, /** @type {import(\"./Pointer.js\").Options} */ (options)) || this;\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.condition_ = options.condition ? options.condition : primaryAction;\n        /**\n         * @private\n         * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Browser event.\n         * @return {boolean} Combined condition result.\n         */\n        _this.defaultDeleteCondition_ = function (mapBrowserEvent) {\n            return altKeyOnly(mapBrowserEvent) && singleClick(mapBrowserEvent);\n        };\n        /**\n         * @type {import(\"../events/condition.js\").Condition}\n         * @private\n         */\n        _this.deleteCondition_ = options.deleteCondition ?\n            options.deleteCondition : _this.defaultDeleteCondition_;\n        /**\n         * @type {import(\"../events/condition.js\").Condition}\n         * @private\n         */\n        _this.insertVertexCondition_ = options.insertVertexCondition ?\n            options.insertVertexCondition : always;\n        /**\n         * Editing vertex.\n         * @type {Feature}\n         * @private\n         */\n        _this.vertexFeature_ = null;\n        /**\n         * Segments intersecting {@link this.vertexFeature_} by segment uid.\n         * @type {Object<string, boolean>}\n         * @private\n         */\n        _this.vertexSegments_ = null;\n        /**\n         * @type {import(\"../pixel.js\").Pixel}\n         * @private\n         */\n        _this.lastPixel_ = [0, 0];\n        /**\n         * Tracks if the next `singleclick` event should be ignored to prevent\n         * accidental deletion right after vertex creation.\n         * @type {boolean}\n         * @private\n         */\n        _this.ignoreNextSingleClick_ = false;\n        /**\n         * @type {boolean}\n         * @private\n         */\n        _this.modified_ = false;\n        /**\n         * Segment RTree for each layer\n         * @type {RBush<SegmentData>}\n         * @private\n         */\n        _this.rBush_ = new RBush();\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.pixelTolerance_ = options.pixelTolerance !== undefined ?\n            options.pixelTolerance : 10;\n        /**\n         * @type {boolean}\n         * @private\n         */\n        _this.snappedToVertex_ = false;\n        /**\n         * Indicate whether the interaction is currently changing a feature's\n         * coordinates.\n         * @type {boolean}\n         * @private\n         */\n        _this.changingFeature_ = false;\n        /**\n         * @type {Array}\n         * @private\n         */\n        _this.dragSegments_ = [];\n        /**\n         * Draw overlay where sketch features are drawn.\n         * @type {VectorLayer}\n         * @private\n         */\n        _this.overlay_ = new VectorLayer({\n            source: new VectorSource({\n                useSpatialIndex: false,\n                wrapX: !!options.wrapX\n            }),\n            style: options.style ? options.style :\n                getDefaultStyleFunction(),\n            updateWhileAnimating: true,\n            updateWhileInteracting: true\n        });\n        /**\n         * @const\n         * @private\n         * @type {!Object<string, function(Feature, import(\"../geom/Geometry.js\").default): void>}\n         */\n        _this.SEGMENT_WRITERS_ = {\n            'Point': _this.writePointGeometry_,\n            'LineString': _this.writeLineStringGeometry_,\n            'LinearRing': _this.writeLineStringGeometry_,\n            'Polygon': _this.writePolygonGeometry_,\n            'MultiPoint': _this.writeMultiPointGeometry_,\n            'MultiLineString': _this.writeMultiLineStringGeometry_,\n            'MultiPolygon': _this.writeMultiPolygonGeometry_,\n            'Circle': _this.writeCircleGeometry_,\n            'GeometryCollection': _this.writeGeometryCollectionGeometry_\n        };\n        /**\n         * @type {VectorSource}\n         * @private\n         */\n        _this.source_ = null;\n        var features;\n        if (options.source) {\n            _this.source_ = options.source;\n            features = new Collection(_this.source_.getFeatures());\n            listen(_this.source_, VectorEventType.ADDFEATURE, _this.handleSourceAdd_, _this);\n            listen(_this.source_, VectorEventType.REMOVEFEATURE, _this.handleSourceRemove_, _this);\n        }\n        else {\n            features = options.features;\n        }\n        if (!features) {\n            throw new Error('The modify interaction requires features or a source');\n        }\n        /**\n         * @type {Collection<Feature>}\n         * @private\n         */\n        _this.features_ = features;\n        _this.features_.forEach(_this.addFeature_.bind(_this));\n        listen(_this.features_, CollectionEventType.ADD, _this.handleFeatureAdd_, _this);\n        listen(_this.features_, CollectionEventType.REMOVE, _this.handleFeatureRemove_, _this);\n        /**\n         * @type {import(\"../MapBrowserPointerEvent.js\").default}\n         * @private\n         */\n        _this.lastPointerEvent_ = null;\n        return _this;\n    }\n    /**\n     * @param {Feature} feature Feature.\n     * @private\n     */\n    Modify.prototype.addFeature_ = function (feature) {\n        var geometry = feature.getGeometry();\n        if (geometry && geometry.getType() in this.SEGMENT_WRITERS_) {\n            this.SEGMENT_WRITERS_[geometry.getType()].call(this, feature, geometry);\n        }\n        var map = this.getMap();\n        if (map && map.isRendered() && this.getActive()) {\n            this.handlePointerAtPixel_(this.lastPixel_, map);\n        }\n        listen(feature, EventType.CHANGE, this.handleFeatureChange_, this);\n    };\n    /**\n     * @param {import(\"../MapBrowserPointerEvent.js\").default} evt Map browser event\n     * @private\n     */\n    Modify.prototype.willModifyFeatures_ = function (evt) {\n        if (!this.modified_) {\n            this.modified_ = true;\n            this.dispatchEvent(new ModifyEvent(ModifyEventType.MODIFYSTART, this.features_, evt));\n        }\n    };\n    /**\n     * @param {Feature} feature Feature.\n     * @private\n     */\n    Modify.prototype.removeFeature_ = function (feature) {\n        this.removeFeatureSegmentData_(feature);\n        // Remove the vertex feature if the collection of canditate features\n        // is empty.\n        if (this.vertexFeature_ && this.features_.getLength() === 0) {\n            this.overlay_.getSource().removeFeature(this.vertexFeature_);\n            this.vertexFeature_ = null;\n        }\n        unlisten(feature, EventType.CHANGE, this.handleFeatureChange_, this);\n    };\n    /**\n     * @param {Feature} feature Feature.\n     * @private\n     */\n    Modify.prototype.removeFeatureSegmentData_ = function (feature) {\n        var rBush = this.rBush_;\n        var /** @type {Array<SegmentData>} */ nodesToRemove = [];\n        rBush.forEach(\n        /**\n         * @param {SegmentData} node RTree node.\n         */\n        function (node) {\n            if (feature === node.feature) {\n                nodesToRemove.push(node);\n            }\n        });\n        for (var i = nodesToRemove.length - 1; i >= 0; --i) {\n            var nodeToRemove = nodesToRemove[i];\n            for (var j = this.dragSegments_.length - 1; j >= 0; --j) {\n                if (this.dragSegments_[j][0] === nodeToRemove) {\n                    this.dragSegments_.splice(j, 1);\n                }\n            }\n            rBush.remove(nodeToRemove);\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    Modify.prototype.setActive = function (active) {\n        if (this.vertexFeature_ && !active) {\n            this.overlay_.getSource().removeFeature(this.vertexFeature_);\n            this.vertexFeature_ = null;\n        }\n        _super.prototype.setActive.call(this, active);\n    };\n    /**\n     * @inheritDoc\n     */\n    Modify.prototype.setMap = function (map) {\n        this.overlay_.setMap(map);\n        _super.prototype.setMap.call(this, map);\n    };\n    /**\n     * Get the overlay layer that this interaction renders sketch features to.\n     * @return {VectorLayer} Overlay layer.\n     * @api\n     */\n    Modify.prototype.getOverlay = function () {\n        return this.overlay_;\n    };\n    /**\n     * @param {import(\"../source/Vector.js\").VectorSourceEvent} event Event.\n     * @private\n     */\n    Modify.prototype.handleSourceAdd_ = function (event) {\n        if (event.feature) {\n            this.features_.push(event.feature);\n        }\n    };\n    /**\n     * @param {import(\"../source/Vector.js\").VectorSourceEvent} event Event.\n     * @private\n     */\n    Modify.prototype.handleSourceRemove_ = function (event) {\n        if (event.feature) {\n            this.features_.remove(event.feature);\n        }\n    };\n    /**\n     * @param {import(\"../Collection.js\").CollectionEvent} evt Event.\n     * @private\n     */\n    Modify.prototype.handleFeatureAdd_ = function (evt) {\n        this.addFeature_(/** @type {Feature} */ (evt.element));\n    };\n    /**\n     * @param {import(\"../events/Event.js\").default} evt Event.\n     * @private\n     */\n    Modify.prototype.handleFeatureChange_ = function (evt) {\n        if (!this.changingFeature_) {\n            var feature = /** @type {Feature} */ (evt.target);\n            this.removeFeature_(feature);\n            this.addFeature_(feature);\n        }\n    };\n    /**\n     * @param {import(\"../Collection.js\").CollectionEvent} evt Event.\n     * @private\n     */\n    Modify.prototype.handleFeatureRemove_ = function (evt) {\n        var feature = /** @type {Feature} */ (evt.element);\n        this.removeFeature_(feature);\n    };\n    /**\n     * @param {Feature} feature Feature\n     * @param {Point} geometry Geometry.\n     * @private\n     */\n    Modify.prototype.writePointGeometry_ = function (feature, geometry) {\n        var coordinates = geometry.getCoordinates();\n        var segmentData = /** @type {SegmentData} */ ({\n            feature: feature,\n            geometry: geometry,\n            segment: [coordinates, coordinates]\n        });\n        this.rBush_.insert(geometry.getExtent(), segmentData);\n    };\n    /**\n     * @param {Feature} feature Feature\n     * @param {import(\"../geom/MultiPoint.js\").default} geometry Geometry.\n     * @private\n     */\n    Modify.prototype.writeMultiPointGeometry_ = function (feature, geometry) {\n        var points = geometry.getCoordinates();\n        for (var i = 0, ii = points.length; i < ii; ++i) {\n            var coordinates = points[i];\n            var segmentData = /** @type {SegmentData} */ ({\n                feature: feature,\n                geometry: geometry,\n                depth: [i],\n                index: i,\n                segment: [coordinates, coordinates]\n            });\n            this.rBush_.insert(geometry.getExtent(), segmentData);\n        }\n    };\n    /**\n     * @param {Feature} feature Feature\n     * @param {import(\"../geom/LineString.js\").default} geometry Geometry.\n     * @private\n     */\n    Modify.prototype.writeLineStringGeometry_ = function (feature, geometry) {\n        var coordinates = geometry.getCoordinates();\n        for (var i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n            var segment = coordinates.slice(i, i + 2);\n            var segmentData = /** @type {SegmentData} */ ({\n                feature: feature,\n                geometry: geometry,\n                index: i,\n                segment: segment\n            });\n            this.rBush_.insert(boundingExtent(segment), segmentData);\n        }\n    };\n    /**\n     * @param {Feature} feature Feature\n     * @param {import(\"../geom/MultiLineString.js\").default} geometry Geometry.\n     * @private\n     */\n    Modify.prototype.writeMultiLineStringGeometry_ = function (feature, geometry) {\n        var lines = geometry.getCoordinates();\n        for (var j = 0, jj = lines.length; j < jj; ++j) {\n            var coordinates = lines[j];\n            for (var i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n                var segment = coordinates.slice(i, i + 2);\n                var segmentData = /** @type {SegmentData} */ ({\n                    feature: feature,\n                    geometry: geometry,\n                    depth: [j],\n                    index: i,\n                    segment: segment\n                });\n                this.rBush_.insert(boundingExtent(segment), segmentData);\n            }\n        }\n    };\n    /**\n     * @param {Feature} feature Feature\n     * @param {import(\"../geom/Polygon.js\").default} geometry Geometry.\n     * @private\n     */\n    Modify.prototype.writePolygonGeometry_ = function (feature, geometry) {\n        var rings = geometry.getCoordinates();\n        for (var j = 0, jj = rings.length; j < jj; ++j) {\n            var coordinates = rings[j];\n            for (var i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n                var segment = coordinates.slice(i, i + 2);\n                var segmentData = /** @type {SegmentData} */ ({\n                    feature: feature,\n                    geometry: geometry,\n                    depth: [j],\n                    index: i,\n                    segment: segment\n                });\n                this.rBush_.insert(boundingExtent(segment), segmentData);\n            }\n        }\n    };\n    /**\n     * @param {Feature} feature Feature\n     * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n     * @private\n     */\n    Modify.prototype.writeMultiPolygonGeometry_ = function (feature, geometry) {\n        var polygons = geometry.getCoordinates();\n        for (var k = 0, kk = polygons.length; k < kk; ++k) {\n            var rings = polygons[k];\n            for (var j = 0, jj = rings.length; j < jj; ++j) {\n                var coordinates = rings[j];\n                for (var i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n                    var segment = coordinates.slice(i, i + 2);\n                    var segmentData = /** @type {SegmentData} */ ({\n                        feature: feature,\n                        geometry: geometry,\n                        depth: [j, k],\n                        index: i,\n                        segment: segment\n                    });\n                    this.rBush_.insert(boundingExtent(segment), segmentData);\n                }\n            }\n        }\n    };\n    /**\n     * We convert a circle into two segments.  The segment at index\n     * {@link CIRCLE_CENTER_INDEX} is the\n     * circle's center (a point).  The segment at index\n     * {@link CIRCLE_CIRCUMFERENCE_INDEX} is\n     * the circumference, and is not a line segment.\n     *\n     * @param {Feature} feature Feature.\n     * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n     * @private\n     */\n    Modify.prototype.writeCircleGeometry_ = function (feature, geometry) {\n        var coordinates = geometry.getCenter();\n        var centerSegmentData = /** @type {SegmentData} */ ({\n            feature: feature,\n            geometry: geometry,\n            index: CIRCLE_CENTER_INDEX,\n            segment: [coordinates, coordinates]\n        });\n        var circumferenceSegmentData = /** @type {SegmentData} */ ({\n            feature: feature,\n            geometry: geometry,\n            index: CIRCLE_CIRCUMFERENCE_INDEX,\n            segment: [coordinates, coordinates]\n        });\n        var featureSegments = [centerSegmentData, circumferenceSegmentData];\n        centerSegmentData.featureSegments = circumferenceSegmentData.featureSegments = featureSegments;\n        this.rBush_.insert(createOrUpdateFromCoordinate(coordinates), centerSegmentData);\n        this.rBush_.insert(geometry.getExtent(), circumferenceSegmentData);\n    };\n    /**\n     * @param {Feature} feature Feature\n     * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n     * @private\n     */\n    Modify.prototype.writeGeometryCollectionGeometry_ = function (feature, geometry) {\n        var geometries = geometry.getGeometriesArray();\n        for (var i = 0; i < geometries.length; ++i) {\n            this.SEGMENT_WRITERS_[geometries[i].getType()].call(this, feature, geometries[i]);\n        }\n    };\n    /**\n     * @param {import(\"../coordinate.js\").Coordinate} coordinates Coordinates.\n     * @return {Feature} Vertex feature.\n     * @private\n     */\n    Modify.prototype.createOrUpdateVertexFeature_ = function (coordinates) {\n        var vertexFeature = this.vertexFeature_;\n        if (!vertexFeature) {\n            vertexFeature = new Feature(new Point(coordinates));\n            this.vertexFeature_ = vertexFeature;\n            this.overlay_.getSource().addFeature(vertexFeature);\n        }\n        else {\n            var geometry = /** @type {Point} */ (vertexFeature.getGeometry());\n            geometry.setCoordinates(coordinates);\n        }\n        return vertexFeature;\n    };\n    /**\n     * Handles the {@link module:ol/MapBrowserEvent map browser event} and may modify the geometry.\n     * @override\n     */\n    Modify.prototype.handleEvent = function (mapBrowserEvent) {\n        if (!( /** @type {import(\"../MapBrowserPointerEvent.js\").default} */(mapBrowserEvent).pointerEvent)) {\n            return true;\n        }\n        this.lastPointerEvent_ = mapBrowserEvent;\n        var handled;\n        if (!mapBrowserEvent.map.getView().getInteracting() &&\n            mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE &&\n            !this.handlingDownUpSequence) {\n            this.handlePointerMove_(mapBrowserEvent);\n        }\n        if (this.vertexFeature_ && this.deleteCondition_(mapBrowserEvent)) {\n            if (mapBrowserEvent.type != MapBrowserEventType.SINGLECLICK || !this.ignoreNextSingleClick_) {\n                handled = this.removePoint();\n            }\n            else {\n                handled = true;\n            }\n        }\n        if (mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK) {\n            this.ignoreNextSingleClick_ = false;\n        }\n        return _super.prototype.handleEvent.call(this, mapBrowserEvent) && !handled;\n    };\n    /**\n     * @inheritDoc\n     */\n    Modify.prototype.handleDragEvent = function (evt) {\n        this.ignoreNextSingleClick_ = false;\n        this.willModifyFeatures_(evt);\n        var vertex = evt.coordinate;\n        for (var i = 0, ii = this.dragSegments_.length; i < ii; ++i) {\n            var dragSegment = this.dragSegments_[i];\n            var segmentData = dragSegment[0];\n            var depth = segmentData.depth;\n            var geometry = segmentData.geometry;\n            var coordinates = void 0;\n            var segment = segmentData.segment;\n            var index = dragSegment[1];\n            while (vertex.length < geometry.getStride()) {\n                vertex.push(segment[index][vertex.length]);\n            }\n            switch (geometry.getType()) {\n                case GeometryType.POINT:\n                    coordinates = vertex;\n                    segment[0] = segment[1] = vertex;\n                    break;\n                case GeometryType.MULTI_POINT:\n                    coordinates = geometry.getCoordinates();\n                    coordinates[segmentData.index] = vertex;\n                    segment[0] = segment[1] = vertex;\n                    break;\n                case GeometryType.LINE_STRING:\n                    coordinates = geometry.getCoordinates();\n                    coordinates[segmentData.index + index] = vertex;\n                    segment[index] = vertex;\n                    break;\n                case GeometryType.MULTI_LINE_STRING:\n                    coordinates = geometry.getCoordinates();\n                    coordinates[depth[0]][segmentData.index + index] = vertex;\n                    segment[index] = vertex;\n                    break;\n                case GeometryType.POLYGON:\n                    coordinates = geometry.getCoordinates();\n                    coordinates[depth[0]][segmentData.index + index] = vertex;\n                    segment[index] = vertex;\n                    break;\n                case GeometryType.MULTI_POLYGON:\n                    coordinates = geometry.getCoordinates();\n                    coordinates[depth[1]][depth[0]][segmentData.index + index] = vertex;\n                    segment[index] = vertex;\n                    break;\n                case GeometryType.CIRCLE:\n                    segment[0] = segment[1] = vertex;\n                    if (segmentData.index === CIRCLE_CENTER_INDEX) {\n                        this.changingFeature_ = true;\n                        geometry.setCenter(vertex);\n                        this.changingFeature_ = false;\n                    }\n                    else { // We're dragging the circle's circumference:\n                        this.changingFeature_ = true;\n                        geometry.setRadius(coordinateDistance(geometry.getCenter(), vertex));\n                        this.changingFeature_ = false;\n                    }\n                    break;\n                default:\n                // pass\n            }\n            if (coordinates) {\n                this.setGeometryCoordinates_(geometry, coordinates);\n            }\n        }\n        this.createOrUpdateVertexFeature_(vertex);\n    };\n    /**\n     * @inheritDoc\n     */\n    Modify.prototype.handleDownEvent = function (evt) {\n        if (!this.condition_(evt)) {\n            return false;\n        }\n        this.handlePointerAtPixel_(evt.pixel, evt.map);\n        var pixelCoordinate = evt.map.getCoordinateFromPixel(evt.pixel);\n        this.dragSegments_.length = 0;\n        this.modified_ = false;\n        var vertexFeature = this.vertexFeature_;\n        if (vertexFeature) {\n            var insertVertices = [];\n            var geometry = /** @type {Point} */ (vertexFeature.getGeometry());\n            var vertex = geometry.getCoordinates();\n            var vertexExtent = boundingExtent([vertex]);\n            var segmentDataMatches = this.rBush_.getInExtent(vertexExtent);\n            var componentSegments = {};\n            segmentDataMatches.sort(compareIndexes);\n            for (var i = 0, ii = segmentDataMatches.length; i < ii; ++i) {\n                var segmentDataMatch = segmentDataMatches[i];\n                var segment = segmentDataMatch.segment;\n                var uid = getUid(segmentDataMatch.feature);\n                var depth = segmentDataMatch.depth;\n                if (depth) {\n                    uid += '-' + depth.join('-'); // separate feature components\n                }\n                if (!componentSegments[uid]) {\n                    componentSegments[uid] = new Array(2);\n                }\n                if (segmentDataMatch.geometry.getType() === GeometryType.CIRCLE &&\n                    segmentDataMatch.index === CIRCLE_CIRCUMFERENCE_INDEX) {\n                    var closestVertex = closestOnSegmentData(pixelCoordinate, segmentDataMatch);\n                    if (coordinatesEqual(closestVertex, vertex) && !componentSegments[uid][0]) {\n                        this.dragSegments_.push([segmentDataMatch, 0]);\n                        componentSegments[uid][0] = segmentDataMatch;\n                    }\n                }\n                else if (coordinatesEqual(segment[0], vertex) &&\n                    !componentSegments[uid][0]) {\n                    this.dragSegments_.push([segmentDataMatch, 0]);\n                    componentSegments[uid][0] = segmentDataMatch;\n                }\n                else if (coordinatesEqual(segment[1], vertex) &&\n                    !componentSegments[uid][1]) {\n                    // prevent dragging closed linestrings by the connecting node\n                    if ((segmentDataMatch.geometry.getType() ===\n                        GeometryType.LINE_STRING ||\n                        segmentDataMatch.geometry.getType() ===\n                            GeometryType.MULTI_LINE_STRING) &&\n                        componentSegments[uid][0] &&\n                        componentSegments[uid][0].index === 0) {\n                        continue;\n                    }\n                    this.dragSegments_.push([segmentDataMatch, 1]);\n                    componentSegments[uid][1] = segmentDataMatch;\n                }\n                else if (getUid(segment) in this.vertexSegments_ &&\n                    (!componentSegments[uid][0] && !componentSegments[uid][1]) &&\n                    this.insertVertexCondition_(evt)) {\n                    insertVertices.push([segmentDataMatch, vertex]);\n                }\n            }\n            if (insertVertices.length) {\n                this.willModifyFeatures_(evt);\n            }\n            for (var j = insertVertices.length - 1; j >= 0; --j) {\n                this.insertVertex_.apply(this, insertVertices[j]);\n            }\n        }\n        return !!this.vertexFeature_;\n    };\n    /**\n     * @inheritDoc\n     */\n    Modify.prototype.handleUpEvent = function (evt) {\n        for (var i = this.dragSegments_.length - 1; i >= 0; --i) {\n            var segmentData = this.dragSegments_[i][0];\n            var geometry = segmentData.geometry;\n            if (geometry.getType() === GeometryType.CIRCLE) {\n                // Update a circle object in the R* bush:\n                var coordinates = geometry.getCenter();\n                var centerSegmentData = segmentData.featureSegments[0];\n                var circumferenceSegmentData = segmentData.featureSegments[1];\n                centerSegmentData.segment[0] = centerSegmentData.segment[1] = coordinates;\n                circumferenceSegmentData.segment[0] = circumferenceSegmentData.segment[1] = coordinates;\n                this.rBush_.update(createOrUpdateFromCoordinate(coordinates), centerSegmentData);\n                this.rBush_.update(geometry.getExtent(), circumferenceSegmentData);\n            }\n            else {\n                this.rBush_.update(boundingExtent(segmentData.segment), segmentData);\n            }\n        }\n        if (this.modified_) {\n            this.dispatchEvent(new ModifyEvent(ModifyEventType.MODIFYEND, this.features_, evt));\n            this.modified_ = false;\n        }\n        return false;\n    };\n    /**\n     * @param {import(\"../MapBrowserEvent.js\").default} evt Event.\n     * @private\n     */\n    Modify.prototype.handlePointerMove_ = function (evt) {\n        this.lastPixel_ = evt.pixel;\n        this.handlePointerAtPixel_(evt.pixel, evt.map);\n    };\n    /**\n     * @param {import(\"../pixel.js\").Pixel} pixel Pixel\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     * @private\n     */\n    Modify.prototype.handlePointerAtPixel_ = function (pixel, map) {\n        var pixelCoordinate = map.getCoordinateFromPixel(pixel);\n        var sortByDistance = function (a, b) {\n            return pointDistanceToSegmentDataSquared(pixelCoordinate, a) -\n                pointDistanceToSegmentDataSquared(pixelCoordinate, b);\n        };\n        var box = buffer(createOrUpdateFromCoordinate(pixelCoordinate), map.getView().getResolution() * this.pixelTolerance_);\n        var rBush = this.rBush_;\n        var nodes = rBush.getInExtent(box);\n        if (nodes.length > 0) {\n            nodes.sort(sortByDistance);\n            var node = nodes[0];\n            var closestSegment = node.segment;\n            var vertex = closestOnSegmentData(pixelCoordinate, node);\n            var vertexPixel = map.getPixelFromCoordinate(vertex);\n            var dist = coordinateDistance(pixel, vertexPixel);\n            if (dist <= this.pixelTolerance_) {\n                /** @type {Object<string, boolean>} */\n                var vertexSegments = {};\n                if (node.geometry.getType() === GeometryType.CIRCLE &&\n                    node.index === CIRCLE_CIRCUMFERENCE_INDEX) {\n                    this.snappedToVertex_ = true;\n                    this.createOrUpdateVertexFeature_(vertex);\n                }\n                else {\n                    var pixel1 = map.getPixelFromCoordinate(closestSegment[0]);\n                    var pixel2 = map.getPixelFromCoordinate(closestSegment[1]);\n                    var squaredDist1 = squaredCoordinateDistance(vertexPixel, pixel1);\n                    var squaredDist2 = squaredCoordinateDistance(vertexPixel, pixel2);\n                    dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n                    this.snappedToVertex_ = dist <= this.pixelTolerance_;\n                    if (this.snappedToVertex_) {\n                        vertex = squaredDist1 > squaredDist2 ? closestSegment[1] : closestSegment[0];\n                    }\n                    this.createOrUpdateVertexFeature_(vertex);\n                    for (var i = 1, ii = nodes.length; i < ii; ++i) {\n                        var segment = nodes[i].segment;\n                        if ((coordinatesEqual(closestSegment[0], segment[0]) &&\n                            coordinatesEqual(closestSegment[1], segment[1]) ||\n                            (coordinatesEqual(closestSegment[0], segment[1]) &&\n                                coordinatesEqual(closestSegment[1], segment[0])))) {\n                            vertexSegments[getUid(segment)] = true;\n                        }\n                        else {\n                            break;\n                        }\n                    }\n                }\n                vertexSegments[getUid(closestSegment)] = true;\n                this.vertexSegments_ = vertexSegments;\n                return;\n            }\n        }\n        if (this.vertexFeature_) {\n            this.overlay_.getSource().removeFeature(this.vertexFeature_);\n            this.vertexFeature_ = null;\n        }\n    };\n    /**\n     * @param {SegmentData} segmentData Segment data.\n     * @param {import(\"../coordinate.js\").Coordinate} vertex Vertex.\n     * @private\n     */\n    Modify.prototype.insertVertex_ = function (segmentData, vertex) {\n        var segment = segmentData.segment;\n        var feature = segmentData.feature;\n        var geometry = segmentData.geometry;\n        var depth = segmentData.depth;\n        var index = /** @type {number} */ (segmentData.index);\n        var coordinates;\n        while (vertex.length < geometry.getStride()) {\n            vertex.push(0);\n        }\n        switch (geometry.getType()) {\n            case GeometryType.MULTI_LINE_STRING:\n                coordinates = geometry.getCoordinates();\n                coordinates[depth[0]].splice(index + 1, 0, vertex);\n                break;\n            case GeometryType.POLYGON:\n                coordinates = geometry.getCoordinates();\n                coordinates[depth[0]].splice(index + 1, 0, vertex);\n                break;\n            case GeometryType.MULTI_POLYGON:\n                coordinates = geometry.getCoordinates();\n                coordinates[depth[1]][depth[0]].splice(index + 1, 0, vertex);\n                break;\n            case GeometryType.LINE_STRING:\n                coordinates = geometry.getCoordinates();\n                coordinates.splice(index + 1, 0, vertex);\n                break;\n            default:\n                return;\n        }\n        this.setGeometryCoordinates_(geometry, coordinates);\n        var rTree = this.rBush_;\n        rTree.remove(segmentData);\n        this.updateSegmentIndices_(geometry, index, depth, 1);\n        var newSegmentData = /** @type {SegmentData} */ ({\n            segment: [segment[0], vertex],\n            feature: feature,\n            geometry: geometry,\n            depth: depth,\n            index: index\n        });\n        rTree.insert(boundingExtent(newSegmentData.segment), newSegmentData);\n        this.dragSegments_.push([newSegmentData, 1]);\n        var newSegmentData2 = /** @type {SegmentData} */ ({\n            segment: [vertex, segment[1]],\n            feature: feature,\n            geometry: geometry,\n            depth: depth,\n            index: index + 1\n        });\n        rTree.insert(boundingExtent(newSegmentData2.segment), newSegmentData2);\n        this.dragSegments_.push([newSegmentData2, 0]);\n        this.ignoreNextSingleClick_ = true;\n    };\n    /**\n     * Removes the vertex currently being pointed.\n     * @return {boolean} True when a vertex was removed.\n     * @api\n     */\n    Modify.prototype.removePoint = function () {\n        if (this.lastPointerEvent_ && this.lastPointerEvent_.type != MapBrowserEventType.POINTERDRAG) {\n            var evt = this.lastPointerEvent_;\n            this.willModifyFeatures_(evt);\n            var removed = this.removeVertex_();\n            this.dispatchEvent(new ModifyEvent(ModifyEventType.MODIFYEND, this.features_, evt));\n            this.modified_ = false;\n            return removed;\n        }\n        return false;\n    };\n    /**\n     * Removes a vertex from all matching features.\n     * @return {boolean} True when a vertex was removed.\n     * @private\n     */\n    Modify.prototype.removeVertex_ = function () {\n        var dragSegments = this.dragSegments_;\n        var segmentsByFeature = {};\n        var deleted = false;\n        var component, coordinates, dragSegment, geometry, i, index, left;\n        var newIndex, right, segmentData, uid;\n        for (i = dragSegments.length - 1; i >= 0; --i) {\n            dragSegment = dragSegments[i];\n            segmentData = dragSegment[0];\n            uid = getUid(segmentData.feature);\n            if (segmentData.depth) {\n                // separate feature components\n                uid += '-' + segmentData.depth.join('-');\n            }\n            if (!(uid in segmentsByFeature)) {\n                segmentsByFeature[uid] = {};\n            }\n            if (dragSegment[1] === 0) {\n                segmentsByFeature[uid].right = segmentData;\n                segmentsByFeature[uid].index = segmentData.index;\n            }\n            else if (dragSegment[1] == 1) {\n                segmentsByFeature[uid].left = segmentData;\n                segmentsByFeature[uid].index = segmentData.index + 1;\n            }\n        }\n        for (uid in segmentsByFeature) {\n            right = segmentsByFeature[uid].right;\n            left = segmentsByFeature[uid].left;\n            index = segmentsByFeature[uid].index;\n            newIndex = index - 1;\n            if (left !== undefined) {\n                segmentData = left;\n            }\n            else {\n                segmentData = right;\n            }\n            if (newIndex < 0) {\n                newIndex = 0;\n            }\n            geometry = segmentData.geometry;\n            coordinates = geometry.getCoordinates();\n            component = coordinates;\n            deleted = false;\n            switch (geometry.getType()) {\n                case GeometryType.MULTI_LINE_STRING:\n                    if (coordinates[segmentData.depth[0]].length > 2) {\n                        coordinates[segmentData.depth[0]].splice(index, 1);\n                        deleted = true;\n                    }\n                    break;\n                case GeometryType.LINE_STRING:\n                    if (coordinates.length > 2) {\n                        coordinates.splice(index, 1);\n                        deleted = true;\n                    }\n                    break;\n                case GeometryType.MULTI_POLYGON:\n                    component = component[segmentData.depth[1]];\n                /* falls through */\n                case GeometryType.POLYGON:\n                    component = component[segmentData.depth[0]];\n                    if (component.length > 4) {\n                        if (index == component.length - 1) {\n                            index = 0;\n                        }\n                        component.splice(index, 1);\n                        deleted = true;\n                        if (index === 0) {\n                            // close the ring again\n                            component.pop();\n                            component.push(component[0]);\n                            newIndex = component.length - 1;\n                        }\n                    }\n                    break;\n                default:\n                // pass\n            }\n            if (deleted) {\n                this.setGeometryCoordinates_(geometry, coordinates);\n                var segments = [];\n                if (left !== undefined) {\n                    this.rBush_.remove(left);\n                    segments.push(left.segment[0]);\n                }\n                if (right !== undefined) {\n                    this.rBush_.remove(right);\n                    segments.push(right.segment[1]);\n                }\n                if (left !== undefined && right !== undefined) {\n                    var newSegmentData = /** @type {SegmentData} */ ({\n                        depth: segmentData.depth,\n                        feature: segmentData.feature,\n                        geometry: segmentData.geometry,\n                        index: newIndex,\n                        segment: segments\n                    });\n                    this.rBush_.insert(boundingExtent(newSegmentData.segment), newSegmentData);\n                }\n                this.updateSegmentIndices_(geometry, index, segmentData.depth, -1);\n                if (this.vertexFeature_) {\n                    this.overlay_.getSource().removeFeature(this.vertexFeature_);\n                    this.vertexFeature_ = null;\n                }\n                dragSegments.length = 0;\n            }\n        }\n        return deleted;\n    };\n    /**\n     * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @param {Array} coordinates Coordinates.\n     * @private\n     */\n    Modify.prototype.setGeometryCoordinates_ = function (geometry, coordinates) {\n        this.changingFeature_ = true;\n        geometry.setCoordinates(coordinates);\n        this.changingFeature_ = false;\n    };\n    /**\n     * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @param {number} index Index.\n     * @param {Array<number>|undefined} depth Depth.\n     * @param {number} delta Delta (1 or -1).\n     * @private\n     */\n    Modify.prototype.updateSegmentIndices_ = function (geometry, index, depth, delta) {\n        this.rBush_.forEachInExtent(geometry.getExtent(), function (segmentDataMatch) {\n            if (segmentDataMatch.geometry === geometry &&\n                (depth === undefined || segmentDataMatch.depth === undefined ||\n                    equals(segmentDataMatch.depth, depth)) &&\n                segmentDataMatch.index > index) {\n                segmentDataMatch.index += delta;\n            }\n        });\n    };\n    return Modify;\n}(PointerInteraction));\n/**\n * @param {SegmentData} a The first segment data.\n * @param {SegmentData} b The second segment data.\n * @return {number} The difference in indexes.\n */\nfunction compareIndexes(a, b) {\n    return a.index - b.index;\n}\n/**\n * Returns the distance from a point to a line segment.\n *\n * @param {import(\"../coordinate.js\").Coordinate} pointCoordinates The coordinates of the point from\n *        which to calculate the distance.\n * @param {SegmentData} segmentData The object describing the line\n *        segment we are calculating the distance to.\n * @return {number} The square of the distance between a point and a line segment.\n */\nfunction pointDistanceToSegmentDataSquared(pointCoordinates, segmentData) {\n    var geometry = segmentData.geometry;\n    if (geometry.getType() === GeometryType.CIRCLE) {\n        var circleGeometry = /** @type {import(\"../geom/Circle.js\").default} */ (geometry);\n        if (segmentData.index === CIRCLE_CIRCUMFERENCE_INDEX) {\n            var distanceToCenterSquared = squaredCoordinateDistance(circleGeometry.getCenter(), pointCoordinates);\n            var distanceToCircumference = Math.sqrt(distanceToCenterSquared) - circleGeometry.getRadius();\n            return distanceToCircumference * distanceToCircumference;\n        }\n    }\n    return squaredDistanceToSegment(pointCoordinates, segmentData.segment);\n}\n/**\n * Returns the point closest to a given line segment.\n *\n * @param {import(\"../coordinate.js\").Coordinate} pointCoordinates The point to which a closest point\n *        should be found.\n * @param {SegmentData} segmentData The object describing the line\n *        segment which should contain the closest point.\n * @return {import(\"../coordinate.js\").Coordinate} The point closest to the specified line segment.\n */\nfunction closestOnSegmentData(pointCoordinates, segmentData) {\n    var geometry = segmentData.geometry;\n    if (geometry.getType() === GeometryType.CIRCLE &&\n        segmentData.index === CIRCLE_CIRCUMFERENCE_INDEX) {\n        return geometry.getClosestPoint(pointCoordinates);\n    }\n    return closestOnSegment(pointCoordinates, segmentData.segment);\n}\n/**\n * @return {import(\"../style/Style.js\").StyleFunction} Styles.\n */\nfunction getDefaultStyleFunction() {\n    var style = createEditingStyle();\n    return function (feature, resolution) {\n        return style[GeometryType.POINT];\n    };\n}\nexport default Modify;\n//# sourceMappingURL=Modify.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/Select\n */\nimport { getUid } from '../util.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport { extend, includes } from '../array.js';\nimport { listen } from '../events.js';\nimport Event from '../events/Event.js';\nimport { singleClick, never, shiftKeyOnly, pointerMove } from '../events/condition.js';\nimport { TRUE } from '../functions.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport Interaction from './Interaction.js';\nimport VectorLayer from '../layer/Vector.js';\nimport { clear } from '../obj.js';\nimport VectorSource from '../source/Vector.js';\nimport { createEditingStyle } from '../style/Style.js';\n/**\n * @enum {string}\n */\nvar SelectEventType = {\n    /**\n     * Triggered when feature(s) has been (de)selected.\n     * @event SelectEvent#select\n     * @api\n     */\n    SELECT: 'select'\n};\n/**\n * A function that takes an {@link module:ol/Feature} or\n * {@link module:ol/render/Feature} and an\n * {@link module:ol/layer/Layer} and returns `true` if the feature may be\n * selected or `false` otherwise.\n * @typedef {function(import(\"../Feature.js\").FeatureLike, import(\"../layer/Layer.js\").default):boolean} FilterFunction\n */\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [addCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * By default, this is {@link module:ol/events/condition~never}. Use this if you\n * want to use different events for add and remove instead of `toggle`.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. This is the event\n * for the selected features as a whole. By default, this is\n * {@link module:ol/events/condition~singleClick}. Clicking on a feature selects that\n * feature and removes any that were in the selection. Clicking outside any\n * feature removes all from the selection.\n * See `toggle`, `add`, `remove` options for adding/removing extra features to/\n * from the selection.\n * @property {Array<import(\"../layer/Layer.js\").default>|function(import(\"../layer/Layer.js\").default): boolean} [layers]\n * A list of layers from which features should be selected. Alternatively, a\n * filter function can be provided. The function will be called for each layer\n * in the map and should return `true` for layers that you want to be\n * selectable. If the option is absent, all visible layers will be considered\n * selectable.\n * @property {import(\"../style/Style.js\").StyleLike} [style]\n * Style for the selected features. By default the default edit style is used\n * (see {@link module:ol/style}).\n * @property {import(\"../events/condition.js\").Condition} [removeCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * By default, this is {@link module:ol/events/condition~never}. Use this if you\n * want to use different events for add and remove instead of `toggle`.\n * @property {import(\"../events/condition.js\").Condition} [toggleCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. This is in addition\n * to the `condition` event. By default,\n * {@link module:ol/events/condition~shiftKeyOnly}, i.e. pressing `shift` as\n * well as the `condition` event, adds that feature to the current selection if\n * it is not currently selected, and removes it if it is. See `add` and `remove`\n * if you want to use different events instead of a toggle.\n * @property {boolean} [multi=false] A boolean that determines if the default\n * behaviour should select only single features or all (overlapping) features at\n * the clicked map position. The default of `false` means single select.\n * @property {import(\"../Collection.js\").default<import(\"../Feature.js\").default>} [features]\n * Collection where the interaction will place selected features. Optional. If\n * not set the interaction will create a collection. In any case the collection\n * used by the interaction is returned by\n * {@link module:ol/interaction/Select~Select#getFeatures}.\n * @property {FilterFunction} [filter] A function\n * that takes an {@link module:ol/Feature} and an\n * {@link module:ol/layer/Layer} and returns `true` if the feature may be\n * selected or `false` otherwise.\n * @property {boolean} [wrapX=true] Wrap the world horizontally on the selection\n * overlay.\n * @property {number} [hitTolerance=0] Hit-detection tolerance. Pixels inside\n * the radius around the given position will be checked for features.\n */\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Select~Select} instances are instances of\n * this type.\n */\nvar SelectEvent = /** @class */ (function (_super) {\n    __extends(SelectEvent, _super);\n    /**\n     * @param {SelectEventType} type The event type.\n     * @param {Array<import(\"../Feature.js\").default>} selected Selected features.\n     * @param {Array<import(\"../Feature.js\").default>} deselected Deselected features.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Associated\n     *     {@link module:ol/MapBrowserEvent}.\n     */\n    function SelectEvent(type, selected, deselected, mapBrowserEvent) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * Selected features array.\n         * @type {Array<import(\"../Feature.js\").default>}\n         * @api\n         */\n        _this.selected = selected;\n        /**\n         * Deselected features array.\n         * @type {Array<import(\"../Feature.js\").default>}\n         * @api\n         */\n        _this.deselected = deselected;\n        /**\n         * Associated {@link module:ol/MapBrowserEvent}.\n         * @type {import(\"../MapBrowserEvent.js\").default}\n         * @api\n         */\n        _this.mapBrowserEvent = mapBrowserEvent;\n        return _this;\n    }\n    return SelectEvent;\n}(Event));\n/**\n * @classdesc\n * Interaction for selecting vector features. By default, selected features are\n * styled differently, so this interaction can be used for visual highlighting,\n * as well as selecting features for other actions, such as modification or\n * output. There are three ways of controlling which features are selected:\n * using the browser event as defined by the `condition` and optionally the\n * `toggle`, `add`/`remove`, and `multi` options; a `layers` filter; and a\n * further feature filter using the `filter` option.\n *\n * Selected features are added to an internal unmanaged layer.\n *\n * @fires SelectEvent\n * @api\n */\nvar Select = /** @class */ (function (_super) {\n    __extends(Select, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function Select(opt_options) {\n        var _this = _super.call(this, {\n            handleEvent: handleEvent\n        }) || this;\n        var options = opt_options ? opt_options : {};\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.condition_ = options.condition ? options.condition : singleClick;\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.addCondition_ = options.addCondition ? options.addCondition : never;\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.removeCondition_ = options.removeCondition ? options.removeCondition : never;\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.toggleCondition_ = options.toggleCondition ? options.toggleCondition : shiftKeyOnly;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.multi_ = options.multi ? options.multi : false;\n        /**\n         * @private\n         * @type {FilterFunction}\n         */\n        _this.filter_ = options.filter ? options.filter : TRUE;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.hitTolerance_ = options.hitTolerance ? options.hitTolerance : 0;\n        var featureOverlay = new VectorLayer({\n            source: new VectorSource({\n                useSpatialIndex: false,\n                features: options.features,\n                wrapX: options.wrapX\n            }),\n            style: options.style ? options.style :\n                getDefaultStyleFunction(),\n            updateWhileAnimating: true,\n            updateWhileInteracting: true\n        });\n        /**\n         * @private\n         * @type {VectorLayer}\n         */\n        _this.featureOverlay_ = featureOverlay;\n        /** @type {function(import(\"../layer/Layer.js\").default): boolean} */\n        var layerFilter;\n        if (options.layers) {\n            if (typeof options.layers === 'function') {\n                layerFilter = options.layers;\n            }\n            else {\n                var layers_1 = options.layers;\n                layerFilter = function (layer) {\n                    return includes(layers_1, layer);\n                };\n            }\n        }\n        else {\n            layerFilter = TRUE;\n        }\n        /**\n         * @private\n         * @type {function(import(\"../layer/Layer.js\").default): boolean}\n         */\n        _this.layerFilter_ = layerFilter;\n        /**\n         * An association between selected feature (key)\n         * and layer (value)\n         * @private\n         * @type {Object<string, import(\"../layer/Layer.js\").default>}\n         */\n        _this.featureLayerAssociation_ = {};\n        var features = _this.getFeatures();\n        listen(features, CollectionEventType.ADD, _this.addFeature_, _this);\n        listen(features, CollectionEventType.REMOVE, _this.removeFeature_, _this);\n        return _this;\n    }\n    /**\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../layer/Layer.js\").default} layer Layer.\n     * @private\n     */\n    Select.prototype.addFeatureLayerAssociation_ = function (feature, layer) {\n        this.featureLayerAssociation_[getUid(feature)] = layer;\n    };\n    /**\n     * Get the selected features.\n     * @return {import(\"../Collection.js\").default<import(\"../Feature.js\").default>} Features collection.\n     * @api\n     */\n    Select.prototype.getFeatures = function () {\n        return this.featureOverlay_.getSource().getFeaturesCollection();\n    };\n    /**\n     * Returns the Hit-detection tolerance.\n     * @returns {number} Hit tolerance in pixels.\n     * @api\n     */\n    Select.prototype.getHitTolerance = function () {\n        return this.hitTolerance_;\n    };\n    /**\n     * Returns the associated {@link module:ol/layer/Vector~Vector vectorlayer} of\n     * the (last) selected feature. Note that this will not work with any\n     * programmatic method like pushing features to\n     * {@link module:ol/interaction/Select~Select#getFeatures collection}.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature\n     * @return {VectorLayer} Layer.\n     * @api\n     */\n    Select.prototype.getLayer = function (feature) {\n        return (\n        /** @type {VectorLayer} */ (this.featureLayerAssociation_[getUid(feature)]));\n    };\n    /**\n     * Get the overlay layer that this interaction renders selected features to.\n     * @return {VectorLayer} Overlay layer.\n     * @api\n     */\n    Select.prototype.getOverlay = function () {\n        return this.featureOverlay_;\n    };\n    /**\n     * Hit-detection tolerance. Pixels inside the radius around the given position\n     * will be checked for features.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @api\n     */\n    Select.prototype.setHitTolerance = function (hitTolerance) {\n        this.hitTolerance_ = hitTolerance;\n    };\n    /**\n     * Remove the interaction from its current map, if any,  and attach it to a new\n     * map, if any. Pass `null` to just remove the interaction from the current map.\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     * @override\n     * @api\n     */\n    Select.prototype.setMap = function (map) {\n        var currentMap = this.getMap();\n        var selectedFeatures = this.getFeatures();\n        if (currentMap) {\n            selectedFeatures.forEach(currentMap.unskipFeature.bind(currentMap));\n        }\n        _super.prototype.setMap.call(this, map);\n        this.featureOverlay_.setMap(map);\n        if (map) {\n            selectedFeatures.forEach(map.skipFeature.bind(map));\n        }\n    };\n    /**\n     * @param {import(\"../Collection.js\").CollectionEvent} evt Event.\n     * @private\n     */\n    Select.prototype.addFeature_ = function (evt) {\n        var map = this.getMap();\n        if (map) {\n            map.skipFeature(/** @type {import(\"../Feature.js\").default} */ (evt.element));\n        }\n    };\n    /**\n     * @param {import(\"../Collection.js\").CollectionEvent} evt Event.\n     * @private\n     */\n    Select.prototype.removeFeature_ = function (evt) {\n        var map = this.getMap();\n        if (map) {\n            map.unskipFeature(/** @type {import(\"../Feature.js\").default} */ (evt.element));\n        }\n    };\n    /**\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     * @private\n     */\n    Select.prototype.removeFeatureLayerAssociation_ = function (feature) {\n        delete this.featureLayerAssociation_[getUid(feature)];\n    };\n    return Select;\n}(Interaction));\n/**\n * Handles the {@link module:ol/MapBrowserEvent map browser event} and may change the\n * selected state of features.\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {Select}\n */\nfunction handleEvent(mapBrowserEvent) {\n    if (!this.condition_(mapBrowserEvent)) {\n        return true;\n    }\n    var add = this.addCondition_(mapBrowserEvent);\n    var remove = this.removeCondition_(mapBrowserEvent);\n    var toggle = this.toggleCondition_(mapBrowserEvent);\n    var set = !add && !remove && !toggle;\n    var map = mapBrowserEvent.map;\n    var features = this.getFeatures();\n    var deselected = [];\n    var selected = [];\n    if (set) {\n        // Replace the currently selected feature(s) with the feature(s) at the\n        // pixel, or clear the selected feature(s) if there is no feature at\n        // the pixel.\n        clear(this.featureLayerAssociation_);\n        map.forEachFeatureAtPixel(mapBrowserEvent.pixel, (\n        /**\n         * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n         * @param {import(\"../layer/Layer.js\").default} layer Layer.\n         * @return {boolean|undefined} Continue to iterate over the features.\n         */\n        function (feature, layer) {\n            if (this.filter_(feature, layer)) {\n                selected.push(feature);\n                this.addFeatureLayerAssociation_(feature, layer);\n                return !this.multi_;\n            }\n        }).bind(this), {\n            layerFilter: this.layerFilter_,\n            hitTolerance: this.hitTolerance_\n        });\n        for (var i = features.getLength() - 1; i >= 0; --i) {\n            var feature = features.item(i);\n            var index = selected.indexOf(feature);\n            if (index > -1) {\n                // feature is already selected\n                selected.splice(index, 1);\n            }\n            else {\n                features.remove(feature);\n                deselected.push(feature);\n            }\n        }\n        if (selected.length !== 0) {\n            features.extend(selected);\n        }\n    }\n    else {\n        // Modify the currently selected feature(s).\n        map.forEachFeatureAtPixel(mapBrowserEvent.pixel, (\n        /**\n         * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n         * @param {import(\"../layer/Layer.js\").default} layer Layer.\n         * @return {boolean|undefined} Continue to iterate over the features.\n         */\n        function (feature, layer) {\n            if (this.filter_(feature, layer)) {\n                if ((add || toggle) && !includes(features.getArray(), feature)) {\n                    selected.push(feature);\n                    this.addFeatureLayerAssociation_(feature, layer);\n                }\n                else if ((remove || toggle) && includes(features.getArray(), feature)) {\n                    deselected.push(feature);\n                    this.removeFeatureLayerAssociation_(feature);\n                }\n                return !this.multi_;\n            }\n        }).bind(this), {\n            layerFilter: this.layerFilter_,\n            hitTolerance: this.hitTolerance_\n        });\n        for (var j = deselected.length - 1; j >= 0; --j) {\n            features.remove(deselected[j]);\n        }\n        features.extend(selected);\n    }\n    if (selected.length > 0 || deselected.length > 0) {\n        this.dispatchEvent(new SelectEvent(SelectEventType.SELECT, selected, deselected, mapBrowserEvent));\n    }\n    return pointerMove(mapBrowserEvent);\n}\n/**\n * @return {import(\"../style/Style.js\").StyleFunction} Styles.\n */\nfunction getDefaultStyleFunction() {\n    var styles = createEditingStyle();\n    extend(styles[GeometryType.POLYGON], styles[GeometryType.LINE_STRING]);\n    extend(styles[GeometryType.GEOMETRY_COLLECTION], styles[GeometryType.LINE_STRING]);\n    return function (feature, resolution) {\n        if (!feature.getGeometry()) {\n            return null;\n        }\n        return styles[feature.getGeometry().getType()];\n    };\n}\nexport default Select;\n//# sourceMappingURL=Select.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/Snap\n */\nimport { getUid } from '../util.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport { distance as coordinateDistance, squaredDistance as squaredCoordinateDistance, closestOnCircle, closestOnSegment, squaredDistanceToSegment } from '../coordinate.js';\nimport { listen, unlistenByKey } from '../events.js';\nimport EventType from '../events/EventType.js';\nimport { boundingExtent, createEmpty } from '../extent.js';\nimport { TRUE, FALSE } from '../functions.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport { fromCircle } from '../geom/Polygon.js';\nimport PointerInteraction from './Pointer.js';\nimport { getValues } from '../obj.js';\nimport VectorEventType from '../source/VectorEventType.js';\nimport RBush from '../structs/RBush.js';\n/**\n * @typedef {Object} Result\n * @property {boolean} snapped\n * @property {import(\"../coordinate.js\").Coordinate|null} vertex\n * @property {import(\"../pixel.js\").Pixel|null} vertexPixel\n */\n/**\n * @typedef {Object} SegmentData\n * @property {import(\"../Feature.js\").default} feature\n * @property {Array<import(\"../coordinate.js\").Coordinate>} segment\n */\n/**\n * @typedef {Object} Options\n * @property {import(\"../Collection.js\").default<import(\"../Feature.js\").default>} [features] Snap to these features. Either this option or source should be provided.\n * @property {boolean} [edge=true] Snap to edges.\n * @property {boolean} [vertex=true] Snap to vertices.\n * @property {number} [pixelTolerance=10] Pixel tolerance for considering the pointer close enough to a segment or\n * vertex for snapping.\n * @property {import(\"../source/Vector.js\").default} [source] Snap to features from this source. Either this option or features should be provided\n */\n/**\n * @param  {import(\"../source/Vector.js\").VectorSourceEvent|import(\"../Collection.js\").CollectionEvent} evt Event.\n * @return {import(\"../Feature.js\").default} Feature.\n */\nfunction getFeatureFromEvent(evt) {\n    if ( /** @type {import(\"../source/Vector.js\").VectorSourceEvent} */(evt).feature) {\n        return /** @type {import(\"../source/Vector.js\").VectorSourceEvent} */ (evt).feature;\n    }\n    else if ( /** @type {import(\"../Collection.js\").CollectionEvent} */(evt).element) {\n        return /** @type {import(\"../Feature.js\").default} */ ( /** @type {import(\"../Collection.js\").CollectionEvent} */(evt).element);\n    }\n}\n/**\n * @classdesc\n * Handles snapping of vector features while modifying or drawing them.  The\n * features can come from a {@link module:ol/source/Vector} or {@link module:ol/Collection~Collection}\n * Any interaction object that allows the user to interact\n * with the features using the mouse can benefit from the snapping, as long\n * as it is added before.\n *\n * The snap interaction modifies map browser event `coordinate` and `pixel`\n * properties to force the snap to occur to any interaction that them.\n *\n * Example:\n *\n *     import Snap from 'ol/interaction/Snap';\n *\n *     var snap = new Snap({\n *       source: source\n *     });\n *\n * @api\n */\nvar Snap = /** @class */ (function (_super) {\n    __extends(Snap, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function Snap(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        var pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (options);\n        if (!pointerOptions.handleDownEvent) {\n            pointerOptions.handleDownEvent = TRUE;\n        }\n        if (!pointerOptions.stopDown) {\n            pointerOptions.stopDown = FALSE;\n        }\n        _this = _super.call(this, pointerOptions) || this;\n        /**\n         * @type {import(\"../source/Vector.js\").default}\n         * @private\n         */\n        _this.source_ = options.source ? options.source : null;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.vertex_ = options.vertex !== undefined ? options.vertex : true;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.edge_ = options.edge !== undefined ? options.edge : true;\n        /**\n         * @type {import(\"../Collection.js\").default<import(\"../Feature.js\").default>}\n         * @private\n         */\n        _this.features_ = options.features ? options.features : null;\n        /**\n         * @type {Array<import(\"../events.js\").EventsKey>}\n         * @private\n         */\n        _this.featuresListenerKeys_ = [];\n        /**\n         * @type {Object<string, import(\"../events.js\").EventsKey>}\n         * @private\n         */\n        _this.featureChangeListenerKeys_ = {};\n        /**\n         * Extents are preserved so indexed segment can be quickly removed\n         * when its feature geometry changes\n         * @type {Object<string, import(\"../extent.js\").Extent>}\n         * @private\n         */\n        _this.indexedFeaturesExtents_ = {};\n        /**\n         * If a feature geometry changes while a pointer drag|move event occurs, the\n         * feature doesn't get updated right away.  It will be at the next 'pointerup'\n         * event fired.\n         * @type {!Object<string, import(\"../Feature.js\").default>}\n         * @private\n         */\n        _this.pendingFeatures_ = {};\n        /**\n         * Used for distance sorting in sortByDistance_\n         * @type {import(\"../coordinate.js\").Coordinate}\n         * @private\n         */\n        _this.pixelCoordinate_ = null;\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.pixelTolerance_ = options.pixelTolerance !== undefined ?\n            options.pixelTolerance : 10;\n        /**\n         * @type {function(SegmentData, SegmentData): number}\n         * @private\n         */\n        _this.sortByDistance_ = sortByDistance.bind(_this);\n        /**\n        * Segment RTree for each layer\n        * @type {import(\"../structs/RBush.js\").default<SegmentData>}\n        * @private\n        */\n        _this.rBush_ = new RBush();\n        /**\n        * @const\n        * @private\n        * @type {Object<string, function(import(\"../Feature.js\").default, import(\"../geom/Geometry.js\").default): void>}\n        */\n        _this.SEGMENT_WRITERS_ = {\n            'Point': _this.writePointGeometry_,\n            'LineString': _this.writeLineStringGeometry_,\n            'LinearRing': _this.writeLineStringGeometry_,\n            'Polygon': _this.writePolygonGeometry_,\n            'MultiPoint': _this.writeMultiPointGeometry_,\n            'MultiLineString': _this.writeMultiLineStringGeometry_,\n            'MultiPolygon': _this.writeMultiPolygonGeometry_,\n            'GeometryCollection': _this.writeGeometryCollectionGeometry_,\n            'Circle': _this.writeCircleGeometry_\n        };\n        return _this;\n    }\n    /**\n     * Add a feature to the collection of features that we may snap to.\n     * @param {import(\"../Feature.js\").default} feature Feature.\n     * @param {boolean=} opt_listen Whether to listen to the feature change or not\n     *     Defaults to `true`.\n     * @api\n     */\n    Snap.prototype.addFeature = function (feature, opt_listen) {\n        var register = opt_listen !== undefined ? opt_listen : true;\n        var feature_uid = getUid(feature);\n        var geometry = feature.getGeometry();\n        if (geometry) {\n            var segmentWriter = this.SEGMENT_WRITERS_[geometry.getType()];\n            if (segmentWriter) {\n                this.indexedFeaturesExtents_[feature_uid] = geometry.getExtent(createEmpty());\n                segmentWriter.call(this, feature, geometry);\n            }\n        }\n        if (register) {\n            this.featureChangeListenerKeys_[feature_uid] = listen(feature, EventType.CHANGE, this.handleFeatureChange_, this);\n        }\n    };\n    /**\n     * @param {import(\"../Feature.js\").default} feature Feature.\n     * @private\n     */\n    Snap.prototype.forEachFeatureAdd_ = function (feature) {\n        this.addFeature(feature);\n    };\n    /**\n     * @param {import(\"../Feature.js\").default} feature Feature.\n     * @private\n     */\n    Snap.prototype.forEachFeatureRemove_ = function (feature) {\n        this.removeFeature(feature);\n    };\n    /**\n     * @return {import(\"../Collection.js\").default<import(\"../Feature.js\").default>|Array<import(\"../Feature.js\").default>} Features.\n     * @private\n     */\n    Snap.prototype.getFeatures_ = function () {\n        var features;\n        if (this.features_) {\n            features = this.features_;\n        }\n        else if (this.source_) {\n            features = this.source_.getFeatures();\n        }\n        return features;\n    };\n    /**\n     * @inheritDoc\n     */\n    Snap.prototype.handleEvent = function (evt) {\n        var result = this.snapTo(evt.pixel, evt.coordinate, evt.map);\n        if (result.snapped) {\n            evt.coordinate = result.vertex.slice(0, 2);\n            evt.pixel = result.vertexPixel;\n        }\n        return _super.prototype.handleEvent.call(this, evt);\n    };\n    /**\n     * @param {import(\"../source/Vector.js\").VectorSourceEvent|import(\"../Collection.js\").CollectionEvent} evt Event.\n     * @private\n     */\n    Snap.prototype.handleFeatureAdd_ = function (evt) {\n        var feature = getFeatureFromEvent(evt);\n        this.addFeature(feature);\n    };\n    /**\n     * @param {import(\"../source/Vector.js\").VectorSourceEvent|import(\"../Collection.js\").CollectionEvent} evt Event.\n     * @private\n     */\n    Snap.prototype.handleFeatureRemove_ = function (evt) {\n        var feature = getFeatureFromEvent(evt);\n        this.removeFeature(feature);\n    };\n    /**\n     * @param {import(\"../events/Event.js\").default} evt Event.\n     * @private\n     */\n    Snap.prototype.handleFeatureChange_ = function (evt) {\n        var feature = /** @type {import(\"../Feature.js\").default} */ (evt.target);\n        if (this.handlingDownUpSequence) {\n            var uid = getUid(feature);\n            if (!(uid in this.pendingFeatures_)) {\n                this.pendingFeatures_[uid] = feature;\n            }\n        }\n        else {\n            this.updateFeature_(feature);\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    Snap.prototype.handleUpEvent = function (evt) {\n        var featuresToUpdate = getValues(this.pendingFeatures_);\n        if (featuresToUpdate.length) {\n            featuresToUpdate.forEach(this.updateFeature_.bind(this));\n            this.pendingFeatures_ = {};\n        }\n        return false;\n    };\n    /**\n     * Remove a feature from the collection of features that we may snap to.\n     * @param {import(\"../Feature.js\").default} feature Feature\n     * @param {boolean=} opt_unlisten Whether to unlisten to the feature change\n     *     or not. Defaults to `true`.\n     * @api\n     */\n    Snap.prototype.removeFeature = function (feature, opt_unlisten) {\n        var unregister = opt_unlisten !== undefined ? opt_unlisten : true;\n        var feature_uid = getUid(feature);\n        var extent = this.indexedFeaturesExtents_[feature_uid];\n        if (extent) {\n            var rBush = this.rBush_;\n            var nodesToRemove_1 = [];\n            rBush.forEachInExtent(extent, function (node) {\n                if (feature === node.feature) {\n                    nodesToRemove_1.push(node);\n                }\n            });\n            for (var i = nodesToRemove_1.length - 1; i >= 0; --i) {\n                rBush.remove(nodesToRemove_1[i]);\n            }\n        }\n        if (unregister) {\n            unlistenByKey(this.featureChangeListenerKeys_[feature_uid]);\n            delete this.featureChangeListenerKeys_[feature_uid];\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    Snap.prototype.setMap = function (map) {\n        var currentMap = this.getMap();\n        var keys = this.featuresListenerKeys_;\n        var features = /** @type {Array<import(\"../Feature.js\").default>} */ (this.getFeatures_());\n        if (currentMap) {\n            keys.forEach(unlistenByKey);\n            keys.length = 0;\n            features.forEach(this.forEachFeatureRemove_.bind(this));\n        }\n        _super.prototype.setMap.call(this, map);\n        if (map) {\n            if (this.features_) {\n                keys.push(listen(this.features_, CollectionEventType.ADD, this.handleFeatureAdd_, this), listen(this.features_, CollectionEventType.REMOVE, this.handleFeatureRemove_, this));\n            }\n            else if (this.source_) {\n                keys.push(listen(this.source_, VectorEventType.ADDFEATURE, this.handleFeatureAdd_, this), listen(this.source_, VectorEventType.REMOVEFEATURE, this.handleFeatureRemove_, this));\n            }\n            features.forEach(this.forEachFeatureAdd_.bind(this));\n        }\n    };\n    /**\n     * @param {import(\"../pixel.js\").Pixel} pixel Pixel\n     * @param {import(\"../coordinate.js\").Coordinate} pixelCoordinate Coordinate\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     * @return {Result} Snap result\n     */\n    Snap.prototype.snapTo = function (pixel, pixelCoordinate, map) {\n        var lowerLeft = map.getCoordinateFromPixel([pixel[0] - this.pixelTolerance_, pixel[1] + this.pixelTolerance_]);\n        var upperRight = map.getCoordinateFromPixel([pixel[0] + this.pixelTolerance_, pixel[1] - this.pixelTolerance_]);\n        var box = boundingExtent([lowerLeft, upperRight]);\n        var segments = this.rBush_.getInExtent(box);\n        // If snapping on vertices only, don't consider circles\n        if (this.vertex_ && !this.edge_) {\n            segments = segments.filter(function (segment) {\n                return segment.feature.getGeometry().getType() !==\n                    GeometryType.CIRCLE;\n            });\n        }\n        var snappedToVertex = false;\n        var snapped = false;\n        var vertex = null;\n        var vertexPixel = null;\n        var dist, pixel1, pixel2, squaredDist1, squaredDist2;\n        if (segments.length > 0) {\n            this.pixelCoordinate_ = pixelCoordinate;\n            segments.sort(this.sortByDistance_);\n            var closestSegment = segments[0].segment;\n            var isCircle = segments[0].feature.getGeometry().getType() ===\n                GeometryType.CIRCLE;\n            if (this.vertex_ && !this.edge_) {\n                pixel1 = map.getPixelFromCoordinate(closestSegment[0]);\n                pixel2 = map.getPixelFromCoordinate(closestSegment[1]);\n                squaredDist1 = squaredCoordinateDistance(pixel, pixel1);\n                squaredDist2 = squaredCoordinateDistance(pixel, pixel2);\n                dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n                snappedToVertex = dist <= this.pixelTolerance_;\n                if (snappedToVertex) {\n                    snapped = true;\n                    vertex = squaredDist1 > squaredDist2 ? closestSegment[1] : closestSegment[0];\n                    vertexPixel = map.getPixelFromCoordinate(vertex);\n                }\n            }\n            else if (this.edge_) {\n                if (isCircle) {\n                    vertex = closestOnCircle(pixelCoordinate, \n                    /** @type {import(\"../geom/Circle.js\").default} */ (segments[0].feature.getGeometry()));\n                }\n                else {\n                    vertex = closestOnSegment(pixelCoordinate, closestSegment);\n                }\n                vertexPixel = map.getPixelFromCoordinate(vertex);\n                if (coordinateDistance(pixel, vertexPixel) <= this.pixelTolerance_) {\n                    snapped = true;\n                    if (this.vertex_ && !isCircle) {\n                        pixel1 = map.getPixelFromCoordinate(closestSegment[0]);\n                        pixel2 = map.getPixelFromCoordinate(closestSegment[1]);\n                        squaredDist1 = squaredCoordinateDistance(vertexPixel, pixel1);\n                        squaredDist2 = squaredCoordinateDistance(vertexPixel, pixel2);\n                        dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n                        snappedToVertex = dist <= this.pixelTolerance_;\n                        if (snappedToVertex) {\n                            vertex = squaredDist1 > squaredDist2 ? closestSegment[1] : closestSegment[0];\n                            vertexPixel = map.getPixelFromCoordinate(vertex);\n                        }\n                    }\n                }\n            }\n            if (snapped) {\n                vertexPixel = [Math.round(vertexPixel[0]), Math.round(vertexPixel[1])];\n            }\n        }\n        return {\n            snapped: snapped,\n            vertex: vertex,\n            vertexPixel: vertexPixel\n        };\n    };\n    /**\n     * @param {import(\"../Feature.js\").default} feature Feature\n     * @private\n     */\n    Snap.prototype.updateFeature_ = function (feature) {\n        this.removeFeature(feature, false);\n        this.addFeature(feature, false);\n    };\n    /**\n     * @param {import(\"../Feature.js\").default} feature Feature\n     * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n     * @private\n     */\n    Snap.prototype.writeCircleGeometry_ = function (feature, geometry) {\n        var polygon = fromCircle(geometry);\n        var coordinates = polygon.getCoordinates()[0];\n        for (var i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n            var segment = coordinates.slice(i, i + 2);\n            var segmentData = {\n                feature: feature,\n                segment: segment\n            };\n            this.rBush_.insert(boundingExtent(segment), segmentData);\n        }\n    };\n    /**\n     * @param {import(\"../Feature.js\").default} feature Feature\n     * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n     * @private\n     */\n    Snap.prototype.writeGeometryCollectionGeometry_ = function (feature, geometry) {\n        var geometries = geometry.getGeometriesArray();\n        for (var i = 0; i < geometries.length; ++i) {\n            var segmentWriter = this.SEGMENT_WRITERS_[geometries[i].getType()];\n            if (segmentWriter) {\n                segmentWriter.call(this, feature, geometries[i]);\n            }\n        }\n    };\n    /**\n     * @param {import(\"../Feature.js\").default} feature Feature\n     * @param {import(\"../geom/LineString.js\").default} geometry Geometry.\n     * @private\n     */\n    Snap.prototype.writeLineStringGeometry_ = function (feature, geometry) {\n        var coordinates = geometry.getCoordinates();\n        for (var i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n            var segment = coordinates.slice(i, i + 2);\n            var segmentData = {\n                feature: feature,\n                segment: segment\n            };\n            this.rBush_.insert(boundingExtent(segment), segmentData);\n        }\n    };\n    /**\n     * @param {import(\"../Feature.js\").default} feature Feature\n     * @param {import(\"../geom/MultiLineString.js\").default} geometry Geometry.\n     * @private\n     */\n    Snap.prototype.writeMultiLineStringGeometry_ = function (feature, geometry) {\n        var lines = geometry.getCoordinates();\n        for (var j = 0, jj = lines.length; j < jj; ++j) {\n            var coordinates = lines[j];\n            for (var i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n                var segment = coordinates.slice(i, i + 2);\n                var segmentData = {\n                    feature: feature,\n                    segment: segment\n                };\n                this.rBush_.insert(boundingExtent(segment), segmentData);\n            }\n        }\n    };\n    /**\n     * @param {import(\"../Feature.js\").default} feature Feature\n     * @param {import(\"../geom/MultiPoint.js\").default} geometry Geometry.\n     * @private\n     */\n    Snap.prototype.writeMultiPointGeometry_ = function (feature, geometry) {\n        var points = geometry.getCoordinates();\n        for (var i = 0, ii = points.length; i < ii; ++i) {\n            var coordinates = points[i];\n            var segmentData = {\n                feature: feature,\n                segment: [coordinates, coordinates]\n            };\n            this.rBush_.insert(geometry.getExtent(), segmentData);\n        }\n    };\n    /**\n     * @param {import(\"../Feature.js\").default} feature Feature\n     * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n     * @private\n     */\n    Snap.prototype.writeMultiPolygonGeometry_ = function (feature, geometry) {\n        var polygons = geometry.getCoordinates();\n        for (var k = 0, kk = polygons.length; k < kk; ++k) {\n            var rings = polygons[k];\n            for (var j = 0, jj = rings.length; j < jj; ++j) {\n                var coordinates = rings[j];\n                for (var i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n                    var segment = coordinates.slice(i, i + 2);\n                    var segmentData = {\n                        feature: feature,\n                        segment: segment\n                    };\n                    this.rBush_.insert(boundingExtent(segment), segmentData);\n                }\n            }\n        }\n    };\n    /**\n     * @param {import(\"../Feature.js\").default} feature Feature\n     * @param {import(\"../geom/Point.js\").default} geometry Geometry.\n     * @private\n     */\n    Snap.prototype.writePointGeometry_ = function (feature, geometry) {\n        var coordinates = geometry.getCoordinates();\n        var segmentData = {\n            feature: feature,\n            segment: [coordinates, coordinates]\n        };\n        this.rBush_.insert(geometry.getExtent(), segmentData);\n    };\n    /**\n     * @param {import(\"../Feature.js\").default} feature Feature\n     * @param {import(\"../geom/Polygon.js\").default} geometry Geometry.\n     * @private\n     */\n    Snap.prototype.writePolygonGeometry_ = function (feature, geometry) {\n        var rings = geometry.getCoordinates();\n        for (var j = 0, jj = rings.length; j < jj; ++j) {\n            var coordinates = rings[j];\n            for (var i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n                var segment = coordinates.slice(i, i + 2);\n                var segmentData = {\n                    feature: feature,\n                    segment: segment\n                };\n                this.rBush_.insert(boundingExtent(segment), segmentData);\n            }\n        }\n    };\n    return Snap;\n}(PointerInteraction));\n/**\n * Sort segments by distance, helper function\n * @param {SegmentData} a The first segment data.\n * @param {SegmentData} b The second segment data.\n * @return {number} The difference in distance.\n * @this {Snap}\n */\nfunction sortByDistance(a, b) {\n    var deltaA = squaredDistanceToSegment(this.pixelCoordinate_, a.segment);\n    var deltaB = squaredDistanceToSegment(this.pixelCoordinate_, b.segment);\n    return deltaA - deltaB;\n}\nexport default Snap;\n//# sourceMappingURL=Snap.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/Translate\n */\nimport Collection from '../Collection.js';\nimport { getChangeEventType } from '../Object.js';\nimport { listen } from '../events.js';\nimport Event from '../events/Event.js';\nimport { TRUE } from '../functions.js';\nimport { includes } from '../array.js';\nimport PointerInteraction from './Pointer.js';\nimport InteractionProperty from './Property.js';\n/**\n * @enum {string}\n */\nvar TranslateEventType = {\n    /**\n     * Triggered upon feature translation start.\n     * @event TranslateEvent#translatestart\n     * @api\n     */\n    TRANSLATESTART: 'translatestart',\n    /**\n     * Triggered upon feature translation.\n     * @event TranslateEvent#translating\n     * @api\n     */\n    TRANSLATING: 'translating',\n    /**\n     * Triggered upon feature translation end.\n     * @event TranslateEvent#translateend\n     * @api\n     */\n    TRANSLATEEND: 'translateend'\n};\n/**\n * @typedef {Object} Options\n * @property {Collection<import(\"../Feature.js\").default>} [features] Only features contained in this collection will be able to be translated. If\n * not specified, all features on the map will be able to be translated.\n * @property {Array<import(\"../layer/Layer.js\").default>|function(import(\"../layer/Layer.js\").default): boolean} [layers] A list of layers from which features should be\n * translated. Alternatively, a filter function can be provided. The\n * function will be called for each layer in the map and should return\n * `true` for layers that you want to be translatable. If the option is\n * absent, all visible layers will be considered translatable.\n * @property {number} [hitTolerance=0] Hit-detection tolerance. Pixels inside the radius around the given position\n * will be checked for features.\n */\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Translate~Translate} instances\n * are instances of this type.\n */\nvar TranslateEvent = /** @class */ (function (_super) {\n    __extends(TranslateEvent, _super);\n    /**\n     * @param {TranslateEventType} type Type.\n     * @param {Collection<import(\"../Feature.js\").default>} features The features translated.\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate The event coordinate.\n     */\n    function TranslateEvent(type, features, coordinate) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * The features being translated.\n         * @type {Collection<import(\"../Feature.js\").default>}\n         * @api\n         */\n        _this.features = features;\n        /**\n         * The coordinate of the drag event.\n         * @const\n         * @type {import(\"../coordinate.js\").Coordinate}\n         * @api\n         */\n        _this.coordinate = coordinate;\n        return _this;\n    }\n    return TranslateEvent;\n}(Event));\nexport { TranslateEvent };\n/**\n * @classdesc\n * Interaction for translating (moving) features.\n *\n * @fires TranslateEvent\n * @api\n */\nvar Translate = /** @class */ (function (_super) {\n    __extends(Translate, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function Translate(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, /** @type {import(\"./Pointer.js\").Options} */ (options)) || this;\n        /**\n         * The last position we translated to.\n         * @type {import(\"../coordinate.js\").Coordinate}\n         * @private\n         */\n        _this.lastCoordinate_ = null;\n        /**\n         * @type {Collection<import(\"../Feature.js\").default>}\n         * @private\n         */\n        _this.features_ = options.features !== undefined ? options.features : null;\n        /** @type {function(import(\"../layer/Layer.js\").default): boolean} */\n        var layerFilter;\n        if (options.layers) {\n            if (typeof options.layers === 'function') {\n                layerFilter = options.layers;\n            }\n            else {\n                var layers_1 = options.layers;\n                layerFilter = function (layer) {\n                    return includes(layers_1, layer);\n                };\n            }\n        }\n        else {\n            layerFilter = TRUE;\n        }\n        /**\n         * @private\n         * @type {function(import(\"../layer/Layer.js\").default): boolean}\n         */\n        _this.layerFilter_ = layerFilter;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.hitTolerance_ = options.hitTolerance ? options.hitTolerance : 0;\n        /**\n         * @type {import(\"../Feature.js\").default}\n         * @private\n         */\n        _this.lastFeature_ = null;\n        listen(_this, getChangeEventType(InteractionProperty.ACTIVE), _this.handleActiveChanged_, _this);\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    Translate.prototype.handleDownEvent = function (event) {\n        this.lastFeature_ = this.featuresAtPixel_(event.pixel, event.map);\n        if (!this.lastCoordinate_ && this.lastFeature_) {\n            this.lastCoordinate_ = event.coordinate;\n            this.handleMoveEvent(event);\n            var features = this.features_ || new Collection([this.lastFeature_]);\n            this.dispatchEvent(new TranslateEvent(TranslateEventType.TRANSLATESTART, features, event.coordinate));\n            return true;\n        }\n        return false;\n    };\n    /**\n     * @inheritDoc\n     */\n    Translate.prototype.handleUpEvent = function (event) {\n        if (this.lastCoordinate_) {\n            this.lastCoordinate_ = null;\n            this.handleMoveEvent(event);\n            var features = this.features_ || new Collection([this.lastFeature_]);\n            this.dispatchEvent(new TranslateEvent(TranslateEventType.TRANSLATEEND, features, event.coordinate));\n            return true;\n        }\n        return false;\n    };\n    /**\n     * @inheritDoc\n     */\n    Translate.prototype.handleDragEvent = function (event) {\n        if (this.lastCoordinate_) {\n            var newCoordinate = event.coordinate;\n            var deltaX_1 = newCoordinate[0] - this.lastCoordinate_[0];\n            var deltaY_1 = newCoordinate[1] - this.lastCoordinate_[1];\n            var features = this.features_ || new Collection([this.lastFeature_]);\n            features.forEach(function (feature) {\n                var geom = feature.getGeometry();\n                geom.translate(deltaX_1, deltaY_1);\n                feature.setGeometry(geom);\n            });\n            this.lastCoordinate_ = newCoordinate;\n            this.dispatchEvent(new TranslateEvent(TranslateEventType.TRANSLATING, features, newCoordinate));\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    Translate.prototype.handleMoveEvent = function (event) {\n        var elem = event.map.getViewport();\n        // Change the cursor to grab/grabbing if hovering any of the features managed\n        // by the interaction\n        if (this.featuresAtPixel_(event.pixel, event.map)) {\n            elem.classList.remove(this.lastCoordinate_ ? 'ol-grab' : 'ol-grabbing');\n            elem.classList.add(this.lastCoordinate_ ? 'ol-grabbing' : 'ol-grab');\n        }\n        else {\n            elem.classList.remove('ol-grab', 'ol-grabbing');\n        }\n    };\n    /**\n     * Tests to see if the given coordinates intersects any of our selected\n     * features.\n     * @param {import(\"../pixel.js\").Pixel} pixel Pixel coordinate to test for intersection.\n     * @param {import(\"../PluggableMap.js\").default} map Map to test the intersection on.\n     * @return {import(\"../Feature.js\").default} Returns the feature found at the specified pixel\n     * coordinates.\n     * @private\n     */\n    Translate.prototype.featuresAtPixel_ = function (pixel, map) {\n        return map.forEachFeatureAtPixel(pixel, function (feature) {\n            if (!this.features_ || includes(this.features_.getArray(), feature)) {\n                return feature;\n            }\n        }.bind(this), {\n            layerFilter: this.layerFilter_,\n            hitTolerance: this.hitTolerance_\n        });\n    };\n    /**\n     * Returns the Hit-detection tolerance.\n     * @returns {number} Hit tolerance in pixels.\n     * @api\n     */\n    Translate.prototype.getHitTolerance = function () {\n        return this.hitTolerance_;\n    };\n    /**\n     * Hit-detection tolerance. Pixels inside the radius around the given position\n     * will be checked for features.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @api\n     */\n    Translate.prototype.setHitTolerance = function (hitTolerance) {\n        this.hitTolerance_ = hitTolerance;\n    };\n    /**\n     * @inheritDoc\n     */\n    Translate.prototype.setMap = function (map) {\n        var oldMap = this.getMap();\n        _super.prototype.setMap.call(this, map);\n        this.updateState_(oldMap);\n    };\n    /**\n     * @private\n     */\n    Translate.prototype.handleActiveChanged_ = function () {\n        this.updateState_(null);\n    };\n    /**\n     * @param {import(\"../PluggableMap.js\").default} oldMap Old map.\n     * @private\n     */\n    Translate.prototype.updateState_ = function (oldMap) {\n        var map = this.getMap();\n        var active = this.getActive();\n        if (!map || !active) {\n            map = map || oldMap;\n            if (map) {\n                var elem = map.getViewport();\n                elem.classList.remove('ol-grab', 'ol-grabbing');\n            }\n        }\n    };\n    return Translate;\n}(PointerInteraction));\nexport default Translate;\n//# sourceMappingURL=Translate.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/GeometryCollection\n */\nimport { listen, unlisten } from '../events.js';\nimport EventType from '../events/EventType.js';\nimport { createOrUpdateEmpty, closestSquaredDistanceXY, extend, getCenter } from '../extent.js';\nimport Geometry from './Geometry.js';\nimport GeometryType from './GeometryType.js';\nimport { clear } from '../obj.js';\n/**\n * @classdesc\n * An array of {@link module:ol/geom/Geometry} objects.\n *\n * @api\n */\nvar GeometryCollection = /** @class */ (function (_super) {\n    __extends(GeometryCollection, _super);\n    /**\n     * @param {Array<Geometry>=} opt_geometries Geometries.\n     */\n    function GeometryCollection(opt_geometries) {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {Array<Geometry>}\n         */\n        _this.geometries_ = opt_geometries ? opt_geometries : null;\n        _this.listenGeometriesChange_();\n        return _this;\n    }\n    /**\n     * @private\n     */\n    GeometryCollection.prototype.unlistenGeometriesChange_ = function () {\n        if (!this.geometries_) {\n            return;\n        }\n        for (var i = 0, ii = this.geometries_.length; i < ii; ++i) {\n            unlisten(this.geometries_[i], EventType.CHANGE, this.changed, this);\n        }\n    };\n    /**\n     * @private\n     */\n    GeometryCollection.prototype.listenGeometriesChange_ = function () {\n        if (!this.geometries_) {\n            return;\n        }\n        for (var i = 0, ii = this.geometries_.length; i < ii; ++i) {\n            listen(this.geometries_[i], EventType.CHANGE, this.changed, this);\n        }\n    };\n    /**\n     * Make a complete copy of the geometry.\n     * @return {!GeometryCollection} Clone.\n     * @override\n     * @api\n     */\n    GeometryCollection.prototype.clone = function () {\n        var geometryCollection = new GeometryCollection(null);\n        geometryCollection.setGeometries(this.geometries_);\n        return geometryCollection;\n    };\n    /**\n     * @inheritDoc\n     */\n    GeometryCollection.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\n        if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n            return minSquaredDistance;\n        }\n        var geometries = this.geometries_;\n        for (var i = 0, ii = geometries.length; i < ii; ++i) {\n            minSquaredDistance = geometries[i].closestPointXY(x, y, closestPoint, minSquaredDistance);\n        }\n        return minSquaredDistance;\n    };\n    /**\n     * @inheritDoc\n     */\n    GeometryCollection.prototype.containsXY = function (x, y) {\n        var geometries = this.geometries_;\n        for (var i = 0, ii = geometries.length; i < ii; ++i) {\n            if (geometries[i].containsXY(x, y)) {\n                return true;\n            }\n        }\n        return false;\n    };\n    /**\n     * @inheritDoc\n     */\n    GeometryCollection.prototype.computeExtent = function (extent) {\n        createOrUpdateEmpty(extent);\n        var geometries = this.geometries_;\n        for (var i = 0, ii = geometries.length; i < ii; ++i) {\n            extend(extent, geometries[i].getExtent());\n        }\n        return extent;\n    };\n    /**\n     * Return the geometries that make up this geometry collection.\n     * @return {Array<Geometry>} Geometries.\n     * @api\n     */\n    GeometryCollection.prototype.getGeometries = function () {\n        return cloneGeometries(this.geometries_);\n    };\n    /**\n     * @return {Array<Geometry>} Geometries.\n     */\n    GeometryCollection.prototype.getGeometriesArray = function () {\n        return this.geometries_;\n    };\n    /**\n     * @inheritDoc\n     */\n    GeometryCollection.prototype.getSimplifiedGeometry = function (squaredTolerance) {\n        if (this.simplifiedGeometryRevision != this.getRevision()) {\n            clear(this.simplifiedGeometryCache);\n            this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n            this.simplifiedGeometryRevision = this.getRevision();\n        }\n        if (squaredTolerance < 0 ||\n            (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n                squaredTolerance < this.simplifiedGeometryMaxMinSquaredTolerance)) {\n            return this;\n        }\n        var key = squaredTolerance.toString();\n        if (this.simplifiedGeometryCache.hasOwnProperty(key)) {\n            return this.simplifiedGeometryCache[key];\n        }\n        else {\n            var simplifiedGeometries = [];\n            var geometries = this.geometries_;\n            var simplified = false;\n            for (var i = 0, ii = geometries.length; i < ii; ++i) {\n                var geometry = geometries[i];\n                var simplifiedGeometry = geometry.getSimplifiedGeometry(squaredTolerance);\n                simplifiedGeometries.push(simplifiedGeometry);\n                if (simplifiedGeometry !== geometry) {\n                    simplified = true;\n                }\n            }\n            if (simplified) {\n                var simplifiedGeometryCollection = new GeometryCollection(null);\n                simplifiedGeometryCollection.setGeometriesArray(simplifiedGeometries);\n                this.simplifiedGeometryCache[key] = simplifiedGeometryCollection;\n                return simplifiedGeometryCollection;\n            }\n            else {\n                this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n                return this;\n            }\n        }\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    GeometryCollection.prototype.getType = function () {\n        return GeometryType.GEOMETRY_COLLECTION;\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    GeometryCollection.prototype.intersectsExtent = function (extent) {\n        var geometries = this.geometries_;\n        for (var i = 0, ii = geometries.length; i < ii; ++i) {\n            if (geometries[i].intersectsExtent(extent)) {\n                return true;\n            }\n        }\n        return false;\n    };\n    /**\n     * @return {boolean} Is empty.\n     */\n    GeometryCollection.prototype.isEmpty = function () {\n        return this.geometries_.length === 0;\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    GeometryCollection.prototype.rotate = function (angle, anchor) {\n        var geometries = this.geometries_;\n        for (var i = 0, ii = geometries.length; i < ii; ++i) {\n            geometries[i].rotate(angle, anchor);\n        }\n        this.changed();\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    GeometryCollection.prototype.scale = function (sx, opt_sy, opt_anchor) {\n        var anchor = opt_anchor;\n        if (!anchor) {\n            anchor = getCenter(this.getExtent());\n        }\n        var geometries = this.geometries_;\n        for (var i = 0, ii = geometries.length; i < ii; ++i) {\n            geometries[i].scale(sx, opt_sy, anchor);\n        }\n        this.changed();\n    };\n    /**\n     * Set the geometries that make up this geometry collection.\n     * @param {Array<Geometry>} geometries Geometries.\n     * @api\n     */\n    GeometryCollection.prototype.setGeometries = function (geometries) {\n        this.setGeometriesArray(cloneGeometries(geometries));\n    };\n    /**\n     * @param {Array<Geometry>} geometries Geometries.\n     */\n    GeometryCollection.prototype.setGeometriesArray = function (geometries) {\n        this.unlistenGeometriesChange_();\n        this.geometries_ = geometries;\n        this.listenGeometriesChange_();\n        this.changed();\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    GeometryCollection.prototype.applyTransform = function (transformFn) {\n        var geometries = this.geometries_;\n        for (var i = 0, ii = geometries.length; i < ii; ++i) {\n            geometries[i].applyTransform(transformFn);\n        }\n        this.changed();\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    GeometryCollection.prototype.translate = function (deltaX, deltaY) {\n        var geometries = this.geometries_;\n        for (var i = 0, ii = geometries.length; i < ii; ++i) {\n            geometries[i].translate(deltaX, deltaY);\n        }\n        this.changed();\n    };\n    /**\n     * @inheritDoc\n     */\n    GeometryCollection.prototype.disposeInternal = function () {\n        this.unlistenGeometriesChange_();\n        _super.prototype.disposeInternal.call(this);\n    };\n    return GeometryCollection;\n}(Geometry));\n/**\n * @param {Array<Geometry>} geometries Geometries.\n * @return {Array<Geometry>} Cloned geometries.\n */\nfunction cloneGeometries(geometries) {\n    var clonedGeometries = [];\n    for (var i = 0, ii = geometries.length; i < ii; ++i) {\n        clonedGeometries.push(geometries[i].clone());\n    }\n    return clonedGeometries;\n}\nexport default GeometryCollection;\n//# sourceMappingURL=GeometryCollection.js.map","/**\n * @module ol/format/Feature\n */\nimport { assign } from '../obj.js';\nimport { abstract } from '../util.js';\nimport { get as getProjection, equivalent as equivalentProjection, transformExtent } from '../proj.js';\n/**\n * @typedef {Object} ReadOptions\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection] Projection of the data we are reading.\n * If not provided, the projection will be derived from the data (where possible) or\n * the `dataProjection` of the format is assigned (where set). If the projection\n * can not be derived from the data and if no `dataProjection` is set for a format,\n * the features will not be reprojected.\n * @property {import(\"../extent.js\").Extent} [extent] Tile extent of the tile being read. This is only used and\n * required for {@link module:ol/format/MVT}.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection of the feature geometries\n * created by the format reader. If not provided, features will be returned in the\n * `dataProjection`.\n */\n/**\n * @typedef {Object} WriteOptions\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection] Projection of the data we are writing.\n * If not provided, the `dataProjection` of the format is assigned (where set).\n * If no `dataProjection` is set for a format, the features will be returned\n * in the `featureProjection`.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection of the feature geometries\n * that will be serialized by the format writer. If not provided, geometries are assumed\n * to be in the `dataProjection` if that is set; in other words, they are not transformed.\n * @property {boolean} [rightHanded] When writing geometries, follow the right-hand\n * rule for linear ring orientation.  This means that polygons will have counter-clockwise\n * exterior rings and clockwise interior rings.  By default, coordinates are serialized\n * as they are provided at construction.  If `true`, the right-hand rule will\n * be applied.  If `false`, the left-hand rule will be applied (clockwise for\n * exterior and counter-clockwise for interior rings).  Note that not all\n * formats support this.  The GeoJSON format does use this property when writing\n * geometries.\n * @property {number} [decimals] Maximum number of decimal places for coordinates.\n * Coordinates are stored internally as floats, but floating-point arithmetic can create\n * coordinates with a large number of decimal places, not generally wanted on output.\n * Set a number here to round coordinates. Can also be used to ensure that\n * coordinates read in can be written back out with the same number of decimals.\n * Default is no rounding.\n */\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for feature formats.\n * {FeatureFormat} subclasses provide the ability to decode and encode\n * {@link module:ol/Feature~Feature} objects from a variety of commonly used geospatial\n * file formats.  See the documentation for each format for more details.\n *\n * @abstract\n * @api\n */\nvar FeatureFormat = /** @class */ (function () {\n    function FeatureFormat() {\n        /**\n         * @protected\n         * @type {import(\"../proj/Projection.js\").default}\n         */\n        this.dataProjection = null;\n        /**\n         * @protected\n         * @type {import(\"../proj/Projection.js\").default}\n         */\n        this.defaultFeatureProjection = null;\n    }\n    /**\n     * Adds the data projection to the read options.\n     * @param {Document|Node|Object|string} source Source.\n     * @param {ReadOptions=} opt_options Options.\n     * @return {ReadOptions|undefined} Options.\n     * @protected\n     */\n    FeatureFormat.prototype.getReadOptions = function (source, opt_options) {\n        var options;\n        if (opt_options) {\n            options = {\n                dataProjection: opt_options.dataProjection ?\n                    opt_options.dataProjection : this.readProjection(source),\n                featureProjection: opt_options.featureProjection\n            };\n        }\n        return this.adaptOptions(options);\n    };\n    /**\n     * Sets the `dataProjection` on the options, if no `dataProjection`\n     * is set.\n     * @param {WriteOptions|ReadOptions|undefined} options\n     *     Options.\n     * @protected\n     * @return {WriteOptions|ReadOptions|undefined}\n     *     Updated options.\n     */\n    FeatureFormat.prototype.adaptOptions = function (options) {\n        return assign({\n            dataProjection: this.dataProjection,\n            featureProjection: this.defaultFeatureProjection\n        }, options);\n    };\n    /**\n     * @abstract\n     * @return {import(\"./FormatType.js\").default} Format.\n     */\n    FeatureFormat.prototype.getType = function () {\n        return abstract();\n    };\n    /**\n     * Read a single feature from a source.\n     *\n     * @abstract\n     * @param {Document|Node|Object|string} source Source.\n     * @param {ReadOptions=} opt_options Read options.\n     * @return {import(\"../Feature.js\").FeatureLike} Feature.\n     */\n    FeatureFormat.prototype.readFeature = function (source, opt_options) {\n        return abstract();\n    };\n    /**\n     * Read all features from a source.\n     *\n     * @abstract\n     * @param {Document|Node|ArrayBuffer|Object|string} source Source.\n     * @param {ReadOptions=} opt_options Read options.\n     * @return {Array<import(\"../Feature.js\").FeatureLike>} Features.\n     */\n    FeatureFormat.prototype.readFeatures = function (source, opt_options) {\n        return abstract();\n    };\n    /**\n     * Read a single geometry from a source.\n     *\n     * @abstract\n     * @param {Document|Node|Object|string} source Source.\n     * @param {ReadOptions=} opt_options Read options.\n     * @return {import(\"../geom/Geometry.js\").default} Geometry.\n     */\n    FeatureFormat.prototype.readGeometry = function (source, opt_options) {\n        return abstract();\n    };\n    /**\n     * Read the projection from a source.\n     *\n     * @abstract\n     * @param {Document|Node|Object|string} source Source.\n     * @return {import(\"../proj/Projection.js\").default} Projection.\n     */\n    FeatureFormat.prototype.readProjection = function (source) {\n        return abstract();\n    };\n    /**\n     * Encode a feature in this format.\n     *\n     * @abstract\n     * @param {import(\"../Feature.js\").default} feature Feature.\n     * @param {WriteOptions=} opt_options Write options.\n     * @return {string} Result.\n     */\n    FeatureFormat.prototype.writeFeature = function (feature, opt_options) {\n        return abstract();\n    };\n    /**\n     * Encode an array of features in this format.\n     *\n     * @abstract\n     * @param {Array<import(\"../Feature.js\").default>} features Features.\n     * @param {WriteOptions=} opt_options Write options.\n     * @return {string} Result.\n     */\n    FeatureFormat.prototype.writeFeatures = function (features, opt_options) {\n        return abstract();\n    };\n    /**\n     * Write a single geometry in this format.\n     *\n     * @abstract\n     * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     * @param {WriteOptions=} opt_options Write options.\n     * @return {string} Result.\n     */\n    FeatureFormat.prototype.writeGeometry = function (geometry, opt_options) {\n        return abstract();\n    };\n    return FeatureFormat;\n}());\nexport default FeatureFormat;\n/**\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {boolean} write Set to true for writing, false for reading.\n * @param {(WriteOptions|ReadOptions)=} opt_options Options.\n * @return {import(\"../geom/Geometry.js\").default} Transformed geometry.\n */\nexport function transformGeometryWithOptions(geometry, write, opt_options) {\n    var featureProjection = opt_options ? getProjection(opt_options.featureProjection) : null;\n    var dataProjection = opt_options ? getProjection(opt_options.dataProjection) : null;\n    var transformed;\n    if (featureProjection && dataProjection && !equivalentProjection(featureProjection, dataProjection)) {\n        transformed = (write ? geometry.clone() : geometry).transform(write ? featureProjection : dataProjection, write ? dataProjection : featureProjection);\n    }\n    else {\n        transformed = geometry;\n    }\n    if (write && opt_options && /** @type {WriteOptions} */ (opt_options).decimals !== undefined) {\n        var power_1 = Math.pow(10, /** @type {WriteOptions} */ (opt_options).decimals);\n        // if decimals option on write, round each coordinate appropriately\n        /**\n         * @param {Array<number>} coordinates Coordinates.\n         * @return {Array<number>} Transformed coordinates.\n         */\n        var transform = function (coordinates) {\n            for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n                coordinates[i] = Math.round(coordinates[i] * power_1) / power_1;\n            }\n            return coordinates;\n        };\n        if (transformed === geometry) {\n            transformed = geometry.clone();\n        }\n        transformed.applyTransform(transform);\n    }\n    return transformed;\n}\n/**\n * @param {import(\"../extent.js\").Extent} extent Extent.\n * @param {ReadOptions=} opt_options Read options.\n * @return {import(\"../extent.js\").Extent} Transformed extent.\n */\nexport function transformExtentWithOptions(extent, opt_options) {\n    var featureProjection = opt_options ? getProjection(opt_options.featureProjection) : null;\n    var dataProjection = opt_options ? getProjection(opt_options.dataProjection) : null;\n    if (featureProjection && dataProjection && !equivalentProjection(featureProjection, dataProjection)) {\n        return transformExtent(extent, dataProjection, featureProjection);\n    }\n    else {\n        return extent;\n    }\n}\n//# sourceMappingURL=Feature.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/format/JSONFeature\n */\nimport { abstract } from '../util.js';\nimport FeatureFormat from './Feature.js';\nimport FormatType from './FormatType.js';\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for JSON feature formats.\n *\n * @abstract\n */\nvar JSONFeature = /** @class */ (function (_super) {\n    __extends(JSONFeature, _super);\n    function JSONFeature() {\n        return _super.call(this) || this;\n    }\n    /**\n     * @inheritDoc\n     */\n    JSONFeature.prototype.getType = function () {\n        return FormatType.JSON;\n    };\n    /**\n     * Read a feature.  Only works for a single feature. Use `readFeatures` to\n     * read a feature collection.\n     *\n     * @param {ArrayBuffer|Document|Node|Object|string} source Source.\n     * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n     * @return {import(\"../Feature.js\").default} Feature.\n     * @api\n     */\n    JSONFeature.prototype.readFeature = function (source, opt_options) {\n        return this.readFeatureFromObject(getObject(source), this.getReadOptions(source, opt_options));\n    };\n    /**\n     * Read all features.  Works with both a single feature and a feature\n     * collection.\n     *\n     * @param {ArrayBuffer|Document|Node|Object|string} source Source.\n     * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n     * @return {Array<import(\"../Feature.js\").default>} Features.\n     * @api\n     */\n    JSONFeature.prototype.readFeatures = function (source, opt_options) {\n        return this.readFeaturesFromObject(getObject(source), this.getReadOptions(source, opt_options));\n    };\n    /**\n     * @abstract\n     * @param {Object} object Object.\n     * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n     * @protected\n     * @return {import(\"../Feature.js\").default} Feature.\n     */\n    JSONFeature.prototype.readFeatureFromObject = function (object, opt_options) {\n        return abstract();\n    };\n    /**\n     * @abstract\n     * @param {Object} object Object.\n     * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n     * @protected\n     * @return {Array<import(\"../Feature.js\").default>} Features.\n     */\n    JSONFeature.prototype.readFeaturesFromObject = function (object, opt_options) {\n        return abstract();\n    };\n    /**\n     * Read a geometry.\n     *\n     * @param {ArrayBuffer|Document|Node|Object|string} source Source.\n     * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n     * @return {import(\"../geom/Geometry.js\").default} Geometry.\n     * @api\n     */\n    JSONFeature.prototype.readGeometry = function (source, opt_options) {\n        return this.readGeometryFromObject(getObject(source), this.getReadOptions(source, opt_options));\n    };\n    /**\n     * @abstract\n     * @param {Object} object Object.\n     * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n     * @protected\n     * @return {import(\"../geom/Geometry.js\").default} Geometry.\n     */\n    JSONFeature.prototype.readGeometryFromObject = function (object, opt_options) {\n        return abstract();\n    };\n    /**\n     * Read the projection.\n     *\n     * @param {ArrayBuffer|Document|Node|Object|string} source Source.\n     * @return {import(\"../proj/Projection.js\").default} Projection.\n     * @api\n     */\n    JSONFeature.prototype.readProjection = function (source) {\n        return this.readProjectionFromObject(getObject(source));\n    };\n    /**\n     * @abstract\n     * @param {Object} object Object.\n     * @protected\n     * @return {import(\"../proj/Projection.js\").default} Projection.\n     */\n    JSONFeature.prototype.readProjectionFromObject = function (object) {\n        return abstract();\n    };\n    /**\n     * Encode a feature as string.\n     *\n     * @param {import(\"../Feature.js\").default} feature Feature.\n     * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n     * @return {string} Encoded feature.\n     * @api\n     */\n    JSONFeature.prototype.writeFeature = function (feature, opt_options) {\n        return JSON.stringify(this.writeFeatureObject(feature, opt_options));\n    };\n    /**\n     * @abstract\n     * @param {import(\"../Feature.js\").default} feature Feature.\n     * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n     * @return {Object} Object.\n     */\n    JSONFeature.prototype.writeFeatureObject = function (feature, opt_options) {\n        return abstract();\n    };\n    /**\n     * Encode an array of features as string.\n     *\n     * @param {Array<import(\"../Feature.js\").default>} features Features.\n     * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n     * @return {string} Encoded features.\n     * @api\n     */\n    JSONFeature.prototype.writeFeatures = function (features, opt_options) {\n        return JSON.stringify(this.writeFeaturesObject(features, opt_options));\n    };\n    /**\n     * @abstract\n     * @param {Array<import(\"../Feature.js\").default>} features Features.\n     * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n     * @return {Object} Object.\n     */\n    JSONFeature.prototype.writeFeaturesObject = function (features, opt_options) {\n        return abstract();\n    };\n    /**\n     * Encode a geometry as string.\n     *\n     * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n     * @return {string} Encoded geometry.\n     * @api\n     */\n    JSONFeature.prototype.writeGeometry = function (geometry, opt_options) {\n        return JSON.stringify(this.writeGeometryObject(geometry, opt_options));\n    };\n    /**\n     * @abstract\n     * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n     * @return {Object} Object.\n     */\n    JSONFeature.prototype.writeGeometryObject = function (geometry, opt_options) {\n        return abstract();\n    };\n    return JSONFeature;\n}(FeatureFormat));\n/**\n * @param {Document|Node|Object|string} source Source.\n * @return {Object} Object.\n */\nfunction getObject(source) {\n    if (typeof source === 'string') {\n        var object = JSON.parse(source);\n        return object ? /** @type {Object} */ (object) : null;\n    }\n    else if (source !== null) {\n        return source;\n    }\n    else {\n        return null;\n    }\n}\nexport default JSONFeature;\n//# sourceMappingURL=JSONFeature.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/format/EsriJSON\n */\nimport Feature from '../Feature.js';\nimport { assert } from '../asserts.js';\nimport { containsExtent } from '../extent.js';\nimport { transformGeometryWithOptions } from './Feature.js';\nimport JSONFeature from './JSONFeature.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport LineString from '../geom/LineString.js';\nimport LinearRing from '../geom/LinearRing.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport { deflateCoordinates } from '../geom/flat/deflate.js';\nimport { linearRingIsClockwise } from '../geom/flat/orient.js';\nimport { isEmpty } from '../obj.js';\nimport { get as getProjection } from '../proj.js';\n/**\n * @typedef {import(\"arcgis-rest-api\").Feature} EsriJSONFeature\n * @typedef {import(\"arcgis-rest-api\").FeatureSet} EsriJSONFeatureSet\n * @typedef {import(\"arcgis-rest-api\").Geometry} EsriJSONGeometry\n * @typedef {import(\"arcgis-rest-api\").Point} EsriJSONPoint\n * @typedef {import(\"arcgis-rest-api\").Polyline} EsriJSONPolyline\n * @typedef {import(\"arcgis-rest-api\").Polygon} EsriJSONPolygon\n * @typedef {import(\"arcgis-rest-api\").Multipoint} EsriJSONMultipoint\n * @typedef {import(\"arcgis-rest-api\").HasZM} EsriJSONHasZM\n * @typedef {import(\"arcgis-rest-api\").Position} EsriJSONPosition\n * @typedef {import(\"arcgis-rest-api\").SpatialReferenceWkid} EsriJSONSpatialReferenceWkid\n */\n/**\n * @typedef {Object} EsriJSONMultiPolygon\n * @property {Array<Array<Array<Array<number>>>>} rings Rings for the MultiPolygon.\n * @property {boolean} [hasM] If the polygon coordinates have an M value.\n * @property {boolean} [hasZ] If the polygon coordinates have a Z value.\n * @property {EsriJSONSpatialReferenceWkid} [spatialReference] The coordinate reference system.\n */\n/**\n * @const\n * @type {Object<import(\"../geom/GeometryType.js\").default, function(EsriJSONGeometry): import(\"../geom/Geometry.js\").default>}\n */\nvar GEOMETRY_READERS = {};\nGEOMETRY_READERS[GeometryType.POINT] = readPointGeometry;\nGEOMETRY_READERS[GeometryType.LINE_STRING] = readLineStringGeometry;\nGEOMETRY_READERS[GeometryType.POLYGON] = readPolygonGeometry;\nGEOMETRY_READERS[GeometryType.MULTI_POINT] = readMultiPointGeometry;\nGEOMETRY_READERS[GeometryType.MULTI_LINE_STRING] = readMultiLineStringGeometry;\nGEOMETRY_READERS[GeometryType.MULTI_POLYGON] = readMultiPolygonGeometry;\n/**\n * @const\n * @type {Object<string, function(import(\"../geom/Geometry.js\").default, import(\"./Feature.js\").WriteOptions=): (EsriJSONGeometry)>}\n */\nvar GEOMETRY_WRITERS = {};\nGEOMETRY_WRITERS[GeometryType.POINT] = writePointGeometry;\nGEOMETRY_WRITERS[GeometryType.LINE_STRING] = writeLineStringGeometry;\nGEOMETRY_WRITERS[GeometryType.POLYGON] = writePolygonGeometry;\nGEOMETRY_WRITERS[GeometryType.MULTI_POINT] = writeMultiPointGeometry;\nGEOMETRY_WRITERS[GeometryType.MULTI_LINE_STRING] = writeMultiLineStringGeometry;\nGEOMETRY_WRITERS[GeometryType.MULTI_POLYGON] = writeMultiPolygonGeometry;\n/**\n * @typedef {Object} Options\n * @property {string} [geometryName] Geometry name to use when creating features.\n */\n/**\n * @classdesc\n * Feature format for reading and writing data in the EsriJSON format.\n *\n * @api\n */\nvar EsriJSON = /** @class */ (function (_super) {\n    __extends(EsriJSON, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function EsriJSON(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this) || this;\n        /**\n         * Name of the geometry attribute for features.\n         * @type {string|undefined}\n         * @private\n         */\n        _this.geometryName_ = options.geometryName;\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    EsriJSON.prototype.readFeatureFromObject = function (object, opt_options) {\n        var esriJSONFeature = /** @type {EsriJSONFeature} */ (object);\n        var geometry = readGeometry(esriJSONFeature.geometry, opt_options);\n        var feature = new Feature();\n        if (this.geometryName_) {\n            feature.setGeometryName(this.geometryName_);\n        }\n        feature.setGeometry(geometry);\n        if (opt_options && opt_options.idField &&\n            esriJSONFeature.attributes[opt_options.idField]) {\n            feature.setId(/** @type {number} */ (esriJSONFeature.attributes[opt_options.idField]));\n        }\n        if (esriJSONFeature.attributes) {\n            feature.setProperties(esriJSONFeature.attributes, true);\n        }\n        return feature;\n    };\n    /**\n     * @inheritDoc\n     */\n    EsriJSON.prototype.readFeaturesFromObject = function (object, opt_options) {\n        var options = opt_options ? opt_options : {};\n        if (object['features']) {\n            var esriJSONFeatureSet = /** @type {EsriJSONFeatureSet} */ (object);\n            /** @type {Array<import(\"../Feature.js\").default>} */\n            var features = [];\n            var esriJSONFeatures = esriJSONFeatureSet.features;\n            options.idField = object.objectIdFieldName;\n            for (var i = 0, ii = esriJSONFeatures.length; i < ii; ++i) {\n                features.push(this.readFeatureFromObject(esriJSONFeatures[i], options));\n            }\n            return features;\n        }\n        else {\n            return [this.readFeatureFromObject(object, options)];\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    EsriJSON.prototype.readGeometryFromObject = function (object, opt_options) {\n        return readGeometry(/** @type {EsriJSONGeometry} */ (object), opt_options);\n    };\n    /**\n     * @inheritDoc\n     */\n    EsriJSON.prototype.readProjectionFromObject = function (object) {\n        if (object['spatialReference'] && object['spatialReference']['wkid'] !== undefined) {\n            var spatialReference = /** @type {EsriJSONSpatialReferenceWkid} */ (object['spatialReference']);\n            var crs = spatialReference.wkid;\n            return getProjection('EPSG:' + crs);\n        }\n        else {\n            return null;\n        }\n    };\n    /**\n     * Encode a geometry as a EsriJSON object.\n     *\n     * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n     * @return {EsriJSONGeometry} Object.\n     * @override\n     * @api\n     */\n    EsriJSON.prototype.writeGeometryObject = function (geometry, opt_options) {\n        return writeGeometry(geometry, this.adaptOptions(opt_options));\n    };\n    /**\n     * Encode a feature as a esriJSON Feature object.\n     *\n     * @param {import(\"../Feature.js\").default} feature Feature.\n     * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n     * @return {Object} Object.\n     * @override\n     * @api\n     */\n    EsriJSON.prototype.writeFeatureObject = function (feature, opt_options) {\n        opt_options = this.adaptOptions(opt_options);\n        var object = {};\n        var geometry = feature.getGeometry();\n        if (geometry) {\n            object['geometry'] = writeGeometry(geometry, opt_options);\n            if (opt_options && opt_options.featureProjection) {\n                object['geometry']['spatialReference'] = /** @type {EsriJSONSpatialReferenceWkid} */ ({\n                    wkid: Number(getProjection(opt_options.featureProjection).getCode().split(':').pop())\n                });\n            }\n        }\n        var properties = feature.getProperties();\n        delete properties[feature.getGeometryName()];\n        if (!isEmpty(properties)) {\n            object['attributes'] = properties;\n        }\n        else {\n            object['attributes'] = {};\n        }\n        return object;\n    };\n    /**\n     * Encode an array of features as a EsriJSON object.\n     *\n     * @param {Array<import(\"../Feature.js\").default>} features Features.\n     * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n     * @return {EsriJSONFeatureSet} EsriJSON Object.\n     * @override\n     * @api\n     */\n    EsriJSON.prototype.writeFeaturesObject = function (features, opt_options) {\n        opt_options = this.adaptOptions(opt_options);\n        var objects = [];\n        for (var i = 0, ii = features.length; i < ii; ++i) {\n            objects.push(this.writeFeatureObject(features[i], opt_options));\n        }\n        return {\n            'features': objects\n        };\n    };\n    return EsriJSON;\n}(JSONFeature));\n/**\n * @param {EsriJSONGeometry} object Object.\n * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n * @return {import(\"../geom/Geometry.js\").default} Geometry.\n */\nfunction readGeometry(object, opt_options) {\n    if (!object) {\n        return null;\n    }\n    /** @type {import(\"../geom/GeometryType.js\").default} */\n    var type;\n    if (typeof object['x'] === 'number' && typeof object['y'] === 'number') {\n        type = GeometryType.POINT;\n    }\n    else if (object['points']) {\n        type = GeometryType.MULTI_POINT;\n    }\n    else if (object['paths']) {\n        var esriJSONPolyline = /** @type {EsriJSONPolyline} */ (object);\n        if (esriJSONPolyline.paths.length === 1) {\n            type = GeometryType.LINE_STRING;\n        }\n        else {\n            type = GeometryType.MULTI_LINE_STRING;\n        }\n    }\n    else if (object['rings']) {\n        var esriJSONPolygon = /** @type {EsriJSONPolygon} */ (object);\n        var layout = getGeometryLayout(esriJSONPolygon);\n        var rings = convertRings(esriJSONPolygon.rings, layout);\n        if (rings.length === 1) {\n            type = GeometryType.POLYGON;\n            object['rings'] = rings[0];\n        }\n        else {\n            type = GeometryType.MULTI_POLYGON;\n            object['rings'] = rings;\n        }\n    }\n    var geometryReader = GEOMETRY_READERS[type];\n    return transformGeometryWithOptions(geometryReader(object), false, opt_options);\n}\n/**\n * Determines inner and outer rings.\n * Checks if any polygons in this array contain any other polygons in this\n * array. It is used for checking for holes.\n * Logic inspired by: https://github.com/Esri/terraformer-arcgis-parser\n * @param {Array<!Array<!Array<number>>>} rings Rings.\n * @param {import(\"../geom/GeometryLayout.js\").default} layout Geometry layout.\n * @return {Array<!Array<!Array<!Array<number>>>>} Transformed rings.\n */\nfunction convertRings(rings, layout) {\n    var flatRing = [];\n    var outerRings = [];\n    var holes = [];\n    var i, ii;\n    for (i = 0, ii = rings.length; i < ii; ++i) {\n        flatRing.length = 0;\n        deflateCoordinates(flatRing, 0, rings[i], layout.length);\n        // is this ring an outer ring? is it clockwise?\n        var clockwise = linearRingIsClockwise(flatRing, 0, flatRing.length, layout.length);\n        if (clockwise) {\n            outerRings.push([rings[i]]);\n        }\n        else {\n            holes.push(rings[i]);\n        }\n    }\n    while (holes.length) {\n        var hole = holes.shift();\n        var matched = false;\n        // loop over all outer rings and see if they contain our hole.\n        for (i = outerRings.length - 1; i >= 0; i--) {\n            var outerRing = outerRings[i][0];\n            var containsHole = containsExtent(new LinearRing(outerRing).getExtent(), new LinearRing(hole).getExtent());\n            if (containsHole) {\n                // the hole is contained push it into our polygon\n                outerRings[i].push(hole);\n                matched = true;\n                break;\n            }\n        }\n        if (!matched) {\n            // no outer rings contain this hole turn it into and outer\n            // ring (reverse it)\n            outerRings.push([hole.reverse()]);\n        }\n    }\n    return outerRings;\n}\n/**\n * @param {EsriJSONPoint} object Object.\n * @return {import(\"../geom/Geometry.js\").default} Point.\n */\nfunction readPointGeometry(object) {\n    var point;\n    if (object.m !== undefined && object.z !== undefined) {\n        point = new Point([object.x, object.y, object.z, object.m], GeometryLayout.XYZM);\n    }\n    else if (object.z !== undefined) {\n        point = new Point([object.x, object.y, object.z], GeometryLayout.XYZ);\n    }\n    else if (object.m !== undefined) {\n        point = new Point([object.x, object.y, object.m], GeometryLayout.XYM);\n    }\n    else {\n        point = new Point([object.x, object.y]);\n    }\n    return point;\n}\n/**\n * @param {EsriJSONPolyline} object Object.\n * @return {import(\"../geom/Geometry.js\").default} LineString.\n */\nfunction readLineStringGeometry(object) {\n    var layout = getGeometryLayout(object);\n    return new LineString(object.paths[0], layout);\n}\n/**\n * @param {EsriJSONPolyline} object Object.\n * @return {import(\"../geom/Geometry.js\").default} MultiLineString.\n */\nfunction readMultiLineStringGeometry(object) {\n    var layout = getGeometryLayout(object);\n    return new MultiLineString(object.paths, layout);\n}\n/**\n * @param {EsriJSONHasZM} object Object.\n * @return {import(\"../geom/GeometryLayout.js\").default} The geometry layout to use.\n */\nfunction getGeometryLayout(object) {\n    var layout = GeometryLayout.XY;\n    if (object.hasZ === true && object.hasM === true) {\n        layout = GeometryLayout.XYZM;\n    }\n    else if (object.hasZ === true) {\n        layout = GeometryLayout.XYZ;\n    }\n    else if (object.hasM === true) {\n        layout = GeometryLayout.XYM;\n    }\n    return layout;\n}\n/**\n * @param {EsriJSONMultipoint} object Object.\n * @return {import(\"../geom/Geometry.js\").default} MultiPoint.\n */\nfunction readMultiPointGeometry(object) {\n    var layout = getGeometryLayout(object);\n    return new MultiPoint(object.points, layout);\n}\n/**\n * @param {EsriJSONMultiPolygon} object Object.\n * @return {import(\"../geom/Geometry.js\").default} MultiPolygon.\n */\nfunction readMultiPolygonGeometry(object) {\n    var layout = getGeometryLayout(object);\n    return new MultiPolygon(object.rings, layout);\n}\n/**\n * @param {EsriJSONPolygon} object Object.\n * @return {import(\"../geom/Geometry.js\").default} Polygon.\n */\nfunction readPolygonGeometry(object) {\n    var layout = getGeometryLayout(object);\n    return new Polygon(object.rings, layout);\n}\n/**\n * @param {import(\"../geom/Point.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {EsriJSONPoint} EsriJSON geometry.\n */\nfunction writePointGeometry(geometry, opt_options) {\n    var coordinates = geometry.getCoordinates();\n    /** @type {EsriJSONPoint} */\n    var esriJSON;\n    var layout = geometry.getLayout();\n    if (layout === GeometryLayout.XYZ) {\n        esriJSON = {\n            x: coordinates[0],\n            y: coordinates[1],\n            z: coordinates[2]\n        };\n    }\n    else if (layout === GeometryLayout.XYM) {\n        esriJSON = {\n            x: coordinates[0],\n            y: coordinates[1],\n            m: coordinates[2]\n        };\n    }\n    else if (layout === GeometryLayout.XYZM) {\n        esriJSON = {\n            x: coordinates[0],\n            y: coordinates[1],\n            z: coordinates[2],\n            m: coordinates[3]\n        };\n    }\n    else if (layout === GeometryLayout.XY) {\n        esriJSON = {\n            x: coordinates[0],\n            y: coordinates[1]\n        };\n    }\n    else {\n        assert(false, 34); // Invalid geometry layout\n    }\n    return esriJSON;\n}\n/**\n * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n * @return {Object} Object with boolean hasZ and hasM keys.\n */\nfunction getHasZM(geometry) {\n    var layout = geometry.getLayout();\n    return {\n        hasZ: (layout === GeometryLayout.XYZ ||\n            layout === GeometryLayout.XYZM),\n        hasM: (layout === GeometryLayout.XYM ||\n            layout === GeometryLayout.XYZM)\n    };\n}\n/**\n * @param {import(\"../geom/LineString.js\").default} lineString Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {EsriJSONPolyline} EsriJSON geometry.\n */\nfunction writeLineStringGeometry(lineString, opt_options) {\n    var hasZM = getHasZM(lineString);\n    return {\n        hasZ: hasZM.hasZ,\n        hasM: hasZM.hasM,\n        paths: [\n            /** @type {Array<EsriJSONPosition>} */ (lineString.getCoordinates())\n        ]\n    };\n}\n/**\n * @param {import(\"../geom/Polygon.js\").default} polygon Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {EsriJSONPolygon} EsriJSON geometry.\n */\nfunction writePolygonGeometry(polygon, opt_options) {\n    // Esri geometries use the left-hand rule\n    var hasZM = getHasZM(polygon);\n    return {\n        hasZ: hasZM.hasZ,\n        hasM: hasZM.hasM,\n        rings: /** @type {Array<Array<EsriJSONPosition>>} */ (polygon.getCoordinates(false))\n    };\n}\n/**\n * @param {import(\"../geom/MultiLineString.js\").default} multiLineString Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {EsriJSONPolyline} EsriJSON geometry.\n */\nfunction writeMultiLineStringGeometry(multiLineString, opt_options) {\n    var hasZM = getHasZM(multiLineString);\n    return {\n        hasZ: hasZM.hasZ,\n        hasM: hasZM.hasM,\n        paths: /** @type {Array<Array<EsriJSONPosition>>} */ (multiLineString.getCoordinates())\n    };\n}\n/**\n * @param {import(\"../geom/MultiPoint.js\").default} multiPoint Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {EsriJSONMultipoint} EsriJSON geometry.\n */\nfunction writeMultiPointGeometry(multiPoint, opt_options) {\n    var hasZM = getHasZM(multiPoint);\n    return {\n        hasZ: hasZM.hasZ,\n        hasM: hasZM.hasM,\n        points: /** @type {Array<EsriJSONPosition>} */ (multiPoint.getCoordinates())\n    };\n}\n/**\n * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {EsriJSONPolygon} EsriJSON geometry.\n */\nfunction writeMultiPolygonGeometry(geometry, opt_options) {\n    var hasZM = getHasZM(geometry);\n    var coordinates = geometry.getCoordinates(false);\n    var output = [];\n    for (var i = 0; i < coordinates.length; i++) {\n        for (var x = coordinates[i].length - 1; x >= 0; x--) {\n            output.push(coordinates[i][x]);\n        }\n    }\n    return {\n        hasZ: hasZM.hasZ,\n        hasM: hasZM.hasM,\n        rings: /** @type {Array<Array<EsriJSONPosition>>} */ (output)\n    };\n}\n/**\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {EsriJSONGeometry} EsriJSON geometry.\n */\nfunction writeGeometry(geometry, opt_options) {\n    var geometryWriter = GEOMETRY_WRITERS[geometry.getType()];\n    return geometryWriter(transformGeometryWithOptions(geometry, true, opt_options), opt_options);\n}\nexport default EsriJSON;\n//# sourceMappingURL=EsriJSON.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/format/XMLFeature\n */\nimport { abstract } from '../util.js';\nimport { extend } from '../array.js';\nimport FeatureFormat from '../format/Feature.js';\nimport FormatType from '../format/FormatType.js';\nimport { isDocument, parse } from '../xml.js';\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for XML feature formats.\n *\n * @abstract\n */\nvar XMLFeature = /** @class */ (function (_super) {\n    __extends(XMLFeature, _super);\n    function XMLFeature() {\n        var _this = _super.call(this) || this;\n        /**\n         * @type {XMLSerializer}\n         * @private\n         */\n        _this.xmlSerializer_ = new XMLSerializer();\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    XMLFeature.prototype.getType = function () {\n        return FormatType.XML;\n    };\n    /**\n     * Read a single feature.\n     *\n     * @param {Document|Node|Object|string} source Source.\n     * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n     * @return {import(\"../Feature.js\").default} Feature.\n     * @api\n     */\n    XMLFeature.prototype.readFeature = function (source, opt_options) {\n        if (!source) {\n            return null;\n        }\n        else if (typeof source === 'string') {\n            var doc = parse(source);\n            return this.readFeatureFromDocument(doc, opt_options);\n        }\n        else if (isDocument(source)) {\n            return this.readFeatureFromDocument(/** @type {Document} */ (source), opt_options);\n        }\n        else {\n            return this.readFeatureFromNode(/** @type {Node} */ (source), opt_options);\n        }\n    };\n    /**\n     * @param {Document} doc Document.\n     * @param {import(\"./Feature.js\").ReadOptions=} opt_options Options.\n     * @return {import(\"../Feature.js\").default} Feature.\n     */\n    XMLFeature.prototype.readFeatureFromDocument = function (doc, opt_options) {\n        var features = this.readFeaturesFromDocument(doc, opt_options);\n        if (features.length > 0) {\n            return features[0];\n        }\n        else {\n            return null;\n        }\n    };\n    /**\n     * @param {Node} node Node.\n     * @param {import(\"./Feature.js\").ReadOptions=} opt_options Options.\n     * @return {import(\"../Feature.js\").default} Feature.\n     */\n    XMLFeature.prototype.readFeatureFromNode = function (node, opt_options) {\n        return null; // not implemented\n    };\n    /**\n     * Read all features from a feature collection.\n     *\n     * @param {Document|Node|Object|string} source Source.\n     * @param {import(\"./Feature.js\").ReadOptions=} opt_options Options.\n     * @return {Array<import(\"../Feature.js\").default>} Features.\n     * @api\n     */\n    XMLFeature.prototype.readFeatures = function (source, opt_options) {\n        if (!source) {\n            return [];\n        }\n        else if (typeof source === 'string') {\n            var doc = parse(source);\n            return this.readFeaturesFromDocument(doc, opt_options);\n        }\n        else if (isDocument(source)) {\n            return this.readFeaturesFromDocument(\n            /** @type {Document} */ (source), opt_options);\n        }\n        else {\n            return this.readFeaturesFromNode(/** @type {Node} */ (source), opt_options);\n        }\n    };\n    /**\n     * @param {Document} doc Document.\n     * @param {import(\"./Feature.js\").ReadOptions=} opt_options Options.\n     * @protected\n     * @return {Array<import(\"../Feature.js\").default>} Features.\n     */\n    XMLFeature.prototype.readFeaturesFromDocument = function (doc, opt_options) {\n        /** @type {Array<import(\"../Feature.js\").default>} */\n        var features = [];\n        for (var n = /** @type {Node} */ (doc.firstChild); n; n = n.nextSibling) {\n            if (n.nodeType == Node.ELEMENT_NODE) {\n                extend(features, this.readFeaturesFromNode(n, opt_options));\n            }\n        }\n        return features;\n    };\n    /**\n     * @abstract\n     * @param {Node} node Node.\n     * @param {import(\"./Feature.js\").ReadOptions=} opt_options Options.\n     * @protected\n     * @return {Array<import(\"../Feature.js\").default>} Features.\n     */\n    XMLFeature.prototype.readFeaturesFromNode = function (node, opt_options) {\n        return abstract();\n    };\n    /**\n     * @inheritDoc\n     */\n    XMLFeature.prototype.readGeometry = function (source, opt_options) {\n        if (!source) {\n            return null;\n        }\n        else if (typeof source === 'string') {\n            var doc = parse(source);\n            return this.readGeometryFromDocument(doc, opt_options);\n        }\n        else if (isDocument(source)) {\n            return this.readGeometryFromDocument(\n            /** @type {Document} */ (source), opt_options);\n        }\n        else {\n            return this.readGeometryFromNode(/** @type {Node} */ (source), opt_options);\n        }\n    };\n    /**\n     * @param {Document} doc Document.\n     * @param {import(\"./Feature.js\").ReadOptions=} opt_options Options.\n     * @protected\n     * @return {import(\"../geom/Geometry.js\").default} Geometry.\n     */\n    XMLFeature.prototype.readGeometryFromDocument = function (doc, opt_options) {\n        return null; // not implemented\n    };\n    /**\n     * @param {Node} node Node.\n     * @param {import(\"./Feature.js\").ReadOptions=} opt_options Options.\n     * @protected\n     * @return {import(\"../geom/Geometry.js\").default} Geometry.\n     */\n    XMLFeature.prototype.readGeometryFromNode = function (node, opt_options) {\n        return null; // not implemented\n    };\n    /**\n     * Read the projection from the source.\n     *\n     * @param {Document|Node|Object|string} source Source.\n     * @return {import(\"../proj/Projection.js\").default} Projection.\n     * @api\n     */\n    XMLFeature.prototype.readProjection = function (source) {\n        if (!source) {\n            return null;\n        }\n        else if (typeof source === 'string') {\n            var doc = parse(source);\n            return this.readProjectionFromDocument(doc);\n        }\n        else if (isDocument(source)) {\n            return this.readProjectionFromDocument(/** @type {Document} */ (source));\n        }\n        else {\n            return this.readProjectionFromNode(/** @type {Node} */ (source));\n        }\n    };\n    /**\n     * @param {Document} doc Document.\n     * @protected\n     * @return {import(\"../proj/Projection.js\").default} Projection.\n     */\n    XMLFeature.prototype.readProjectionFromDocument = function (doc) {\n        return this.dataProjection;\n    };\n    /**\n     * @param {Node} node Node.\n     * @protected\n     * @return {import(\"../proj/Projection.js\").default} Projection.\n     */\n    XMLFeature.prototype.readProjectionFromNode = function (node) {\n        return this.dataProjection;\n    };\n    /**\n     * @inheritDoc\n     */\n    XMLFeature.prototype.writeFeature = function (feature, opt_options) {\n        var node = this.writeFeatureNode(feature, opt_options);\n        return this.xmlSerializer_.serializeToString(node);\n    };\n    /**\n     * @param {import(\"../Feature.js\").default} feature Feature.\n     * @param {import(\"./Feature.js\").WriteOptions=} opt_options Options.\n     * @protected\n     * @return {Node} Node.\n     */\n    XMLFeature.prototype.writeFeatureNode = function (feature, opt_options) {\n        return null; // not implemented\n    };\n    /**\n     * Encode an array of features as string.\n     *\n     * @param {Array<import(\"../Feature.js\").default>} features Features.\n     * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n     * @return {string} Result.\n     * @api\n     */\n    XMLFeature.prototype.writeFeatures = function (features, opt_options) {\n        var node = this.writeFeaturesNode(features, opt_options);\n        return this.xmlSerializer_.serializeToString(node);\n    };\n    /**\n     * @param {Array<import(\"../Feature.js\").default>} features Features.\n     * @param {import(\"./Feature.js\").WriteOptions=} opt_options Options.\n     * @return {Node} Node.\n     */\n    XMLFeature.prototype.writeFeaturesNode = function (features, opt_options) {\n        return null; // not implemented\n    };\n    /**\n     * @inheritDoc\n     */\n    XMLFeature.prototype.writeGeometry = function (geometry, opt_options) {\n        var node = this.writeGeometryNode(geometry, opt_options);\n        return this.xmlSerializer_.serializeToString(node);\n    };\n    /**\n     * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     * @param {import(\"./Feature.js\").WriteOptions=} opt_options Options.\n     * @return {Node} Node.\n     */\n    XMLFeature.prototype.writeGeometryNode = function (geometry, opt_options) {\n        return null; // not implemented\n    };\n    return XMLFeature;\n}(FeatureFormat));\nexport default XMLFeature;\n//# sourceMappingURL=XMLFeature.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/format/GMLBase\n */\n// FIXME Envelopes should not be treated as geometries! readEnvelope_ is part\n// of GEOMETRY_PARSERS_ and methods using GEOMETRY_PARSERS_ do not expect\n// envelopes/extents, only geometries!\nimport { extend } from '../array.js';\nimport Feature from '../Feature.js';\nimport { transformGeometryWithOptions, transformExtentWithOptions } from './Feature.js';\nimport XMLFeature from './XMLFeature.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport LineString from '../geom/LineString.js';\nimport LinearRing from '../geom/LinearRing.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport { assign } from '../obj.js';\nimport { get as getProjection } from '../proj.js';\nimport { getAllTextContent, getAttributeNS, makeArrayPusher, makeReplacer, parseNode, pushParseAndPop } from '../xml.js';\n/**\n * @const\n * @type {string}\n */\nexport var GMLNS = 'http://www.opengis.net/gml';\n/**\n * A regular expression that matches if a string only contains whitespace\n * characters. It will e.g. match `''`, `' '`, `'\\n'` etc. The non-breaking\n * space (0xa0) is explicitly included as IE doesn't include it in its\n * definition of `\\s`.\n *\n * Information from `goog.string.isEmptyOrWhitespace`: https://github.com/google/closure-library/blob/e877b1e/closure/goog/string/string.js#L156-L160\n *\n * @const\n * @type {RegExp}\n */\nvar ONLY_WHITESPACE_RE = /^[\\s\\xa0]*$/;\n/**\n * @typedef {Object} Options\n * @property {Object<string, string>|string} [featureNS] Feature\n * namespace. If not defined will be derived from GML. If multiple\n * feature types have been configured which come from different feature\n * namespaces, this will be an object with the keys being the prefixes used\n * in the entries of featureType array. The values of the object will be the\n * feature namespaces themselves. So for instance there might be a featureType\n * item `topp:states` in the `featureType` array and then there will be a key\n * `topp` in the featureNS object with value `http://www.openplans.org/topp`.\n * @property {Array<string>|string} [featureType] Feature type(s) to parse.\n * If multiple feature types need to be configured\n * which come from different feature namespaces, `featureNS` will be an object\n * with the keys being the prefixes used in the entries of featureType array.\n * The values of the object will be the feature namespaces themselves.\n * So for instance there might be a featureType item `topp:states` and then\n * there will be a key named `topp` in the featureNS object with value\n * `http://www.openplans.org/topp`.\n * @property {string} srsName srsName to use when writing geometries.\n * @property {boolean} [surface=false] Write gml:Surface instead of gml:Polygon\n * elements. This also affects the elements in multi-part geometries.\n * @property {boolean} [curve=false] Write gml:Curve instead of gml:LineString\n * elements. This also affects the elements in multi-part geometries.\n * @property {boolean} [multiCurve=true] Write gml:MultiCurve instead of gml:MultiLineString.\n * Since the latter is deprecated in GML 3.\n * @property {boolean} [multiSurface=true] Write gml:multiSurface instead of\n * gml:MultiPolygon. Since the latter is deprecated in GML 3.\n * @property {string} [schemaLocation] Optional schemaLocation to use when\n * writing out the GML, this will override the default provided.\n * @property {boolean} [hasZ=false] If coordinates have a Z value.\n */\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Feature base format for reading and writing data in the GML format.\n * This class cannot be instantiated, it contains only base content that\n * is shared with versioned format classes GML2 and GML3.\n *\n * @abstract\n */\nvar GMLBase = /** @class */ (function (_super) {\n    __extends(GMLBase, _super);\n    /**\n     * @param {Options=} opt_options Optional configuration object.\n     */\n    function GMLBase(opt_options) {\n        var _this = _super.call(this) || this;\n        var options = /** @type {Options} */ (opt_options ? opt_options : {});\n        /**\n         * @protected\n         * @type {Array<string>|string|undefined}\n         */\n        _this.featureType = options.featureType;\n        /**\n         * @protected\n         * @type {Object<string, string>|string|undefined}\n         */\n        _this.featureNS = options.featureNS;\n        /**\n         * @protected\n         * @type {string}\n         */\n        _this.srsName = options.srsName;\n        /**\n         * @protected\n         * @type {string}\n         */\n        _this.schemaLocation = '';\n        /**\n         * @type {Object<string, Object<string, Object>>}\n         */\n        _this.FEATURE_COLLECTION_PARSERS = {};\n        _this.FEATURE_COLLECTION_PARSERS[_this.namespace] = {\n            'featureMember': makeArrayPusher(_this.readFeaturesInternal),\n            'featureMembers': makeReplacer(_this.readFeaturesInternal)\n        };\n        return _this;\n    }\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     * @return {Array<Feature> | undefined} Features.\n     */\n    GMLBase.prototype.readFeaturesInternal = function (node, objectStack) {\n        var localName = node.localName;\n        var features = null;\n        if (localName == 'FeatureCollection') {\n            features = pushParseAndPop([], this.FEATURE_COLLECTION_PARSERS, node, objectStack, this);\n        }\n        else if (localName == 'featureMembers' || localName == 'featureMember') {\n            var context = objectStack[0];\n            var featureType = context['featureType'];\n            var featureNS = context['featureNS'];\n            var prefix = 'p';\n            var defaultPrefix = 'p0';\n            if (!featureType && node.childNodes) {\n                featureType = [], featureNS = {};\n                for (var i = 0, ii = node.childNodes.length; i < ii; ++i) {\n                    var child = node.childNodes[i];\n                    if (child.nodeType === 1) {\n                        var ft = child.nodeName.split(':').pop();\n                        if (featureType.indexOf(ft) === -1) {\n                            var key = '';\n                            var count = 0;\n                            var uri = child.namespaceURI;\n                            for (var candidate in featureNS) {\n                                if (featureNS[candidate] === uri) {\n                                    key = candidate;\n                                    break;\n                                }\n                                ++count;\n                            }\n                            if (!key) {\n                                key = prefix + count;\n                                featureNS[key] = uri;\n                            }\n                            featureType.push(key + ':' + ft);\n                        }\n                    }\n                }\n                if (localName != 'featureMember') {\n                    // recheck featureType for each featureMember\n                    context['featureType'] = featureType;\n                    context['featureNS'] = featureNS;\n                }\n            }\n            if (typeof featureNS === 'string') {\n                var ns = featureNS;\n                featureNS = {};\n                featureNS[defaultPrefix] = ns;\n            }\n            /** @type {Object<string, Object<string, import(\"../xml.js\").Parser>>} */\n            var parsersNS = {};\n            var featureTypes = Array.isArray(featureType) ? featureType : [featureType];\n            for (var p in featureNS) {\n                /** @type {Object<string, import(\"../xml.js\").Parser>} */\n                var parsers = {};\n                for (var i = 0, ii = featureTypes.length; i < ii; ++i) {\n                    var featurePrefix = featureTypes[i].indexOf(':') === -1 ?\n                        defaultPrefix : featureTypes[i].split(':')[0];\n                    if (featurePrefix === p) {\n                        parsers[featureTypes[i].split(':').pop()] =\n                            (localName == 'featureMembers') ?\n                                makeArrayPusher(this.readFeatureElement, this) :\n                                makeReplacer(this.readFeatureElement, this);\n                    }\n                }\n                parsersNS[featureNS[p]] = parsers;\n            }\n            if (localName == 'featureMember') {\n                features = pushParseAndPop(undefined, parsersNS, node, objectStack);\n            }\n            else {\n                features = pushParseAndPop([], parsersNS, node, objectStack);\n            }\n        }\n        if (features === null) {\n            features = [];\n        }\n        return features;\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     * @return {import(\"../geom/Geometry.js\").default|import(\"../extent.js\").Extent|undefined} Geometry.\n     */\n    GMLBase.prototype.readGeometryElement = function (node, objectStack) {\n        var context = /** @type {Object} */ (objectStack[0]);\n        context['srsName'] = node.firstElementChild.getAttribute('srsName');\n        context['srsDimension'] = node.firstElementChild.getAttribute('srsDimension');\n        var geometry = pushParseAndPop(null, this.GEOMETRY_PARSERS, node, objectStack, this);\n        if (geometry) {\n            if (Array.isArray(geometry)) {\n                return transformExtentWithOptions(/** @type {import(\"../extent.js\").Extent} */ (geometry), context);\n            }\n            else {\n                return transformGeometryWithOptions(/** @type {import(\"../geom/Geometry.js\").default} */ (geometry), false, context);\n            }\n        }\n        else {\n            return undefined;\n        }\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     * @param {boolean} asFeature whether result should be wrapped as a feature.\n     * @return {Feature|Object} Feature\n     */\n    GMLBase.prototype.readFeatureElementInternal = function (node, objectStack, asFeature) {\n        var geometryName;\n        var values = {};\n        for (var n = node.firstElementChild; n; n = n.nextElementSibling) {\n            var value = void 0;\n            var localName = n.localName;\n            // first, check if it is simple attribute\n            if (n.childNodes.length === 0\n                || (n.childNodes.length === 1 && (n.firstChild.nodeType === 3 || n.firstChild.nodeType === 4))) {\n                value = getAllTextContent(n, false);\n                if (ONLY_WHITESPACE_RE.test(value)) {\n                    value = undefined;\n                }\n            }\n            else {\n                if (asFeature) {\n                    //if feature, try it as a geometry\n                    value = this.readGeometryElement(n, objectStack);\n                }\n                if (!value) { //if not a geometry or not a feature, treat it as a complex attribute\n                    value = this.readFeatureElementInternal(n, objectStack, false);\n                }\n                else if (localName !== 'boundedBy') {\n                    // boundedBy is an extent and must not be considered as a geometry\n                    geometryName = localName;\n                }\n            }\n            if (values[localName]) {\n                if (!(values[localName] instanceof Array)) {\n                    values[localName] = [values[localName]];\n                }\n                values[localName].push(value);\n            }\n            else {\n                values[localName] = value;\n            }\n            var len = n.attributes.length;\n            if (len > 0) {\n                values[localName] = { _content_: values[localName] };\n                for (var i = 0; i < len; i++) {\n                    var attName = n.attributes[i].name;\n                    values[localName][attName] = n.attributes[i].value;\n                }\n            }\n        }\n        if (!asFeature) {\n            return values;\n        }\n        else {\n            var feature = new Feature(values);\n            if (geometryName) {\n                feature.setGeometryName(geometryName);\n            }\n            var fid = node.getAttribute('fid') ||\n                getAttributeNS(node, this.namespace, 'id');\n            if (fid) {\n                feature.setId(fid);\n            }\n            return feature;\n        }\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     * @return {Feature} Feature.\n     */\n    GMLBase.prototype.readFeatureElement = function (node, objectStack) {\n        return this.readFeatureElementInternal(node, objectStack, true);\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     * @return {Point|undefined} Point.\n     */\n    GMLBase.prototype.readPoint = function (node, objectStack) {\n        var flatCoordinates = this.readFlatCoordinatesFromNode_(node, objectStack);\n        if (flatCoordinates) {\n            return new Point(flatCoordinates, GeometryLayout.XYZ);\n        }\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     * @return {MultiPoint|undefined} MultiPoint.\n     */\n    GMLBase.prototype.readMultiPoint = function (node, objectStack) {\n        /** @type {Array<Array<number>>} */\n        var coordinates = pushParseAndPop([], this.MULTIPOINT_PARSERS_, node, objectStack, this);\n        if (coordinates) {\n            return new MultiPoint(coordinates);\n        }\n        else {\n            return undefined;\n        }\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     * @return {MultiLineString|undefined} MultiLineString.\n     */\n    GMLBase.prototype.readMultiLineString = function (node, objectStack) {\n        /** @type {Array<LineString>} */\n        var lineStrings = pushParseAndPop([], this.MULTILINESTRING_PARSERS_, node, objectStack, this);\n        if (lineStrings) {\n            return new MultiLineString(lineStrings);\n        }\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     * @return {MultiPolygon|undefined} MultiPolygon.\n     */\n    GMLBase.prototype.readMultiPolygon = function (node, objectStack) {\n        /** @type {Array<Polygon>} */\n        var polygons = pushParseAndPop([], this.MULTIPOLYGON_PARSERS_, node, objectStack, this);\n        if (polygons) {\n            return new MultiPolygon(polygons);\n        }\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     * @private\n     */\n    GMLBase.prototype.pointMemberParser_ = function (node, objectStack) {\n        parseNode(this.POINTMEMBER_PARSERS_, node, objectStack, this);\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     * @private\n     */\n    GMLBase.prototype.lineStringMemberParser_ = function (node, objectStack) {\n        parseNode(this.LINESTRINGMEMBER_PARSERS_, node, objectStack, this);\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     * @private\n     */\n    GMLBase.prototype.polygonMemberParser_ = function (node, objectStack) {\n        parseNode(this.POLYGONMEMBER_PARSERS_, node, objectStack, this);\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     * @return {LineString|undefined} LineString.\n     */\n    GMLBase.prototype.readLineString = function (node, objectStack) {\n        var flatCoordinates = this.readFlatCoordinatesFromNode_(node, objectStack);\n        if (flatCoordinates) {\n            var lineString = new LineString(flatCoordinates, GeometryLayout.XYZ);\n            return lineString;\n        }\n        else {\n            return undefined;\n        }\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     * @private\n     * @return {Array<number>|undefined} LinearRing flat coordinates.\n     */\n    GMLBase.prototype.readFlatLinearRing_ = function (node, objectStack) {\n        var ring = pushParseAndPop(null, this.GEOMETRY_FLAT_COORDINATES_PARSERS, node, objectStack, this);\n        if (ring) {\n            return ring;\n        }\n        else {\n            return undefined;\n        }\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     * @return {LinearRing|undefined} LinearRing.\n     */\n    GMLBase.prototype.readLinearRing = function (node, objectStack) {\n        var flatCoordinates = this.readFlatCoordinatesFromNode_(node, objectStack);\n        if (flatCoordinates) {\n            return new LinearRing(flatCoordinates, GeometryLayout.XYZ);\n        }\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     * @return {Polygon|undefined} Polygon.\n     */\n    GMLBase.prototype.readPolygon = function (node, objectStack) {\n        /** @type {Array<Array<number>>} */\n        var flatLinearRings = pushParseAndPop([null], this.FLAT_LINEAR_RINGS_PARSERS, node, objectStack, this);\n        if (flatLinearRings && flatLinearRings[0]) {\n            var flatCoordinates = flatLinearRings[0];\n            var ends = [flatCoordinates.length];\n            var i = void 0, ii = void 0;\n            for (i = 1, ii = flatLinearRings.length; i < ii; ++i) {\n                extend(flatCoordinates, flatLinearRings[i]);\n                ends.push(flatCoordinates.length);\n            }\n            return new Polygon(flatCoordinates, GeometryLayout.XYZ, ends);\n        }\n        else {\n            return undefined;\n        }\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     * @private\n     * @return {Array<number>} Flat coordinates.\n     */\n    GMLBase.prototype.readFlatCoordinatesFromNode_ = function (node, objectStack) {\n        return pushParseAndPop(null, this.GEOMETRY_FLAT_COORDINATES_PARSERS, node, objectStack, this);\n    };\n    /**\n     * @inheritDoc\n     */\n    GMLBase.prototype.readGeometryFromNode = function (node, opt_options) {\n        var geometry = this.readGeometryElement(node, [this.getReadOptions(node, opt_options ? opt_options : {})]);\n        return geometry ? geometry : null;\n    };\n    /**\n     * @inheritDoc\n     */\n    GMLBase.prototype.readFeaturesFromNode = function (node, opt_options) {\n        var options = {\n            featureType: this.featureType,\n            featureNS: this.featureNS\n        };\n        if (opt_options) {\n            assign(options, this.getReadOptions(node, opt_options));\n        }\n        var features = this.readFeaturesInternal(node, [options]);\n        return features || [];\n    };\n    /**\n     * @inheritDoc\n     */\n    GMLBase.prototype.readProjectionFromNode = function (node) {\n        return getProjection(this.srsName ? this.srsName : node.firstElementChild.getAttribute('srsName'));\n    };\n    return GMLBase;\n}(XMLFeature));\nGMLBase.prototype.namespace = GMLNS;\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @protected\n */\nGMLBase.prototype.FLAT_LINEAR_RINGS_PARSERS = {\n    'http://www.opengis.net/gml': {}\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @protected\n */\nGMLBase.prototype.GEOMETRY_FLAT_COORDINATES_PARSERS = {\n    'http://www.opengis.net/gml': {}\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @protected\n */\nGMLBase.prototype.GEOMETRY_PARSERS = {\n    'http://www.opengis.net/gml': {}\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @private\n */\nGMLBase.prototype.MULTIPOINT_PARSERS_ = {\n    'http://www.opengis.net/gml': {\n        'pointMember': makeArrayPusher(GMLBase.prototype.pointMemberParser_),\n        'pointMembers': makeArrayPusher(GMLBase.prototype.pointMemberParser_)\n    }\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @private\n */\nGMLBase.prototype.MULTILINESTRING_PARSERS_ = {\n    'http://www.opengis.net/gml': {\n        'lineStringMember': makeArrayPusher(GMLBase.prototype.lineStringMemberParser_),\n        'lineStringMembers': makeArrayPusher(GMLBase.prototype.lineStringMemberParser_)\n    }\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @private\n */\nGMLBase.prototype.MULTIPOLYGON_PARSERS_ = {\n    'http://www.opengis.net/gml': {\n        'polygonMember': makeArrayPusher(GMLBase.prototype.polygonMemberParser_),\n        'polygonMembers': makeArrayPusher(GMLBase.prototype.polygonMemberParser_)\n    }\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @private\n */\nGMLBase.prototype.POINTMEMBER_PARSERS_ = {\n    'http://www.opengis.net/gml': {\n        'Point': makeArrayPusher(GMLBase.prototype.readFlatCoordinatesFromNode_)\n    }\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @private\n */\nGMLBase.prototype.LINESTRINGMEMBER_PARSERS_ = {\n    'http://www.opengis.net/gml': {\n        'LineString': makeArrayPusher(GMLBase.prototype.readLineString)\n    }\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @private\n */\nGMLBase.prototype.POLYGONMEMBER_PARSERS_ = {\n    'http://www.opengis.net/gml': {\n        'Polygon': makeArrayPusher(GMLBase.prototype.readPolygon)\n    }\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @protected\n */\nGMLBase.prototype.RING_PARSERS = {\n    'http://www.opengis.net/gml': {\n        'LinearRing': makeReplacer(GMLBase.prototype.readFlatLinearRing_)\n    }\n};\nexport default GMLBase;\n//# sourceMappingURL=GMLBase.js.map","/**\n * @module ol/format/xsd\n */\nimport { getAllTextContent, DOCUMENT } from '../xml.js';\nimport { padNumber } from '../string.js';\n/**\n * @param {Node} node Node.\n * @return {boolean|undefined} Boolean.\n */\nexport function readBoolean(node) {\n    var s = getAllTextContent(node, false);\n    return readBooleanString(s);\n}\n/**\n * @param {string} string String.\n * @return {boolean|undefined} Boolean.\n */\nexport function readBooleanString(string) {\n    var m = /^\\s*(true|1)|(false|0)\\s*$/.exec(string);\n    if (m) {\n        return m[1] !== undefined || false;\n    }\n    else {\n        return undefined;\n    }\n}\n/**\n * @param {Node} node Node.\n * @return {number|undefined} DateTime in seconds.\n */\nexport function readDateTime(node) {\n    var s = getAllTextContent(node, false);\n    var dateTime = Date.parse(s);\n    return isNaN(dateTime) ? undefined : dateTime / 1000;\n}\n/**\n * @param {Node} node Node.\n * @return {number|undefined} Decimal.\n */\nexport function readDecimal(node) {\n    var s = getAllTextContent(node, false);\n    return readDecimalString(s);\n}\n/**\n * @param {string} string String.\n * @return {number|undefined} Decimal.\n */\nexport function readDecimalString(string) {\n    // FIXME check spec\n    var m = /^\\s*([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?)\\s*$/i.exec(string);\n    if (m) {\n        return parseFloat(m[1]);\n    }\n    else {\n        return undefined;\n    }\n}\n/**\n * @param {Node} node Node.\n * @return {number|undefined} Non negative integer.\n */\nexport function readNonNegativeInteger(node) {\n    var s = getAllTextContent(node, false);\n    return readNonNegativeIntegerString(s);\n}\n/**\n * @param {string} string String.\n * @return {number|undefined} Non negative integer.\n */\nexport function readNonNegativeIntegerString(string) {\n    var m = /^\\s*(\\d+)\\s*$/.exec(string);\n    if (m) {\n        return parseInt(m[1], 10);\n    }\n    else {\n        return undefined;\n    }\n}\n/**\n * @param {Node} node Node.\n * @return {string|undefined} String.\n */\nexport function readString(node) {\n    return getAllTextContent(node, false).trim();\n}\n/**\n * @param {Node} node Node to append a TextNode with the boolean to.\n * @param {boolean} bool Boolean.\n */\nexport function writeBooleanTextNode(node, bool) {\n    writeStringTextNode(node, (bool) ? '1' : '0');\n}\n/**\n * @param {Node} node Node to append a CDATA Section with the string to.\n * @param {string} string String.\n */\nexport function writeCDATASection(node, string) {\n    node.appendChild(DOCUMENT.createCDATASection(string));\n}\n/**\n * @param {Node} node Node to append a TextNode with the dateTime to.\n * @param {number} dateTime DateTime in seconds.\n */\nexport function writeDateTimeTextNode(node, dateTime) {\n    var date = new Date(dateTime * 1000);\n    var string = date.getUTCFullYear() + '-' +\n        padNumber(date.getUTCMonth() + 1, 2) + '-' +\n        padNumber(date.getUTCDate(), 2) + 'T' +\n        padNumber(date.getUTCHours(), 2) + ':' +\n        padNumber(date.getUTCMinutes(), 2) + ':' +\n        padNumber(date.getUTCSeconds(), 2) + 'Z';\n    node.appendChild(DOCUMENT.createTextNode(string));\n}\n/**\n * @param {Node} node Node to append a TextNode with the decimal to.\n * @param {number} decimal Decimal.\n */\nexport function writeDecimalTextNode(node, decimal) {\n    var string = decimal.toPrecision();\n    node.appendChild(DOCUMENT.createTextNode(string));\n}\n/**\n * @param {Node} node Node to append a TextNode with the decimal to.\n * @param {number} nonNegativeInteger Non negative integer.\n */\nexport function writeNonNegativeIntegerTextNode(node, nonNegativeInteger) {\n    var string = nonNegativeInteger.toString();\n    node.appendChild(DOCUMENT.createTextNode(string));\n}\n/**\n * @param {Node} node Node to append a TextNode with the string to.\n * @param {string} string String.\n */\nexport function writeStringTextNode(node, string) {\n    node.appendChild(DOCUMENT.createTextNode(string));\n}\n//# sourceMappingURL=xsd.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/format/GML3\n */\nimport { extend } from '../array.js';\nimport { createOrUpdate } from '../extent.js';\nimport { transformExtentWithOptions, transformGeometryWithOptions } from './Feature.js';\nimport GMLBase, { GMLNS } from './GMLBase.js';\nimport { readNonNegativeIntegerString, writeStringTextNode } from './xsd.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Polygon from '../geom/Polygon.js';\nimport { assign } from '../obj.js';\nimport { get as getProjection } from '../proj.js';\nimport { createElementNS, getAllTextContent, makeArrayPusher, makeChildAppender, makeReplacer, makeSimpleNodeFactory, OBJECT_PROPERTY_NODE_FACTORY, parseNode, pushParseAndPop, pushSerializeAndPop, XML_SCHEMA_INSTANCE_URI } from '../xml.js';\n/**\n * @const\n * @type {string}\n * @private\n */\nvar schemaLocation = GMLNS +\n    ' http://schemas.opengis.net/gml/3.1.1/profiles/gmlsfProfile/' +\n    '1.0.0/gmlsf.xsd';\n/**\n * @const\n * @type {Object<string, string>}\n */\nvar MULTIGEOMETRY_TO_MEMBER_NODENAME = {\n    'MultiLineString': 'lineStringMember',\n    'MultiCurve': 'curveMember',\n    'MultiPolygon': 'polygonMember',\n    'MultiSurface': 'surfaceMember'\n};\n/**\n * @classdesc\n * Feature format for reading and writing data in the GML format\n * version 3.1.1.\n * Currently only supports GML 3.1.1 Simple Features profile.\n *\n * @api\n */\nvar GML3 = /** @class */ (function (_super) {\n    __extends(GML3, _super);\n    /**\n     * @param {import(\"./GMLBase.js\").Options=} opt_options Optional configuration object.\n     */\n    function GML3(opt_options) {\n        var _this = this;\n        var options = /** @type {import(\"./GMLBase.js\").Options} */ (opt_options ? opt_options : {});\n        _this = _super.call(this, options) || this;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.surface_ = options.surface !== undefined ? options.surface : false;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.curve_ = options.curve !== undefined ? options.curve : false;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.multiCurve_ = options.multiCurve !== undefined ?\n            options.multiCurve : true;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.multiSurface_ = options.multiSurface !== undefined ?\n            options.multiSurface : true;\n        /**\n         * @inheritDoc\n         */\n        _this.schemaLocation = options.schemaLocation ?\n            options.schemaLocation : schemaLocation;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.hasZ = options.hasZ !== undefined ?\n            options.hasZ : false;\n        return _this;\n    }\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     * @private\n     * @return {MultiLineString|undefined} MultiLineString.\n     */\n    GML3.prototype.readMultiCurve_ = function (node, objectStack) {\n        /** @type {Array<LineString>} */\n        var lineStrings = pushParseAndPop([], this.MULTICURVE_PARSERS_, node, objectStack, this);\n        if (lineStrings) {\n            var multiLineString = new MultiLineString(lineStrings);\n            return multiLineString;\n        }\n        else {\n            return undefined;\n        }\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     * @private\n     * @return {MultiPolygon|undefined} MultiPolygon.\n     */\n    GML3.prototype.readMultiSurface_ = function (node, objectStack) {\n        /** @type {Array<Polygon>} */\n        var polygons = pushParseAndPop([], this.MULTISURFACE_PARSERS_, node, objectStack, this);\n        if (polygons) {\n            return new MultiPolygon(polygons);\n        }\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     * @private\n     */\n    GML3.prototype.curveMemberParser_ = function (node, objectStack) {\n        parseNode(this.CURVEMEMBER_PARSERS_, node, objectStack, this);\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     * @private\n     */\n    GML3.prototype.surfaceMemberParser_ = function (node, objectStack) {\n        parseNode(this.SURFACEMEMBER_PARSERS_, node, objectStack, this);\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     * @private\n     * @return {Array<(Array<number>)>|undefined} flat coordinates.\n     */\n    GML3.prototype.readPatch_ = function (node, objectStack) {\n        return pushParseAndPop([null], this.PATCHES_PARSERS_, node, objectStack, this);\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     * @private\n     * @return {Array<number>|undefined} flat coordinates.\n     */\n    GML3.prototype.readSegment_ = function (node, objectStack) {\n        return pushParseAndPop([null], this.SEGMENTS_PARSERS_, node, objectStack, this);\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     * @private\n     * @return {Array<(Array<number>)>|undefined} flat coordinates.\n     */\n    GML3.prototype.readPolygonPatch_ = function (node, objectStack) {\n        return pushParseAndPop([null], this.FLAT_LINEAR_RINGS_PARSERS, node, objectStack, this);\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     * @private\n     * @return {Array<number>|undefined} flat coordinates.\n     */\n    GML3.prototype.readLineStringSegment_ = function (node, objectStack) {\n        return pushParseAndPop([null], this.GEOMETRY_FLAT_COORDINATES_PARSERS, node, objectStack, this);\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     * @private\n     */\n    GML3.prototype.interiorParser_ = function (node, objectStack) {\n        /** @type {Array<number>|undefined} */\n        var flatLinearRing = pushParseAndPop(undefined, this.RING_PARSERS, node, objectStack, this);\n        if (flatLinearRing) {\n            var flatLinearRings = /** @type {Array<Array<number>>} */ (objectStack[objectStack.length - 1]);\n            flatLinearRings.push(flatLinearRing);\n        }\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     * @private\n     */\n    GML3.prototype.exteriorParser_ = function (node, objectStack) {\n        /** @type {Array<number>|undefined} */\n        var flatLinearRing = pushParseAndPop(undefined, this.RING_PARSERS, node, objectStack, this);\n        if (flatLinearRing) {\n            var flatLinearRings = /** @type {Array<Array<number>>} */ (objectStack[objectStack.length - 1]);\n            flatLinearRings[0] = flatLinearRing;\n        }\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     * @private\n     * @return {Polygon|undefined} Polygon.\n     */\n    GML3.prototype.readSurface_ = function (node, objectStack) {\n        /** @type {Array<Array<number>>} */\n        var flatLinearRings = pushParseAndPop([null], this.SURFACE_PARSERS_, node, objectStack, this);\n        if (flatLinearRings && flatLinearRings[0]) {\n            var flatCoordinates = flatLinearRings[0];\n            var ends = [flatCoordinates.length];\n            var i = void 0, ii = void 0;\n            for (i = 1, ii = flatLinearRings.length; i < ii; ++i) {\n                extend(flatCoordinates, flatLinearRings[i]);\n                ends.push(flatCoordinates.length);\n            }\n            return new Polygon(flatCoordinates, GeometryLayout.XYZ, ends);\n        }\n        else {\n            return undefined;\n        }\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     * @private\n     * @return {LineString|undefined} LineString.\n     */\n    GML3.prototype.readCurve_ = function (node, objectStack) {\n        /** @type {Array<number>} */\n        var flatCoordinates = pushParseAndPop([null], this.CURVE_PARSERS_, node, objectStack, this);\n        if (flatCoordinates) {\n            var lineString = new LineString(flatCoordinates, GeometryLayout.XYZ);\n            return lineString;\n        }\n        else {\n            return undefined;\n        }\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     * @private\n     * @return {import(\"../extent.js\").Extent|undefined} Envelope.\n     */\n    GML3.prototype.readEnvelope_ = function (node, objectStack) {\n        /** @type {Array<number>} */\n        var flatCoordinates = pushParseAndPop([null], this.ENVELOPE_PARSERS_, node, objectStack, this);\n        return createOrUpdate(flatCoordinates[1][0], flatCoordinates[1][1], flatCoordinates[2][0], flatCoordinates[2][1]);\n    };\n    /**\n     * @param {Node} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     * @private\n     * @return {Array<number>|undefined} Flat coordinates.\n     */\n    GML3.prototype.readFlatPos_ = function (node, objectStack) {\n        var s = getAllTextContent(node, false);\n        var re = /^\\s*([+\\-]?\\d*\\.?\\d+(?:[eE][+\\-]?\\d+)?)\\s*/;\n        /** @type {Array<number>} */\n        var flatCoordinates = [];\n        var m;\n        while ((m = re.exec(s))) {\n            flatCoordinates.push(parseFloat(m[1]));\n            s = s.substr(m[0].length);\n        }\n        if (s !== '') {\n            return undefined;\n        }\n        var context = objectStack[0];\n        var containerSrs = context['srsName'];\n        var axisOrientation = 'enu';\n        if (containerSrs) {\n            var proj = getProjection(containerSrs);\n            axisOrientation = proj.getAxisOrientation();\n        }\n        if (axisOrientation === 'neu') {\n            var i = void 0, ii = void 0;\n            for (i = 0, ii = flatCoordinates.length; i < ii; i += 3) {\n                var y = flatCoordinates[i];\n                var x = flatCoordinates[i + 1];\n                flatCoordinates[i] = x;\n                flatCoordinates[i + 1] = y;\n            }\n        }\n        var len = flatCoordinates.length;\n        if (len == 2) {\n            flatCoordinates.push(0);\n        }\n        if (len === 0) {\n            return undefined;\n        }\n        return flatCoordinates;\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     * @private\n     * @return {Array<number>|undefined} Flat coordinates.\n     */\n    GML3.prototype.readFlatPosList_ = function (node, objectStack) {\n        var s = getAllTextContent(node, false).replace(/^\\s*|\\s*$/g, '');\n        var context = objectStack[0];\n        var containerSrs = context['srsName'];\n        var contextDimension = context['srsDimension'];\n        var axisOrientation = 'enu';\n        if (containerSrs) {\n            var proj = getProjection(containerSrs);\n            axisOrientation = proj.getAxisOrientation();\n        }\n        var coords = s.split(/\\s+/);\n        // The \"dimension\" attribute is from the GML 3.0.1 spec.\n        var dim = 2;\n        if (node.getAttribute('srsDimension')) {\n            dim = readNonNegativeIntegerString(node.getAttribute('srsDimension'));\n        }\n        else if (node.getAttribute('dimension')) {\n            dim = readNonNegativeIntegerString(node.getAttribute('dimension'));\n        }\n        else if ( /** @type {Element} */(node.parentNode).getAttribute('srsDimension')) {\n            dim = readNonNegativeIntegerString(\n            /** @type {Element} */ (node.parentNode).getAttribute('srsDimension'));\n        }\n        else if (contextDimension) {\n            dim = readNonNegativeIntegerString(contextDimension);\n        }\n        var x, y, z;\n        var flatCoordinates = [];\n        for (var i = 0, ii = coords.length; i < ii; i += dim) {\n            x = parseFloat(coords[i]);\n            y = parseFloat(coords[i + 1]);\n            z = (dim === 3) ? parseFloat(coords[i + 2]) : 0;\n            if (axisOrientation.substr(0, 2) === 'en') {\n                flatCoordinates.push(x, y, z);\n            }\n            else {\n                flatCoordinates.push(y, x, z);\n            }\n        }\n        return flatCoordinates;\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {import(\"../geom/Point.js\").default} value Point geometry.\n     * @param {Array<*>} objectStack Node stack.\n     * @private\n     */\n    GML3.prototype.writePos_ = function (node, value, objectStack) {\n        var context = objectStack[objectStack.length - 1];\n        var hasZ = context['hasZ'];\n        var srsDimension = hasZ ? '3' : '2';\n        node.setAttribute('srsDimension', srsDimension);\n        var srsName = context['srsName'];\n        var axisOrientation = 'enu';\n        if (srsName) {\n            axisOrientation = getProjection(srsName).getAxisOrientation();\n        }\n        var point = value.getCoordinates();\n        var coords;\n        // only 2d for simple features profile\n        if (axisOrientation.substr(0, 2) === 'en') {\n            coords = (point[0] + ' ' + point[1]);\n        }\n        else {\n            coords = (point[1] + ' ' + point[0]);\n        }\n        if (hasZ) {\n            // For newly created points, Z can be undefined.\n            var z = point[2] || 0;\n            coords += ' ' + z;\n        }\n        writeStringTextNode(node, coords);\n    };\n    /**\n     * @param {Array<number>} point Point geometry.\n     * @param {string=} opt_srsName Optional srsName\n     * @param {boolean=} opt_hasZ whether the geometry has a Z coordinate (is 3D) or not.\n     * @return {string} The coords string.\n     * @private\n     */\n    GML3.prototype.getCoords_ = function (point, opt_srsName, opt_hasZ) {\n        var axisOrientation = 'enu';\n        if (opt_srsName) {\n            axisOrientation = getProjection(opt_srsName).getAxisOrientation();\n        }\n        var coords = ((axisOrientation.substr(0, 2) === 'en') ?\n            point[0] + ' ' + point[1] :\n            point[1] + ' ' + point[0]);\n        if (opt_hasZ) {\n            // For newly created points, Z can be undefined.\n            var z = point[2] || 0;\n            coords += ' ' + z;\n        }\n        return coords;\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {LineString|import(\"../geom/LinearRing.js\").default} value Geometry.\n     * @param {Array<*>} objectStack Node stack.\n     * @private\n     */\n    GML3.prototype.writePosList_ = function (node, value, objectStack) {\n        var context = objectStack[objectStack.length - 1];\n        var hasZ = context['hasZ'];\n        var srsDimension = hasZ ? '3' : '2';\n        node.setAttribute('srsDimension', srsDimension);\n        var srsName = context['srsName'];\n        // only 2d for simple features profile\n        var points = value.getCoordinates();\n        var len = points.length;\n        var parts = new Array(len);\n        var point;\n        for (var i = 0; i < len; ++i) {\n            point = points[i];\n            parts[i] = this.getCoords_(point, srsName, hasZ);\n        }\n        writeStringTextNode(node, parts.join(' '));\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {import(\"../geom/Point.js\").default} geometry Point geometry.\n     * @param {Array<*>} objectStack Node stack.\n     * @private\n     */\n    GML3.prototype.writePoint_ = function (node, geometry, objectStack) {\n        var context = objectStack[objectStack.length - 1];\n        var srsName = context['srsName'];\n        if (srsName) {\n            node.setAttribute('srsName', srsName);\n        }\n        var pos = createElementNS(node.namespaceURI, 'pos');\n        node.appendChild(pos);\n        this.writePos_(pos, geometry, objectStack);\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {Array<*>} objectStack Node stack.\n     */\n    GML3.prototype.writeEnvelope = function (node, extent, objectStack) {\n        var context = objectStack[objectStack.length - 1];\n        var srsName = context['srsName'];\n        if (srsName) {\n            node.setAttribute('srsName', srsName);\n        }\n        var keys = ['lowerCorner', 'upperCorner'];\n        var values = [extent[0] + ' ' + extent[1], extent[2] + ' ' + extent[3]];\n        pushSerializeAndPop(/** @type {import(\"../xml.js\").NodeStackItem} */ ({ node: node }), this.ENVELOPE_SERIALIZERS_, OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, keys, this);\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {import(\"../geom/LinearRing.js\").default} geometry LinearRing geometry.\n     * @param {Array<*>} objectStack Node stack.\n     * @private\n     */\n    GML3.prototype.writeLinearRing_ = function (node, geometry, objectStack) {\n        var context = objectStack[objectStack.length - 1];\n        var srsName = context['srsName'];\n        if (srsName) {\n            node.setAttribute('srsName', srsName);\n        }\n        var posList = createElementNS(node.namespaceURI, 'posList');\n        node.appendChild(posList);\n        this.writePosList_(posList, geometry, objectStack);\n    };\n    /**\n     * @param {*} value Value.\n     * @param {Array<*>} objectStack Object stack.\n     * @param {string=} opt_nodeName Node name.\n     * @return {Node} Node.\n     * @private\n     */\n    GML3.prototype.RING_NODE_FACTORY_ = function (value, objectStack, opt_nodeName) {\n        var context = objectStack[objectStack.length - 1];\n        var parentNode = context.node;\n        var exteriorWritten = context['exteriorWritten'];\n        if (exteriorWritten === undefined) {\n            context['exteriorWritten'] = true;\n        }\n        return createElementNS(parentNode.namespaceURI, exteriorWritten !== undefined ? 'interior' : 'exterior');\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {Polygon} geometry Polygon geometry.\n     * @param {Array<*>} objectStack Node stack.\n     * @private\n     */\n    GML3.prototype.writeSurfaceOrPolygon_ = function (node, geometry, objectStack) {\n        var context = objectStack[objectStack.length - 1];\n        var hasZ = context['hasZ'];\n        var srsName = context['srsName'];\n        if (node.nodeName !== 'PolygonPatch' && srsName) {\n            node.setAttribute('srsName', srsName);\n        }\n        if (node.nodeName === 'Polygon' || node.nodeName === 'PolygonPatch') {\n            var rings = geometry.getLinearRings();\n            pushSerializeAndPop({ node: node, hasZ: hasZ, srsName: srsName }, this.RING_SERIALIZERS_, this.RING_NODE_FACTORY_, rings, objectStack, undefined, this);\n        }\n        else if (node.nodeName === 'Surface') {\n            var patches = createElementNS(node.namespaceURI, 'patches');\n            node.appendChild(patches);\n            this.writeSurfacePatches_(patches, geometry, objectStack);\n        }\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {LineString} geometry LineString geometry.\n     * @param {Array<*>} objectStack Node stack.\n     * @private\n     */\n    GML3.prototype.writeCurveOrLineString_ = function (node, geometry, objectStack) {\n        var context = objectStack[objectStack.length - 1];\n        var srsName = context['srsName'];\n        if (node.nodeName !== 'LineStringSegment' && srsName) {\n            node.setAttribute('srsName', srsName);\n        }\n        if (node.nodeName === 'LineString' ||\n            node.nodeName === 'LineStringSegment') {\n            var posList = createElementNS(node.namespaceURI, 'posList');\n            node.appendChild(posList);\n            this.writePosList_(posList, geometry, objectStack);\n        }\n        else if (node.nodeName === 'Curve') {\n            var segments = createElementNS(node.namespaceURI, 'segments');\n            node.appendChild(segments);\n            this.writeCurveSegments_(segments, geometry, objectStack);\n        }\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {MultiPolygon} geometry MultiPolygon geometry.\n     * @param {Array<*>} objectStack Node stack.\n     * @private\n     */\n    GML3.prototype.writeMultiSurfaceOrPolygon_ = function (node, geometry, objectStack) {\n        var context = objectStack[objectStack.length - 1];\n        var hasZ = context['hasZ'];\n        var srsName = context['srsName'];\n        var surface = context['surface'];\n        if (srsName) {\n            node.setAttribute('srsName', srsName);\n        }\n        var polygons = geometry.getPolygons();\n        pushSerializeAndPop({ node: node, hasZ: hasZ, srsName: srsName, surface: surface }, this.SURFACEORPOLYGONMEMBER_SERIALIZERS_, this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_, polygons, objectStack, undefined, this);\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {import(\"../geom/MultiPoint.js\").default} geometry MultiPoint geometry.\n     * @param {Array<*>} objectStack Node stack.\n     * @private\n     */\n    GML3.prototype.writeMultiPoint_ = function (node, geometry, objectStack) {\n        var context = objectStack[objectStack.length - 1];\n        var srsName = context['srsName'];\n        var hasZ = context['hasZ'];\n        if (srsName) {\n            node.setAttribute('srsName', srsName);\n        }\n        var points = geometry.getPoints();\n        pushSerializeAndPop({ node: node, hasZ: hasZ, srsName: srsName }, this.POINTMEMBER_SERIALIZERS_, makeSimpleNodeFactory('pointMember'), points, objectStack, undefined, this);\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {MultiLineString} geometry MultiLineString geometry.\n     * @param {Array<*>} objectStack Node stack.\n     * @private\n     */\n    GML3.prototype.writeMultiCurveOrLineString_ = function (node, geometry, objectStack) {\n        var context = objectStack[objectStack.length - 1];\n        var hasZ = context['hasZ'];\n        var srsName = context['srsName'];\n        var curve = context['curve'];\n        if (srsName) {\n            node.setAttribute('srsName', srsName);\n        }\n        var lines = geometry.getLineStrings();\n        pushSerializeAndPop({ node: node, hasZ: hasZ, srsName: srsName, curve: curve }, this.LINESTRINGORCURVEMEMBER_SERIALIZERS_, this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_, lines, objectStack, undefined, this);\n    };\n    /**\n     * @param {Node} node Node.\n     * @param {import(\"../geom/LinearRing.js\").default} ring LinearRing geometry.\n     * @param {Array<*>} objectStack Node stack.\n     * @private\n     */\n    GML3.prototype.writeRing_ = function (node, ring, objectStack) {\n        var linearRing = createElementNS(node.namespaceURI, 'LinearRing');\n        node.appendChild(linearRing);\n        this.writeLinearRing_(linearRing, ring, objectStack);\n    };\n    /**\n     * @param {Node} node Node.\n     * @param {Polygon} polygon Polygon geometry.\n     * @param {Array<*>} objectStack Node stack.\n     * @private\n     */\n    GML3.prototype.writeSurfaceOrPolygonMember_ = function (node, polygon, objectStack) {\n        var child = this.GEOMETRY_NODE_FACTORY_(polygon, objectStack);\n        if (child) {\n            node.appendChild(child);\n            this.writeSurfaceOrPolygon_(child, polygon, objectStack);\n        }\n    };\n    /**\n     * @param {Node} node Node.\n     * @param {import(\"../geom/Point.js\").default} point Point geometry.\n     * @param {Array<*>} objectStack Node stack.\n     * @private\n     */\n    GML3.prototype.writePointMember_ = function (node, point, objectStack) {\n        var child = createElementNS(node.namespaceURI, 'Point');\n        node.appendChild(child);\n        this.writePoint_(child, point, objectStack);\n    };\n    /**\n     * @param {Node} node Node.\n     * @param {LineString} line LineString geometry.\n     * @param {Array<*>} objectStack Node stack.\n     * @private\n     */\n    GML3.prototype.writeLineStringOrCurveMember_ = function (node, line, objectStack) {\n        var child = this.GEOMETRY_NODE_FACTORY_(line, objectStack);\n        if (child) {\n            node.appendChild(child);\n            this.writeCurveOrLineString_(child, line, objectStack);\n        }\n    };\n    /**\n     * @param {Node} node Node.\n     * @param {Polygon} polygon Polygon geometry.\n     * @param {Array<*>} objectStack Node stack.\n     * @private\n     */\n    GML3.prototype.writeSurfacePatches_ = function (node, polygon, objectStack) {\n        var child = createElementNS(node.namespaceURI, 'PolygonPatch');\n        node.appendChild(child);\n        this.writeSurfaceOrPolygon_(child, polygon, objectStack);\n    };\n    /**\n     * @param {Node} node Node.\n     * @param {LineString} line LineString geometry.\n     * @param {Array<*>} objectStack Node stack.\n     * @private\n     */\n    GML3.prototype.writeCurveSegments_ = function (node, line, objectStack) {\n        var child = createElementNS(node.namespaceURI, 'LineStringSegment');\n        node.appendChild(child);\n        this.writeCurveOrLineString_(child, line, objectStack);\n    };\n    /**\n     * @param {Node} node Node.\n     * @param {import(\"../geom/Geometry.js\").default|import(\"../extent.js\").Extent} geometry Geometry.\n     * @param {Array<*>} objectStack Node stack.\n     */\n    GML3.prototype.writeGeometryElement = function (node, geometry, objectStack) {\n        var context = /** @type {import(\"./Feature.js\").WriteOptions} */ (objectStack[objectStack.length - 1]);\n        var item = assign({}, context);\n        item['node'] = node;\n        var value;\n        if (Array.isArray(geometry)) {\n            value = transformExtentWithOptions(/** @type {import(\"../extent.js\").Extent} */ (geometry), context);\n        }\n        else {\n            value = transformGeometryWithOptions(/** @type {import(\"../geom/Geometry.js\").default} */ (geometry), true, context);\n        }\n        pushSerializeAndPop(/** @type {import(\"../xml.js\").NodeStackItem} */ (item), this.GEOMETRY_SERIALIZERS_, this.GEOMETRY_NODE_FACTORY_, [value], objectStack, undefined, this);\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {import(\"../Feature.js\").default} feature Feature.\n     * @param {Array<*>} objectStack Node stack.\n     */\n    GML3.prototype.writeFeatureElement = function (node, feature, objectStack) {\n        var fid = feature.getId();\n        if (fid) {\n            node.setAttribute('fid', /** @type {string} */ (fid));\n        }\n        var context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n        var featureNS = context['featureNS'];\n        var geometryName = feature.getGeometryName();\n        if (!context.serializers) {\n            context.serializers = {};\n            context.serializers[featureNS] = {};\n        }\n        var properties = feature.getProperties();\n        var keys = [];\n        var values = [];\n        for (var key in properties) {\n            var value = properties[key];\n            if (value !== null) {\n                keys.push(key);\n                values.push(value);\n                if (key == geometryName || typeof /** @type {?} */ (value).getSimplifiedGeometry === 'function') {\n                    if (!(key in context.serializers[featureNS])) {\n                        context.serializers[featureNS][key] = makeChildAppender(this.writeGeometryElement, this);\n                    }\n                }\n                else {\n                    if (!(key in context.serializers[featureNS])) {\n                        context.serializers[featureNS][key] = makeChildAppender(writeStringTextNode);\n                    }\n                }\n            }\n        }\n        var item = assign({}, context);\n        item.node = node;\n        pushSerializeAndPop(/** @type {import(\"../xml.js\").NodeStackItem} */ (item), context.serializers, makeSimpleNodeFactory(undefined, featureNS), values, objectStack, keys);\n    };\n    /**\n     * @param {Node} node Node.\n     * @param {Array<import(\"../Feature.js\").default>} features Features.\n     * @param {Array<*>} objectStack Node stack.\n     * @private\n     */\n    GML3.prototype.writeFeatureMembers_ = function (node, features, objectStack) {\n        var context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n        var featureType = context['featureType'];\n        var featureNS = context['featureNS'];\n        /** @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>} */\n        var serializers = {};\n        serializers[featureNS] = {};\n        serializers[featureNS][featureType] = makeChildAppender(this.writeFeatureElement, this);\n        var item = assign({}, context);\n        item.node = node;\n        pushSerializeAndPop(/** @type {import(\"../xml.js\").NodeStackItem} */ (item), serializers, makeSimpleNodeFactory(featureType, featureNS), features, objectStack);\n    };\n    /**\n     * @const\n     * @param {*} value Value.\n     * @param {Array<*>} objectStack Object stack.\n     * @param {string=} opt_nodeName Node name.\n     * @return {Node|undefined} Node.\n     * @private\n     */\n    GML3.prototype.MULTIGEOMETRY_MEMBER_NODE_FACTORY_ = function (value, objectStack, opt_nodeName) {\n        var parentNode = objectStack[objectStack.length - 1].node;\n        return createElementNS(this.namespace, MULTIGEOMETRY_TO_MEMBER_NODENAME[parentNode.nodeName]);\n    };\n    /**\n     * @const\n     * @param {*} value Value.\n     * @param {Array<*>} objectStack Object stack.\n     * @param {string=} opt_nodeName Node name.\n     * @return {Element|undefined} Node.\n     * @private\n     */\n    GML3.prototype.GEOMETRY_NODE_FACTORY_ = function (value, objectStack, opt_nodeName) {\n        var context = objectStack[objectStack.length - 1];\n        var multiSurface = context['multiSurface'];\n        var surface = context['surface'];\n        var curve = context['curve'];\n        var multiCurve = context['multiCurve'];\n        var nodeName;\n        if (!Array.isArray(value)) {\n            nodeName = /** @type {import(\"../geom/Geometry.js\").default} */ (value).getType();\n            if (nodeName === 'MultiPolygon' && multiSurface === true) {\n                nodeName = 'MultiSurface';\n            }\n            else if (nodeName === 'Polygon' && surface === true) {\n                nodeName = 'Surface';\n            }\n            else if (nodeName === 'LineString' && curve === true) {\n                nodeName = 'Curve';\n            }\n            else if (nodeName === 'MultiLineString' && multiCurve === true) {\n                nodeName = 'MultiCurve';\n            }\n        }\n        else {\n            nodeName = 'Envelope';\n        }\n        return createElementNS(this.namespace, nodeName);\n    };\n    /**\n     * Encode a geometry in GML 3.1.1 Simple Features.\n     *\n     * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     * @param {import(\"./Feature.js\").WriteOptions=} opt_options Options.\n     * @return {Node} Node.\n     * @override\n     * @api\n     */\n    GML3.prototype.writeGeometryNode = function (geometry, opt_options) {\n        opt_options = this.adaptOptions(opt_options);\n        var geom = createElementNS(this.namespace, 'geom');\n        var context = { node: geom, hasZ: this.hasZ, srsName: this.srsName,\n            curve: this.curve_, surface: this.surface_,\n            multiSurface: this.multiSurface_, multiCurve: this.multiCurve_ };\n        if (opt_options) {\n            assign(context, opt_options);\n        }\n        this.writeGeometryElement(geom, geometry, [context]);\n        return geom;\n    };\n    /**\n     * Encode an array of features in the GML 3.1.1 format as an XML node.\n     *\n     * @param {Array<import(\"../Feature.js\").default>} features Features.\n     * @param {import(\"./Feature.js\").WriteOptions=} opt_options Options.\n     * @return {Element} Node.\n     * @override\n     * @api\n     */\n    GML3.prototype.writeFeaturesNode = function (features, opt_options) {\n        opt_options = this.adaptOptions(opt_options);\n        var node = createElementNS(this.namespace, 'featureMembers');\n        node.setAttributeNS(XML_SCHEMA_INSTANCE_URI, 'xsi:schemaLocation', this.schemaLocation);\n        var context = {\n            srsName: this.srsName,\n            hasZ: this.hasZ,\n            curve: this.curve_,\n            surface: this.surface_,\n            multiSurface: this.multiSurface_,\n            multiCurve: this.multiCurve_,\n            featureNS: this.featureNS,\n            featureType: this.featureType\n        };\n        if (opt_options) {\n            assign(context, opt_options);\n        }\n        this.writeFeatureMembers_(node, features, [context]);\n        return node;\n    };\n    return GML3;\n}(GMLBase));\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @protected\n */\nGML3.prototype.GEOMETRY_FLAT_COORDINATES_PARSERS = {\n    'http://www.opengis.net/gml': {\n        'pos': makeReplacer(GML3.prototype.readFlatPos_),\n        'posList': makeReplacer(GML3.prototype.readFlatPosList_)\n    }\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @protected\n */\nGML3.prototype.FLAT_LINEAR_RINGS_PARSERS = {\n    'http://www.opengis.net/gml': {\n        'interior': GML3.prototype.interiorParser_,\n        'exterior': GML3.prototype.exteriorParser_\n    }\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @protected\n */\nGML3.prototype.GEOMETRY_PARSERS = {\n    'http://www.opengis.net/gml': {\n        'Point': makeReplacer(GMLBase.prototype.readPoint),\n        'MultiPoint': makeReplacer(GMLBase.prototype.readMultiPoint),\n        'LineString': makeReplacer(GMLBase.prototype.readLineString),\n        'MultiLineString': makeReplacer(GMLBase.prototype.readMultiLineString),\n        'LinearRing': makeReplacer(GMLBase.prototype.readLinearRing),\n        'Polygon': makeReplacer(GMLBase.prototype.readPolygon),\n        'MultiPolygon': makeReplacer(GMLBase.prototype.readMultiPolygon),\n        'Surface': makeReplacer(GML3.prototype.readSurface_),\n        'MultiSurface': makeReplacer(GML3.prototype.readMultiSurface_),\n        'Curve': makeReplacer(GML3.prototype.readCurve_),\n        'MultiCurve': makeReplacer(GML3.prototype.readMultiCurve_),\n        'Envelope': makeReplacer(GML3.prototype.readEnvelope_)\n    }\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @private\n */\nGML3.prototype.MULTICURVE_PARSERS_ = {\n    'http://www.opengis.net/gml': {\n        'curveMember': makeArrayPusher(GML3.prototype.curveMemberParser_),\n        'curveMembers': makeArrayPusher(GML3.prototype.curveMemberParser_)\n    }\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @private\n */\nGML3.prototype.MULTISURFACE_PARSERS_ = {\n    'http://www.opengis.net/gml': {\n        'surfaceMember': makeArrayPusher(GML3.prototype.surfaceMemberParser_),\n        'surfaceMembers': makeArrayPusher(GML3.prototype.surfaceMemberParser_)\n    }\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @private\n */\nGML3.prototype.CURVEMEMBER_PARSERS_ = {\n    'http://www.opengis.net/gml': {\n        'LineString': makeArrayPusher(GMLBase.prototype.readLineString),\n        'Curve': makeArrayPusher(GML3.prototype.readCurve_)\n    }\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @private\n */\nGML3.prototype.SURFACEMEMBER_PARSERS_ = {\n    'http://www.opengis.net/gml': {\n        'Polygon': makeArrayPusher(GMLBase.prototype.readPolygon),\n        'Surface': makeArrayPusher(GML3.prototype.readSurface_)\n    }\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @private\n */\nGML3.prototype.SURFACE_PARSERS_ = {\n    'http://www.opengis.net/gml': {\n        'patches': makeReplacer(GML3.prototype.readPatch_)\n    }\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @private\n */\nGML3.prototype.CURVE_PARSERS_ = {\n    'http://www.opengis.net/gml': {\n        'segments': makeReplacer(GML3.prototype.readSegment_)\n    }\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @private\n */\nGML3.prototype.ENVELOPE_PARSERS_ = {\n    'http://www.opengis.net/gml': {\n        'lowerCorner': makeArrayPusher(GML3.prototype.readFlatPosList_),\n        'upperCorner': makeArrayPusher(GML3.prototype.readFlatPosList_)\n    }\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @private\n */\nGML3.prototype.PATCHES_PARSERS_ = {\n    'http://www.opengis.net/gml': {\n        'PolygonPatch': makeReplacer(GML3.prototype.readPolygonPatch_)\n    }\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @private\n */\nGML3.prototype.SEGMENTS_PARSERS_ = {\n    'http://www.opengis.net/gml': {\n        'LineStringSegment': makeReplacer(GML3.prototype.readLineStringSegment_)\n    }\n};\n/**\n * Encode an array of features in GML 3.1.1 Simple Features.\n *\n * @function\n * @param {Array<import(\"../Feature.js\").default>} features Features.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Options.\n * @return {string} Result.\n * @api\n */\nGML3.prototype.writeFeatures;\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n * @private\n */\nGML3.prototype.RING_SERIALIZERS_ = {\n    'http://www.opengis.net/gml': {\n        'exterior': makeChildAppender(GML3.prototype.writeRing_),\n        'interior': makeChildAppender(GML3.prototype.writeRing_)\n    }\n};\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n * @private\n */\nGML3.prototype.ENVELOPE_SERIALIZERS_ = {\n    'http://www.opengis.net/gml': {\n        'lowerCorner': makeChildAppender(writeStringTextNode),\n        'upperCorner': makeChildAppender(writeStringTextNode)\n    }\n};\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n * @private\n */\nGML3.prototype.SURFACEORPOLYGONMEMBER_SERIALIZERS_ = {\n    'http://www.opengis.net/gml': {\n        'surfaceMember': makeChildAppender(GML3.prototype.writeSurfaceOrPolygonMember_),\n        'polygonMember': makeChildAppender(GML3.prototype.writeSurfaceOrPolygonMember_)\n    }\n};\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n * @private\n */\nGML3.prototype.POINTMEMBER_SERIALIZERS_ = {\n    'http://www.opengis.net/gml': {\n        'pointMember': makeChildAppender(GML3.prototype.writePointMember_)\n    }\n};\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n * @private\n */\nGML3.prototype.LINESTRINGORCURVEMEMBER_SERIALIZERS_ = {\n    'http://www.opengis.net/gml': {\n        'lineStringMember': makeChildAppender(GML3.prototype.writeLineStringOrCurveMember_),\n        'curveMember': makeChildAppender(GML3.prototype.writeLineStringOrCurveMember_)\n    }\n};\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n * @private\n */\nGML3.prototype.GEOMETRY_SERIALIZERS_ = {\n    'http://www.opengis.net/gml': {\n        'Curve': makeChildAppender(GML3.prototype.writeCurveOrLineString_),\n        'MultiCurve': makeChildAppender(GML3.prototype.writeMultiCurveOrLineString_),\n        'Point': makeChildAppender(GML3.prototype.writePoint_),\n        'MultiPoint': makeChildAppender(GML3.prototype.writeMultiPoint_),\n        'LineString': makeChildAppender(GML3.prototype.writeCurveOrLineString_),\n        'MultiLineString': makeChildAppender(GML3.prototype.writeMultiCurveOrLineString_),\n        'LinearRing': makeChildAppender(GML3.prototype.writeLinearRing_),\n        'Polygon': makeChildAppender(GML3.prototype.writeSurfaceOrPolygon_),\n        'MultiPolygon': makeChildAppender(GML3.prototype.writeMultiSurfaceOrPolygon_),\n        'Surface': makeChildAppender(GML3.prototype.writeSurfaceOrPolygon_),\n        'MultiSurface': makeChildAppender(GML3.prototype.writeMultiSurfaceOrPolygon_),\n        'Envelope': makeChildAppender(GML3.prototype.writeEnvelope)\n    }\n};\nexport default GML3;\n//# sourceMappingURL=GML3.js.map","/**\n * @module ol/format/GML\n */\nimport GML3 from './GML3.js';\n/**\n * @classdesc\n * Feature format for reading and writing data in the GML format\n * version 3.1.1.\n * Currently only supports GML 3.1.1 Simple Features profile.\n *\n * @param {import(\"./GMLBase.js\").Options=} opt_options\n *     Optional configuration object.\n * @api\n */\nvar GML = GML3;\n/**\n * Encode an array of features in GML 3.1.1 Simple Features.\n *\n * @function\n * @param {Array<import(\"../Feature.js\").default>} features Features.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Options.\n * @return {string} Result.\n * @api\n */\nGML.prototype.writeFeatures;\n/**\n * Encode an array of features in the GML 3.1.1 format as an XML node.\n *\n * @function\n * @param {Array<import(\"../Feature.js\").default>} features Features.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Options.\n * @return {Node} Node.\n * @api\n */\nGML.prototype.writeFeaturesNode;\nexport default GML;\n//# sourceMappingURL=GML.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/format/GML2\n */\nimport { createOrUpdate } from '../extent.js';\nimport { transformExtentWithOptions, transformGeometryWithOptions } from './Feature.js';\nimport GMLBase, { GMLNS } from './GMLBase.js';\nimport { writeStringTextNode } from './xsd.js';\nimport { assign } from '../obj.js';\nimport { get as getProjection } from '../proj.js';\nimport { createElementNS, getAllTextContent, makeArrayPusher, makeChildAppender, makeReplacer, makeSimpleNodeFactory, OBJECT_PROPERTY_NODE_FACTORY, pushParseAndPop, pushSerializeAndPop } from '../xml.js';\n/**\n * @const\n * @type {string}\n */\nvar schemaLocation = GMLNS + ' http://schemas.opengis.net/gml/2.1.2/feature.xsd';\n/**\n * @const\n * @type {Object<string, string>}\n */\nvar MULTIGEOMETRY_TO_MEMBER_NODENAME = {\n    'MultiLineString': 'lineStringMember',\n    'MultiCurve': 'curveMember',\n    'MultiPolygon': 'polygonMember',\n    'MultiSurface': 'surfaceMember'\n};\n/**\n * @classdesc\n * Feature format for reading and writing data in the GML format,\n * version 2.1.2.\n *\n * @api\n */\nvar GML2 = /** @class */ (function (_super) {\n    __extends(GML2, _super);\n    /**\n     * @param {import(\"./GMLBase.js\").Options=} opt_options Optional configuration object.\n     */\n    function GML2(opt_options) {\n        var _this = this;\n        var options = /** @type {import(\"./GMLBase.js\").Options} */ (opt_options ? opt_options : {});\n        _this = _super.call(this, options) || this;\n        _this.FEATURE_COLLECTION_PARSERS[GMLNS]['featureMember'] =\n            makeArrayPusher(_this.readFeaturesInternal);\n        /**\n         * @inheritDoc\n         */\n        _this.schemaLocation = options.schemaLocation ?\n            options.schemaLocation : schemaLocation;\n        return _this;\n    }\n    /**\n     * @param {Node} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     * @private\n     * @return {Array<number>|undefined} Flat coordinates.\n     */\n    GML2.prototype.readFlatCoordinates_ = function (node, objectStack) {\n        var s = getAllTextContent(node, false).replace(/^\\s*|\\s*$/g, '');\n        var context = /** @type {import(\"../xml.js\").NodeStackItem} */ (objectStack[0]);\n        var containerSrs = context['srsName'];\n        var axisOrientation = 'enu';\n        if (containerSrs) {\n            var proj = getProjection(containerSrs);\n            if (proj) {\n                axisOrientation = proj.getAxisOrientation();\n            }\n        }\n        var coordsGroups = s.trim().split(/\\s+/);\n        var flatCoordinates = [];\n        for (var i = 0, ii = coordsGroups.length; i < ii; i++) {\n            var coords = coordsGroups[i].split(/,+/);\n            var x = parseFloat(coords[0]);\n            var y = parseFloat(coords[1]);\n            var z = (coords.length === 3) ? parseFloat(coords[2]) : 0;\n            if (axisOrientation.substr(0, 2) === 'en') {\n                flatCoordinates.push(x, y, z);\n            }\n            else {\n                flatCoordinates.push(y, x, z);\n            }\n        }\n        return flatCoordinates;\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     * @private\n     * @return {import(\"../extent.js\").Extent|undefined} Envelope.\n     */\n    GML2.prototype.readBox_ = function (node, objectStack) {\n        /** @type {Array<number>} */\n        var flatCoordinates = pushParseAndPop([null], this.BOX_PARSERS_, node, objectStack, this);\n        return createOrUpdate(flatCoordinates[1][0], flatCoordinates[1][1], flatCoordinates[1][3], flatCoordinates[1][4]);\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     * @private\n     */\n    GML2.prototype.innerBoundaryIsParser_ = function (node, objectStack) {\n        /** @type {Array<number>|undefined} */\n        var flatLinearRing = pushParseAndPop(undefined, this.RING_PARSERS, node, objectStack, this);\n        if (flatLinearRing) {\n            var flatLinearRings = /** @type {Array<Array<number>>} */ (objectStack[objectStack.length - 1]);\n            flatLinearRings.push(flatLinearRing);\n        }\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     * @private\n     */\n    GML2.prototype.outerBoundaryIsParser_ = function (node, objectStack) {\n        /** @type {Array<number>|undefined} */\n        var flatLinearRing = pushParseAndPop(undefined, this.RING_PARSERS, node, objectStack, this);\n        if (flatLinearRing) {\n            var flatLinearRings = /** @type {Array<Array<number>>} */ (objectStack[objectStack.length - 1]);\n            flatLinearRings[0] = flatLinearRing;\n        }\n    };\n    /**\n     * @const\n     * @param {*} value Value.\n     * @param {Array<*>} objectStack Object stack.\n     * @param {string=} opt_nodeName Node name.\n     * @return {Element|undefined} Node.\n     * @private\n     */\n    GML2.prototype.GEOMETRY_NODE_FACTORY_ = function (value, objectStack, opt_nodeName) {\n        var context = objectStack[objectStack.length - 1];\n        var multiSurface = context['multiSurface'];\n        var surface = context['surface'];\n        var multiCurve = context['multiCurve'];\n        var nodeName;\n        if (!Array.isArray(value)) {\n            nodeName = /** @type {import(\"../geom/Geometry.js\").default} */ (value).getType();\n            if (nodeName === 'MultiPolygon' && multiSurface === true) {\n                nodeName = 'MultiSurface';\n            }\n            else if (nodeName === 'Polygon' && surface === true) {\n                nodeName = 'Surface';\n            }\n            else if (nodeName === 'MultiLineString' && multiCurve === true) {\n                nodeName = 'MultiCurve';\n            }\n        }\n        else {\n            nodeName = 'Envelope';\n        }\n        return createElementNS('http://www.opengis.net/gml', nodeName);\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {import(\"../Feature.js\").default} feature Feature.\n     * @param {Array<*>} objectStack Node stack.\n     */\n    GML2.prototype.writeFeatureElement = function (node, feature, objectStack) {\n        var fid = feature.getId();\n        if (fid) {\n            node.setAttribute('fid', /** @type {string} */ (fid));\n        }\n        var context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n        var featureNS = context['featureNS'];\n        var geometryName = feature.getGeometryName();\n        if (!context.serializers) {\n            context.serializers = {};\n            context.serializers[featureNS] = {};\n        }\n        var properties = feature.getProperties();\n        var keys = [];\n        var values = [];\n        for (var key in properties) {\n            var value = properties[key];\n            if (value !== null) {\n                keys.push(key);\n                values.push(value);\n                if (key == geometryName || typeof /** @type {?} */ (value).getSimplifiedGeometry === 'function') {\n                    if (!(key in context.serializers[featureNS])) {\n                        context.serializers[featureNS][key] = makeChildAppender(this.writeGeometryElement, this);\n                    }\n                }\n                else {\n                    if (!(key in context.serializers[featureNS])) {\n                        context.serializers[featureNS][key] = makeChildAppender(writeStringTextNode);\n                    }\n                }\n            }\n        }\n        var item = assign({}, context);\n        item.node = node;\n        pushSerializeAndPop(/** @type {import(\"../xml.js\").NodeStackItem} */ (item), context.serializers, makeSimpleNodeFactory(undefined, featureNS), values, objectStack, keys);\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {import(\"../geom/LineString.js\").default} geometry LineString geometry.\n     * @param {Array<*>} objectStack Node stack.\n     * @private\n     */\n    GML2.prototype.writeCurveOrLineString_ = function (node, geometry, objectStack) {\n        var context = objectStack[objectStack.length - 1];\n        var srsName = context['srsName'];\n        if (node.nodeName !== 'LineStringSegment' && srsName) {\n            node.setAttribute('srsName', srsName);\n        }\n        if (node.nodeName === 'LineString' ||\n            node.nodeName === 'LineStringSegment') {\n            var coordinates = this.createCoordinatesNode_(node.namespaceURI);\n            node.appendChild(coordinates);\n            this.writeCoordinates_(coordinates, geometry, objectStack);\n        }\n        else if (node.nodeName === 'Curve') {\n            var segments = createElementNS(node.namespaceURI, 'segments');\n            node.appendChild(segments);\n            this.writeCurveSegments_(segments, geometry, objectStack);\n        }\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {import(\"../geom/LineString.js\").default} line LineString geometry.\n     * @param {Array<*>} objectStack Node stack.\n     * @private\n     */\n    GML2.prototype.writeLineStringOrCurveMember_ = function (node, line, objectStack) {\n        var child = this.GEOMETRY_NODE_FACTORY_(line, objectStack);\n        if (child) {\n            node.appendChild(child);\n            this.writeCurveOrLineString_(child, line, objectStack);\n        }\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {import(\"../geom/MultiLineString.js\").default} geometry MultiLineString geometry.\n     * @param {Array<*>} objectStack Node stack.\n     * @private\n     */\n    GML2.prototype.writeMultiCurveOrLineString_ = function (node, geometry, objectStack) {\n        var context = objectStack[objectStack.length - 1];\n        var hasZ = context['hasZ'];\n        var srsName = context['srsName'];\n        var curve = context['curve'];\n        if (srsName) {\n            node.setAttribute('srsName', srsName);\n        }\n        var lines = geometry.getLineStrings();\n        pushSerializeAndPop({ node: node, hasZ: hasZ, srsName: srsName, curve: curve }, this.LINESTRINGORCURVEMEMBER_SERIALIZERS_, this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_, lines, objectStack, undefined, this);\n    };\n    /**\n     * @param {Node} node Node.\n     * @param {import(\"../geom/Geometry.js\").default|import(\"../extent.js\").Extent} geometry Geometry.\n     * @param {Array<*>} objectStack Node stack.\n     */\n    GML2.prototype.writeGeometryElement = function (node, geometry, objectStack) {\n        var context = /** @type {import(\"./Feature.js\").WriteOptions} */ (objectStack[objectStack.length - 1]);\n        var item = assign({}, context);\n        item['node'] = node;\n        var value;\n        if (Array.isArray(geometry)) {\n            value = transformExtentWithOptions(/** @type {import(\"../extent.js\").Extent} */ (geometry), context);\n        }\n        else {\n            value = transformGeometryWithOptions(/** @type {import(\"../geom/Geometry.js\").default} */ (geometry), true, context);\n        }\n        pushSerializeAndPop(/** @type {import(\"../xml.js\").NodeStackItem} */ (item), this.GEOMETRY_SERIALIZERS_, this.GEOMETRY_NODE_FACTORY_, [value], objectStack, undefined, this);\n    };\n    /**\n     * @param {string} namespaceURI XML namespace.\n     * @returns {Element} coordinates node.\n     * @private\n     */\n    GML2.prototype.createCoordinatesNode_ = function (namespaceURI) {\n        var coordinates = createElementNS(namespaceURI, 'coordinates');\n        coordinates.setAttribute('decimal', '.');\n        coordinates.setAttribute('cs', ',');\n        coordinates.setAttribute('ts', ' ');\n        return coordinates;\n    };\n    /**\n     * @param {Node} node Node.\n     * @param {import(\"../geom/LineString.js\").default|import(\"../geom/LinearRing.js\").default} value Geometry.\n     * @param {Array<*>} objectStack Node stack.\n     * @private\n     */\n    GML2.prototype.writeCoordinates_ = function (node, value, objectStack) {\n        var context = objectStack[objectStack.length - 1];\n        var hasZ = context['hasZ'];\n        var srsName = context['srsName'];\n        // only 2d for simple features profile\n        var points = value.getCoordinates();\n        var len = points.length;\n        var parts = new Array(len);\n        for (var i = 0; i < len; ++i) {\n            var point = points[i];\n            parts[i] = this.getCoords_(point, srsName, hasZ);\n        }\n        writeStringTextNode(node, parts.join(' '));\n    };\n    /**\n     * @param {Node} node Node.\n     * @param {import(\"../geom/LineString.js\").default} line LineString geometry.\n     * @param {Array<*>} objectStack Node stack.\n     * @private\n     */\n    GML2.prototype.writeCurveSegments_ = function (node, line, objectStack) {\n        var child = createElementNS(node.namespaceURI, 'LineStringSegment');\n        node.appendChild(child);\n        this.writeCurveOrLineString_(child, line, objectStack);\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {import(\"../geom/Polygon.js\").default} geometry Polygon geometry.\n     * @param {Array<*>} objectStack Node stack.\n     * @private\n     */\n    GML2.prototype.writeSurfaceOrPolygon_ = function (node, geometry, objectStack) {\n        var context = objectStack[objectStack.length - 1];\n        var hasZ = context['hasZ'];\n        var srsName = context['srsName'];\n        if (node.nodeName !== 'PolygonPatch' && srsName) {\n            node.setAttribute('srsName', srsName);\n        }\n        if (node.nodeName === 'Polygon' || node.nodeName === 'PolygonPatch') {\n            var rings = geometry.getLinearRings();\n            pushSerializeAndPop({ node: node, hasZ: hasZ, srsName: srsName }, this.RING_SERIALIZERS_, this.RING_NODE_FACTORY_, rings, objectStack, undefined, this);\n        }\n        else if (node.nodeName === 'Surface') {\n            var patches = createElementNS(node.namespaceURI, 'patches');\n            node.appendChild(patches);\n            this.writeSurfacePatches_(patches, geometry, objectStack);\n        }\n    };\n    /**\n     * @param {*} value Value.\n     * @param {Array<*>} objectStack Object stack.\n     * @param {string=} opt_nodeName Node name.\n     * @return {Node} Node.\n     * @private\n     */\n    GML2.prototype.RING_NODE_FACTORY_ = function (value, objectStack, opt_nodeName) {\n        var context = objectStack[objectStack.length - 1];\n        var parentNode = context.node;\n        var exteriorWritten = context['exteriorWritten'];\n        if (exteriorWritten === undefined) {\n            context['exteriorWritten'] = true;\n        }\n        return createElementNS(parentNode.namespaceURI, exteriorWritten !== undefined ? 'innerBoundaryIs' : 'outerBoundaryIs');\n    };\n    /**\n     * @param {Node} node Node.\n     * @param {import(\"../geom/Polygon.js\").default} polygon Polygon geometry.\n     * @param {Array<*>} objectStack Node stack.\n     * @private\n     */\n    GML2.prototype.writeSurfacePatches_ = function (node, polygon, objectStack) {\n        var child = createElementNS(node.namespaceURI, 'PolygonPatch');\n        node.appendChild(child);\n        this.writeSurfaceOrPolygon_(child, polygon, objectStack);\n    };\n    /**\n     * @param {Node} node Node.\n     * @param {import(\"../geom/LinearRing.js\").default} ring LinearRing geometry.\n     * @param {Array<*>} objectStack Node stack.\n     * @private\n     */\n    GML2.prototype.writeRing_ = function (node, ring, objectStack) {\n        var linearRing = createElementNS(node.namespaceURI, 'LinearRing');\n        node.appendChild(linearRing);\n        this.writeLinearRing_(linearRing, ring, objectStack);\n    };\n    /**\n     * @param {Array<number>} point Point geometry.\n     * @param {string=} opt_srsName Optional srsName\n     * @param {boolean=} opt_hasZ whether the geometry has a Z coordinate (is 3D) or not.\n     * @return {string} The coords string.\n     * @private\n     */\n    GML2.prototype.getCoords_ = function (point, opt_srsName, opt_hasZ) {\n        var axisOrientation = 'enu';\n        if (opt_srsName) {\n            axisOrientation = getProjection(opt_srsName).getAxisOrientation();\n        }\n        var coords = ((axisOrientation.substr(0, 2) === 'en') ?\n            point[0] + ',' + point[1] :\n            point[1] + ',' + point[0]);\n        if (opt_hasZ) {\n            // For newly created points, Z can be undefined.\n            var z = point[2] || 0;\n            coords += ',' + z;\n        }\n        return coords;\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {import(\"../geom/Point.js\").default} geometry Point geometry.\n     * @param {Array<*>} objectStack Node stack.\n     * @private\n     */\n    GML2.prototype.writePoint_ = function (node, geometry, objectStack) {\n        var context = objectStack[objectStack.length - 1];\n        var hasZ = context['hasZ'];\n        var srsName = context['srsName'];\n        if (srsName) {\n            node.setAttribute('srsName', srsName);\n        }\n        var coordinates = this.createCoordinatesNode_(node.namespaceURI);\n        node.appendChild(coordinates);\n        var point = geometry.getCoordinates();\n        var coord = this.getCoords_(point, srsName, hasZ);\n        writeStringTextNode(coordinates, coord);\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {import(\"../geom/MultiPoint.js\").default} geometry MultiPoint geometry.\n     * @param {Array<*>} objectStack Node stack.\n     * @private\n     */\n    GML2.prototype.writeMultiPoint_ = function (node, geometry, objectStack) {\n        var context = objectStack[objectStack.length - 1];\n        var hasZ = context['hasZ'];\n        var srsName = context['srsName'];\n        if (srsName) {\n            node.setAttribute('srsName', srsName);\n        }\n        var points = geometry.getPoints();\n        pushSerializeAndPop({ node: node, hasZ: hasZ, srsName: srsName }, this.POINTMEMBER_SERIALIZERS_, makeSimpleNodeFactory('pointMember'), points, objectStack, undefined, this);\n    };\n    /**\n     * @param {Node} node Node.\n     * @param {import(\"../geom/Point.js\").default} point Point geometry.\n     * @param {Array<*>} objectStack Node stack.\n     * @private\n     */\n    GML2.prototype.writePointMember_ = function (node, point, objectStack) {\n        var child = createElementNS(node.namespaceURI, 'Point');\n        node.appendChild(child);\n        this.writePoint_(child, point, objectStack);\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {import(\"../geom/LinearRing.js\").default} geometry LinearRing geometry.\n     * @param {Array<*>} objectStack Node stack.\n     * @private\n     */\n    GML2.prototype.writeLinearRing_ = function (node, geometry, objectStack) {\n        var context = objectStack[objectStack.length - 1];\n        var srsName = context['srsName'];\n        if (srsName) {\n            node.setAttribute('srsName', srsName);\n        }\n        var coordinates = this.createCoordinatesNode_(node.namespaceURI);\n        node.appendChild(coordinates);\n        this.writeCoordinates_(coordinates, geometry, objectStack);\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {import(\"../geom/MultiPolygon.js\").default} geometry MultiPolygon geometry.\n     * @param {Array<*>} objectStack Node stack.\n     * @private\n     */\n    GML2.prototype.writeMultiSurfaceOrPolygon_ = function (node, geometry, objectStack) {\n        var context = objectStack[objectStack.length - 1];\n        var hasZ = context['hasZ'];\n        var srsName = context['srsName'];\n        var surface = context['surface'];\n        if (srsName) {\n            node.setAttribute('srsName', srsName);\n        }\n        var polygons = geometry.getPolygons();\n        pushSerializeAndPop({ node: node, hasZ: hasZ, srsName: srsName, surface: surface }, this.SURFACEORPOLYGONMEMBER_SERIALIZERS_, this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_, polygons, objectStack, undefined, this);\n    };\n    /**\n     * @param {Node} node Node.\n     * @param {import(\"../geom/Polygon.js\").default} polygon Polygon geometry.\n     * @param {Array<*>} objectStack Node stack.\n     * @private\n     */\n    GML2.prototype.writeSurfaceOrPolygonMember_ = function (node, polygon, objectStack) {\n        var child = this.GEOMETRY_NODE_FACTORY_(polygon, objectStack);\n        if (child) {\n            node.appendChild(child);\n            this.writeSurfaceOrPolygon_(child, polygon, objectStack);\n        }\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {Array<*>} objectStack Node stack.\n     * @private\n     */\n    GML2.prototype.writeEnvelope = function (node, extent, objectStack) {\n        var context = objectStack[objectStack.length - 1];\n        var srsName = context['srsName'];\n        if (srsName) {\n            node.setAttribute('srsName', srsName);\n        }\n        var keys = ['lowerCorner', 'upperCorner'];\n        var values = [extent[0] + ' ' + extent[1], extent[2] + ' ' + extent[3]];\n        pushSerializeAndPop(/** @type {import(\"../xml.js\").NodeStackItem} */ ({ node: node }), this.ENVELOPE_SERIALIZERS_, OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, keys, this);\n    };\n    /**\n     * @const\n     * @param {*} value Value.\n     * @param {Array<*>} objectStack Object stack.\n     * @param {string=} opt_nodeName Node name.\n     * @return {Node|undefined} Node.\n     * @private\n     */\n    GML2.prototype.MULTIGEOMETRY_MEMBER_NODE_FACTORY_ = function (value, objectStack, opt_nodeName) {\n        var parentNode = objectStack[objectStack.length - 1].node;\n        return createElementNS('http://www.opengis.net/gml', MULTIGEOMETRY_TO_MEMBER_NODENAME[parentNode.nodeName]);\n    };\n    return GML2;\n}(GMLBase));\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @protected\n */\nGML2.prototype.GEOMETRY_FLAT_COORDINATES_PARSERS = {\n    'http://www.opengis.net/gml': {\n        'coordinates': makeReplacer(GML2.prototype.readFlatCoordinates_)\n    }\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @protected\n */\nGML2.prototype.FLAT_LINEAR_RINGS_PARSERS = {\n    'http://www.opengis.net/gml': {\n        'innerBoundaryIs': GML2.prototype.innerBoundaryIsParser_,\n        'outerBoundaryIs': GML2.prototype.outerBoundaryIsParser_\n    }\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @private\n */\nGML2.prototype.BOX_PARSERS_ = {\n    'http://www.opengis.net/gml': {\n        'coordinates': makeArrayPusher(GML2.prototype.readFlatCoordinates_)\n    }\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @protected\n */\nGML2.prototype.GEOMETRY_PARSERS = {\n    'http://www.opengis.net/gml': {\n        'Point': makeReplacer(GMLBase.prototype.readPoint),\n        'MultiPoint': makeReplacer(GMLBase.prototype.readMultiPoint),\n        'LineString': makeReplacer(GMLBase.prototype.readLineString),\n        'MultiLineString': makeReplacer(GMLBase.prototype.readMultiLineString),\n        'LinearRing': makeReplacer(GMLBase.prototype.readLinearRing),\n        'Polygon': makeReplacer(GMLBase.prototype.readPolygon),\n        'MultiPolygon': makeReplacer(GMLBase.prototype.readMultiPolygon),\n        'Box': makeReplacer(GML2.prototype.readBox_)\n    }\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n * @private\n */\nGML2.prototype.GEOMETRY_SERIALIZERS_ = {\n    'http://www.opengis.net/gml': {\n        'Curve': makeChildAppender(GML2.prototype.writeCurveOrLineString_),\n        'MultiCurve': makeChildAppender(GML2.prototype.writeMultiCurveOrLineString_),\n        'Point': makeChildAppender(GML2.prototype.writePoint_),\n        'MultiPoint': makeChildAppender(GML2.prototype.writeMultiPoint_),\n        'LineString': makeChildAppender(GML2.prototype.writeCurveOrLineString_),\n        'MultiLineString': makeChildAppender(GML2.prototype.writeMultiCurveOrLineString_),\n        'LinearRing': makeChildAppender(GML2.prototype.writeLinearRing_),\n        'Polygon': makeChildAppender(GML2.prototype.writeSurfaceOrPolygon_),\n        'MultiPolygon': makeChildAppender(GML2.prototype.writeMultiSurfaceOrPolygon_),\n        'Surface': makeChildAppender(GML2.prototype.writeSurfaceOrPolygon_),\n        'MultiSurface': makeChildAppender(GML2.prototype.writeMultiSurfaceOrPolygon_),\n        'Envelope': makeChildAppender(GML2.prototype.writeEnvelope)\n    }\n};\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n * @private\n */\nGML2.prototype.LINESTRINGORCURVEMEMBER_SERIALIZERS_ = {\n    'http://www.opengis.net/gml': {\n        'lineStringMember': makeChildAppender(GML2.prototype.writeLineStringOrCurveMember_),\n        'curveMember': makeChildAppender(GML2.prototype.writeLineStringOrCurveMember_)\n    }\n};\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n * @private\n */\nGML2.prototype.RING_SERIALIZERS_ = {\n    'http://www.opengis.net/gml': {\n        'outerBoundaryIs': makeChildAppender(GML2.prototype.writeRing_),\n        'innerBoundaryIs': makeChildAppender(GML2.prototype.writeRing_)\n    }\n};\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n * @private\n */\nGML2.prototype.POINTMEMBER_SERIALIZERS_ = {\n    'http://www.opengis.net/gml': {\n        'pointMember': makeChildAppender(GML2.prototype.writePointMember_)\n    }\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n * @private\n */\nGML2.prototype.SURFACEORPOLYGONMEMBER_SERIALIZERS_ = {\n    'http://www.opengis.net/gml': {\n        'surfaceMember': makeChildAppender(GML2.prototype.writeSurfaceOrPolygonMember_),\n        'polygonMember': makeChildAppender(GML2.prototype.writeSurfaceOrPolygonMember_)\n    }\n};\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n * @private\n */\nGML2.prototype.ENVELOPE_SERIALIZERS_ = {\n    'http://www.opengis.net/gml': {\n        'lowerCorner': makeChildAppender(writeStringTextNode),\n        'upperCorner': makeChildAppender(writeStringTextNode)\n    }\n};\nexport default GML2;\n//# sourceMappingURL=GML2.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/format/GML32\n */\nimport GML3 from './GML3.js';\nimport GMLBase from './GMLBase.js';\nimport { makeArrayPusher, makeReplacer, makeChildAppender } from '../xml.js';\nimport { writeStringTextNode } from '../format/xsd.js';\n/**\n * @classdesc Feature format for reading and writing data in the GML format\n *            version 3.2.1.\n * @api\n */\nvar GML32 = /** @class */ (function (_super) {\n    __extends(GML32, _super);\n    /**\n     * @param {import(\"./GMLBase.js\").Options=} opt_options Optional configuration object.\n     */\n    function GML32(opt_options) {\n        var _this = this;\n        var options = /** @type {import(\"./GMLBase.js\").Options} */ (opt_options ? opt_options : {});\n        _this = _super.call(this, options) || this;\n        /**\n         * @inheritDoc\n         */\n        _this.schemaLocation = options.schemaLocation ?\n            options.schemaLocation : _this.namespace + ' http://schemas.opengis.net/gml/3.2.1/gml.xsd';\n        return _this;\n    }\n    return GML32;\n}(GML3));\nGML32.prototype.namespace = 'http://www.opengis.net/gml/3.2';\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @protected\n */\nGML32.prototype.GEOMETRY_FLAT_COORDINATES_PARSERS = {\n    'http://www.opengis.net/gml/3.2': {\n        'pos': makeReplacer(GML3.prototype.readFlatPos_),\n        'posList': makeReplacer(GML3.prototype.readFlatPosList_)\n    }\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @protected\n */\nGML32.prototype.FLAT_LINEAR_RINGS_PARSERS = {\n    'http://www.opengis.net/gml/3.2': {\n        'interior': GML3.prototype.interiorParser_,\n        'exterior': GML3.prototype.exteriorParser_\n    }\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @protected\n */\nGML32.prototype.GEOMETRY_PARSERS = {\n    'http://www.opengis.net/gml/3.2': {\n        'Point': makeReplacer(GMLBase.prototype.readPoint),\n        'MultiPoint': makeReplacer(GMLBase.prototype.readMultiPoint),\n        'LineString': makeReplacer(GMLBase.prototype.readLineString),\n        'MultiLineString': makeReplacer(GMLBase.prototype.readMultiLineString),\n        'LinearRing': makeReplacer(GMLBase.prototype.readLinearRing),\n        'Polygon': makeReplacer(GMLBase.prototype.readPolygon),\n        'MultiPolygon': makeReplacer(GMLBase.prototype.readMultiPolygon),\n        'Surface': makeReplacer(GML32.prototype.readSurface_),\n        'MultiSurface': makeReplacer(GML3.prototype.readMultiSurface_),\n        'Curve': makeReplacer(GML32.prototype.readCurve_),\n        'MultiCurve': makeReplacer(GML3.prototype.readMultiCurve_),\n        'Envelope': makeReplacer(GML32.prototype.readEnvelope_)\n    }\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @private\n */\nGML32.prototype.MULTICURVE_PARSERS_ = {\n    'http://www.opengis.net/gml/3.2': {\n        'curveMember': makeArrayPusher(GML3.prototype.curveMemberParser_),\n        'curveMembers': makeArrayPusher(GML3.prototype.curveMemberParser_)\n    }\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @private\n */\nGML32.prototype.MULTISURFACE_PARSERS_ = {\n    'http://www.opengis.net/gml/3.2': {\n        'surfaceMember': makeArrayPusher(GML3.prototype.surfaceMemberParser_),\n        'surfaceMembers': makeArrayPusher(GML3.prototype.surfaceMemberParser_)\n    }\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @private\n */\nGML32.prototype.CURVEMEMBER_PARSERS_ = {\n    'http://www.opengis.net/gml/3.2': {\n        'LineString': makeArrayPusher(GMLBase.prototype.readLineString),\n        'Curve': makeArrayPusher(GML3.prototype.readCurve_)\n    }\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @private\n */\nGML32.prototype.SURFACEMEMBER_PARSERS_ = {\n    'http://www.opengis.net/gml/3.2': {\n        'Polygon': makeArrayPusher(GMLBase.prototype.readPolygon),\n        'Surface': makeArrayPusher(GML3.prototype.readSurface_)\n    }\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @private\n */\nGML32.prototype.SURFACE_PARSERS_ = {\n    'http://www.opengis.net/gml/3.2': {\n        'patches': makeReplacer(GML3.prototype.readPatch_)\n    }\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @private\n */\nGML32.prototype.CURVE_PARSERS_ = {\n    'http://www.opengis.net/gml/3.2': {\n        'segments': makeReplacer(GML3.prototype.readSegment_)\n    }\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @private\n */\nGML32.prototype.ENVELOPE_PARSERS_ = {\n    'http://www.opengis.net/gml/3.2': {\n        'lowerCorner': makeArrayPusher(GML3.prototype.readFlatPosList_),\n        'upperCorner': makeArrayPusher(GML3.prototype.readFlatPosList_)\n    }\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @private\n */\nGML32.prototype.PATCHES_PARSERS_ = {\n    'http://www.opengis.net/gml/3.2': {\n        'PolygonPatch': makeReplacer(GML3.prototype.readPolygonPatch_)\n    }\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @private\n */\nGML32.prototype.SEGMENTS_PARSERS_ = {\n    'http://www.opengis.net/gml/3.2': {\n        'LineStringSegment': makeReplacer(GML3.prototype.readLineStringSegment_)\n    }\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @private\n */\nGML32.prototype.MULTIPOINT_PARSERS_ = {\n    'http://www.opengis.net/gml/3.2': {\n        'pointMember': makeArrayPusher(GMLBase.prototype.pointMemberParser_),\n        'pointMembers': makeArrayPusher(GMLBase.prototype.pointMemberParser_)\n    }\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @private\n */\nGML32.prototype.MULTILINESTRING_PARSERS_ = {\n    'http://www.opengis.net/gml/3.2': {\n        'lineStringMember': makeArrayPusher(GMLBase.prototype.lineStringMemberParser_),\n        'lineStringMembers': makeArrayPusher(GMLBase.prototype.lineStringMemberParser_)\n    }\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @private\n */\nGML32.prototype.MULTIPOLYGON_PARSERS_ = {\n    'http://www.opengis.net/gml/3.2': {\n        'polygonMember': makeArrayPusher(GMLBase.prototype.polygonMemberParser_),\n        'polygonMembers': makeArrayPusher(GMLBase.prototype.polygonMemberParser_)\n    }\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @private\n */\nGML32.prototype.POINTMEMBER_PARSERS_ = {\n    'http://www.opengis.net/gml/3.2': {\n        'Point': makeArrayPusher(GMLBase.prototype.readFlatCoordinatesFromNode_)\n    }\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @private\n */\nGML32.prototype.LINESTRINGMEMBER_PARSERS_ = {\n    'http://www.opengis.net/gml/3.2': {\n        'LineString': makeArrayPusher(GMLBase.prototype.readLineString)\n    }\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @private\n */\nGML32.prototype.POLYGONMEMBER_PARSERS_ = {\n    'http://www.opengis.net/gml/3.2': {\n        'Polygon': makeArrayPusher(GMLBase.prototype.readPolygon)\n    }\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @protected\n */\nGML32.prototype.RING_PARSERS = {\n    'http://www.opengis.net/gml/3.2': {\n        'LinearRing': makeReplacer(GMLBase.prototype.readFlatLinearRing_)\n    }\n};\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n * @private\n */\nGML32.prototype.RING_SERIALIZERS_ = {\n    'http://www.opengis.net/gml/3.2': {\n        'exterior': makeChildAppender(GML3.prototype.writeRing_),\n        'interior': makeChildAppender(GML3.prototype.writeRing_)\n    }\n};\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n * @private\n */\nGML32.prototype.ENVELOPE_SERIALIZERS_ = {\n    'http://www.opengis.net/gml/3.2': {\n        'lowerCorner': makeChildAppender(writeStringTextNode),\n        'upperCorner': makeChildAppender(writeStringTextNode)\n    }\n};\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n * @private\n */\nGML32.prototype.SURFACEORPOLYGONMEMBER_SERIALIZERS_ = {\n    'http://www.opengis.net/gml/3.2': {\n        'surfaceMember': makeChildAppender(GML3.prototype.writeSurfaceOrPolygonMember_),\n        'polygonMember': makeChildAppender(GML3.prototype.writeSurfaceOrPolygonMember_)\n    }\n};\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n * @private\n */\nGML32.prototype.POINTMEMBER_SERIALIZERS_ = {\n    'http://www.opengis.net/gml/3.2': {\n        'pointMember': makeChildAppender(GML3.prototype.writePointMember_)\n    }\n};\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n * @private\n */\nGML32.prototype.LINESTRINGORCURVEMEMBER_SERIALIZERS_ = {\n    'http://www.opengis.net/gml/3.2': {\n        'lineStringMember': makeChildAppender(GML3.prototype.writeLineStringOrCurveMember_),\n        'curveMember': makeChildAppender(GML3.prototype.writeLineStringOrCurveMember_)\n    }\n};\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n * @private\n */\nGML32.prototype.GEOMETRY_SERIALIZERS_ = {\n    'http://www.opengis.net/gml/3.2': {\n        'Curve': makeChildAppender(GML3.prototype.writeCurveOrLineString_),\n        'MultiCurve': makeChildAppender(GML3.prototype.writeMultiCurveOrLineString_),\n        'Point': makeChildAppender(GML32.prototype.writePoint_),\n        'MultiPoint': makeChildAppender(GML3.prototype.writeMultiPoint_),\n        'LineString': makeChildAppender(GML3.prototype.writeCurveOrLineString_),\n        'MultiLineString': makeChildAppender(GML3.prototype.writeMultiCurveOrLineString_),\n        'LinearRing': makeChildAppender(GML3.prototype.writeLinearRing_),\n        'Polygon': makeChildAppender(GML3.prototype.writeSurfaceOrPolygon_),\n        'MultiPolygon': makeChildAppender(GML3.prototype.writeMultiSurfaceOrPolygon_),\n        'Surface': makeChildAppender(GML3.prototype.writeSurfaceOrPolygon_),\n        'MultiSurface': makeChildAppender(GML3.prototype.writeMultiSurfaceOrPolygon_),\n        'Envelope': makeChildAppender(GML3.prototype.writeEnvelope)\n    }\n};\nexport default GML32;\n//# sourceMappingURL=GML32.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/format/GPX\n */\nimport Feature from '../Feature.js';\nimport { includes } from '../array.js';\nimport { transformGeometryWithOptions } from './Feature.js';\nimport XMLFeature from './XMLFeature.js';\nimport { readString, readDecimal, readNonNegativeInteger, readDateTime, writeStringTextNode, writeNonNegativeIntegerTextNode, writeDecimalTextNode, writeDateTimeTextNode } from './xsd.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport Point from '../geom/Point.js';\nimport { get as getProjection } from '../proj.js';\nimport { createElementNS, makeArrayPusher, makeArraySerializer, makeChildAppender, makeObjectPropertySetter, makeSequence, makeSimpleNodeFactory, makeStructureNS, OBJECT_PROPERTY_NODE_FACTORY, parseNode, pushParseAndPop, pushSerializeAndPop, XML_SCHEMA_INSTANCE_URI } from '../xml.js';\n/**\n * @const\n * @type {Array<null|string>}\n */\nvar NAMESPACE_URIS = [\n    null,\n    'http://www.topografix.com/GPX/1/0',\n    'http://www.topografix.com/GPX/1/1'\n];\n/**\n * @const\n * @type {string}\n */\nvar SCHEMA_LOCATION = 'http://www.topografix.com/GPX/1/1 ' +\n    'http://www.topografix.com/GPX/1/1/gpx.xsd';\n/**\n * @const\n * @type {Object<string, function(Node, Array<*>): (Feature|undefined)>}\n */\nvar FEATURE_READER = {\n    'rte': readRte,\n    'trk': readTrk,\n    'wpt': readWpt\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar GPX_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'rte': makeArrayPusher(readRte),\n    'trk': makeArrayPusher(readTrk),\n    'wpt': makeArrayPusher(readWpt)\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar LINK_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'text': makeObjectPropertySetter(readString, 'linkText'),\n    'type': makeObjectPropertySetter(readString, 'linkType')\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nvar GPX_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n    'rte': makeChildAppender(writeRte),\n    'trk': makeChildAppender(writeTrk),\n    'wpt': makeChildAppender(writeWpt)\n});\n/**\n * @typedef {Object} Options\n * @property {function(Feature, Node)} [readExtensions] Callback function\n * to process `extensions` nodes. To prevent memory leaks, this callback function must\n * not store any references to the node. Note that the `extensions`\n * node is not allowed in GPX 1.0. Moreover, only `extensions`\n * nodes from `wpt`, `rte` and `trk` can be processed, as those are\n * directly mapped to a feature.\n */\n/**\n * @typedef {Object} LayoutOptions\n * @property {boolean} [hasZ]\n * @property {boolean} [hasM]\n */\n/**\n * @classdesc\n * Feature format for reading and writing data in the GPX format.\n *\n * Note that {@link module:ol/format/GPX~GPX#readFeature} only reads the first\n * feature of the source.\n *\n * When reading, routes (`<rte>`) are converted into LineString geometries, and\n * tracks (`<trk>`) into MultiLineString. Any properties on route and track\n * waypoints are ignored.\n *\n * When writing, LineString geometries are output as routes (`<rte>`), and\n * MultiLineString as tracks (`<trk>`).\n *\n * @api\n */\nvar GPX = /** @class */ (function (_super) {\n    __extends(GPX, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function GPX(opt_options) {\n        var _this = _super.call(this) || this;\n        var options = opt_options ? opt_options : {};\n        /**\n         * @inheritDoc\n         */\n        _this.dataProjection = getProjection('EPSG:4326');\n        /**\n         * @type {function(Feature, Node): void|undefined}\n         * @private\n         */\n        _this.readExtensions_ = options.readExtensions;\n        return _this;\n    }\n    /**\n     * @param {Array<Feature>} features List of features.\n     * @private\n     */\n    GPX.prototype.handleReadExtensions_ = function (features) {\n        if (!features) {\n            features = [];\n        }\n        for (var i = 0, ii = features.length; i < ii; ++i) {\n            var feature = features[i];\n            if (this.readExtensions_) {\n                var extensionsNode = feature.get('extensionsNode_') || null;\n                this.readExtensions_(feature, extensionsNode);\n            }\n            feature.set('extensionsNode_', undefined);\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    GPX.prototype.readFeatureFromNode = function (node, opt_options) {\n        if (!includes(NAMESPACE_URIS, node.namespaceURI)) {\n            return null;\n        }\n        var featureReader = FEATURE_READER[node.localName];\n        if (!featureReader) {\n            return null;\n        }\n        var feature = featureReader(node, [this.getReadOptions(node, opt_options)]);\n        if (!feature) {\n            return null;\n        }\n        this.handleReadExtensions_([feature]);\n        return feature;\n    };\n    /**\n     * @inheritDoc\n     */\n    GPX.prototype.readFeaturesFromNode = function (node, opt_options) {\n        if (!includes(NAMESPACE_URIS, node.namespaceURI)) {\n            return [];\n        }\n        if (node.localName == 'gpx') {\n            /** @type {Array<Feature>} */\n            var features = pushParseAndPop([], GPX_PARSERS, node, [this.getReadOptions(node, opt_options)]);\n            if (features) {\n                this.handleReadExtensions_(features);\n                return features;\n            }\n            else {\n                return [];\n            }\n        }\n        return [];\n    };\n    /**\n     * Encode an array of features in the GPX format as an XML node.\n     * LineString geometries are output as routes (`<rte>`), and MultiLineString\n     * as tracks (`<trk>`).\n     *\n     * @param {Array<Feature>} features Features.\n     * @param {import(\"./Feature.js\").WriteOptions=} opt_options Options.\n     * @return {Node} Node.\n     * @override\n     * @api\n     */\n    GPX.prototype.writeFeaturesNode = function (features, opt_options) {\n        opt_options = this.adaptOptions(opt_options);\n        //FIXME Serialize metadata\n        var gpx = createElementNS('http://www.topografix.com/GPX/1/1', 'gpx');\n        var xmlnsUri = 'http://www.w3.org/2000/xmlns/';\n        gpx.setAttributeNS(xmlnsUri, 'xmlns:xsi', XML_SCHEMA_INSTANCE_URI);\n        gpx.setAttributeNS(XML_SCHEMA_INSTANCE_URI, 'xsi:schemaLocation', SCHEMA_LOCATION);\n        gpx.setAttribute('version', '1.1');\n        gpx.setAttribute('creator', 'OpenLayers');\n        pushSerializeAndPop(/** @type {import(\"../xml.js\").NodeStackItem} */ ({ node: gpx }), GPX_SERIALIZERS, GPX_NODE_FACTORY, features, [opt_options]);\n        return gpx;\n    };\n    return GPX;\n}(XMLFeature));\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar RTE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'name': makeObjectPropertySetter(readString),\n    'cmt': makeObjectPropertySetter(readString),\n    'desc': makeObjectPropertySetter(readString),\n    'src': makeObjectPropertySetter(readString),\n    'link': parseLink,\n    'number': makeObjectPropertySetter(readNonNegativeInteger),\n    'extensions': parseExtensions,\n    'type': makeObjectPropertySetter(readString),\n    'rtept': parseRtePt\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar RTEPT_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'ele': makeObjectPropertySetter(readDecimal),\n    'time': makeObjectPropertySetter(readDateTime)\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar TRK_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'name': makeObjectPropertySetter(readString),\n    'cmt': makeObjectPropertySetter(readString),\n    'desc': makeObjectPropertySetter(readString),\n    'src': makeObjectPropertySetter(readString),\n    'link': parseLink,\n    'number': makeObjectPropertySetter(readNonNegativeInteger),\n    'type': makeObjectPropertySetter(readString),\n    'extensions': parseExtensions,\n    'trkseg': parseTrkSeg\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar TRKSEG_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'trkpt': parseTrkPt\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar TRKPT_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'ele': makeObjectPropertySetter(readDecimal),\n    'time': makeObjectPropertySetter(readDateTime)\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar WPT_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'ele': makeObjectPropertySetter(readDecimal),\n    'time': makeObjectPropertySetter(readDateTime),\n    'magvar': makeObjectPropertySetter(readDecimal),\n    'geoidheight': makeObjectPropertySetter(readDecimal),\n    'name': makeObjectPropertySetter(readString),\n    'cmt': makeObjectPropertySetter(readString),\n    'desc': makeObjectPropertySetter(readString),\n    'src': makeObjectPropertySetter(readString),\n    'link': parseLink,\n    'sym': makeObjectPropertySetter(readString),\n    'type': makeObjectPropertySetter(readString),\n    'fix': makeObjectPropertySetter(readString),\n    'sat': makeObjectPropertySetter(readNonNegativeInteger),\n    'hdop': makeObjectPropertySetter(readDecimal),\n    'vdop': makeObjectPropertySetter(readDecimal),\n    'pdop': makeObjectPropertySetter(readDecimal),\n    'ageofdgpsdata': makeObjectPropertySetter(readDecimal),\n    'dgpsid': makeObjectPropertySetter(readNonNegativeInteger),\n    'extensions': parseExtensions\n});\n/**\n * @const\n * @type {Array<string>}\n */\nvar LINK_SEQUENCE = ['text', 'type'];\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nvar LINK_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n    'text': makeChildAppender(writeStringTextNode),\n    'type': makeChildAppender(writeStringTextNode)\n});\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\nvar RTE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n    'name', 'cmt', 'desc', 'src', 'link', 'number', 'type', 'rtept'\n]);\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nvar RTE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n    'name': makeChildAppender(writeStringTextNode),\n    'cmt': makeChildAppender(writeStringTextNode),\n    'desc': makeChildAppender(writeStringTextNode),\n    'src': makeChildAppender(writeStringTextNode),\n    'link': makeChildAppender(writeLink),\n    'number': makeChildAppender(writeNonNegativeIntegerTextNode),\n    'type': makeChildAppender(writeStringTextNode),\n    'rtept': makeArraySerializer(makeChildAppender(writeWptType))\n});\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\nvar RTEPT_TYPE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n    'ele', 'time'\n]);\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\nvar TRK_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n    'name', 'cmt', 'desc', 'src', 'link', 'number', 'type', 'trkseg'\n]);\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nvar TRK_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n    'name': makeChildAppender(writeStringTextNode),\n    'cmt': makeChildAppender(writeStringTextNode),\n    'desc': makeChildAppender(writeStringTextNode),\n    'src': makeChildAppender(writeStringTextNode),\n    'link': makeChildAppender(writeLink),\n    'number': makeChildAppender(writeNonNegativeIntegerTextNode),\n    'type': makeChildAppender(writeStringTextNode),\n    'trkseg': makeArraySerializer(makeChildAppender(writeTrkSeg))\n});\n/**\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nvar TRKSEG_NODE_FACTORY = makeSimpleNodeFactory('trkpt');\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nvar TRKSEG_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n    'trkpt': makeChildAppender(writeWptType)\n});\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\nvar WPT_TYPE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n    'ele', 'time', 'magvar', 'geoidheight', 'name', 'cmt', 'desc', 'src',\n    'link', 'sym', 'type', 'fix', 'sat', 'hdop', 'vdop', 'pdop',\n    'ageofdgpsdata', 'dgpsid'\n]);\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nvar WPT_TYPE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n    'ele': makeChildAppender(writeDecimalTextNode),\n    'time': makeChildAppender(writeDateTimeTextNode),\n    'magvar': makeChildAppender(writeDecimalTextNode),\n    'geoidheight': makeChildAppender(writeDecimalTextNode),\n    'name': makeChildAppender(writeStringTextNode),\n    'cmt': makeChildAppender(writeStringTextNode),\n    'desc': makeChildAppender(writeStringTextNode),\n    'src': makeChildAppender(writeStringTextNode),\n    'link': makeChildAppender(writeLink),\n    'sym': makeChildAppender(writeStringTextNode),\n    'type': makeChildAppender(writeStringTextNode),\n    'fix': makeChildAppender(writeStringTextNode),\n    'sat': makeChildAppender(writeNonNegativeIntegerTextNode),\n    'hdop': makeChildAppender(writeDecimalTextNode),\n    'vdop': makeChildAppender(writeDecimalTextNode),\n    'pdop': makeChildAppender(writeDecimalTextNode),\n    'ageofdgpsdata': makeChildAppender(writeDecimalTextNode),\n    'dgpsid': makeChildAppender(writeNonNegativeIntegerTextNode)\n});\n/**\n * @const\n * @type {Object<string, string>}\n */\nvar GEOMETRY_TYPE_TO_NODENAME = {\n    'Point': 'wpt',\n    'LineString': 'rte',\n    'MultiLineString': 'trk'\n};\n/**\n * @param {*} value Value.\n * @param {Array<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n */\nfunction GPX_NODE_FACTORY(value, objectStack, opt_nodeName) {\n    var geometry = /** @type {Feature} */ (value).getGeometry();\n    if (geometry) {\n        var nodeName = GEOMETRY_TYPE_TO_NODENAME[geometry.getType()];\n        if (nodeName) {\n            var parentNode = objectStack[objectStack.length - 1].node;\n            return createElementNS(parentNode.namespaceURI, nodeName);\n        }\n    }\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {LayoutOptions} layoutOptions Layout options.\n * @param {Element} node Node.\n * @param {!Object} values Values.\n * @return {Array<number>} Flat coordinates.\n */\nfunction appendCoordinate(flatCoordinates, layoutOptions, node, values) {\n    flatCoordinates.push(parseFloat(node.getAttribute('lon')), parseFloat(node.getAttribute('lat')));\n    if ('ele' in values) {\n        flatCoordinates.push(/** @type {number} */ (values['ele']));\n        delete values['ele'];\n        layoutOptions.hasZ = true;\n    }\n    else {\n        flatCoordinates.push(0);\n    }\n    if ('time' in values) {\n        flatCoordinates.push(/** @type {number} */ (values['time']));\n        delete values['time'];\n        layoutOptions.hasM = true;\n    }\n    else {\n        flatCoordinates.push(0);\n    }\n    return flatCoordinates;\n}\n/**\n * Choose GeometryLayout based on flags in layoutOptions and adjust flatCoordinates\n * and ends arrays by shrinking them accordingly (removing unused zero entries).\n *\n * @param {LayoutOptions} layoutOptions Layout options.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {Array<number>=} ends Ends.\n * @return {GeometryLayout} Layout.\n */\nfunction applyLayoutOptions(layoutOptions, flatCoordinates, ends) {\n    var layout = GeometryLayout.XY;\n    var stride = 2;\n    if (layoutOptions.hasZ && layoutOptions.hasM) {\n        layout = GeometryLayout.XYZM;\n        stride = 4;\n    }\n    else if (layoutOptions.hasZ) {\n        layout = GeometryLayout.XYZ;\n        stride = 3;\n    }\n    else if (layoutOptions.hasM) {\n        layout = GeometryLayout.XYM;\n        stride = 3;\n    }\n    if (stride !== 4) {\n        for (var i = 0, ii = flatCoordinates.length / 4; i < ii; i++) {\n            flatCoordinates[i * stride] = flatCoordinates[i * 4];\n            flatCoordinates[i * stride + 1] = flatCoordinates[i * 4 + 1];\n            if (layoutOptions.hasZ) {\n                flatCoordinates[i * stride + 2] = flatCoordinates[i * 4 + 2];\n            }\n            if (layoutOptions.hasM) {\n                flatCoordinates[i * stride + 2] = flatCoordinates[i * 4 + 3];\n            }\n        }\n        flatCoordinates.length = flatCoordinates.length / 4 * stride;\n        if (ends) {\n            for (var i = 0, ii = ends.length; i < ii; i++) {\n                ends[i] = ends[i] / 4 * stride;\n            }\n        }\n    }\n    return layout;\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction parseLink(node, objectStack) {\n    var values = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n    var href = node.getAttribute('href');\n    if (href !== null) {\n        values['link'] = href;\n    }\n    parseNode(LINK_PARSERS, node, objectStack);\n}\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction parseExtensions(node, objectStack) {\n    var values = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n    values['extensionsNode_'] = node;\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction parseRtePt(node, objectStack) {\n    var values = pushParseAndPop({}, RTEPT_PARSERS, node, objectStack);\n    if (values) {\n        var rteValues = /** @type {!Object} */ (objectStack[objectStack.length - 1]);\n        var flatCoordinates = /** @type {Array<number>} */ (rteValues['flatCoordinates']);\n        var layoutOptions = /** @type {LayoutOptions} */ (rteValues['layoutOptions']);\n        appendCoordinate(flatCoordinates, layoutOptions, node, values);\n    }\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction parseTrkPt(node, objectStack) {\n    var values = pushParseAndPop({}, TRKPT_PARSERS, node, objectStack);\n    if (values) {\n        var trkValues = /** @type {!Object} */ (objectStack[objectStack.length - 1]);\n        var flatCoordinates = /** @type {Array<number>} */ (trkValues['flatCoordinates']);\n        var layoutOptions = /** @type {LayoutOptions} */ (trkValues['layoutOptions']);\n        appendCoordinate(flatCoordinates, layoutOptions, node, values);\n    }\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction parseTrkSeg(node, objectStack) {\n    var values = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n    parseNode(TRKSEG_PARSERS, node, objectStack);\n    var flatCoordinates = /** @type {Array<number>} */ (values['flatCoordinates']);\n    var ends = /** @type {Array<number>} */ (values['ends']);\n    ends.push(flatCoordinates.length);\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Feature|undefined} Track.\n */\nfunction readRte(node, objectStack) {\n    var options = /** @type {import(\"./Feature.js\").ReadOptions} */ (objectStack[0]);\n    var values = pushParseAndPop({\n        'flatCoordinates': [],\n        'layoutOptions': {}\n    }, RTE_PARSERS, node, objectStack);\n    if (!values) {\n        return undefined;\n    }\n    var flatCoordinates = /** @type {Array<number>} */ (values['flatCoordinates']);\n    delete values['flatCoordinates'];\n    var layoutOptions = /** @type {LayoutOptions} */ (values['layoutOptions']);\n    delete values['layoutOptions'];\n    var layout = applyLayoutOptions(layoutOptions, flatCoordinates);\n    var geometry = new LineString(flatCoordinates, layout);\n    transformGeometryWithOptions(geometry, false, options);\n    var feature = new Feature(geometry);\n    feature.setProperties(values, true);\n    return feature;\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Feature|undefined} Track.\n */\nfunction readTrk(node, objectStack) {\n    var options = /** @type {import(\"./Feature.js\").ReadOptions} */ (objectStack[0]);\n    var values = pushParseAndPop({\n        'flatCoordinates': [],\n        'ends': [],\n        'layoutOptions': {}\n    }, TRK_PARSERS, node, objectStack);\n    if (!values) {\n        return undefined;\n    }\n    var flatCoordinates = /** @type {Array<number>} */ (values['flatCoordinates']);\n    delete values['flatCoordinates'];\n    var ends = /** @type {Array<number>} */ (values['ends']);\n    delete values['ends'];\n    var layoutOptions = /** @type {LayoutOptions} */ (values['layoutOptions']);\n    delete values['layoutOptions'];\n    var layout = applyLayoutOptions(layoutOptions, flatCoordinates, ends);\n    var geometry = new MultiLineString(flatCoordinates, layout, ends);\n    transformGeometryWithOptions(geometry, false, options);\n    var feature = new Feature(geometry);\n    feature.setProperties(values, true);\n    return feature;\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Feature|undefined} Waypoint.\n */\nfunction readWpt(node, objectStack) {\n    var options = /** @type {import(\"./Feature.js\").ReadOptions} */ (objectStack[0]);\n    var values = pushParseAndPop({}, WPT_PARSERS, node, objectStack);\n    if (!values) {\n        return undefined;\n    }\n    var layoutOptions = /** @type {LayoutOptions} */ ({});\n    var coordinates = appendCoordinate([], layoutOptions, node, values);\n    var layout = applyLayoutOptions(layoutOptions, coordinates);\n    var geometry = new Point(coordinates, layout);\n    transformGeometryWithOptions(geometry, false, options);\n    var feature = new Feature(geometry);\n    feature.setProperties(values, true);\n    return feature;\n}\n/**\n * @param {Element} node Node.\n * @param {string} value Value for the link's `href` attribute.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeLink(node, value, objectStack) {\n    node.setAttribute('href', value);\n    var context = objectStack[objectStack.length - 1];\n    var properties = context['properties'];\n    var link = [\n        properties['linkText'],\n        properties['linkType']\n    ];\n    pushSerializeAndPop(/** @type {import(\"../xml.js\").NodeStackItem} */ ({ node: node }), LINK_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY, link, objectStack, LINK_SEQUENCE);\n}\n/**\n * @param {Element} node Node.\n * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeWptType(node, coordinate, objectStack) {\n    var context = objectStack[objectStack.length - 1];\n    var parentNode = context.node;\n    var namespaceURI = parentNode.namespaceURI;\n    var properties = context['properties'];\n    //FIXME Projection handling\n    node.setAttributeNS(null, 'lat', String(coordinate[1]));\n    node.setAttributeNS(null, 'lon', String(coordinate[0]));\n    var geometryLayout = context['geometryLayout'];\n    switch (geometryLayout) {\n        case GeometryLayout.XYZM:\n            if (coordinate[3] !== 0) {\n                properties['time'] = coordinate[3];\n            }\n        // fall through\n        case GeometryLayout.XYZ:\n            if (coordinate[2] !== 0) {\n                properties['ele'] = coordinate[2];\n            }\n            break;\n        case GeometryLayout.XYM:\n            if (coordinate[2] !== 0) {\n                properties['time'] = coordinate[2];\n            }\n            break;\n        default:\n        // pass\n    }\n    var orderedKeys = (node.nodeName == 'rtept') ?\n        RTEPT_TYPE_SEQUENCE[namespaceURI] :\n        WPT_TYPE_SEQUENCE[namespaceURI];\n    var values = makeSequence(properties, orderedKeys);\n    pushSerializeAndPop(/** @type {import(\"../xml.js\").NodeStackItem} */ ({ node: node, 'properties': properties }), WPT_TYPE_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n}\n/**\n * @param {Node} node Node.\n * @param {Feature} feature Feature.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeRte(node, feature, objectStack) {\n    var options = /** @type {import(\"./Feature.js\").WriteOptions} */ (objectStack[0]);\n    var properties = feature.getProperties();\n    var context = { node: node };\n    context['properties'] = properties;\n    var geometry = feature.getGeometry();\n    if (geometry.getType() == GeometryType.LINE_STRING) {\n        var lineString = /** @type {LineString} */ (transformGeometryWithOptions(geometry, true, options));\n        context['geometryLayout'] = lineString.getLayout();\n        properties['rtept'] = lineString.getCoordinates();\n    }\n    var parentNode = objectStack[objectStack.length - 1].node;\n    var orderedKeys = RTE_SEQUENCE[parentNode.namespaceURI];\n    var values = makeSequence(properties, orderedKeys);\n    pushSerializeAndPop(context, RTE_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n}\n/**\n * @param {Node} node Node.\n * @param {Feature} feature Feature.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeTrk(node, feature, objectStack) {\n    var options = /** @type {import(\"./Feature.js\").WriteOptions} */ (objectStack[0]);\n    var properties = feature.getProperties();\n    /** @type {import(\"../xml.js\").NodeStackItem} */\n    var context = { node: node };\n    context['properties'] = properties;\n    var geometry = feature.getGeometry();\n    if (geometry.getType() == GeometryType.MULTI_LINE_STRING) {\n        var multiLineString = /** @type {MultiLineString} */ (transformGeometryWithOptions(geometry, true, options));\n        properties['trkseg'] = multiLineString.getLineStrings();\n    }\n    var parentNode = objectStack[objectStack.length - 1].node;\n    var orderedKeys = TRK_SEQUENCE[parentNode.namespaceURI];\n    var values = makeSequence(properties, orderedKeys);\n    pushSerializeAndPop(context, TRK_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n}\n/**\n * @param {Node} node Node.\n * @param {LineString} lineString LineString.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeTrkSeg(node, lineString, objectStack) {\n    /** @type {import(\"../xml.js\").NodeStackItem} */\n    var context = { node: node };\n    context['geometryLayout'] = lineString.getLayout();\n    context['properties'] = {};\n    pushSerializeAndPop(context, TRKSEG_SERIALIZERS, TRKSEG_NODE_FACTORY, lineString.getCoordinates(), objectStack);\n}\n/**\n * @param {Element} node Node.\n * @param {Feature} feature Feature.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeWpt(node, feature, objectStack) {\n    var options = /** @type {import(\"./Feature.js\").WriteOptions} */ (objectStack[0]);\n    var context = objectStack[objectStack.length - 1];\n    context['properties'] = feature.getProperties();\n    var geometry = feature.getGeometry();\n    if (geometry.getType() == GeometryType.POINT) {\n        var point = /** @type {Point} */ (transformGeometryWithOptions(geometry, true, options));\n        context['geometryLayout'] = point.getLayout();\n        writeWptType(node, point.getCoordinates(), objectStack);\n    }\n}\nexport default GPX;\n//# sourceMappingURL=GPX.js.map","/**\n * @module ol/format/GeoJSON\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { assert } from '../asserts.js';\nimport Feature from '../Feature.js';\nimport { transformGeometryWithOptions } from './Feature.js';\nimport JSONFeature from './JSONFeature.js';\nimport GeometryCollection from '../geom/GeometryCollection.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport { assign, isEmpty } from '../obj.js';\nimport { get as getProjection } from '../proj.js';\nimport GeometryType from '../geom/GeometryType.js';\n/**\n * @typedef {import(\"geojson\").GeoJSON} GeoJSONObject\n * @typedef {import(\"geojson\").Feature} GeoJSONFeature\n * @typedef {import(\"geojson\").FeatureCollection} GeoJSONFeatureCollection\n * @typedef {import(\"geojson\").Geometry} GeoJSONGeometry\n * @typedef {import(\"geojson\").Point} GeoJSONPoint\n * @typedef {import(\"geojson\").LineString} GeoJSONLineString\n * @typedef {import(\"geojson\").Polygon} GeoJSONPolygon\n * @typedef {import(\"geojson\").MultiPoint} GeoJSONMultiPoint\n * @typedef {import(\"geojson\").MultiLineString} GeoJSONMultiLineString\n * @typedef {import(\"geojson\").MultiPolygon} GeoJSONMultiPolygon\n * @typedef {import(\"geojson\").GeometryCollection} GeoJSONGeometryCollection\n */\n/**\n * @typedef {Object} Options\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection='EPSG:4326'] Default data projection.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection for features read or\n * written by the format.  Options passed to read or write methods will take precedence.\n * @property {string} [geometryName] Geometry name to use when creating features.\n * @property {boolean} [extractGeometryName=false] Certain GeoJSON providers include\n * the geometry_name field in the feature GeoJSON. If set to `true` the GeoJSON reader\n * will look for that field to set the geometry name. If both this field is set to `true`\n * and a `geometryName` is provided, the `geometryName` will take precedence.\n */\n/**\n * @classdesc\n * Feature format for reading and writing data in the GeoJSON format.\n *\n  * @api\n */\nvar GeoJSON = /** @class */ (function (_super) {\n    __extends(GeoJSON, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function GeoJSON(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this) || this;\n        /**\n         * @inheritDoc\n         */\n        _this.dataProjection = getProjection(options.dataProjection ?\n            options.dataProjection : 'EPSG:4326');\n        if (options.featureProjection) {\n            _this.defaultFeatureProjection = getProjection(options.featureProjection);\n        }\n        /**\n         * Name of the geometry attribute for features.\n         * @type {string|undefined}\n         * @private\n         */\n        _this.geometryName_ = options.geometryName;\n        /**\n         * Look for the geometry name in the feature GeoJSON\n         * @type {boolean|undefined}\n         * @private\n         */\n        _this.extractGeometryName_ = options.extractGeometryName;\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    GeoJSON.prototype.readFeatureFromObject = function (object, opt_options) {\n        /**\n         * @type {GeoJSONFeature}\n         */\n        var geoJSONFeature = null;\n        if (object['type'] === 'Feature') {\n            geoJSONFeature = /** @type {GeoJSONFeature} */ (object);\n        }\n        else {\n            geoJSONFeature = {\n                'type': 'Feature',\n                'geometry': /** @type {GeoJSONGeometry} */ (object),\n                'properties': null\n            };\n        }\n        var geometry = readGeometry(geoJSONFeature['geometry'], opt_options);\n        var feature = new Feature();\n        if (this.geometryName_) {\n            feature.setGeometryName(this.geometryName_);\n        }\n        else if (this.extractGeometryName_ && 'geometry_name' in geoJSONFeature !== undefined) {\n            feature.setGeometryName(geoJSONFeature['geometry_name']);\n        }\n        feature.setGeometry(geometry);\n        if ('id' in geoJSONFeature) {\n            feature.setId(geoJSONFeature['id']);\n        }\n        if (geoJSONFeature['properties']) {\n            feature.setProperties(geoJSONFeature['properties'], true);\n        }\n        return feature;\n    };\n    /**\n     * @inheritDoc\n     */\n    GeoJSON.prototype.readFeaturesFromObject = function (object, opt_options) {\n        var geoJSONObject = /** @type {GeoJSONObject} */ (object);\n        /** @type {Array<import(\"../Feature.js\").default>} */\n        var features = null;\n        if (geoJSONObject['type'] === 'FeatureCollection') {\n            var geoJSONFeatureCollection = /** @type {GeoJSONFeatureCollection} */ (object);\n            features = [];\n            var geoJSONFeatures = geoJSONFeatureCollection['features'];\n            for (var i = 0, ii = geoJSONFeatures.length; i < ii; ++i) {\n                features.push(this.readFeatureFromObject(geoJSONFeatures[i], opt_options));\n            }\n        }\n        else {\n            features = [this.readFeatureFromObject(object, opt_options)];\n        }\n        return features;\n    };\n    /**\n     * @inheritDoc\n     */\n    GeoJSON.prototype.readGeometryFromObject = function (object, opt_options) {\n        return readGeometry(/** @type {GeoJSONGeometry} */ (object), opt_options);\n    };\n    /**\n     * @inheritDoc\n     */\n    GeoJSON.prototype.readProjectionFromObject = function (object) {\n        var crs = object['crs'];\n        var projection;\n        if (crs) {\n            if (crs['type'] == 'name') {\n                projection = getProjection(crs['properties']['name']);\n            }\n            else {\n                assert(false, 36); // Unknown SRS type\n            }\n        }\n        else {\n            projection = this.dataProjection;\n        }\n        return (\n        /** @type {import(\"../proj/Projection.js\").default} */ (projection));\n    };\n    /**\n     * Encode a feature as a GeoJSON Feature object.\n     *\n     * @param {import(\"../Feature.js\").default} feature Feature.\n     * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n     * @return {GeoJSONFeature} Object.\n     * @override\n     * @api\n     */\n    GeoJSON.prototype.writeFeatureObject = function (feature, opt_options) {\n        opt_options = this.adaptOptions(opt_options);\n        /** @type {GeoJSONFeature} */\n        var object = {\n            'type': 'Feature',\n            geometry: null,\n            properties: null\n        };\n        var id = feature.getId();\n        if (id !== undefined) {\n            object.id = id;\n        }\n        var geometry = feature.getGeometry();\n        if (geometry) {\n            object.geometry = writeGeometry(geometry, opt_options);\n        }\n        var properties = feature.getProperties();\n        delete properties[feature.getGeometryName()];\n        if (!isEmpty(properties)) {\n            object.properties = properties;\n        }\n        return object;\n    };\n    /**\n     * Encode an array of features as a GeoJSON object.\n     *\n     * @param {Array<import(\"../Feature.js\").default>} features Features.\n     * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n     * @return {GeoJSONFeatureCollection} GeoJSON Object.\n     * @override\n     * @api\n     */\n    GeoJSON.prototype.writeFeaturesObject = function (features, opt_options) {\n        opt_options = this.adaptOptions(opt_options);\n        var objects = [];\n        for (var i = 0, ii = features.length; i < ii; ++i) {\n            objects.push(this.writeFeatureObject(features[i], opt_options));\n        }\n        return {\n            type: 'FeatureCollection',\n            features: objects\n        };\n    };\n    /**\n     * Encode a geometry as a GeoJSON object.\n     *\n     * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n     * @return {GeoJSONGeometry|GeoJSONGeometryCollection} Object.\n     * @override\n     * @api\n     */\n    GeoJSON.prototype.writeGeometryObject = function (geometry, opt_options) {\n        return writeGeometry(geometry, this.adaptOptions(opt_options));\n    };\n    return GeoJSON;\n}(JSONFeature));\n/**\n * @param {GeoJSONGeometry|GeoJSONGeometryCollection} object Object.\n * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n * @return {import(\"../geom/Geometry.js\").default} Geometry.\n */\nfunction readGeometry(object, opt_options) {\n    if (!object) {\n        return null;\n    }\n    /**\n     * @type {import(\"../geom/Geometry.js\").default}\n     */\n    var geometry;\n    switch (object['type']) {\n        case GeometryType.POINT: {\n            geometry = readPointGeometry(/** @type {GeoJSONPoint} */ (object));\n            break;\n        }\n        case GeometryType.LINE_STRING: {\n            geometry = readLineStringGeometry(/** @type {GeoJSONLineString} */ (object));\n            break;\n        }\n        case GeometryType.POLYGON: {\n            geometry = readPolygonGeometry(/** @type {GeoJSONPolygon} */ (object));\n            break;\n        }\n        case GeometryType.MULTI_POINT: {\n            geometry = readMultiPointGeometry(/** @type {GeoJSONMultiPoint} */ (object));\n            break;\n        }\n        case GeometryType.MULTI_LINE_STRING: {\n            geometry = readMultiLineStringGeometry(/** @type {GeoJSONMultiLineString} */ (object));\n            break;\n        }\n        case GeometryType.MULTI_POLYGON: {\n            geometry = readMultiPolygonGeometry(/** @type {GeoJSONMultiPolygon} */ (object));\n            break;\n        }\n        case GeometryType.GEOMETRY_COLLECTION: {\n            geometry = readGeometryCollectionGeometry(/** @type {GeoJSONGeometryCollection} */ (object));\n            break;\n        }\n        default: {\n            throw new Error('Unsupported GeoJSON type: ' + object.type);\n        }\n    }\n    return transformGeometryWithOptions(geometry, false, opt_options);\n}\n/**\n * @param {GeoJSONGeometryCollection} object Object.\n * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n * @return {GeometryCollection} Geometry collection.\n */\nfunction readGeometryCollectionGeometry(object, opt_options) {\n    var geometries = object['geometries'].map(\n    /**\n     * @param {GeoJSONGeometry} geometry Geometry.\n     * @return {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     */\n    function (geometry) {\n        return readGeometry(geometry, opt_options);\n    });\n    return new GeometryCollection(geometries);\n}\n/**\n * @param {GeoJSONPoint} object Object.\n * @return {Point} Point.\n */\nfunction readPointGeometry(object) {\n    return new Point(object['coordinates']);\n}\n/**\n * @param {GeoJSONLineString} object Object.\n * @return {LineString} LineString.\n */\nfunction readLineStringGeometry(object) {\n    return new LineString(object['coordinates']);\n}\n/**\n * @param {GeoJSONMultiLineString} object Object.\n * @return {MultiLineString} MultiLineString.\n */\nfunction readMultiLineStringGeometry(object) {\n    return new MultiLineString(object['coordinates']);\n}\n/**\n * @param {GeoJSONMultiPoint} object Object.\n * @return {MultiPoint} MultiPoint.\n */\nfunction readMultiPointGeometry(object) {\n    return new MultiPoint(object['coordinates']);\n}\n/**\n * @param {GeoJSONMultiPolygon} object Object.\n * @return {MultiPolygon} MultiPolygon.\n */\nfunction readMultiPolygonGeometry(object) {\n    return new MultiPolygon(object['coordinates']);\n}\n/**\n * @param {GeoJSONPolygon} object Object.\n * @return {Polygon} Polygon.\n */\nfunction readPolygonGeometry(object) {\n    return new Polygon(object['coordinates']);\n}\n/**\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeGeometry(geometry, opt_options) {\n    geometry = transformGeometryWithOptions(geometry, true, opt_options);\n    var type = geometry.getType();\n    /** @type {GeoJSONGeometry} */\n    var geoJSON;\n    switch (type) {\n        case GeometryType.POINT: {\n            geoJSON = writePointGeometry(/** @type {Point} */ (geometry), opt_options);\n            break;\n        }\n        case GeometryType.LINE_STRING: {\n            geoJSON = writeLineStringGeometry(/** @type {LineString} */ (geometry), opt_options);\n            break;\n        }\n        case GeometryType.POLYGON: {\n            geoJSON = writePolygonGeometry(/** @type {Polygon} */ (geometry), opt_options);\n            break;\n        }\n        case GeometryType.MULTI_POINT: {\n            geoJSON = writeMultiPointGeometry(/** @type {MultiPoint} */ (geometry), opt_options);\n            break;\n        }\n        case GeometryType.MULTI_LINE_STRING: {\n            geoJSON = writeMultiLineStringGeometry(/** @type {MultiLineString} */ (geometry), opt_options);\n            break;\n        }\n        case GeometryType.MULTI_POLYGON: {\n            geoJSON = writeMultiPolygonGeometry(/** @type {MultiPolygon} */ (geometry), opt_options);\n            break;\n        }\n        case GeometryType.GEOMETRY_COLLECTION: {\n            geoJSON = writeGeometryCollectionGeometry(/** @type {GeometryCollection} */ (geometry), opt_options);\n            break;\n        }\n        case GeometryType.CIRCLE: {\n            geoJSON = {\n                type: 'GeometryCollection',\n                geometries: []\n            };\n            break;\n        }\n        default: {\n            throw new Error('Unsupported geometry type: ' + type);\n        }\n    }\n    return geoJSON;\n}\n/**\n * @param {GeometryCollection} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometryCollection} GeoJSON geometry collection.\n */\nfunction writeGeometryCollectionGeometry(geometry, opt_options) {\n    var geometries = geometry.getGeometriesArray().map(function (geometry) {\n        var options = assign({}, opt_options);\n        delete options.featureProjection;\n        return writeGeometry(geometry, options);\n    });\n    return {\n        type: 'GeometryCollection',\n        geometries: geometries\n    };\n}\n/**\n * @param {LineString} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeLineStringGeometry(geometry, opt_options) {\n    return {\n        type: 'LineString',\n        coordinates: geometry.getCoordinates()\n    };\n}\n/**\n * @param {MultiLineString} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiLineStringGeometry(geometry, opt_options) {\n    return {\n        type: 'MultiLineString',\n        coordinates: geometry.getCoordinates()\n    };\n}\n/**\n * @param {MultiPoint} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiPointGeometry(geometry, opt_options) {\n    return {\n        type: 'MultiPoint',\n        coordinates: geometry.getCoordinates()\n    };\n}\n/**\n * @param {MultiPolygon} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiPolygonGeometry(geometry, opt_options) {\n    var right;\n    if (opt_options) {\n        right = opt_options.rightHanded;\n    }\n    return {\n        type: 'MultiPolygon',\n        coordinates: geometry.getCoordinates(right)\n    };\n}\n/**\n * @param {Point} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writePointGeometry(geometry, opt_options) {\n    return {\n        type: 'Point',\n        coordinates: geometry.getCoordinates()\n    };\n}\n/**\n * @param {Polygon} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writePolygonGeometry(geometry, opt_options) {\n    var right;\n    if (opt_options) {\n        right = opt_options.rightHanded;\n    }\n    return {\n        type: 'Polygon',\n        coordinates: geometry.getCoordinates(right)\n    };\n}\nexport default GeoJSON;\n//# sourceMappingURL=GeoJSON.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/format/TextFeature\n */\nimport { abstract } from '../util.js';\nimport FeatureFormat from '../format/Feature.js';\nimport FormatType from '../format/FormatType.js';\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for text feature formats.\n *\n * @abstract\n */\nvar TextFeature = /** @class */ (function (_super) {\n    __extends(TextFeature, _super);\n    function TextFeature() {\n        return _super.call(this) || this;\n    }\n    /**\n     * @inheritDoc\n     */\n    TextFeature.prototype.getType = function () {\n        return FormatType.TEXT;\n    };\n    /**\n     * Read the feature from the source.\n     *\n     * @param {Document|Node|Object|string} source Source.\n     * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n     * @return {import(\"../Feature.js\").default} Feature.\n     * @api\n     */\n    TextFeature.prototype.readFeature = function (source, opt_options) {\n        return this.readFeatureFromText(getText(source), this.adaptOptions(opt_options));\n    };\n    /**\n     * @abstract\n     * @param {string} text Text.\n     * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n     * @protected\n     * @return {import(\"../Feature.js\").default} Feature.\n     */\n    TextFeature.prototype.readFeatureFromText = function (text, opt_options) {\n        return abstract();\n    };\n    /**\n     * Read the features from the source.\n     *\n     * @param {Document|Node|Object|string} source Source.\n     * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n     * @return {Array<import(\"../Feature.js\").default>} Features.\n     * @api\n     */\n    TextFeature.prototype.readFeatures = function (source, opt_options) {\n        return this.readFeaturesFromText(getText(source), this.adaptOptions(opt_options));\n    };\n    /**\n     * @abstract\n     * @param {string} text Text.\n     * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n     * @protected\n     * @return {Array<import(\"../Feature.js\").default>} Features.\n     */\n    TextFeature.prototype.readFeaturesFromText = function (text, opt_options) {\n        return abstract();\n    };\n    /**\n     * Read the geometry from the source.\n     *\n     * @param {Document|Node|Object|string} source Source.\n     * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n     * @return {import(\"../geom/Geometry.js\").default} Geometry.\n     * @api\n     */\n    TextFeature.prototype.readGeometry = function (source, opt_options) {\n        return this.readGeometryFromText(getText(source), this.adaptOptions(opt_options));\n    };\n    /**\n     * @abstract\n     * @param {string} text Text.\n     * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n     * @protected\n     * @return {import(\"../geom/Geometry.js\").default} Geometry.\n     */\n    TextFeature.prototype.readGeometryFromText = function (text, opt_options) {\n        return abstract();\n    };\n    /**\n     * Read the projection from the source.\n     *\n     * @param {Document|Node|Object|string} source Source.\n     * @return {import(\"../proj/Projection.js\").default} Projection.\n     * @api\n     */\n    TextFeature.prototype.readProjection = function (source) {\n        return this.readProjectionFromText(getText(source));\n    };\n    /**\n     * @param {string} text Text.\n     * @protected\n     * @return {import(\"../proj/Projection.js\").default} Projection.\n     */\n    TextFeature.prototype.readProjectionFromText = function (text) {\n        return this.dataProjection;\n    };\n    /**\n     * Encode a feature as a string.\n     *\n     * @param {import(\"../Feature.js\").default} feature Feature.\n     * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n     * @return {string} Encoded feature.\n     * @api\n     */\n    TextFeature.prototype.writeFeature = function (feature, opt_options) {\n        return this.writeFeatureText(feature, this.adaptOptions(opt_options));\n    };\n    /**\n     * @abstract\n     * @param {import(\"../Feature.js\").default} feature Features.\n     * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n     * @protected\n     * @return {string} Text.\n     */\n    TextFeature.prototype.writeFeatureText = function (feature, opt_options) {\n        return abstract();\n    };\n    /**\n     * Encode an array of features as string.\n     *\n     * @param {Array<import(\"../Feature.js\").default>} features Features.\n     * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n     * @return {string} Encoded features.\n     * @api\n     */\n    TextFeature.prototype.writeFeatures = function (features, opt_options) {\n        return this.writeFeaturesText(features, this.adaptOptions(opt_options));\n    };\n    /**\n     * @abstract\n     * @param {Array<import(\"../Feature.js\").default>} features Features.\n     * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n     * @protected\n     * @return {string} Text.\n     */\n    TextFeature.prototype.writeFeaturesText = function (features, opt_options) {\n        return abstract();\n    };\n    /**\n     * Write a single geometry.\n     *\n     * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n     * @return {string} Geometry.\n     * @api\n     */\n    TextFeature.prototype.writeGeometry = function (geometry, opt_options) {\n        return this.writeGeometryText(geometry, this.adaptOptions(opt_options));\n    };\n    /**\n     * @abstract\n     * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n     * @protected\n     * @return {string} Text.\n     */\n    TextFeature.prototype.writeGeometryText = function (geometry, opt_options) {\n        return abstract();\n    };\n    return TextFeature;\n}(FeatureFormat));\n/**\n * @param {Document|Node|Object|string} source Source.\n * @return {string} Text.\n */\nfunction getText(source) {\n    if (typeof source === 'string') {\n        return source;\n    }\n    else {\n        return '';\n    }\n}\nexport default TextFeature;\n//# sourceMappingURL=TextFeature.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/format/KML\n */\nimport Feature from '../Feature.js';\nimport { extend, includes } from '../array.js';\nimport { assert } from '../asserts.js';\nimport { asArray } from '../color.js';\nimport { transformGeometryWithOptions } from './Feature.js';\nimport XMLFeature from './XMLFeature.js';\nimport { readDecimal, readBoolean, readString, writeStringTextNode, writeCDATASection, writeDecimalTextNode, writeBooleanTextNode } from './xsd.js';\nimport GeometryCollection from '../geom/GeometryCollection.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport { toRadians } from '../math.js';\nimport { get as getProjection } from '../proj.js';\nimport Fill from '../style/Fill.js';\nimport Icon from '../style/Icon.js';\nimport IconAnchorUnits from '../style/IconAnchorUnits.js';\nimport IconOrigin from '../style/IconOrigin.js';\nimport Stroke from '../style/Stroke.js';\nimport Style from '../style/Style.js';\nimport Text from '../style/Text.js';\nimport { createElementNS, getAllTextContent, isDocument, makeArrayExtender, makeArrayPusher, makeChildAppender, makeObjectPropertySetter, makeReplacer, makeSequence, makeSimpleNodeFactory, makeStructureNS, OBJECT_PROPERTY_NODE_FACTORY, parse, parseNode, pushParseAndPop, pushSerializeAndPop, XML_SCHEMA_INSTANCE_URI } from '../xml.js';\n/**\n * @typedef {Object} Vec2\n * @property {number} x\n * @property {IconAnchorUnits} xunits\n * @property {number} y\n * @property {IconAnchorUnits} yunits\n * @property {IconOrigin} origin\n */\n/**\n * @typedef {Object} GxTrackObject\n * @property {Array<number>} flatCoordinates\n * @property {Array<number>} whens\n */\n/**\n * @const\n * @type {Array<string>}\n */\nvar GX_NAMESPACE_URIS = [\n    'http://www.google.com/kml/ext/2.2'\n];\n/**\n * @const\n * @type {Array<null|string>}\n */\nvar NAMESPACE_URIS = [\n    null,\n    'http://earth.google.com/kml/2.0',\n    'http://earth.google.com/kml/2.1',\n    'http://earth.google.com/kml/2.2',\n    'http://www.opengis.net/kml/2.2'\n];\n/**\n * @const\n * @type {string}\n */\nvar SCHEMA_LOCATION = 'http://www.opengis.net/kml/2.2 ' +\n    'https://developers.google.com/kml/schema/kml22gx.xsd';\n/**\n * @type {Object<string, IconAnchorUnits>}\n */\nvar ICON_ANCHOR_UNITS_MAP = {\n    'fraction': IconAnchorUnits.FRACTION,\n    'pixels': IconAnchorUnits.PIXELS,\n    'insetPixels': IconAnchorUnits.PIXELS\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar PLACEMARK_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'ExtendedData': extendedDataParser,\n    'Region': regionParser,\n    'MultiGeometry': makeObjectPropertySetter(readMultiGeometry, 'geometry'),\n    'LineString': makeObjectPropertySetter(readLineString, 'geometry'),\n    'LinearRing': makeObjectPropertySetter(readLinearRing, 'geometry'),\n    'Point': makeObjectPropertySetter(readPoint, 'geometry'),\n    'Polygon': makeObjectPropertySetter(readPolygon, 'geometry'),\n    'Style': makeObjectPropertySetter(readStyle),\n    'StyleMap': placemarkStyleMapParser,\n    'address': makeObjectPropertySetter(readString),\n    'description': makeObjectPropertySetter(readString),\n    'name': makeObjectPropertySetter(readString),\n    'open': makeObjectPropertySetter(readBoolean),\n    'phoneNumber': makeObjectPropertySetter(readString),\n    'styleUrl': makeObjectPropertySetter(readURI),\n    'visibility': makeObjectPropertySetter(readBoolean)\n}, makeStructureNS(GX_NAMESPACE_URIS, {\n    'MultiTrack': makeObjectPropertySetter(readGxMultiTrack, 'geometry'),\n    'Track': makeObjectPropertySetter(readGxTrack, 'geometry')\n}));\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar NETWORK_LINK_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'ExtendedData': extendedDataParser,\n    'Region': regionParser,\n    'Link': linkParser,\n    'address': makeObjectPropertySetter(readString),\n    'description': makeObjectPropertySetter(readString),\n    'name': makeObjectPropertySetter(readString),\n    'open': makeObjectPropertySetter(readBoolean),\n    'phoneNumber': makeObjectPropertySetter(readString),\n    'visibility': makeObjectPropertySetter(readBoolean)\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar LINK_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'href': makeObjectPropertySetter(readURI)\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar REGION_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'LatLonAltBox': latLonAltBoxParser,\n    'Lod': lodParser\n});\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\nvar KML_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n    'Document', 'Placemark'\n]);\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nvar KML_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n    'Document': makeChildAppender(writeDocument),\n    'Placemark': makeChildAppender(writePlacemark)\n});\n/**\n * @type {import(\"../color.js\").Color}\n */\nvar DEFAULT_COLOR;\n/**\n * @type {Fill}\n */\nvar DEFAULT_FILL_STYLE = null;\n/**\n * Get the default fill style (or null if not yet set).\n * @return {Fill} The default fill style.\n */\nexport function getDefaultFillStyle() {\n    return DEFAULT_FILL_STYLE;\n}\n/**\n * @type {import(\"../size.js\").Size}\n */\nvar DEFAULT_IMAGE_STYLE_ANCHOR;\n/**\n * @type {IconAnchorUnits}\n */\nvar DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS;\n/**\n * @type {IconAnchorUnits}\n */\nvar DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS;\n/**\n * @type {import(\"../size.js\").Size}\n */\nvar DEFAULT_IMAGE_STYLE_SIZE;\n/**\n * @type {string}\n */\nvar DEFAULT_IMAGE_STYLE_SRC;\n/**\n * @type {number}\n */\nvar DEFAULT_IMAGE_SCALE_MULTIPLIER;\n/**\n * @type {import(\"../style/Image.js\").default}\n */\nvar DEFAULT_IMAGE_STYLE = null;\n/**\n * Get the default image style (or null if not yet set).\n * @return {import(\"../style/Image.js\").default} The default image style.\n */\nexport function getDefaultImageStyle() {\n    return DEFAULT_IMAGE_STYLE;\n}\n/**\n * @type {string}\n */\nvar DEFAULT_NO_IMAGE_STYLE;\n/**\n * @type {Stroke}\n */\nvar DEFAULT_STROKE_STYLE = null;\n/**\n * Get the default stroke style (or null if not yet set).\n * @return {Stroke} The default stroke style.\n */\nexport function getDefaultStrokeStyle() {\n    return DEFAULT_STROKE_STYLE;\n}\n/**\n * @type {Stroke}\n */\nvar DEFAULT_TEXT_STROKE_STYLE;\n/**\n * @type {Text}\n */\nvar DEFAULT_TEXT_STYLE = null;\n/**\n * Get the default text style (or null if not yet set).\n * @return {Text} The default text style.\n */\nexport function getDefaultTextStyle() {\n    return DEFAULT_TEXT_STYLE;\n}\n/**\n * @type {Style}\n */\nvar DEFAULT_STYLE = null;\n/**\n * Get the default style (or null if not yet set).\n * @return {Style} The default style.\n */\nexport function getDefaultStyle() {\n    return DEFAULT_STYLE;\n}\n/**\n * @type {Array<Style>}\n */\nvar DEFAULT_STYLE_ARRAY = null;\n/**\n * Get the default style array (or null if not yet set).\n * @return {Array<Style>} The default style.\n */\nexport function getDefaultStyleArray() {\n    return DEFAULT_STYLE_ARRAY;\n}\nfunction createStyleDefaults() {\n    DEFAULT_COLOR = [255, 255, 255, 1];\n    DEFAULT_FILL_STYLE = new Fill({\n        color: DEFAULT_COLOR\n    });\n    DEFAULT_IMAGE_STYLE_ANCHOR = [20, 2]; // FIXME maybe [8, 32] ?\n    DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS = IconAnchorUnits.PIXELS;\n    DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS = IconAnchorUnits.PIXELS;\n    DEFAULT_IMAGE_STYLE_SIZE = [64, 64];\n    DEFAULT_IMAGE_STYLE_SRC =\n        'https://maps.google.com/mapfiles/kml/pushpin/ylw-pushpin.png';\n    DEFAULT_IMAGE_SCALE_MULTIPLIER = 0.5;\n    DEFAULT_IMAGE_STYLE = new Icon({\n        anchor: DEFAULT_IMAGE_STYLE_ANCHOR,\n        anchorOrigin: IconOrigin.BOTTOM_LEFT,\n        anchorXUnits: DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS,\n        anchorYUnits: DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS,\n        crossOrigin: 'anonymous',\n        rotation: 0,\n        scale: DEFAULT_IMAGE_SCALE_MULTIPLIER,\n        size: DEFAULT_IMAGE_STYLE_SIZE,\n        src: DEFAULT_IMAGE_STYLE_SRC\n    });\n    DEFAULT_NO_IMAGE_STYLE = 'NO_IMAGE';\n    DEFAULT_STROKE_STYLE = new Stroke({\n        color: DEFAULT_COLOR,\n        width: 1\n    });\n    DEFAULT_TEXT_STROKE_STYLE = new Stroke({\n        color: [51, 51, 51, 1],\n        width: 2\n    });\n    DEFAULT_TEXT_STYLE = new Text({\n        font: 'bold 16px Helvetica',\n        fill: DEFAULT_FILL_STYLE,\n        stroke: DEFAULT_TEXT_STROKE_STYLE,\n        scale: 0.8\n    });\n    DEFAULT_STYLE = new Style({\n        fill: DEFAULT_FILL_STYLE,\n        image: DEFAULT_IMAGE_STYLE,\n        text: DEFAULT_TEXT_STYLE,\n        stroke: DEFAULT_STROKE_STYLE,\n        zIndex: 0\n    });\n    DEFAULT_STYLE_ARRAY = [DEFAULT_STYLE];\n}\n/**\n * @typedef {Object} Options\n * @property {boolean} [extractStyles=true] Extract styles from the KML.\n * @property {boolean} [showPointNames=true] Show names as labels for placemarks which contain points.\n * @property {Array<Style>} [defaultStyle] Default style. The\n * default default style is the same as Google Earth.\n * @property {boolean} [writeStyles=true] Write styles into KML.\n */\n/**\n * @classdesc\n * Feature format for reading and writing data in the KML format.\n *\n * {@link module:ol/format/KML~KML#readFeature} will read the first feature from\n * a KML source.\n *\n * MultiGeometries are converted into GeometryCollections if they are a mix of\n * geometry types, and into MultiPoint/MultiLineString/MultiPolygon if they are\n * all of the same type.\n *\n * Note that the KML format uses the URL() constructor. Older browsers such as IE\n * which do not support this will need a URL polyfill to be loaded before use.\n *\n * @api\n */\nvar KML = /** @class */ (function (_super) {\n    __extends(KML, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function KML(opt_options) {\n        var _this = _super.call(this) || this;\n        var options = opt_options ? opt_options : {};\n        if (!DEFAULT_STYLE_ARRAY) {\n            createStyleDefaults();\n        }\n        /**\n         * @inheritDoc\n         */\n        _this.dataProjection = getProjection('EPSG:4326');\n        /**\n         * @private\n         * @type {Array<Style>}\n         */\n        _this.defaultStyle_ = options.defaultStyle ?\n            options.defaultStyle : DEFAULT_STYLE_ARRAY;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.extractStyles_ = options.extractStyles !== undefined ?\n            options.extractStyles : true;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.writeStyles_ = options.writeStyles !== undefined ?\n            options.writeStyles : true;\n        /**\n         * @private\n         * @type {!Object<string, (Array<Style>|string)>}\n         */\n        _this.sharedStyles_ = {};\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.showPointNames_ = options.showPointNames !== undefined ?\n            options.showPointNames : true;\n        return _this;\n    }\n    /**\n     * @param {Node} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     * @private\n     * @return {Array<Feature>|undefined} Features.\n     */\n    KML.prototype.readDocumentOrFolder_ = function (node, objectStack) {\n        // FIXME use scope somehow\n        var parsersNS = makeStructureNS(NAMESPACE_URIS, {\n            'Document': makeArrayExtender(this.readDocumentOrFolder_, this),\n            'Folder': makeArrayExtender(this.readDocumentOrFolder_, this),\n            'Placemark': makeArrayPusher(this.readPlacemark_, this),\n            'Style': this.readSharedStyle_.bind(this),\n            'StyleMap': this.readSharedStyleMap_.bind(this)\n        });\n        /** @type {Array<Feature>} */\n        var features = pushParseAndPop([], parsersNS, node, objectStack, this);\n        if (features) {\n            return features;\n        }\n        else {\n            return undefined;\n        }\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     * @private\n     * @return {Feature|undefined} Feature.\n     */\n    KML.prototype.readPlacemark_ = function (node, objectStack) {\n        var object = pushParseAndPop({ 'geometry': null }, PLACEMARK_PARSERS, node, objectStack);\n        if (!object) {\n            return undefined;\n        }\n        var feature = new Feature();\n        var id = node.getAttribute('id');\n        if (id !== null) {\n            feature.setId(id);\n        }\n        var options = /** @type {import(\"./Feature.js\").ReadOptions} */ (objectStack[0]);\n        var geometry = object['geometry'];\n        if (geometry) {\n            transformGeometryWithOptions(geometry, false, options);\n        }\n        feature.setGeometry(geometry);\n        delete object['geometry'];\n        if (this.extractStyles_) {\n            var style = object['Style'];\n            var styleUrl = object['styleUrl'];\n            var styleFunction = createFeatureStyleFunction(style, styleUrl, this.defaultStyle_, this.sharedStyles_, this.showPointNames_);\n            feature.setStyle(styleFunction);\n        }\n        delete object['Style'];\n        // we do not remove the styleUrl property from the object, so it\n        // gets stored on feature when setProperties is called\n        feature.setProperties(object, true);\n        return feature;\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     * @private\n     */\n    KML.prototype.readSharedStyle_ = function (node, objectStack) {\n        var id = node.getAttribute('id');\n        if (id !== null) {\n            var style = readStyle(node, objectStack);\n            if (style) {\n                var styleUri = void 0;\n                var baseURI = node.baseURI;\n                if (!baseURI || baseURI == 'about:blank') {\n                    baseURI = window.location.href;\n                }\n                if (baseURI) {\n                    var url = new URL('#' + id, baseURI);\n                    styleUri = url.href;\n                }\n                else {\n                    styleUri = '#' + id;\n                }\n                this.sharedStyles_[styleUri] = style;\n            }\n        }\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     * @private\n     */\n    KML.prototype.readSharedStyleMap_ = function (node, objectStack) {\n        var id = node.getAttribute('id');\n        if (id === null) {\n            return;\n        }\n        var styleMapValue = readStyleMapValue(node, objectStack);\n        if (!styleMapValue) {\n            return;\n        }\n        var styleUri;\n        var baseURI = node.baseURI;\n        if (!baseURI || baseURI == 'about:blank') {\n            baseURI = window.location.href;\n        }\n        if (baseURI) {\n            var url = new URL('#' + id, baseURI);\n            styleUri = url.href;\n        }\n        else {\n            styleUri = '#' + id;\n        }\n        this.sharedStyles_[styleUri] = styleMapValue;\n    };\n    /**\n     * @inheritDoc\n     */\n    KML.prototype.readFeatureFromNode = function (node, opt_options) {\n        if (!includes(NAMESPACE_URIS, node.namespaceURI)) {\n            return null;\n        }\n        var feature = this.readPlacemark_(node, [this.getReadOptions(node, opt_options)]);\n        if (feature) {\n            return feature;\n        }\n        else {\n            return null;\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    KML.prototype.readFeaturesFromNode = function (node, opt_options) {\n        if (!includes(NAMESPACE_URIS, node.namespaceURI)) {\n            return [];\n        }\n        var features;\n        var localName = node.localName;\n        if (localName == 'Document' || localName == 'Folder') {\n            features = this.readDocumentOrFolder_(node, [this.getReadOptions(node, opt_options)]);\n            if (features) {\n                return features;\n            }\n            else {\n                return [];\n            }\n        }\n        else if (localName == 'Placemark') {\n            var feature = this.readPlacemark_(node, [this.getReadOptions(node, opt_options)]);\n            if (feature) {\n                return [feature];\n            }\n            else {\n                return [];\n            }\n        }\n        else if (localName == 'kml') {\n            features = [];\n            for (var n = node.firstElementChild; n; n = n.nextElementSibling) {\n                var fs = this.readFeaturesFromNode(n, opt_options);\n                if (fs) {\n                    extend(features, fs);\n                }\n            }\n            return features;\n        }\n        else {\n            return [];\n        }\n    };\n    /**\n     * Read the name of the KML.\n     *\n     * @param {Document|Element|string} source Source.\n     * @return {string|undefined} Name.\n     * @api\n     */\n    KML.prototype.readName = function (source) {\n        if (!source) {\n            return undefined;\n        }\n        else if (typeof source === 'string') {\n            var doc = parse(source);\n            return this.readNameFromDocument(doc);\n        }\n        else if (isDocument(source)) {\n            return this.readNameFromDocument(/** @type {Document} */ (source));\n        }\n        else {\n            return this.readNameFromNode(/** @type {Element} */ (source));\n        }\n    };\n    /**\n     * @param {Document} doc Document.\n     * @return {string|undefined} Name.\n     */\n    KML.prototype.readNameFromDocument = function (doc) {\n        for (var n = /** @type {Node} */ (doc.firstChild); n; n = n.nextSibling) {\n            if (n.nodeType == Node.ELEMENT_NODE) {\n                var name_1 = this.readNameFromNode(/** @type {Element} */ (n));\n                if (name_1) {\n                    return name_1;\n                }\n            }\n        }\n        return undefined;\n    };\n    /**\n     * @param {Element} node Node.\n     * @return {string|undefined} Name.\n     */\n    KML.prototype.readNameFromNode = function (node) {\n        for (var n = node.firstElementChild; n; n = n.nextElementSibling) {\n            if (includes(NAMESPACE_URIS, n.namespaceURI) &&\n                n.localName == 'name') {\n                return readString(n);\n            }\n        }\n        for (var n = node.firstElementChild; n; n = n.nextElementSibling) {\n            var localName = n.localName;\n            if (includes(NAMESPACE_URIS, n.namespaceURI) &&\n                (localName == 'Document' ||\n                    localName == 'Folder' ||\n                    localName == 'Placemark' ||\n                    localName == 'kml')) {\n                var name_2 = this.readNameFromNode(n);\n                if (name_2) {\n                    return name_2;\n                }\n            }\n        }\n        return undefined;\n    };\n    /**\n     * Read the network links of the KML.\n     *\n     * @param {Document|Element|string} source Source.\n     * @return {Array<Object>} Network links.\n     * @api\n     */\n    KML.prototype.readNetworkLinks = function (source) {\n        var networkLinks = [];\n        if (typeof source === 'string') {\n            var doc = parse(source);\n            extend(networkLinks, this.readNetworkLinksFromDocument(doc));\n        }\n        else if (isDocument(source)) {\n            extend(networkLinks, this.readNetworkLinksFromDocument(\n            /** @type {Document} */ (source)));\n        }\n        else {\n            extend(networkLinks, this.readNetworkLinksFromNode(\n            /** @type {Element} */ (source)));\n        }\n        return networkLinks;\n    };\n    /**\n     * @param {Document} doc Document.\n     * @return {Array<Object>} Network links.\n     */\n    KML.prototype.readNetworkLinksFromDocument = function (doc) {\n        var networkLinks = [];\n        for (var n = /** @type {Node} */ (doc.firstChild); n; n = n.nextSibling) {\n            if (n.nodeType == Node.ELEMENT_NODE) {\n                extend(networkLinks, this.readNetworkLinksFromNode(/** @type {Element} */ (n)));\n            }\n        }\n        return networkLinks;\n    };\n    /**\n     * @param {Element} node Node.\n     * @return {Array<Object>} Network links.\n     */\n    KML.prototype.readNetworkLinksFromNode = function (node) {\n        var networkLinks = [];\n        for (var n = node.firstElementChild; n; n = n.nextElementSibling) {\n            if (includes(NAMESPACE_URIS, n.namespaceURI) &&\n                n.localName == 'NetworkLink') {\n                var obj = pushParseAndPop({}, NETWORK_LINK_PARSERS, n, []);\n                networkLinks.push(obj);\n            }\n        }\n        for (var n = node.firstElementChild; n; n = n.nextElementSibling) {\n            var localName = n.localName;\n            if (includes(NAMESPACE_URIS, n.namespaceURI) &&\n                (localName == 'Document' ||\n                    localName == 'Folder' ||\n                    localName == 'kml')) {\n                extend(networkLinks, this.readNetworkLinksFromNode(n));\n            }\n        }\n        return networkLinks;\n    };\n    /**\n     * Read the regions of the KML.\n     *\n     * @param {Document|Element|string} source Source.\n     * @return {Array<Object>} Regions.\n     * @api\n     */\n    KML.prototype.readRegion = function (source) {\n        var regions = [];\n        if (typeof source === 'string') {\n            var doc = parse(source);\n            extend(regions, this.readRegionFromDocument(doc));\n        }\n        else if (isDocument(source)) {\n            extend(regions, this.readRegionFromDocument(\n            /** @type {Document} */ (source)));\n        }\n        else {\n            extend(regions, this.readRegionFromNode(\n            /** @type {Element} */ (source)));\n        }\n        return regions;\n    };\n    /**\n     * @param {Document} doc Document.\n     * @return {Array<Object>} Region.\n     */\n    KML.prototype.readRegionFromDocument = function (doc) {\n        var regions = [];\n        for (var n = /** @type {Node} */ (doc.firstChild); n; n = n.nextSibling) {\n            if (n.nodeType == Node.ELEMENT_NODE) {\n                extend(regions, this.readRegionFromNode(/** @type {Element} */ (n)));\n            }\n        }\n        return regions;\n    };\n    /**\n     * @param {Element} node Node.\n     * @return {Array<Object>} Region.\n     * @api\n     */\n    KML.prototype.readRegionFromNode = function (node) {\n        var regions = [];\n        for (var n = node.firstElementChild; n; n = n.nextElementSibling) {\n            if (includes(NAMESPACE_URIS, n.namespaceURI) &&\n                n.localName == 'Region') {\n                var obj = pushParseAndPop({}, REGION_PARSERS, n, []);\n                regions.push(obj);\n            }\n        }\n        for (var n = node.firstElementChild; n; n = n.nextElementSibling) {\n            var localName = n.localName;\n            if (includes(NAMESPACE_URIS, n.namespaceURI) &&\n                (localName == 'Document' ||\n                    localName == 'Folder' ||\n                    localName == 'kml')) {\n                extend(regions, this.readRegionFromNode(n));\n            }\n        }\n        return regions;\n    };\n    /**\n     * Encode an array of features in the KML format as an XML node. GeometryCollections,\n     * MultiPoints, MultiLineStrings, and MultiPolygons are output as MultiGeometries.\n     *\n     * @param {Array<Feature>} features Features.\n     * @param {import(\"./Feature.js\").WriteOptions=} opt_options Options.\n     * @return {Node} Node.\n     * @override\n     * @api\n     */\n    KML.prototype.writeFeaturesNode = function (features, opt_options) {\n        opt_options = this.adaptOptions(opt_options);\n        var kml = createElementNS(NAMESPACE_URIS[4], 'kml');\n        var xmlnsUri = 'http://www.w3.org/2000/xmlns/';\n        kml.setAttributeNS(xmlnsUri, 'xmlns:gx', GX_NAMESPACE_URIS[0]);\n        kml.setAttributeNS(xmlnsUri, 'xmlns:xsi', XML_SCHEMA_INSTANCE_URI);\n        kml.setAttributeNS(XML_SCHEMA_INSTANCE_URI, 'xsi:schemaLocation', SCHEMA_LOCATION);\n        var /** @type {import(\"../xml.js\").NodeStackItem} */ context = { node: kml };\n        /** @type {!Object<string, (Array<Feature>|Feature|undefined)>} */\n        var properties = {};\n        if (features.length > 1) {\n            properties['Document'] = features;\n        }\n        else if (features.length == 1) {\n            properties['Placemark'] = features[0];\n        }\n        var orderedKeys = KML_SEQUENCE[kml.namespaceURI];\n        var values = makeSequence(properties, orderedKeys);\n        pushSerializeAndPop(context, KML_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY, values, [opt_options], orderedKeys, this);\n        return kml;\n    };\n    return KML;\n}(XMLFeature));\n/**\n * @param {Style|undefined} foundStyle Style.\n * @param {string} name Name.\n * @return {Style} style Style.\n */\nfunction createNameStyleFunction(foundStyle, name) {\n    var textStyle = null;\n    var textOffset = [0, 0];\n    var textAlign = 'start';\n    if (foundStyle.getImage()) {\n        var imageSize = foundStyle.getImage().getImageSize();\n        if (imageSize === null) {\n            imageSize = DEFAULT_IMAGE_STYLE_SIZE;\n        }\n        if (imageSize.length == 2) {\n            var imageScale = foundStyle.getImage().getScale();\n            // Offset the label to be centered to the right of the icon, if there is\n            // one.\n            textOffset[0] = imageScale * imageSize[0] / 2;\n            textOffset[1] = -imageScale * imageSize[1] / 2;\n            textAlign = 'left';\n        }\n    }\n    if (foundStyle.getText() !== null) {\n        // clone the text style, customizing it with name, alignments and offset.\n        // Note that kml does not support many text options that OpenLayers does (rotation, textBaseline).\n        var foundText = foundStyle.getText();\n        textStyle = foundText.clone();\n        textStyle.setFont(foundText.getFont() || DEFAULT_TEXT_STYLE.getFont());\n        textStyle.setScale(foundText.getScale() || DEFAULT_TEXT_STYLE.getScale());\n        textStyle.setFill(foundText.getFill() || DEFAULT_TEXT_STYLE.getFill());\n        textStyle.setStroke(foundText.getStroke() || DEFAULT_TEXT_STROKE_STYLE);\n    }\n    else {\n        textStyle = DEFAULT_TEXT_STYLE.clone();\n    }\n    textStyle.setText(name);\n    textStyle.setOffsetX(textOffset[0]);\n    textStyle.setOffsetY(textOffset[1]);\n    textStyle.setTextAlign(textAlign);\n    var nameStyle = new Style({\n        text: textStyle\n    });\n    return nameStyle;\n}\n/**\n * @param {Array<Style>|undefined} style Style.\n * @param {string} styleUrl Style URL.\n * @param {Array<Style>} defaultStyle Default style.\n * @param {!Object<string, (Array<Style>|string)>} sharedStyles Shared styles.\n * @param {boolean|undefined} showPointNames true to show names for point placemarks.\n * @return {import(\"../style/Style.js\").StyleFunction} Feature style function.\n */\nfunction createFeatureStyleFunction(style, styleUrl, defaultStyle, sharedStyles, showPointNames) {\n    return (\n    /**\n     * @param {Feature} feature feature.\n     * @param {number} resolution Resolution.\n     * @return {Array<Style>} Style.\n     */\n    function (feature, resolution) {\n        var drawName = showPointNames;\n        /** @type {Style|undefined} */\n        var nameStyle;\n        var name = '';\n        if (drawName) {\n            var geometry = feature.getGeometry();\n            if (geometry) {\n                drawName = geometry.getType() === GeometryType.POINT;\n            }\n        }\n        if (drawName) {\n            name = /** @type {string} */ (feature.get('name'));\n            drawName = drawName && !!name;\n        }\n        if (style) {\n            if (drawName) {\n                nameStyle = createNameStyleFunction(style[0], name);\n                return style.concat(nameStyle);\n            }\n            return style;\n        }\n        if (styleUrl) {\n            var foundStyle = findStyle(styleUrl, defaultStyle, sharedStyles);\n            if (drawName) {\n                nameStyle = createNameStyleFunction(foundStyle[0], name);\n                return foundStyle.concat(nameStyle);\n            }\n            return foundStyle;\n        }\n        if (drawName) {\n            nameStyle = createNameStyleFunction(defaultStyle[0], name);\n            return defaultStyle.concat(nameStyle);\n        }\n        return defaultStyle;\n    });\n}\n/**\n * @param {Array<Style>|string|undefined} styleValue Style value.\n * @param {Array<Style>} defaultStyle Default style.\n * @param {!Object<string, (Array<Style>|string)>} sharedStyles\n * Shared styles.\n * @return {Array<Style>} Style.\n */\nfunction findStyle(styleValue, defaultStyle, sharedStyles) {\n    if (Array.isArray(styleValue)) {\n        return styleValue;\n    }\n    else if (typeof styleValue === 'string') {\n        // KML files in the wild occasionally forget the leading `#` on styleUrls\n        // defined in the same document.  Add a leading `#` if it enables to find\n        // a style.\n        if (!(styleValue in sharedStyles) && ('#' + styleValue in sharedStyles)) {\n            styleValue = '#' + styleValue;\n        }\n        return findStyle(sharedStyles[styleValue], defaultStyle, sharedStyles);\n    }\n    else {\n        return defaultStyle;\n    }\n}\n/**\n * @param {Node} node Node.\n * @return {import(\"../color.js\").Color|undefined} Color.\n */\nfunction readColor(node) {\n    var s = getAllTextContent(node, false);\n    // The KML specification states that colors should not include a leading `#`\n    // but we tolerate them.\n    var m = /^\\s*#?\\s*([0-9A-Fa-f]{8})\\s*$/.exec(s);\n    if (m) {\n        var hexColor = m[1];\n        return [\n            parseInt(hexColor.substr(6, 2), 16),\n            parseInt(hexColor.substr(4, 2), 16),\n            parseInt(hexColor.substr(2, 2), 16),\n            parseInt(hexColor.substr(0, 2), 16) / 255\n        ];\n    }\n    else {\n        return undefined;\n    }\n}\n/**\n * @param {Node} node Node.\n * @return {Array<number>|undefined} Flat coordinates.\n */\nexport function readFlatCoordinates(node) {\n    var s = getAllTextContent(node, false);\n    var flatCoordinates = [];\n    // The KML specification states that coordinate tuples should not include\n    // spaces, but we tolerate them.\n    var re = /^\\s*([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?)\\s*,\\s*([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?)(?:\\s*,\\s*([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?))?\\s*/i;\n    var m;\n    while ((m = re.exec(s))) {\n        var x = parseFloat(m[1]);\n        var y = parseFloat(m[2]);\n        var z = m[3] ? parseFloat(m[3]) : 0;\n        flatCoordinates.push(x, y, z);\n        s = s.substr(m[0].length);\n    }\n    if (s !== '') {\n        return undefined;\n    }\n    return flatCoordinates;\n}\n/**\n * @param {Node} node Node.\n * @return {string} URI.\n */\nfunction readURI(node) {\n    var s = getAllTextContent(node, false).trim();\n    var baseURI = node.baseURI;\n    if (!baseURI || baseURI == 'about:blank') {\n        baseURI = window.location.href;\n    }\n    if (baseURI) {\n        var url = new URL(s, baseURI);\n        return url.href;\n    }\n    else {\n        return s;\n    }\n}\n/**\n * @param {Element} node Node.\n * @return {Vec2} Vec2.\n */\nfunction readVec2(node) {\n    var xunits = node.getAttribute('xunits');\n    var yunits = node.getAttribute('yunits');\n    var origin;\n    if (xunits !== 'insetPixels') {\n        if (yunits !== 'insetPixels') {\n            origin = IconOrigin.BOTTOM_LEFT;\n        }\n        else {\n            origin = IconOrigin.TOP_LEFT;\n        }\n    }\n    else {\n        if (yunits !== 'insetPixels') {\n            origin = IconOrigin.BOTTOM_RIGHT;\n        }\n        else {\n            origin = IconOrigin.TOP_RIGHT;\n        }\n    }\n    return {\n        x: parseFloat(node.getAttribute('x')),\n        xunits: ICON_ANCHOR_UNITS_MAP[xunits],\n        y: parseFloat(node.getAttribute('y')),\n        yunits: ICON_ANCHOR_UNITS_MAP[yunits],\n        origin: origin\n    };\n}\n/**\n * @param {Node} node Node.\n * @return {number|undefined} Scale.\n */\nfunction readScale(node) {\n    return readDecimal(node);\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar STYLE_MAP_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'Pair': pairDataParser\n});\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Array<Style>|string|undefined} StyleMap.\n */\nfunction readStyleMapValue(node, objectStack) {\n    return pushParseAndPop(undefined, STYLE_MAP_PARSERS, node, objectStack);\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar ICON_STYLE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'Icon': makeObjectPropertySetter(readIcon),\n    'heading': makeObjectPropertySetter(readDecimal),\n    'hotSpot': makeObjectPropertySetter(readVec2),\n    'scale': makeObjectPropertySetter(readScale)\n});\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction iconStyleParser(node, objectStack) {\n    // FIXME refreshMode\n    // FIXME refreshInterval\n    // FIXME viewRefreshTime\n    // FIXME viewBoundScale\n    // FIXME viewFormat\n    // FIXME httpQuery\n    var object = pushParseAndPop({}, ICON_STYLE_PARSERS, node, objectStack);\n    if (!object) {\n        return;\n    }\n    var styleObject = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n    var IconObject = 'Icon' in object ? object['Icon'] : {};\n    var drawIcon = (!('Icon' in object) || Object.keys(IconObject).length > 0);\n    var src;\n    var href = /** @type {string|undefined} */ (IconObject['href']);\n    if (href) {\n        src = href;\n    }\n    else if (drawIcon) {\n        src = DEFAULT_IMAGE_STYLE_SRC;\n    }\n    var anchor, anchorXUnits, anchorYUnits;\n    var anchorOrigin = IconOrigin.BOTTOM_LEFT;\n    var hotSpot = /** @type {Vec2|undefined} */ (object['hotSpot']);\n    if (hotSpot) {\n        anchor = [hotSpot.x, hotSpot.y];\n        anchorXUnits = hotSpot.xunits;\n        anchorYUnits = hotSpot.yunits;\n        anchorOrigin = hotSpot.origin;\n    }\n    else if (src === DEFAULT_IMAGE_STYLE_SRC) {\n        anchor = DEFAULT_IMAGE_STYLE_ANCHOR;\n        anchorXUnits = DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS;\n        anchorYUnits = DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS;\n    }\n    else if (/^http:\\/\\/maps\\.(?:google|gstatic)\\.com\\//.test(src)) {\n        anchor = [0.5, 0];\n        anchorXUnits = IconAnchorUnits.FRACTION;\n        anchorYUnits = IconAnchorUnits.FRACTION;\n    }\n    var offset;\n    var x = /** @type {number|undefined} */ (IconObject['x']);\n    var y = /** @type {number|undefined} */ (IconObject['y']);\n    if (x !== undefined && y !== undefined) {\n        offset = [x, y];\n    }\n    var size;\n    var w = /** @type {number|undefined} */ (IconObject['w']);\n    var h = /** @type {number|undefined} */ (IconObject['h']);\n    if (w !== undefined && h !== undefined) {\n        size = [w, h];\n    }\n    var rotation;\n    var heading = /** @type {number} */ (object['heading']);\n    if (heading !== undefined) {\n        rotation = toRadians(heading);\n    }\n    var scale = /** @type {number|undefined} */ (object['scale']);\n    if (drawIcon) {\n        if (src == DEFAULT_IMAGE_STYLE_SRC) {\n            size = DEFAULT_IMAGE_STYLE_SIZE;\n            if (scale === undefined) {\n                scale = DEFAULT_IMAGE_SCALE_MULTIPLIER;\n            }\n        }\n        var imageStyle = new Icon({\n            anchor: anchor,\n            anchorOrigin: anchorOrigin,\n            anchorXUnits: anchorXUnits,\n            anchorYUnits: anchorYUnits,\n            crossOrigin: 'anonymous',\n            offset: offset,\n            offsetOrigin: IconOrigin.BOTTOM_LEFT,\n            rotation: rotation,\n            scale: scale,\n            size: size,\n            src: src\n        });\n        styleObject['imageStyle'] = imageStyle;\n    }\n    else {\n        // handle the case when we explicitly want to draw no icon.\n        styleObject['imageStyle'] = DEFAULT_NO_IMAGE_STYLE;\n    }\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar LABEL_STYLE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'color': makeObjectPropertySetter(readColor),\n    'scale': makeObjectPropertySetter(readScale)\n});\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction labelStyleParser(node, objectStack) {\n    // FIXME colorMode\n    var object = pushParseAndPop({}, LABEL_STYLE_PARSERS, node, objectStack);\n    if (!object) {\n        return;\n    }\n    var styleObject = objectStack[objectStack.length - 1];\n    var textStyle = new Text({\n        fill: new Fill({\n            color: /** @type {import(\"../color.js\").Color} */ ('color' in object ? object['color'] : DEFAULT_COLOR)\n        }),\n        scale: /** @type {number|undefined} */ (object['scale'])\n    });\n    styleObject['textStyle'] = textStyle;\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar LINE_STYLE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'color': makeObjectPropertySetter(readColor),\n    'width': makeObjectPropertySetter(readDecimal)\n});\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction lineStyleParser(node, objectStack) {\n    // FIXME colorMode\n    // FIXME gx:outerColor\n    // FIXME gx:outerWidth\n    // FIXME gx:physicalWidth\n    // FIXME gx:labelVisibility\n    var object = pushParseAndPop({}, LINE_STYLE_PARSERS, node, objectStack);\n    if (!object) {\n        return;\n    }\n    var styleObject = objectStack[objectStack.length - 1];\n    var strokeStyle = new Stroke({\n        color: /** @type {import(\"../color.js\").Color} */ ('color' in object ? object['color'] : DEFAULT_COLOR),\n        width: /** @type {number} */ ('width' in object ? object['width'] : 1)\n    });\n    styleObject['strokeStyle'] = strokeStyle;\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar POLY_STYLE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'color': makeObjectPropertySetter(readColor),\n    'fill': makeObjectPropertySetter(readBoolean),\n    'outline': makeObjectPropertySetter(readBoolean)\n});\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction polyStyleParser(node, objectStack) {\n    // FIXME colorMode\n    var object = pushParseAndPop({}, POLY_STYLE_PARSERS, node, objectStack);\n    if (!object) {\n        return;\n    }\n    var styleObject = objectStack[objectStack.length - 1];\n    var fillStyle = new Fill({\n        color: /** @type {import(\"../color.js\").Color} */ ('color' in object ? object['color'] : DEFAULT_COLOR)\n    });\n    styleObject['fillStyle'] = fillStyle;\n    var fill = /** @type {boolean|undefined} */ (object['fill']);\n    if (fill !== undefined) {\n        styleObject['fill'] = fill;\n    }\n    var outline = /** @type {boolean|undefined} */ (object['outline']);\n    if (outline !== undefined) {\n        styleObject['outline'] = outline;\n    }\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar FLAT_LINEAR_RING_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'coordinates': makeReplacer(readFlatCoordinates)\n});\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Array<number>} LinearRing flat coordinates.\n */\nfunction readFlatLinearRing(node, objectStack) {\n    return pushParseAndPop(null, FLAT_LINEAR_RING_PARSERS, node, objectStack);\n}\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction gxCoordParser(node, objectStack) {\n    var gxTrackObject = /** @type {GxTrackObject} */ (objectStack[objectStack.length - 1]);\n    var flatCoordinates = gxTrackObject.flatCoordinates;\n    var s = getAllTextContent(node, false);\n    var re = /^\\s*([+\\-]?\\d+(?:\\.\\d*)?(?:e[+\\-]?\\d*)?)\\s+([+\\-]?\\d+(?:\\.\\d*)?(?:e[+\\-]?\\d*)?)\\s+([+\\-]?\\d+(?:\\.\\d*)?(?:e[+\\-]?\\d*)?)\\s*$/i;\n    var m = re.exec(s);\n    if (m) {\n        var x = parseFloat(m[1]);\n        var y = parseFloat(m[2]);\n        var z = parseFloat(m[3]);\n        flatCoordinates.push(x, y, z, 0);\n    }\n    else {\n        flatCoordinates.push(0, 0, 0, 0);\n    }\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar GX_MULTITRACK_GEOMETRY_PARSERS = makeStructureNS(GX_NAMESPACE_URIS, {\n    'Track': makeArrayPusher(readGxTrack)\n});\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {MultiLineString|undefined} MultiLineString.\n */\nfunction readGxMultiTrack(node, objectStack) {\n    var lineStrings = pushParseAndPop([], GX_MULTITRACK_GEOMETRY_PARSERS, node, objectStack);\n    if (!lineStrings) {\n        return undefined;\n    }\n    return new MultiLineString(lineStrings);\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar GX_TRACK_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'when': whenParser\n}, makeStructureNS(GX_NAMESPACE_URIS, {\n    'coord': gxCoordParser\n}));\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {LineString|undefined} LineString.\n */\nfunction readGxTrack(node, objectStack) {\n    var gxTrackObject = pushParseAndPop(\n    /** @type {GxTrackObject} */ ({\n        flatCoordinates: [],\n        whens: []\n    }), GX_TRACK_PARSERS, node, objectStack);\n    if (!gxTrackObject) {\n        return undefined;\n    }\n    var flatCoordinates = gxTrackObject.flatCoordinates;\n    var whens = gxTrackObject.whens;\n    for (var i = 0, ii = Math.min(flatCoordinates.length, whens.length); i < ii; ++i) {\n        flatCoordinates[4 * i + 3] = whens[i];\n    }\n    return new LineString(flatCoordinates, GeometryLayout.XYZM);\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar ICON_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'href': makeObjectPropertySetter(readURI)\n}, makeStructureNS(GX_NAMESPACE_URIS, {\n    'x': makeObjectPropertySetter(readDecimal),\n    'y': makeObjectPropertySetter(readDecimal),\n    'w': makeObjectPropertySetter(readDecimal),\n    'h': makeObjectPropertySetter(readDecimal)\n}));\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object} Icon object.\n */\nfunction readIcon(node, objectStack) {\n    var iconObject = pushParseAndPop({}, ICON_PARSERS, node, objectStack);\n    if (iconObject) {\n        return iconObject;\n    }\n    else {\n        return null;\n    }\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar GEOMETRY_FLAT_COORDINATES_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'coordinates': makeReplacer(readFlatCoordinates)\n});\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Array<number>} Flat coordinates.\n */\nfunction readFlatCoordinatesFromNode(node, objectStack) {\n    return pushParseAndPop(null, GEOMETRY_FLAT_COORDINATES_PARSERS, node, objectStack);\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar EXTRUDE_AND_ALTITUDE_MODE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'extrude': makeObjectPropertySetter(readBoolean),\n    'tessellate': makeObjectPropertySetter(readBoolean),\n    'altitudeMode': makeObjectPropertySetter(readString)\n});\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {LineString|undefined} LineString.\n */\nfunction readLineString(node, objectStack) {\n    var properties = pushParseAndPop({}, EXTRUDE_AND_ALTITUDE_MODE_PARSERS, node, objectStack);\n    var flatCoordinates = readFlatCoordinatesFromNode(node, objectStack);\n    if (flatCoordinates) {\n        var lineString = new LineString(flatCoordinates, GeometryLayout.XYZ);\n        lineString.setProperties(properties, true);\n        return lineString;\n    }\n    else {\n        return undefined;\n    }\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Polygon|undefined} Polygon.\n */\nfunction readLinearRing(node, objectStack) {\n    var properties = pushParseAndPop({}, EXTRUDE_AND_ALTITUDE_MODE_PARSERS, node, objectStack);\n    var flatCoordinates = readFlatCoordinatesFromNode(node, objectStack);\n    if (flatCoordinates) {\n        var polygon = new Polygon(flatCoordinates, GeometryLayout.XYZ, [flatCoordinates.length]);\n        polygon.setProperties(properties, true);\n        return polygon;\n    }\n    else {\n        return undefined;\n    }\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar MULTI_GEOMETRY_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'LineString': makeArrayPusher(readLineString),\n    'LinearRing': makeArrayPusher(readLinearRing),\n    'MultiGeometry': makeArrayPusher(readMultiGeometry),\n    'Point': makeArrayPusher(readPoint),\n    'Polygon': makeArrayPusher(readPolygon)\n});\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {import(\"../geom/Geometry.js\").default} Geometry.\n */\nfunction readMultiGeometry(node, objectStack) {\n    var geometries = pushParseAndPop([], MULTI_GEOMETRY_PARSERS, node, objectStack);\n    if (!geometries) {\n        return null;\n    }\n    if (geometries.length === 0) {\n        return new GeometryCollection(geometries);\n    }\n    var multiGeometry;\n    var homogeneous = true;\n    var type = geometries[0].getType();\n    var geometry;\n    for (var i = 1, ii = geometries.length; i < ii; ++i) {\n        geometry = geometries[i];\n        if (geometry.getType() != type) {\n            homogeneous = false;\n            break;\n        }\n    }\n    if (homogeneous) {\n        var layout = void 0;\n        var flatCoordinates = void 0;\n        if (type == GeometryType.POINT) {\n            var point = geometries[0];\n            layout = point.getLayout();\n            flatCoordinates = point.getFlatCoordinates();\n            for (var i = 1, ii = geometries.length; i < ii; ++i) {\n                geometry = geometries[i];\n                extend(flatCoordinates, geometry.getFlatCoordinates());\n            }\n            multiGeometry = new MultiPoint(flatCoordinates, layout);\n            setCommonGeometryProperties(multiGeometry, geometries);\n        }\n        else if (type == GeometryType.LINE_STRING) {\n            multiGeometry = new MultiLineString(geometries);\n            setCommonGeometryProperties(multiGeometry, geometries);\n        }\n        else if (type == GeometryType.POLYGON) {\n            multiGeometry = new MultiPolygon(geometries);\n            setCommonGeometryProperties(multiGeometry, geometries);\n        }\n        else if (type == GeometryType.GEOMETRY_COLLECTION) {\n            multiGeometry = new GeometryCollection(geometries);\n        }\n        else {\n            assert(false, 37); // Unknown geometry type found\n        }\n    }\n    else {\n        multiGeometry = new GeometryCollection(geometries);\n    }\n    return (\n    /** @type {import(\"../geom/Geometry.js\").default} */ (multiGeometry));\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Point|undefined} Point.\n */\nfunction readPoint(node, objectStack) {\n    var properties = pushParseAndPop({}, EXTRUDE_AND_ALTITUDE_MODE_PARSERS, node, objectStack);\n    var flatCoordinates = readFlatCoordinatesFromNode(node, objectStack);\n    if (flatCoordinates) {\n        var point = new Point(flatCoordinates, GeometryLayout.XYZ);\n        point.setProperties(properties, true);\n        return point;\n    }\n    else {\n        return undefined;\n    }\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar FLAT_LINEAR_RINGS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'innerBoundaryIs': innerBoundaryIsParser,\n    'outerBoundaryIs': outerBoundaryIsParser\n});\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Polygon|undefined} Polygon.\n */\nfunction readPolygon(node, objectStack) {\n    var properties = pushParseAndPop(/** @type {Object<string,*>} */ ({}), EXTRUDE_AND_ALTITUDE_MODE_PARSERS, node, objectStack);\n    var flatLinearRings = pushParseAndPop([null], FLAT_LINEAR_RINGS_PARSERS, node, objectStack);\n    if (flatLinearRings && flatLinearRings[0]) {\n        var flatCoordinates = flatLinearRings[0];\n        var ends = [flatCoordinates.length];\n        for (var i = 1, ii = flatLinearRings.length; i < ii; ++i) {\n            extend(flatCoordinates, flatLinearRings[i]);\n            ends.push(flatCoordinates.length);\n        }\n        var polygon = new Polygon(flatCoordinates, GeometryLayout.XYZ, ends);\n        polygon.setProperties(properties, true);\n        return polygon;\n    }\n    else {\n        return undefined;\n    }\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar STYLE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'IconStyle': iconStyleParser,\n    'LabelStyle': labelStyleParser,\n    'LineStyle': lineStyleParser,\n    'PolyStyle': polyStyleParser\n});\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Array<Style>} Style.\n */\nfunction readStyle(node, objectStack) {\n    var styleObject = pushParseAndPop({}, STYLE_PARSERS, node, objectStack);\n    if (!styleObject) {\n        return null;\n    }\n    var fillStyle = /** @type {Fill} */ ('fillStyle' in styleObject ?\n        styleObject['fillStyle'] : DEFAULT_FILL_STYLE);\n    var fill = /** @type {boolean|undefined} */ (styleObject['fill']);\n    if (fill !== undefined && !fill) {\n        fillStyle = null;\n    }\n    var imageStyle;\n    if ('imageStyle' in styleObject) {\n        if (styleObject['imageStyle'] != DEFAULT_NO_IMAGE_STYLE) {\n            imageStyle = styleObject['imageStyle'];\n        }\n    }\n    else {\n        imageStyle = DEFAULT_IMAGE_STYLE;\n    }\n    var textStyle = /** @type {Text} */ ('textStyle' in styleObject ?\n        styleObject['textStyle'] : DEFAULT_TEXT_STYLE);\n    var strokeStyle = /** @type {Stroke} */ ('strokeStyle' in styleObject ?\n        styleObject['strokeStyle'] : DEFAULT_STROKE_STYLE);\n    var outline = /** @type {boolean|undefined} */ (styleObject['outline']);\n    if (outline !== undefined && !outline) {\n        strokeStyle = null;\n    }\n    return [new Style({\n            fill: fillStyle,\n            image: imageStyle,\n            stroke: strokeStyle,\n            text: textStyle,\n            zIndex: undefined // FIXME\n        })];\n}\n/**\n * Reads an array of geometries and creates arrays for common geometry\n * properties. Then sets them to the multi geometry.\n * @param {MultiPoint|MultiLineString|MultiPolygon} multiGeometry A multi-geometry.\n * @param {Array<import(\"../geom/Geometry.js\").default>} geometries List of geometries.\n */\nfunction setCommonGeometryProperties(multiGeometry, geometries) {\n    var ii = geometries.length;\n    var extrudes = new Array(geometries.length);\n    var tessellates = new Array(geometries.length);\n    var altitudeModes = new Array(geometries.length);\n    var hasExtrude, hasTessellate, hasAltitudeMode;\n    hasExtrude = hasTessellate = hasAltitudeMode = false;\n    for (var i = 0; i < ii; ++i) {\n        var geometry = geometries[i];\n        extrudes[i] = geometry.get('extrude');\n        tessellates[i] = geometry.get('tessellate');\n        altitudeModes[i] = geometry.get('altitudeMode');\n        hasExtrude = hasExtrude || extrudes[i] !== undefined;\n        hasTessellate = hasTessellate || tessellates[i] !== undefined;\n        hasAltitudeMode = hasAltitudeMode || altitudeModes[i];\n    }\n    if (hasExtrude) {\n        multiGeometry.set('extrude', extrudes);\n    }\n    if (hasTessellate) {\n        multiGeometry.set('tessellate', tessellates);\n    }\n    if (hasAltitudeMode) {\n        multiGeometry.set('altitudeMode', altitudeModes);\n    }\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar DATA_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'displayName': makeObjectPropertySetter(readString),\n    'value': makeObjectPropertySetter(readString)\n});\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction dataParser(node, objectStack) {\n    var name = node.getAttribute('name');\n    parseNode(DATA_PARSERS, node, objectStack);\n    var featureObject = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n    if (name !== null) {\n        featureObject[name] = featureObject.value;\n    }\n    else if (featureObject.displayName !== null) {\n        featureObject[featureObject.displayName] = featureObject.value;\n    }\n    delete featureObject['value'];\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar EXTENDED_DATA_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'Data': dataParser,\n    'SchemaData': schemaDataParser\n});\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction extendedDataParser(node, objectStack) {\n    parseNode(EXTENDED_DATA_PARSERS, node, objectStack);\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction regionParser(node, objectStack) {\n    parseNode(REGION_PARSERS, node, objectStack);\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar PAIR_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'Style': makeObjectPropertySetter(readStyle),\n    'key': makeObjectPropertySetter(readString),\n    'styleUrl': makeObjectPropertySetter(readURI)\n});\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction pairDataParser(node, objectStack) {\n    var pairObject = pushParseAndPop({}, PAIR_PARSERS, node, objectStack);\n    if (!pairObject) {\n        return;\n    }\n    var key = /** @type {string|undefined} */ (pairObject['key']);\n    if (key && key == 'normal') {\n        var styleUrl = /** @type {string|undefined} */ (pairObject['styleUrl']);\n        if (styleUrl) {\n            objectStack[objectStack.length - 1] = styleUrl;\n        }\n        var style = /** @type {Style} */ (pairObject['Style']);\n        if (style) {\n            objectStack[objectStack.length - 1] = style;\n        }\n    }\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction placemarkStyleMapParser(node, objectStack) {\n    var styleMapValue = readStyleMapValue(node, objectStack);\n    if (!styleMapValue) {\n        return;\n    }\n    var placemarkObject = objectStack[objectStack.length - 1];\n    if (Array.isArray(styleMapValue)) {\n        placemarkObject['Style'] = styleMapValue;\n    }\n    else if (typeof styleMapValue === 'string') {\n        placemarkObject['styleUrl'] = styleMapValue;\n    }\n    else {\n        assert(false, 38); // `styleMapValue` has an unknown type\n    }\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar SCHEMA_DATA_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'SimpleData': simpleDataParser\n});\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction schemaDataParser(node, objectStack) {\n    parseNode(SCHEMA_DATA_PARSERS, node, objectStack);\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction simpleDataParser(node, objectStack) {\n    var name = node.getAttribute('name');\n    if (name !== null) {\n        var data = readString(node);\n        var featureObject = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n        featureObject[name] = data;\n    }\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar LAT_LON_ALT_BOX_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'altitudeMode': makeObjectPropertySetter(readString),\n    'minAltitude': makeObjectPropertySetter(readDecimal),\n    'maxAltitude': makeObjectPropertySetter(readDecimal),\n    'north': makeObjectPropertySetter(readDecimal),\n    'south': makeObjectPropertySetter(readDecimal),\n    'east': makeObjectPropertySetter(readDecimal),\n    'west': makeObjectPropertySetter(readDecimal)\n});\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction latLonAltBoxParser(node, objectStack) {\n    var object = pushParseAndPop({}, LAT_LON_ALT_BOX_PARSERS, node, objectStack);\n    if (!object) {\n        return;\n    }\n    var regionObject = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n    var extent = [\n        parseFloat(object['west']),\n        parseFloat(object['south']),\n        parseFloat(object['east']),\n        parseFloat(object['north'])\n    ];\n    regionObject['extent'] = extent;\n    regionObject['altitudeMode'] = object['altitudeMode'];\n    regionObject['minAltitude'] = parseFloat(object['minAltitude']);\n    regionObject['maxAltitude'] = parseFloat(object['maxAltitude']);\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar LOD_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'minLodPixels': makeObjectPropertySetter(readDecimal),\n    'maxLodPixels': makeObjectPropertySetter(readDecimal),\n    'minFadeExtent': makeObjectPropertySetter(readDecimal),\n    'maxFadeExtent': makeObjectPropertySetter(readDecimal)\n});\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction lodParser(node, objectStack) {\n    var object = pushParseAndPop({}, LOD_PARSERS, node, objectStack);\n    if (!object) {\n        return;\n    }\n    var lodObject = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n    lodObject['minLodPixels'] = parseFloat(object['minLodPixels']);\n    lodObject['maxLodPixels'] = parseFloat(object['maxLodPixels']);\n    lodObject['minFadeExtent'] = parseFloat(object['minFadeExtent']);\n    lodObject['maxFadeExtent'] = parseFloat(object['maxFadeExtent']);\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar INNER_BOUNDARY_IS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'LinearRing': makeReplacer(readFlatLinearRing)\n});\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction innerBoundaryIsParser(node, objectStack) {\n    /** @type {Array<number>|undefined} */\n    var flatLinearRing = pushParseAndPop(undefined, INNER_BOUNDARY_IS_PARSERS, node, objectStack);\n    if (flatLinearRing) {\n        var flatLinearRings = /** @type {Array<Array<number>>} */ (objectStack[objectStack.length - 1]);\n        flatLinearRings.push(flatLinearRing);\n    }\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar OUTER_BOUNDARY_IS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'LinearRing': makeReplacer(readFlatLinearRing)\n});\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction outerBoundaryIsParser(node, objectStack) {\n    /** @type {Array<number>|undefined} */\n    var flatLinearRing = pushParseAndPop(undefined, OUTER_BOUNDARY_IS_PARSERS, node, objectStack);\n    if (flatLinearRing) {\n        var flatLinearRings = /** @type {Array<Array<number>>} */ (objectStack[objectStack.length - 1]);\n        flatLinearRings[0] = flatLinearRing;\n    }\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction linkParser(node, objectStack) {\n    parseNode(LINK_PARSERS, node, objectStack);\n}\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction whenParser(node, objectStack) {\n    var gxTrackObject = /** @type {GxTrackObject} */ (objectStack[objectStack.length - 1]);\n    var whens = gxTrackObject.whens;\n    var s = getAllTextContent(node, false);\n    var when = Date.parse(s);\n    whens.push(isNaN(when) ? 0 : when);\n}\n/**\n * @param {Node} node Node to append a TextNode with the color to.\n * @param {import(\"../color.js\").Color|string} color Color.\n */\nfunction writeColorTextNode(node, color) {\n    var rgba = asArray(color);\n    var opacity = (rgba.length == 4) ? rgba[3] : 1;\n    /** @type {Array<string|number>} */\n    var abgr = [opacity * 255, rgba[2], rgba[1], rgba[0]];\n    for (var i = 0; i < 4; ++i) {\n        var hex = Math.floor(/** @type {number} */ (abgr[i])).toString(16);\n        abgr[i] = (hex.length == 1) ? '0' + hex : hex;\n    }\n    writeStringTextNode(node, abgr.join(''));\n}\n/**\n * @param {Node} node Node to append a TextNode with the coordinates to.\n * @param {Array<number>} coordinates Coordinates.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeCoordinatesTextNode(node, coordinates, objectStack) {\n    var context = objectStack[objectStack.length - 1];\n    var layout = context['layout'];\n    var stride = context['stride'];\n    var dimension;\n    if (layout == GeometryLayout.XY ||\n        layout == GeometryLayout.XYM) {\n        dimension = 2;\n    }\n    else if (layout == GeometryLayout.XYZ ||\n        layout == GeometryLayout.XYZM) {\n        dimension = 3;\n    }\n    else {\n        assert(false, 34); // Invalid geometry layout\n    }\n    var ii = coordinates.length;\n    var text = '';\n    if (ii > 0) {\n        text += coordinates[0];\n        for (var d = 1; d < dimension; ++d) {\n            text += ',' + coordinates[d];\n        }\n        for (var i = stride; i < ii; i += stride) {\n            text += ' ' + coordinates[i];\n            for (var d = 1; d < dimension; ++d) {\n                text += ',' + coordinates[i + d];\n            }\n        }\n    }\n    writeStringTextNode(node, text);\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nvar EXTENDEDDATA_NODE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n    'Data': makeChildAppender(writeDataNode),\n    'value': makeChildAppender(writeDataNodeValue),\n    'displayName': makeChildAppender(writeDataNodeName)\n});\n/**\n * @param {Element} node Node.\n * @param {{name: *, value: *}} pair Name value pair.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeDataNode(node, pair, objectStack) {\n    node.setAttribute('name', pair.name);\n    var /** @type {import(\"../xml.js\").NodeStackItem} */ context = { node: node };\n    var value = pair.value;\n    if (typeof value == 'object') {\n        if (value !== null && value.displayName) {\n            pushSerializeAndPop(context, EXTENDEDDATA_NODE_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY, [value.displayName], objectStack, ['displayName']);\n        }\n        if (value !== null && value.value) {\n            pushSerializeAndPop(context, EXTENDEDDATA_NODE_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY, [value.value], objectStack, ['value']);\n        }\n    }\n    else {\n        pushSerializeAndPop(context, EXTENDEDDATA_NODE_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY, [value], objectStack, ['value']);\n    }\n}\n/**\n * @param {Node} node Node to append a TextNode with the name to.\n * @param {string} name DisplayName.\n */\nfunction writeDataNodeName(node, name) {\n    writeCDATASection(node, name);\n}\n/**\n * @param {Node} node Node to append a CDATA Section with the value to.\n * @param {string} value Value.\n */\nfunction writeDataNodeValue(node, value) {\n    writeStringTextNode(node, value);\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nvar DOCUMENT_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n    'Placemark': makeChildAppender(writePlacemark)\n});\n/**\n * @const\n * @param {*} value Value.\n * @param {Array<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n */\nvar DOCUMENT_NODE_FACTORY = function (value, objectStack, opt_nodeName) {\n    var parentNode = objectStack[objectStack.length - 1].node;\n    return createElementNS(parentNode.namespaceURI, 'Placemark');\n};\n/**\n * @param {Node} node Node.\n * @param {Array<Feature>} features Features.\n * @param {Array<*>} objectStack Object stack.\n * @this {KML}\n */\nfunction writeDocument(node, features, objectStack) {\n    var /** @type {import(\"../xml.js\").NodeStackItem} */ context = { node: node };\n    pushSerializeAndPop(context, DOCUMENT_SERIALIZERS, DOCUMENT_NODE_FACTORY, features, objectStack, undefined, this);\n}\n/**\n * A factory for creating Data nodes.\n * @const\n * @type {function(*, Array<*>): (Node|undefined)}\n */\nvar DATA_NODE_FACTORY = makeSimpleNodeFactory('Data');\n/**\n * @param {Node} node Node.\n * @param {{names: Array<string>, values: (Array<*>)}} namesAndValues Names and values.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeExtendedData(node, namesAndValues, objectStack) {\n    var /** @type {import(\"../xml.js\").NodeStackItem} */ context = { node: node };\n    var names = namesAndValues.names;\n    var values = namesAndValues.values;\n    var length = names.length;\n    for (var i = 0; i < length; i++) {\n        pushSerializeAndPop(context, EXTENDEDDATA_NODE_SERIALIZERS, DATA_NODE_FACTORY, [{ name: names[i], value: values[i] }], objectStack);\n    }\n}\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\nvar ICON_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n    'href'\n], makeStructureNS(GX_NAMESPACE_URIS, [\n    'x', 'y', 'w', 'h'\n]));\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nvar ICON_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n    'href': makeChildAppender(writeStringTextNode)\n}, makeStructureNS(GX_NAMESPACE_URIS, {\n    'x': makeChildAppender(writeDecimalTextNode),\n    'y': makeChildAppender(writeDecimalTextNode),\n    'w': makeChildAppender(writeDecimalTextNode),\n    'h': makeChildAppender(writeDecimalTextNode)\n}));\n/**\n * @const\n * @param {*} value Value.\n * @param {Array<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n */\nvar GX_NODE_FACTORY = function (value, objectStack, opt_nodeName) {\n    return createElementNS(GX_NAMESPACE_URIS[0], 'gx:' + opt_nodeName);\n};\n/**\n * @param {Node} node Node.\n * @param {Object} icon Icon object.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeIcon(node, icon, objectStack) {\n    var /** @type {import(\"../xml.js\").NodeStackItem} */ context = { node: node };\n    var parentNode = objectStack[objectStack.length - 1].node;\n    var orderedKeys = ICON_SEQUENCE[parentNode.namespaceURI];\n    var values = makeSequence(icon, orderedKeys);\n    pushSerializeAndPop(context, ICON_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n    orderedKeys =\n        ICON_SEQUENCE[GX_NAMESPACE_URIS[0]];\n    values = makeSequence(icon, orderedKeys);\n    pushSerializeAndPop(context, ICON_SERIALIZERS, GX_NODE_FACTORY, values, objectStack, orderedKeys);\n}\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\nvar ICON_STYLE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n    'scale', 'heading', 'Icon', 'hotSpot'\n]);\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nvar ICON_STYLE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n    'Icon': makeChildAppender(writeIcon),\n    'heading': makeChildAppender(writeDecimalTextNode),\n    'hotSpot': makeChildAppender(writeVec2),\n    'scale': makeChildAppender(writeScaleTextNode)\n});\n/**\n * @param {Node} node Node.\n * @param {import(\"../style/Icon.js\").default} style Icon style.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeIconStyle(node, style, objectStack) {\n    var /** @type {import(\"../xml.js\").NodeStackItem} */ context = { node: node };\n    var properties = {};\n    var src = style.getSrc();\n    var size = style.getSize();\n    var iconImageSize = style.getImageSize();\n    var iconProperties = {\n        'href': src\n    };\n    if (size) {\n        iconProperties['w'] = size[0];\n        iconProperties['h'] = size[1];\n        var anchor = style.getAnchor(); // top-left\n        var origin_1 = style.getOrigin(); // top-left\n        if (origin_1 && iconImageSize && origin_1[0] !== 0 && origin_1[1] !== size[1]) {\n            iconProperties['x'] = origin_1[0];\n            iconProperties['y'] = iconImageSize[1] - (origin_1[1] + size[1]);\n        }\n        if (anchor && (anchor[0] !== size[0] / 2 || anchor[1] !== size[1] / 2)) {\n            var /** @type {Vec2} */ hotSpot = {\n                x: anchor[0],\n                xunits: IconAnchorUnits.PIXELS,\n                y: size[1] - anchor[1],\n                yunits: IconAnchorUnits.PIXELS\n            };\n            properties['hotSpot'] = hotSpot;\n        }\n    }\n    properties['Icon'] = iconProperties;\n    var scale = style.getScale();\n    if (scale !== 1) {\n        properties['scale'] = scale;\n    }\n    var rotation = style.getRotation();\n    if (rotation !== 0) {\n        properties['heading'] = rotation; // 0-360\n    }\n    var parentNode = objectStack[objectStack.length - 1].node;\n    var orderedKeys = ICON_STYLE_SEQUENCE[parentNode.namespaceURI];\n    var values = makeSequence(properties, orderedKeys);\n    pushSerializeAndPop(context, ICON_STYLE_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n}\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\nvar LABEL_STYLE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n    'color', 'scale'\n]);\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nvar LABEL_STYLE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n    'color': makeChildAppender(writeColorTextNode),\n    'scale': makeChildAppender(writeScaleTextNode)\n});\n/**\n * @param {Node} node Node.\n * @param {Text} style style.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeLabelStyle(node, style, objectStack) {\n    var /** @type {import(\"../xml.js\").NodeStackItem} */ context = { node: node };\n    var properties = {};\n    var fill = style.getFill();\n    if (fill) {\n        properties['color'] = fill.getColor();\n    }\n    var scale = style.getScale();\n    if (scale && scale !== 1) {\n        properties['scale'] = scale;\n    }\n    var parentNode = objectStack[objectStack.length - 1].node;\n    var orderedKeys = LABEL_STYLE_SEQUENCE[parentNode.namespaceURI];\n    var values = makeSequence(properties, orderedKeys);\n    pushSerializeAndPop(context, LABEL_STYLE_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n}\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\nvar LINE_STYLE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n    'color', 'width'\n]);\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nvar LINE_STYLE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n    'color': makeChildAppender(writeColorTextNode),\n    'width': makeChildAppender(writeDecimalTextNode)\n});\n/**\n * @param {Node} node Node.\n * @param {Stroke} style style.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeLineStyle(node, style, objectStack) {\n    var /** @type {import(\"../xml.js\").NodeStackItem} */ context = { node: node };\n    var properties = {\n        'color': style.getColor(),\n        'width': style.getWidth()\n    };\n    var parentNode = objectStack[objectStack.length - 1].node;\n    var orderedKeys = LINE_STYLE_SEQUENCE[parentNode.namespaceURI];\n    var values = makeSequence(properties, orderedKeys);\n    pushSerializeAndPop(context, LINE_STYLE_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n}\n/**\n * @const\n * @type {Object<string, string>}\n */\nvar GEOMETRY_TYPE_TO_NODENAME = {\n    'Point': 'Point',\n    'LineString': 'LineString',\n    'LinearRing': 'LinearRing',\n    'Polygon': 'Polygon',\n    'MultiPoint': 'MultiGeometry',\n    'MultiLineString': 'MultiGeometry',\n    'MultiPolygon': 'MultiGeometry',\n    'GeometryCollection': 'MultiGeometry'\n};\n/**\n * @const\n * @param {*} value Value.\n * @param {Array<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n */\nvar GEOMETRY_NODE_FACTORY = function (value, objectStack, opt_nodeName) {\n    if (value) {\n        var parentNode = objectStack[objectStack.length - 1].node;\n        return createElementNS(parentNode.namespaceURI, GEOMETRY_TYPE_TO_NODENAME[ /** @type {import(\"../geom/Geometry.js\").default} */(value).getType()]);\n    }\n};\n/**\n * A factory for creating Point nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nvar POINT_NODE_FACTORY = makeSimpleNodeFactory('Point');\n/**\n * A factory for creating LineString nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nvar LINE_STRING_NODE_FACTORY = makeSimpleNodeFactory('LineString');\n/**\n * A factory for creating LinearRing nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nvar LINEAR_RING_NODE_FACTORY = makeSimpleNodeFactory('LinearRing');\n/**\n * A factory for creating Polygon nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nvar POLYGON_NODE_FACTORY = makeSimpleNodeFactory('Polygon');\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nvar MULTI_GEOMETRY_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n    'LineString': makeChildAppender(writePrimitiveGeometry),\n    'Point': makeChildAppender(writePrimitiveGeometry),\n    'Polygon': makeChildAppender(writePolygon),\n    'GeometryCollection': makeChildAppender(writeMultiGeometry)\n});\n/**\n * @param {Node} node Node.\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeMultiGeometry(node, geometry, objectStack) {\n    /** @type {import(\"../xml.js\").NodeStackItem} */\n    var context = { node: node };\n    var type = geometry.getType();\n    /** @type {Array<import(\"../geom/Geometry.js\").default>} */\n    var geometries;\n    /** @type {function(*, Array<*>, string=): (Node|undefined)} */\n    var factory;\n    if (type == GeometryType.GEOMETRY_COLLECTION) {\n        geometries = /** @type {GeometryCollection} */ (geometry).getGeometries();\n        factory = GEOMETRY_NODE_FACTORY;\n    }\n    else if (type == GeometryType.MULTI_POINT) {\n        geometries = /** @type {MultiPoint} */ (geometry).getPoints();\n        factory = POINT_NODE_FACTORY;\n    }\n    else if (type == GeometryType.MULTI_LINE_STRING) {\n        geometries =\n            ( /** @type {MultiLineString} */(geometry)).getLineStrings();\n        factory = LINE_STRING_NODE_FACTORY;\n    }\n    else if (type == GeometryType.MULTI_POLYGON) {\n        geometries =\n            ( /** @type {MultiPolygon} */(geometry)).getPolygons();\n        factory = POLYGON_NODE_FACTORY;\n    }\n    else {\n        assert(false, 39); // Unknown geometry type\n    }\n    pushSerializeAndPop(context, MULTI_GEOMETRY_SERIALIZERS, factory, geometries, objectStack);\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nvar BOUNDARY_IS_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n    'LinearRing': makeChildAppender(writePrimitiveGeometry)\n});\n/**\n * @param {Node} node Node.\n * @param {import(\"../geom/LinearRing.js\").default} linearRing Linear ring.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeBoundaryIs(node, linearRing, objectStack) {\n    var /** @type {import(\"../xml.js\").NodeStackItem} */ context = { node: node };\n    pushSerializeAndPop(context, BOUNDARY_IS_SERIALIZERS, LINEAR_RING_NODE_FACTORY, [linearRing], objectStack);\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nvar PLACEMARK_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n    'ExtendedData': makeChildAppender(writeExtendedData),\n    'MultiGeometry': makeChildAppender(writeMultiGeometry),\n    'LineString': makeChildAppender(writePrimitiveGeometry),\n    'LinearRing': makeChildAppender(writePrimitiveGeometry),\n    'Point': makeChildAppender(writePrimitiveGeometry),\n    'Polygon': makeChildAppender(writePolygon),\n    'Style': makeChildAppender(writeStyle),\n    'address': makeChildAppender(writeStringTextNode),\n    'description': makeChildAppender(writeStringTextNode),\n    'name': makeChildAppender(writeStringTextNode),\n    'open': makeChildAppender(writeBooleanTextNode),\n    'phoneNumber': makeChildAppender(writeStringTextNode),\n    'styleUrl': makeChildAppender(writeStringTextNode),\n    'visibility': makeChildAppender(writeBooleanTextNode)\n});\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\nvar PLACEMARK_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n    'name', 'open', 'visibility', 'address', 'phoneNumber', 'description',\n    'styleUrl', 'Style'\n]);\n/**\n * A factory for creating ExtendedData nodes.\n * @const\n * @type {function(*, Array<*>): (Node|undefined)}\n */\nvar EXTENDEDDATA_NODE_FACTORY = makeSimpleNodeFactory('ExtendedData');\n/**\n * FIXME currently we do serialize arbitrary/custom feature properties\n * (ExtendedData).\n * @param {Element} node Node.\n * @param {Feature} feature Feature.\n * @param {Array<*>} objectStack Object stack.\n * @this {KML}\n */\nfunction writePlacemark(node, feature, objectStack) {\n    var /** @type {import(\"../xml.js\").NodeStackItem} */ context = { node: node };\n    // set id\n    if (feature.getId()) {\n        node.setAttribute('id', /** @type {string} */ (feature.getId()));\n    }\n    // serialize properties (properties unknown to KML are not serialized)\n    var properties = feature.getProperties();\n    // don't export these to ExtendedData\n    var filter = { 'address': 1, 'description': 1, 'name': 1, 'open': 1,\n        'phoneNumber': 1, 'styleUrl': 1, 'visibility': 1 };\n    filter[feature.getGeometryName()] = 1;\n    var keys = Object.keys(properties || {}).sort().filter(function (v) {\n        return !filter[v];\n    });\n    if (keys.length > 0) {\n        var sequence = makeSequence(properties, keys);\n        var namesAndValues = { names: keys, values: sequence };\n        pushSerializeAndPop(context, PLACEMARK_SERIALIZERS, EXTENDEDDATA_NODE_FACTORY, [namesAndValues], objectStack);\n    }\n    var styleFunction = feature.getStyleFunction();\n    if (styleFunction) {\n        // FIXME the styles returned by the style function are supposed to be\n        // resolution-independent here\n        var styles = styleFunction(feature, 0);\n        if (styles) {\n            var style = Array.isArray(styles) ? styles[0] : styles;\n            if (this.writeStyles_) {\n                properties['Style'] = style;\n            }\n            var textStyle = style.getText();\n            if (textStyle) {\n                properties['name'] = textStyle.getText();\n            }\n        }\n    }\n    var parentNode = objectStack[objectStack.length - 1].node;\n    var orderedKeys = PLACEMARK_SEQUENCE[parentNode.namespaceURI];\n    var values = makeSequence(properties, orderedKeys);\n    pushSerializeAndPop(context, PLACEMARK_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n    // serialize geometry\n    var options = /** @type {import(\"./Feature.js\").WriteOptions} */ (objectStack[0]);\n    var geometry = feature.getGeometry();\n    if (geometry) {\n        geometry = transformGeometryWithOptions(geometry, true, options);\n    }\n    pushSerializeAndPop(context, PLACEMARK_SERIALIZERS, GEOMETRY_NODE_FACTORY, [geometry], objectStack);\n}\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\nvar PRIMITIVE_GEOMETRY_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n    'extrude', 'tessellate', 'altitudeMode', 'coordinates'\n]);\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nvar PRIMITIVE_GEOMETRY_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n    'extrude': makeChildAppender(writeBooleanTextNode),\n    'tessellate': makeChildAppender(writeBooleanTextNode),\n    'altitudeMode': makeChildAppender(writeStringTextNode),\n    'coordinates': makeChildAppender(writeCoordinatesTextNode)\n});\n/**\n * @param {Node} node Node.\n * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writePrimitiveGeometry(node, geometry, objectStack) {\n    var flatCoordinates = geometry.getFlatCoordinates();\n    var /** @type {import(\"../xml.js\").NodeStackItem} */ context = { node: node };\n    context['layout'] = geometry.getLayout();\n    context['stride'] = geometry.getStride();\n    // serialize properties (properties unknown to KML are not serialized)\n    var properties = geometry.getProperties();\n    properties.coordinates = flatCoordinates;\n    var parentNode = objectStack[objectStack.length - 1].node;\n    var orderedKeys = PRIMITIVE_GEOMETRY_SEQUENCE[parentNode.namespaceURI];\n    var values = makeSequence(properties, orderedKeys);\n    pushSerializeAndPop(context, PRIMITIVE_GEOMETRY_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nvar POLYGON_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n    'outerBoundaryIs': makeChildAppender(writeBoundaryIs),\n    'innerBoundaryIs': makeChildAppender(writeBoundaryIs)\n});\n/**\n * A factory for creating innerBoundaryIs nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nvar INNER_BOUNDARY_NODE_FACTORY = makeSimpleNodeFactory('innerBoundaryIs');\n/**\n * A factory for creating outerBoundaryIs nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nvar OUTER_BOUNDARY_NODE_FACTORY = makeSimpleNodeFactory('outerBoundaryIs');\n/**\n * @param {Node} node Node.\n * @param {Polygon} polygon Polygon.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writePolygon(node, polygon, objectStack) {\n    var linearRings = polygon.getLinearRings();\n    var outerRing = linearRings.shift();\n    var /** @type {import(\"../xml.js\").NodeStackItem} */ context = { node: node };\n    // inner rings\n    pushSerializeAndPop(context, POLYGON_SERIALIZERS, INNER_BOUNDARY_NODE_FACTORY, linearRings, objectStack);\n    // outer ring\n    pushSerializeAndPop(context, POLYGON_SERIALIZERS, OUTER_BOUNDARY_NODE_FACTORY, [outerRing], objectStack);\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nvar POLY_STYLE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n    'color': makeChildAppender(writeColorTextNode)\n});\n/**\n * A factory for creating coordinates nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nvar COLOR_NODE_FACTORY = makeSimpleNodeFactory('color');\n/**\n * @param {Node} node Node.\n * @param {Fill} style Style.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writePolyStyle(node, style, objectStack) {\n    var /** @type {import(\"../xml.js\").NodeStackItem} */ context = { node: node };\n    pushSerializeAndPop(context, POLY_STYLE_SERIALIZERS, COLOR_NODE_FACTORY, [style.getColor()], objectStack);\n}\n/**\n * @param {Node} node Node to append a TextNode with the scale to.\n * @param {number|undefined} scale Scale.\n */\nfunction writeScaleTextNode(node, scale) {\n    // the Math is to remove any excess decimals created by float arithmetic\n    writeDecimalTextNode(node, Math.round(scale * 1e6) / 1e6);\n}\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\nvar STYLE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n    'IconStyle', 'LabelStyle', 'LineStyle', 'PolyStyle'\n]);\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nvar STYLE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n    'IconStyle': makeChildAppender(writeIconStyle),\n    'LabelStyle': makeChildAppender(writeLabelStyle),\n    'LineStyle': makeChildAppender(writeLineStyle),\n    'PolyStyle': makeChildAppender(writePolyStyle)\n});\n/**\n * @param {Node} node Node.\n * @param {Style} style Style.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeStyle(node, style, objectStack) {\n    var /** @type {import(\"../xml.js\").NodeStackItem} */ context = { node: node };\n    var properties = {};\n    var fillStyle = style.getFill();\n    var strokeStyle = style.getStroke();\n    var imageStyle = style.getImage();\n    var textStyle = style.getText();\n    if (imageStyle && typeof /** @type {?} */ (imageStyle).getSrc === 'function') {\n        properties['IconStyle'] = imageStyle;\n    }\n    if (textStyle) {\n        properties['LabelStyle'] = textStyle;\n    }\n    if (strokeStyle) {\n        properties['LineStyle'] = strokeStyle;\n    }\n    if (fillStyle) {\n        properties['PolyStyle'] = fillStyle;\n    }\n    var parentNode = objectStack[objectStack.length - 1].node;\n    var orderedKeys = STYLE_SEQUENCE[parentNode.namespaceURI];\n    var values = makeSequence(properties, orderedKeys);\n    pushSerializeAndPop(context, STYLE_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n}\n/**\n * @param {Element} node Node to append a TextNode with the Vec2 to.\n * @param {Vec2} vec2 Vec2.\n */\nfunction writeVec2(node, vec2) {\n    node.setAttribute('x', String(vec2.x));\n    node.setAttribute('y', String(vec2.y));\n    node.setAttribute('xunits', vec2.xunits);\n    node.setAttribute('yunits', vec2.yunits);\n}\nexport default KML;\n//# sourceMappingURL=KML.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/format/IGC\n */\nimport Feature from '../Feature.js';\nimport { transformGeometryWithOptions } from './Feature.js';\nimport TextFeature from './TextFeature.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport LineString from '../geom/LineString.js';\nimport { get as getProjection } from '../proj.js';\n/**\n * IGC altitude/z. One of 'barometric', 'gps', 'none'.\n * @enum {string}\n */\nvar IGCZ = {\n    BAROMETRIC: 'barometric',\n    GPS: 'gps',\n    NONE: 'none'\n};\n/**\n * @const\n * @type {RegExp}\n */\nvar B_RECORD_RE = /^B(\\d{2})(\\d{2})(\\d{2})(\\d{2})(\\d{5})([NS])(\\d{3})(\\d{5})([EW])([AV])(\\d{5})(\\d{5})/;\n/**\n * @const\n * @type {RegExp}\n */\nvar H_RECORD_RE = /^H.([A-Z]{3}).*?:(.*)/;\n/**\n * @const\n * @type {RegExp}\n */\nvar HFDTE_RECORD_RE = /^HFDTE(\\d{2})(\\d{2})(\\d{2})/;\n/**\n * A regular expression matching the newline characters `\\r\\n`, `\\r` and `\\n`.\n *\n * @const\n * @type {RegExp}\n */\nvar NEWLINE_RE = /\\r\\n|\\r|\\n/;\n/**\n * @typedef {Object} Options\n * @property {IGCZ|string} [altitudeMode='none'] Altitude mode. Possible\n * values are `'barometric'`, `'gps'`, and `'none'`.\n */\n/**\n * @classdesc\n * Feature format for `*.igc` flight recording files.\n *\n * As IGC sources contain a single feature,\n * {@link module:ol/format/IGC~IGC#readFeatures} will return the feature in an\n * array\n *\n * @api\n */\nvar IGC = /** @class */ (function (_super) {\n    __extends(IGC, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function IGC(opt_options) {\n        var _this = _super.call(this) || this;\n        var options = opt_options ? opt_options : {};\n        /**\n         * @inheritDoc\n         */\n        _this.dataProjection = getProjection('EPSG:4326');\n        /**\n         * @private\n         * @type {IGCZ}\n         */\n        _this.altitudeMode_ = options.altitudeMode ? options.altitudeMode : IGCZ.NONE;\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    IGC.prototype.readFeatureFromText = function (text, opt_options) {\n        var altitudeMode = this.altitudeMode_;\n        var lines = text.split(NEWLINE_RE);\n        /** @type {Object<string, string>} */\n        var properties = {};\n        var flatCoordinates = [];\n        var year = 2000;\n        var month = 0;\n        var day = 1;\n        var lastDateTime = -1;\n        var i, ii;\n        for (i = 0, ii = lines.length; i < ii; ++i) {\n            var line = lines[i];\n            var m = void 0;\n            if (line.charAt(0) == 'B') {\n                m = B_RECORD_RE.exec(line);\n                if (m) {\n                    var hour = parseInt(m[1], 10);\n                    var minute = parseInt(m[2], 10);\n                    var second = parseInt(m[3], 10);\n                    var y = parseInt(m[4], 10) + parseInt(m[5], 10) / 60000;\n                    if (m[6] == 'S') {\n                        y = -y;\n                    }\n                    var x = parseInt(m[7], 10) + parseInt(m[8], 10) / 60000;\n                    if (m[9] == 'W') {\n                        x = -x;\n                    }\n                    flatCoordinates.push(x, y);\n                    if (altitudeMode != IGCZ.NONE) {\n                        var z = void 0;\n                        if (altitudeMode == IGCZ.GPS) {\n                            z = parseInt(m[11], 10);\n                        }\n                        else if (altitudeMode == IGCZ.BAROMETRIC) {\n                            z = parseInt(m[12], 10);\n                        }\n                        else {\n                            z = 0;\n                        }\n                        flatCoordinates.push(z);\n                    }\n                    var dateTime = Date.UTC(year, month, day, hour, minute, second);\n                    // Detect UTC midnight wrap around.\n                    if (dateTime < lastDateTime) {\n                        dateTime = Date.UTC(year, month, day + 1, hour, minute, second);\n                    }\n                    flatCoordinates.push(dateTime / 1000);\n                    lastDateTime = dateTime;\n                }\n            }\n            else if (line.charAt(0) == 'H') {\n                m = HFDTE_RECORD_RE.exec(line);\n                if (m) {\n                    day = parseInt(m[1], 10);\n                    month = parseInt(m[2], 10) - 1;\n                    year = 2000 + parseInt(m[3], 10);\n                }\n                else {\n                    m = H_RECORD_RE.exec(line);\n                    if (m) {\n                        properties[m[1]] = m[2].trim();\n                    }\n                }\n            }\n        }\n        if (flatCoordinates.length === 0) {\n            return null;\n        }\n        var layout = altitudeMode == IGCZ.NONE ? GeometryLayout.XYM : GeometryLayout.XYZM;\n        var lineString = new LineString(flatCoordinates, layout);\n        var feature = new Feature(transformGeometryWithOptions(lineString, false, opt_options));\n        feature.setProperties(properties, true);\n        return feature;\n    };\n    /**\n     * @inheritDoc\n     */\n    IGC.prototype.readFeaturesFromText = function (text, opt_options) {\n        var feature = this.readFeatureFromText(text, opt_options);\n        if (feature) {\n            return [feature];\n        }\n        else {\n            return [];\n        }\n    };\n    return IGC;\n}(TextFeature));\nexport default IGC;\n//# sourceMappingURL=IGC.js.map","/**\n * @module ol/render/Feature\n */\nimport { extend } from '../array.js';\nimport { createOrUpdateFromCoordinate, createOrUpdateFromFlatCoordinates, getCenter, getHeight } from '../extent.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport { linearRingss as linearRingssCenter } from '../geom/flat/center.js';\nimport { getInteriorPointOfArray, getInteriorPointsOfMultiArray } from '../geom/flat/interiorpoint.js';\nimport { interpolatePoint } from '../geom/flat/interpolate.js';\nimport { get as getProjection } from '../proj.js';\nimport { transform2D } from '../geom/flat/transform.js';\nimport { create as createTransform, compose as composeTransform } from '../transform.js';\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nvar tmpTransform = createTransform();\n/**\n * Lightweight, read-only, {@link module:ol/Feature~Feature} and {@link module:ol/geom/Geometry~Geometry} like\n * structure, optimized for vector tile rendering and styling. Geometry access\n * through the API is limited to getting the type and extent of the geometry.\n */\nvar RenderFeature = /** @class */ (function () {\n    /**\n     * @param {GeometryType} type Geometry type.\n     * @param {Array<number>} flatCoordinates Flat coordinates. These always need\n     *     to be right-handed for polygons.\n     * @param {Array<number>|Array<Array<number>>} ends Ends or Endss.\n     * @param {Object<string, *>} properties Properties.\n     * @param {number|string|undefined} id Feature id.\n     */\n    function RenderFeature(type, flatCoordinates, ends, properties, id) {\n        /**\n         * @private\n         * @type {import(\"../extent.js\").Extent|undefined}\n         */\n        this.extent_;\n        /**\n         * @private\n         * @type {number|string|undefined}\n         */\n        this.id_ = id;\n        /**\n         * @private\n         * @type {GeometryType}\n         */\n        this.type_ = type;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        this.flatCoordinates_ = flatCoordinates;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        this.flatInteriorPoints_ = null;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        this.flatMidpoints_ = null;\n        /**\n         * @private\n         * @type {Array<number>|Array<Array<number>>}\n         */\n        this.ends_ = ends;\n        /**\n         * @private\n         * @type {Object<string, *>}\n         */\n        this.properties_ = properties;\n    }\n    /**\n     * Get a feature property by its key.\n     * @param {string} key Key\n     * @return {*} Value for the requested key.\n     * @api\n     */\n    RenderFeature.prototype.get = function (key) {\n        return this.properties_[key];\n    };\n    /**\n     * Get the extent of this feature's geometry.\n     * @return {import(\"../extent.js\").Extent} Extent.\n     * @api\n     */\n    RenderFeature.prototype.getExtent = function () {\n        if (!this.extent_) {\n            this.extent_ = this.type_ === GeometryType.POINT ?\n                createOrUpdateFromCoordinate(this.flatCoordinates_) :\n                createOrUpdateFromFlatCoordinates(this.flatCoordinates_, 0, this.flatCoordinates_.length, 2);\n        }\n        return this.extent_;\n    };\n    /**\n     * @return {Array<number>} Flat interior points.\n     */\n    RenderFeature.prototype.getFlatInteriorPoint = function () {\n        if (!this.flatInteriorPoints_) {\n            var flatCenter = getCenter(this.getExtent());\n            this.flatInteriorPoints_ = getInteriorPointOfArray(this.flatCoordinates_, 0, /** @type {Array<number>} */ (this.ends_), 2, flatCenter, 0);\n        }\n        return this.flatInteriorPoints_;\n    };\n    /**\n     * @return {Array<number>} Flat interior points.\n     */\n    RenderFeature.prototype.getFlatInteriorPoints = function () {\n        if (!this.flatInteriorPoints_) {\n            var flatCenters = linearRingssCenter(this.flatCoordinates_, 0, /** @type {Array<Array<number>>} */ (this.ends_), 2);\n            this.flatInteriorPoints_ = getInteriorPointsOfMultiArray(this.flatCoordinates_, 0, /** @type {Array<Array<number>>} */ (this.ends_), 2, flatCenters);\n        }\n        return this.flatInteriorPoints_;\n    };\n    /**\n     * @return {Array<number>} Flat midpoint.\n     */\n    RenderFeature.prototype.getFlatMidpoint = function () {\n        if (!this.flatMidpoints_) {\n            this.flatMidpoints_ = interpolatePoint(this.flatCoordinates_, 0, this.flatCoordinates_.length, 2, 0.5);\n        }\n        return this.flatMidpoints_;\n    };\n    /**\n     * @return {Array<number>} Flat midpoints.\n     */\n    RenderFeature.prototype.getFlatMidpoints = function () {\n        if (!this.flatMidpoints_) {\n            this.flatMidpoints_ = [];\n            var flatCoordinates = this.flatCoordinates_;\n            var offset = 0;\n            var ends = /** @type {Array<number>} */ (this.ends_);\n            for (var i = 0, ii = ends.length; i < ii; ++i) {\n                var end = ends[i];\n                var midpoint = interpolatePoint(flatCoordinates, offset, end, 2, 0.5);\n                extend(this.flatMidpoints_, midpoint);\n                offset = end;\n            }\n        }\n        return this.flatMidpoints_;\n    };\n    /**\n     * Get the feature identifier.  This is a stable identifier for the feature and\n     * is set when reading data from a remote source.\n     * @return {number|string|undefined} Id.\n     * @api\n     */\n    RenderFeature.prototype.getId = function () {\n        return this.id_;\n    };\n    /**\n     * @return {Array<number>} Flat coordinates.\n     */\n    RenderFeature.prototype.getOrientedFlatCoordinates = function () {\n        return this.flatCoordinates_;\n    };\n    /**\n     * For API compatibility with {@link module:ol/Feature~Feature}, this method is useful when\n     * determining the geometry type in style function (see {@link #getType}).\n     * @return {RenderFeature} Feature.\n     * @api\n     */\n    RenderFeature.prototype.getGeometry = function () {\n        return this;\n    };\n    /**\n     * @param {number} squaredTolerance Squared tolerance.\n     * @return {RenderFeature} Simplified geometry.\n     */\n    RenderFeature.prototype.getSimplifiedGeometry = function (squaredTolerance) {\n        return this;\n    };\n    /**\n     * Get the feature properties.\n     * @return {Object<string, *>} Feature properties.\n     * @api\n     */\n    RenderFeature.prototype.getProperties = function () {\n        return this.properties_;\n    };\n    /**\n     * @return {number} Stride.\n     */\n    RenderFeature.prototype.getStride = function () {\n        return 2;\n    };\n    /**\n     * @return {undefined}\n     */\n    RenderFeature.prototype.getStyleFunction = function () {\n        return undefined;\n    };\n    /**\n     * Get the type of this feature's geometry.\n     * @return {GeometryType} Geometry type.\n     * @api\n     */\n    RenderFeature.prototype.getType = function () {\n        return this.type_;\n    };\n    /**\n     * Transform geometry coordinates from tile pixel space to projected.\n     * The SRS of the source and destination are expected to be the same.\n     *\n     * @param {import(\"../proj.js\").ProjectionLike} source The current projection\n     * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.\n     */\n    RenderFeature.prototype.transform = function (source, destination) {\n        source = getProjection(source);\n        var pixelExtent = source.getExtent();\n        var projectedExtent = source.getWorldExtent();\n        var scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n        composeTransform(tmpTransform, projectedExtent[0], projectedExtent[3], scale, -scale, 0, 0, 0);\n        transform2D(this.flatCoordinates_, 0, this.flatCoordinates_.length, 2, tmpTransform, this.flatCoordinates_);\n    };\n    return RenderFeature;\n}());\n/**\n * @return {Array<number>|Array<Array<number>>} Ends or endss.\n */\nRenderFeature.prototype.getEnds =\n    RenderFeature.prototype.getEndss = function () {\n        return this.ends_;\n    };\n/**\n * @return {Array<number>} Flat coordinates.\n */\nRenderFeature.prototype.getFlatCoordinates =\n    RenderFeature.prototype.getOrientedFlatCoordinates;\nexport default RenderFeature;\n//# sourceMappingURL=Feature.js.map","/**\n * @module ol/format/MVT\n */\n//FIXME Implement projection handling\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { assert } from '../asserts.js';\nimport PBF from 'pbf';\nimport FeatureFormat, { transformGeometryWithOptions } from './Feature.js';\nimport FormatType from './FormatType.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport { linearRingIsClockwise } from '../geom/flat/orient.js';\nimport Projection from '../proj/Projection.js';\nimport Units from '../proj/Units.js';\nimport RenderFeature from '../render/Feature.js';\nimport { get } from '../proj.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"../Feature.js\").FeatureClass} [featureClass] Class for features returned by\n * {@link module:ol/format/MVT#readFeatures}. Set to {@link module:ol/Feature~Feature} to get full editing and geometry\n * support at the cost of decreased rendering performance. The default is\n * {@link module:ol/render/Feature~RenderFeature}, which is optimized for rendering and hit detection.\n * @property {string} [geometryName='geometry'] Geometry name to use when creating features.\n * @property {string} [layerName='layer'] Name of the feature attribute that holds the layer name.\n * @property {Array<string>} [layers] Layers to read features from. If not provided, features will be read from all\n * layers.\n */\n/**\n * @classdesc\n * Feature format for reading data in the Mapbox MVT format.\n *\n * @param {Options=} opt_options Options.\n * @api\n */\nvar MVT = /** @class */ (function (_super) {\n    __extends(MVT, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function MVT(opt_options) {\n        var _this = _super.call(this) || this;\n        var options = opt_options ? opt_options : {};\n        /**\n         * @type {Projection}\n         */\n        _this.dataProjection = new Projection({\n            code: '',\n            units: Units.TILE_PIXELS\n        });\n        /**\n         * @private\n         * @type {import(\"../Feature.js\").FeatureClass}\n         */\n        _this.featureClass_ = options.featureClass ? options.featureClass : RenderFeature;\n        /**\n         * @private\n         * @type {string|undefined}\n         */\n        _this.geometryName_ = options.geometryName;\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.layerName_ = options.layerName ? options.layerName : 'layer';\n        /**\n         * @private\n         * @type {Array<string>}\n         */\n        _this.layers_ = options.layers ? options.layers : null;\n        return _this;\n    }\n    /**\n     * Read the raw geometry from the pbf offset stored in a raw feature's geometry\n     * property.\n     * @param {PBF} pbf PBF.\n     * @param {Object} feature Raw feature.\n     * @param {Array<number>} flatCoordinates Array to store flat coordinates in.\n     * @param {Array<number>} ends Array to store ends in.\n     * @private\n     */\n    MVT.prototype.readRawGeometry_ = function (pbf, feature, flatCoordinates, ends) {\n        pbf.pos = feature.geometry;\n        var end = pbf.readVarint() + pbf.pos;\n        var cmd = 1;\n        var length = 0;\n        var x = 0;\n        var y = 0;\n        var coordsLen = 0;\n        var currentEnd = 0;\n        while (pbf.pos < end) {\n            if (!length) {\n                var cmdLen = pbf.readVarint();\n                cmd = cmdLen & 0x7;\n                length = cmdLen >> 3;\n            }\n            length--;\n            if (cmd === 1 || cmd === 2) {\n                x += pbf.readSVarint();\n                y += pbf.readSVarint();\n                if (cmd === 1) { // moveTo\n                    if (coordsLen > currentEnd) {\n                        ends.push(coordsLen);\n                        currentEnd = coordsLen;\n                    }\n                }\n                flatCoordinates.push(x, y);\n                coordsLen += 2;\n            }\n            else if (cmd === 7) {\n                if (coordsLen > currentEnd) {\n                    // close polygon\n                    flatCoordinates.push(flatCoordinates[currentEnd], flatCoordinates[currentEnd + 1]);\n                    coordsLen += 2;\n                }\n            }\n            else {\n                assert(false, 59); // Invalid command found in the PBF\n            }\n        }\n        if (coordsLen > currentEnd) {\n            ends.push(coordsLen);\n            currentEnd = coordsLen;\n        }\n    };\n    /**\n     * @private\n     * @param {PBF} pbf PBF\n     * @param {Object} rawFeature Raw Mapbox feature.\n     * @param {import(\"./Feature.js\").ReadOptions} options Read options.\n     * @return {import(\"../Feature.js\").FeatureLike} Feature.\n     */\n    MVT.prototype.createFeature_ = function (pbf, rawFeature, options) {\n        var type = rawFeature.type;\n        if (type === 0) {\n            return null;\n        }\n        var feature;\n        var id = rawFeature.id;\n        var values = rawFeature.properties;\n        values[this.layerName_] = rawFeature.layer.name;\n        var flatCoordinates = [];\n        var ends = [];\n        this.readRawGeometry_(pbf, rawFeature, flatCoordinates, ends);\n        var geometryType = getGeometryType(type, ends.length);\n        if (this.featureClass_ === RenderFeature) {\n            feature = new this.featureClass_(geometryType, flatCoordinates, ends, values, id);\n            feature.transform(options.dataProjection, options.featureProjection);\n        }\n        else {\n            var geom = void 0;\n            if (geometryType == GeometryType.POLYGON) {\n                var endss = [];\n                var offset = 0;\n                var prevEndIndex = 0;\n                for (var i = 0, ii = ends.length; i < ii; ++i) {\n                    var end = ends[i];\n                    if (!linearRingIsClockwise(flatCoordinates, offset, end, 2)) {\n                        endss.push(ends.slice(prevEndIndex, i));\n                        prevEndIndex = i;\n                    }\n                    offset = end;\n                }\n                if (endss.length > 1) {\n                    geom = new MultiPolygon(flatCoordinates, GeometryLayout.XY, endss);\n                }\n                else {\n                    geom = new Polygon(flatCoordinates, GeometryLayout.XY, ends);\n                }\n            }\n            else {\n                geom = geometryType === GeometryType.POINT ? new Point(flatCoordinates, GeometryLayout.XY) :\n                    geometryType === GeometryType.LINE_STRING ? new LineString(flatCoordinates, GeometryLayout.XY) :\n                        geometryType === GeometryType.POLYGON ? new Polygon(flatCoordinates, GeometryLayout.XY, ends) :\n                            geometryType === GeometryType.MULTI_POINT ? new MultiPoint(flatCoordinates, GeometryLayout.XY) :\n                                geometryType === GeometryType.MULTI_LINE_STRING ? new MultiLineString(flatCoordinates, GeometryLayout.XY, ends) :\n                                    null;\n            }\n            var ctor = /** @type {typeof import(\"../Feature.js\").default} */ (this.featureClass_);\n            feature = new ctor();\n            if (this.geometryName_) {\n                feature.setGeometryName(this.geometryName_);\n            }\n            var geometry = transformGeometryWithOptions(geom, false, options);\n            feature.setGeometry(geometry);\n            feature.setId(id);\n            feature.setProperties(values, true);\n        }\n        return feature;\n    };\n    /**\n     * @inheritDoc\n     */\n    MVT.prototype.getType = function () {\n        return FormatType.ARRAY_BUFFER;\n    };\n    /**\n     * Read all features.\n     *\n     * @param {ArrayBuffer} source Source.\n     * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n     * @return {Array<import(\"../Feature.js\").FeatureLike>} Features.\n     * @api\n     */\n    MVT.prototype.readFeatures = function (source, opt_options) {\n        var layers = this.layers_;\n        var options = /** @type {import(\"./Feature.js\").ReadOptions} */ (this.adaptOptions(opt_options));\n        var dataProjection = get(options.dataProjection);\n        dataProjection.setWorldExtent(options.extent);\n        options.dataProjection = dataProjection;\n        var pbf = new PBF(/** @type {ArrayBuffer} */ (source));\n        var pbfLayers = pbf.readFields(layersPBFReader, {});\n        var features = [];\n        for (var name_1 in pbfLayers) {\n            if (layers && layers.indexOf(name_1) == -1) {\n                continue;\n            }\n            var pbfLayer = pbfLayers[name_1];\n            var extent = pbfLayer ? [0, 0, pbfLayer.extent, pbfLayer.extent] : null;\n            dataProjection.setExtent(extent);\n            for (var i = 0, ii = pbfLayer.length; i < ii; ++i) {\n                var rawFeature = readRawFeature(pbf, pbfLayer, i);\n                features.push(this.createFeature_(pbf, rawFeature, options));\n            }\n        }\n        return features;\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    MVT.prototype.readProjection = function (source) {\n        return this.dataProjection;\n    };\n    /**\n     * Sets the layers that features will be read from.\n     * @param {Array<string>} layers Layers.\n     * @api\n     */\n    MVT.prototype.setLayers = function (layers) {\n        this.layers_ = layers;\n    };\n    return MVT;\n}(FeatureFormat));\n/**\n * Reader callback for parsing layers.\n * @param {number} tag The tag.\n * @param {Object} layers The layers object.\n * @param {PBF} pbf The PBF.\n */\nfunction layersPBFReader(tag, layers, pbf) {\n    if (tag === 3) {\n        var layer = {\n            keys: [],\n            values: [],\n            features: []\n        };\n        var end = pbf.readVarint() + pbf.pos;\n        pbf.readFields(layerPBFReader, layer, end);\n        layer.length = layer.features.length;\n        if (layer.length) {\n            layers[layer.name] = layer;\n        }\n    }\n}\n/**\n * Reader callback for parsing layer.\n * @param {number} tag The tag.\n * @param {Object} layer The layer object.\n * @param {PBF} pbf The PBF.\n */\nfunction layerPBFReader(tag, layer, pbf) {\n    if (tag === 15) {\n        layer.version = pbf.readVarint();\n    }\n    else if (tag === 1) {\n        layer.name = pbf.readString();\n    }\n    else if (tag === 5) {\n        layer.extent = pbf.readVarint();\n    }\n    else if (tag === 2) {\n        layer.features.push(pbf.pos);\n    }\n    else if (tag === 3) {\n        layer.keys.push(pbf.readString());\n    }\n    else if (tag === 4) {\n        var value = null;\n        var end = pbf.readVarint() + pbf.pos;\n        while (pbf.pos < end) {\n            tag = pbf.readVarint() >> 3;\n            value = tag === 1 ? pbf.readString() :\n                tag === 2 ? pbf.readFloat() :\n                    tag === 3 ? pbf.readDouble() :\n                        tag === 4 ? pbf.readVarint64() :\n                            tag === 5 ? pbf.readVarint() :\n                                tag === 6 ? pbf.readSVarint() :\n                                    tag === 7 ? pbf.readBoolean() : null;\n        }\n        layer.values.push(value);\n    }\n}\n/**\n * Reader callback for parsing feature.\n * @param {number} tag The tag.\n * @param {Object} feature The feature object.\n * @param {PBF} pbf The PBF.\n */\nfunction featurePBFReader(tag, feature, pbf) {\n    if (tag == 1) {\n        feature.id = pbf.readVarint();\n    }\n    else if (tag == 2) {\n        var end = pbf.readVarint() + pbf.pos;\n        while (pbf.pos < end) {\n            var key = feature.layer.keys[pbf.readVarint()];\n            var value = feature.layer.values[pbf.readVarint()];\n            feature.properties[key] = value;\n        }\n    }\n    else if (tag == 3) {\n        feature.type = pbf.readVarint();\n    }\n    else if (tag == 4) {\n        feature.geometry = pbf.pos;\n    }\n}\n/**\n * Read a raw feature from the pbf offset stored at index `i` in the raw layer.\n * @param {PBF} pbf PBF.\n * @param {Object} layer Raw layer.\n * @param {number} i Index of the feature in the raw layer's `features` array.\n * @return {Object} Raw feature.\n */\nfunction readRawFeature(pbf, layer, i) {\n    pbf.pos = layer.features[i];\n    var end = pbf.readVarint() + pbf.pos;\n    var feature = {\n        layer: layer,\n        type: 0,\n        properties: {}\n    };\n    pbf.readFields(featurePBFReader, feature, end);\n    return feature;\n}\n/**\n * @param {number} type The raw feature's geometry type\n * @param {number} numEnds Number of ends of the flat coordinates of the\n * geometry.\n * @return {GeometryType} The geometry type.\n */\nfunction getGeometryType(type, numEnds) {\n    /** @type {GeometryType} */\n    var geometryType;\n    if (type === 1) {\n        geometryType = numEnds === 1 ?\n            GeometryType.POINT : GeometryType.MULTI_POINT;\n    }\n    else if (type === 2) {\n        geometryType = numEnds === 1 ?\n            GeometryType.LINE_STRING :\n            GeometryType.MULTI_LINE_STRING;\n    }\n    else if (type === 3) {\n        geometryType = GeometryType.POLYGON;\n        // MultiPolygon not relevant for rendering - winding order determines\n        // outer rings of polygons.\n    }\n    return geometryType;\n}\nexport default MVT;\n//# sourceMappingURL=MVT.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/format/OSMXML\n */\n// FIXME add typedef for stack state objects\nimport { extend } from '../array.js';\nimport Feature from '../Feature.js';\nimport { transformGeometryWithOptions } from './Feature.js';\nimport XMLFeature from './XMLFeature.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport LineString from '../geom/LineString.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport { isEmpty } from '../obj.js';\nimport { get as getProjection } from '../proj.js';\nimport { pushParseAndPop, makeStructureNS } from '../xml.js';\n/**\n * @const\n * @type {Array<null>}\n */\nvar NAMESPACE_URIS = [null];\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar WAY_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'nd': readNd,\n    'tag': readTag\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'node': readNode,\n    'way': readWay\n});\n/**\n * @classdesc\n * Feature format for reading data in the\n * [OSMXML format](http://wiki.openstreetmap.org/wiki/OSM_XML).\n *\n * @api\n */\nvar OSMXML = /** @class */ (function (_super) {\n    __extends(OSMXML, _super);\n    function OSMXML() {\n        var _this = _super.call(this) || this;\n        /**\n         * @inheritDoc\n         */\n        _this.dataProjection = getProjection('EPSG:4326');\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    OSMXML.prototype.readFeaturesFromNode = function (node, opt_options) {\n        var options = this.getReadOptions(node, opt_options);\n        if (node.localName == 'osm') {\n            var state = pushParseAndPop({\n                nodes: {},\n                ways: [],\n                features: []\n            }, PARSERS, node, [options]);\n            // parse nodes in ways\n            for (var j = 0; j < state.ways.length; j++) {\n                var values = /** @type {Object} */ (state.ways[j]);\n                /** @type {Array<number>} */\n                var flatCoordinates = [];\n                for (var i = 0, ii = values.ndrefs.length; i < ii; i++) {\n                    var point = state.nodes[values.ndrefs[i]];\n                    extend(flatCoordinates, point);\n                }\n                var geometry = void 0;\n                if (values.ndrefs[0] == values.ndrefs[values.ndrefs.length - 1]) {\n                    // closed way\n                    geometry = new Polygon(flatCoordinates, GeometryLayout.XY, [flatCoordinates.length]);\n                }\n                else {\n                    geometry = new LineString(flatCoordinates, GeometryLayout.XY);\n                }\n                transformGeometryWithOptions(geometry, false, options);\n                var feature = new Feature(geometry);\n                feature.setId(values.id);\n                feature.setProperties(values.tags, true);\n                state.features.push(feature);\n            }\n            if (state.features) {\n                return state.features;\n            }\n        }\n        return [];\n    };\n    return OSMXML;\n}(XMLFeature));\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar NODE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'tag': readTag\n});\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction readNode(node, objectStack) {\n    var options = /** @type {import(\"./Feature.js\").ReadOptions} */ (objectStack[0]);\n    var state = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n    var id = node.getAttribute('id');\n    /** @type {import(\"../coordinate.js\").Coordinate} */\n    var coordinates = [\n        parseFloat(node.getAttribute('lon')),\n        parseFloat(node.getAttribute('lat'))\n    ];\n    state.nodes[id] = coordinates;\n    var values = pushParseAndPop({\n        tags: {}\n    }, NODE_PARSERS, node, objectStack);\n    if (!isEmpty(values.tags)) {\n        var geometry = new Point(coordinates);\n        transformGeometryWithOptions(geometry, false, options);\n        var feature = new Feature(geometry);\n        feature.setId(id);\n        feature.setProperties(values.tags, true);\n        state.features.push(feature);\n    }\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction readWay(node, objectStack) {\n    var id = node.getAttribute('id');\n    var values = pushParseAndPop({\n        id: id,\n        ndrefs: [],\n        tags: {}\n    }, WAY_PARSERS, node, objectStack);\n    var state = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n    state.ways.push(values);\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction readNd(node, objectStack) {\n    var values = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n    values.ndrefs.push(node.getAttribute('ref'));\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction readTag(node, objectStack) {\n    var values = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n    values.tags[node.getAttribute('k')] = node.getAttribute('v');\n}\nexport default OSMXML;\n//# sourceMappingURL=OSMXML.js.map","/**\n * @module ol/geom/flat/flip\n */\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Array<number>=} opt_dest Destination.\n * @param {number=} opt_destOffset Destination offset.\n * @return {Array<number>} Flat coordinates.\n */\nexport function flipXY(flatCoordinates, offset, end, stride, opt_dest, opt_destOffset) {\n    var dest, destOffset;\n    if (opt_dest !== undefined) {\n        dest = opt_dest;\n        destOffset = opt_destOffset !== undefined ? opt_destOffset : 0;\n    }\n    else {\n        dest = [];\n        destOffset = 0;\n    }\n    var j = offset;\n    while (j < end) {\n        var x = flatCoordinates[j++];\n        dest[destOffset++] = flatCoordinates[j++];\n        dest[destOffset++] = x;\n        for (var k = 2; k < stride; ++k) {\n            dest[destOffset++] = flatCoordinates[j++];\n        }\n    }\n    dest.length = destOffset;\n    return dest;\n}\n//# sourceMappingURL=flip.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/format/Polyline\n */\nimport { assert } from '../asserts.js';\nimport Feature from '../Feature.js';\nimport { transformGeometryWithOptions } from './Feature.js';\nimport TextFeature from './TextFeature.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport LineString from '../geom/LineString.js';\nimport { getStrideForLayout } from '../geom/SimpleGeometry.js';\nimport { flipXY } from '../geom/flat/flip.js';\nimport { inflateCoordinates } from '../geom/flat/inflate.js';\nimport { get as getProjection } from '../proj.js';\n/**\n * @typedef {Object} Options\n * @property {number} [factor=1e5] The factor by which the coordinates values will be scaled.\n * @property {GeometryLayout} [geometryLayout='XY'] Layout of the\n * feature geometries created by the format reader.\n */\n/**\n * @classdesc\n * Feature format for reading and writing data in the Encoded\n * Polyline Algorithm Format.\n *\n * When reading features, the coordinates are assumed to be in two dimensions\n * and in [latitude, longitude] order.\n *\n * As Polyline sources contain a single feature,\n * {@link module:ol/format/Polyline~Polyline#readFeatures} will return the\n * feature in an array.\n *\n * @api\n */\nvar Polyline = /** @class */ (function (_super) {\n    __extends(Polyline, _super);\n    /**\n     * @param {Options=} opt_options Optional configuration object.\n     */\n    function Polyline(opt_options) {\n        var _this = _super.call(this) || this;\n        var options = opt_options ? opt_options : {};\n        /**\n         * @inheritDoc\n         */\n        _this.dataProjection = getProjection('EPSG:4326');\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.factor_ = options.factor ? options.factor : 1e5;\n        /**\n         * @private\n         * @type {GeometryLayout}\n         */\n        _this.geometryLayout_ = options.geometryLayout ?\n            options.geometryLayout : GeometryLayout.XY;\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    Polyline.prototype.readFeatureFromText = function (text, opt_options) {\n        var geometry = this.readGeometryFromText(text, opt_options);\n        return new Feature(geometry);\n    };\n    /**\n     * @inheritDoc\n     */\n    Polyline.prototype.readFeaturesFromText = function (text, opt_options) {\n        var feature = this.readFeatureFromText(text, opt_options);\n        return [feature];\n    };\n    /**\n     * @inheritDoc\n     */\n    Polyline.prototype.readGeometryFromText = function (text, opt_options) {\n        var stride = getStrideForLayout(this.geometryLayout_);\n        var flatCoordinates = decodeDeltas(text, stride, this.factor_);\n        flipXY(flatCoordinates, 0, flatCoordinates.length, stride, flatCoordinates);\n        var coordinates = inflateCoordinates(flatCoordinates, 0, flatCoordinates.length, stride);\n        var lineString = new LineString(coordinates, this.geometryLayout_);\n        return transformGeometryWithOptions(lineString, false, this.adaptOptions(opt_options));\n    };\n    /**\n     * @inheritDoc\n     */\n    Polyline.prototype.writeFeatureText = function (feature, opt_options) {\n        var geometry = feature.getGeometry();\n        if (geometry) {\n            return this.writeGeometryText(geometry, opt_options);\n        }\n        else {\n            assert(false, 40); // Expected `feature` to have a geometry\n            return '';\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    Polyline.prototype.writeFeaturesText = function (features, opt_options) {\n        return this.writeFeatureText(features[0], opt_options);\n    };\n    /**\n     * @inheritDoc\n     */\n    Polyline.prototype.writeGeometryText = function (geometry, opt_options) {\n        geometry = /** @type {LineString} */\n            (transformGeometryWithOptions(geometry, true, this.adaptOptions(opt_options)));\n        var flatCoordinates = geometry.getFlatCoordinates();\n        var stride = geometry.getStride();\n        flipXY(flatCoordinates, 0, flatCoordinates.length, stride, flatCoordinates);\n        return encodeDeltas(flatCoordinates, stride, this.factor_);\n    };\n    return Polyline;\n}(TextFeature));\n/**\n * Encode a list of n-dimensional points and return an encoded string\n *\n * Attention: This function will modify the passed array!\n *\n * @param {Array<number>} numbers A list of n-dimensional points.\n * @param {number} stride The number of dimension of the points in the list.\n * @param {number=} opt_factor The factor by which the numbers will be\n *     multiplied. The remaining decimal places will get rounded away.\n *     Default is `1e5`.\n * @return {string} The encoded string.\n * @api\n */\nexport function encodeDeltas(numbers, stride, opt_factor) {\n    var factor = opt_factor ? opt_factor : 1e5;\n    var d;\n    var lastNumbers = new Array(stride);\n    for (d = 0; d < stride; ++d) {\n        lastNumbers[d] = 0;\n    }\n    for (var i = 0, ii = numbers.length; i < ii;) {\n        for (d = 0; d < stride; ++d, ++i) {\n            var num = numbers[i];\n            var delta = num - lastNumbers[d];\n            lastNumbers[d] = num;\n            numbers[i] = delta;\n        }\n    }\n    return encodeFloats(numbers, factor);\n}\n/**\n * Decode a list of n-dimensional points from an encoded string\n *\n * @param {string} encoded An encoded string.\n * @param {number} stride The number of dimension of the points in the\n *     encoded string.\n * @param {number=} opt_factor The factor by which the resulting numbers will\n *     be divided. Default is `1e5`.\n * @return {Array<number>} A list of n-dimensional points.\n * @api\n */\nexport function decodeDeltas(encoded, stride, opt_factor) {\n    var factor = opt_factor ? opt_factor : 1e5;\n    var d;\n    /** @type {Array<number>} */\n    var lastNumbers = new Array(stride);\n    for (d = 0; d < stride; ++d) {\n        lastNumbers[d] = 0;\n    }\n    var numbers = decodeFloats(encoded, factor);\n    for (var i = 0, ii = numbers.length; i < ii;) {\n        for (d = 0; d < stride; ++d, ++i) {\n            lastNumbers[d] += numbers[i];\n            numbers[i] = lastNumbers[d];\n        }\n    }\n    return numbers;\n}\n/**\n * Encode a list of floating point numbers and return an encoded string\n *\n * Attention: This function will modify the passed array!\n *\n * @param {Array<number>} numbers A list of floating point numbers.\n * @param {number=} opt_factor The factor by which the numbers will be\n *     multiplied. The remaining decimal places will get rounded away.\n *     Default is `1e5`.\n * @return {string} The encoded string.\n * @api\n */\nexport function encodeFloats(numbers, opt_factor) {\n    var factor = opt_factor ? opt_factor : 1e5;\n    for (var i = 0, ii = numbers.length; i < ii; ++i) {\n        numbers[i] = Math.round(numbers[i] * factor);\n    }\n    return encodeSignedIntegers(numbers);\n}\n/**\n * Decode a list of floating point numbers from an encoded string\n *\n * @param {string} encoded An encoded string.\n * @param {number=} opt_factor The factor by which the result will be divided.\n *     Default is `1e5`.\n * @return {Array<number>} A list of floating point numbers.\n * @api\n */\nexport function decodeFloats(encoded, opt_factor) {\n    var factor = opt_factor ? opt_factor : 1e5;\n    var numbers = decodeSignedIntegers(encoded);\n    for (var i = 0, ii = numbers.length; i < ii; ++i) {\n        numbers[i] /= factor;\n    }\n    return numbers;\n}\n/**\n * Encode a list of signed integers and return an encoded string\n *\n * Attention: This function will modify the passed array!\n *\n * @param {Array<number>} numbers A list of signed integers.\n * @return {string} The encoded string.\n */\nexport function encodeSignedIntegers(numbers) {\n    for (var i = 0, ii = numbers.length; i < ii; ++i) {\n        var num = numbers[i];\n        numbers[i] = (num < 0) ? ~(num << 1) : (num << 1);\n    }\n    return encodeUnsignedIntegers(numbers);\n}\n/**\n * Decode a list of signed integers from an encoded string\n *\n * @param {string} encoded An encoded string.\n * @return {Array<number>} A list of signed integers.\n */\nexport function decodeSignedIntegers(encoded) {\n    var numbers = decodeUnsignedIntegers(encoded);\n    for (var i = 0, ii = numbers.length; i < ii; ++i) {\n        var num = numbers[i];\n        numbers[i] = (num & 1) ? ~(num >> 1) : (num >> 1);\n    }\n    return numbers;\n}\n/**\n * Encode a list of unsigned integers and return an encoded string\n *\n * @param {Array<number>} numbers A list of unsigned integers.\n * @return {string} The encoded string.\n */\nexport function encodeUnsignedIntegers(numbers) {\n    var encoded = '';\n    for (var i = 0, ii = numbers.length; i < ii; ++i) {\n        encoded += encodeUnsignedInteger(numbers[i]);\n    }\n    return encoded;\n}\n/**\n * Decode a list of unsigned integers from an encoded string\n *\n * @param {string} encoded An encoded string.\n * @return {Array<number>} A list of unsigned integers.\n */\nexport function decodeUnsignedIntegers(encoded) {\n    var numbers = [];\n    var current = 0;\n    var shift = 0;\n    for (var i = 0, ii = encoded.length; i < ii; ++i) {\n        var b = encoded.charCodeAt(i) - 63;\n        current |= (b & 0x1f) << shift;\n        if (b < 0x20) {\n            numbers.push(current);\n            current = 0;\n            shift = 0;\n        }\n        else {\n            shift += 5;\n        }\n    }\n    return numbers;\n}\n/**\n * Encode one single unsigned integer and return an encoded string\n *\n * @param {number} num Unsigned integer that should be encoded.\n * @return {string} The encoded string.\n */\nexport function encodeUnsignedInteger(num) {\n    var value, encoded = '';\n    while (num >= 0x20) {\n        value = (0x20 | (num & 0x1f)) + 63;\n        encoded += String.fromCharCode(value);\n        num >>= 5;\n    }\n    value = num + 63;\n    encoded += String.fromCharCode(value);\n    return encoded;\n}\nexport default Polyline;\n//# sourceMappingURL=Polyline.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/format/TopoJSON\n */\nimport Feature from '../Feature.js';\nimport { transformGeometryWithOptions } from './Feature.js';\nimport JSONFeature from './JSONFeature.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport { get as getProjection } from '../proj.js';\n/**\n * @typedef {import(\"topojson-specification\").Topology} TopoJSONTopology\n * @typedef {import(\"topojson-specification\").GeometryCollection} TopoJSONGeometryCollection\n * @typedef {import(\"topojson-specification\").GeometryObject} TopoJSONGeometry\n * @typedef {import(\"topojson-specification\").Point} TopoJSONPoint\n * @typedef {import(\"topojson-specification\").MultiPoint} TopoJSONMultiPoint\n * @typedef {import(\"topojson-specification\").LineString} TopoJSONLineString\n * @typedef {import(\"topojson-specification\").MultiLineString} TopoJSONMultiLineString\n * @typedef {import(\"topojson-specification\").Polygon} TopoJSONPolygon\n * @typedef {import(\"topojson-specification\").MultiPolygon} TopoJSONMultiPolygon\n */\n/**\n * @typedef {Object} Options\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection='EPSG:4326'] Default data projection.\n * @property {string} [layerName] Set the name of the TopoJSON topology\n * `objects`'s children as feature property with the specified name. This means\n * that when set to `'layer'`, a topology like\n * ```\n * {\n *   \"type\": \"Topology\",\n *   \"objects\": {\n *     \"example\": {\n *       \"type\": \"GeometryCollection\",\n *       \"geometries\": []\n *     }\n *   }\n * }\n * ```\n * will result in features that have a property `'layer'` set to `'example'`.\n * When not set, no property will be added to features.\n * @property {Array<string>} [layers] Names of the TopoJSON topology's\n * `objects`'s children to read features from.  If not provided, features will\n * be read from all children.\n */\n/**\n * @classdesc\n * Feature format for reading data in the TopoJSON format.\n *\n * @api\n */\nvar TopoJSON = /** @class */ (function (_super) {\n    __extends(TopoJSON, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function TopoJSON(opt_options) {\n        var _this = _super.call(this) || this;\n        var options = opt_options ? opt_options : {};\n        /**\n         * @private\n         * @type {string|undefined}\n         */\n        _this.layerName_ = options.layerName;\n        /**\n         * @private\n         * @type {Array<string>}\n         */\n        _this.layers_ = options.layers ? options.layers : null;\n        /**\n         * @inheritDoc\n         */\n        _this.dataProjection = getProjection(options.dataProjection ?\n            options.dataProjection : 'EPSG:4326');\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    TopoJSON.prototype.readFeaturesFromObject = function (object, opt_options) {\n        if (object.type == 'Topology') {\n            var topoJSONTopology = /** @type {TopoJSONTopology} */ (object);\n            var transform = void 0, scale = null, translate = null;\n            if (topoJSONTopology['transform']) {\n                transform = topoJSONTopology['transform'];\n                scale = transform['scale'];\n                translate = transform['translate'];\n            }\n            var arcs = topoJSONTopology['arcs'];\n            if (transform) {\n                transformArcs(arcs, scale, translate);\n            }\n            /** @type {Array<Feature>} */\n            var features = [];\n            var topoJSONFeatures = topoJSONTopology['objects'];\n            var property = this.layerName_;\n            var feature = void 0;\n            for (var objectName in topoJSONFeatures) {\n                if (this.layers_ && this.layers_.indexOf(objectName) == -1) {\n                    continue;\n                }\n                if (topoJSONFeatures[objectName].type === 'GeometryCollection') {\n                    feature = /** @type {TopoJSONGeometryCollection} */ (topoJSONFeatures[objectName]);\n                    features.push.apply(features, readFeaturesFromGeometryCollection(feature, arcs, scale, translate, property, objectName, opt_options));\n                }\n                else {\n                    feature = /** @type {TopoJSONGeometry} */ (topoJSONFeatures[objectName]);\n                    features.push(readFeatureFromGeometry(feature, arcs, scale, translate, property, objectName, opt_options));\n                }\n            }\n            return features;\n        }\n        else {\n            return [];\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    TopoJSON.prototype.readProjectionFromObject = function (object) {\n        return this.dataProjection;\n    };\n    return TopoJSON;\n}(JSONFeature));\n/**\n * @const\n * @type {Object<string, function(TopoJSONGeometry, Array, ...Array=): import(\"../geom/Geometry.js\").default>}\n */\nvar GEOMETRY_READERS = {\n    'Point': readPointGeometry,\n    'LineString': readLineStringGeometry,\n    'Polygon': readPolygonGeometry,\n    'MultiPoint': readMultiPointGeometry,\n    'MultiLineString': readMultiLineStringGeometry,\n    'MultiPolygon': readMultiPolygonGeometry\n};\n/**\n * Concatenate arcs into a coordinate array.\n * @param {Array<number>} indices Indices of arcs to concatenate.  Negative\n *     values indicate arcs need to be reversed.\n * @param {Array<Array<import(\"../coordinate.js\").Coordinate>>} arcs Array of arcs (already\n *     transformed).\n * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates array.\n */\nfunction concatenateArcs(indices, arcs) {\n    /** @type {Array<import(\"../coordinate.js\").Coordinate>} */\n    var coordinates = [];\n    var index, arc;\n    for (var i = 0, ii = indices.length; i < ii; ++i) {\n        index = indices[i];\n        if (i > 0) {\n            // splicing together arcs, discard last point\n            coordinates.pop();\n        }\n        if (index >= 0) {\n            // forward arc\n            arc = arcs[index];\n        }\n        else {\n            // reverse arc\n            arc = arcs[~index].slice().reverse();\n        }\n        coordinates.push.apply(coordinates, arc);\n    }\n    // provide fresh copies of coordinate arrays\n    for (var j = 0, jj = coordinates.length; j < jj; ++j) {\n        coordinates[j] = coordinates[j].slice();\n    }\n    return coordinates;\n}\n/**\n * Create a point from a TopoJSON geometry object.\n *\n * @param {TopoJSONPoint} object TopoJSON object.\n * @param {Array<number>} scale Scale for each dimension.\n * @param {Array<number>} translate Translation for each dimension.\n * @return {Point} Geometry.\n */\nfunction readPointGeometry(object, scale, translate) {\n    var coordinates = object['coordinates'];\n    if (scale && translate) {\n        transformVertex(coordinates, scale, translate);\n    }\n    return new Point(coordinates);\n}\n/**\n * Create a multi-point from a TopoJSON geometry object.\n *\n * @param {TopoJSONMultiPoint} object TopoJSON object.\n * @param {Array<number>} scale Scale for each dimension.\n * @param {Array<number>} translate Translation for each dimension.\n * @return {MultiPoint} Geometry.\n */\nfunction readMultiPointGeometry(object, scale, translate) {\n    var coordinates = object['coordinates'];\n    if (scale && translate) {\n        for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n            transformVertex(coordinates[i], scale, translate);\n        }\n    }\n    return new MultiPoint(coordinates);\n}\n/**\n * Create a linestring from a TopoJSON geometry object.\n *\n * @param {TopoJSONLineString} object TopoJSON object.\n * @param {Array<Array<import(\"../coordinate.js\").Coordinate>>} arcs Array of arcs.\n * @return {LineString} Geometry.\n */\nfunction readLineStringGeometry(object, arcs) {\n    var coordinates = concatenateArcs(object['arcs'], arcs);\n    return new LineString(coordinates);\n}\n/**\n * Create a multi-linestring from a TopoJSON geometry object.\n *\n * @param {TopoJSONMultiLineString} object TopoJSON object.\n * @param {Array<Array<import(\"../coordinate.js\").Coordinate>>} arcs Array of arcs.\n * @return {MultiLineString} Geometry.\n */\nfunction readMultiLineStringGeometry(object, arcs) {\n    var coordinates = [];\n    for (var i = 0, ii = object['arcs'].length; i < ii; ++i) {\n        coordinates[i] = concatenateArcs(object['arcs'][i], arcs);\n    }\n    return new MultiLineString(coordinates);\n}\n/**\n * Create a polygon from a TopoJSON geometry object.\n *\n * @param {TopoJSONPolygon} object TopoJSON object.\n * @param {Array<Array<import(\"../coordinate.js\").Coordinate>>} arcs Array of arcs.\n * @return {Polygon} Geometry.\n */\nfunction readPolygonGeometry(object, arcs) {\n    var coordinates = [];\n    for (var i = 0, ii = object['arcs'].length; i < ii; ++i) {\n        coordinates[i] = concatenateArcs(object['arcs'][i], arcs);\n    }\n    return new Polygon(coordinates);\n}\n/**\n * Create a multi-polygon from a TopoJSON geometry object.\n *\n * @param {TopoJSONMultiPolygon} object TopoJSON object.\n * @param {Array<Array<import(\"../coordinate.js\").Coordinate>>} arcs Array of arcs.\n * @return {MultiPolygon} Geometry.\n */\nfunction readMultiPolygonGeometry(object, arcs) {\n    var coordinates = [];\n    for (var i = 0, ii = object['arcs'].length; i < ii; ++i) {\n        // for each polygon\n        var polyArray = object['arcs'][i];\n        var ringCoords = [];\n        for (var j = 0, jj = polyArray.length; j < jj; ++j) {\n            // for each ring\n            ringCoords[j] = concatenateArcs(polyArray[j], arcs);\n        }\n        coordinates[i] = ringCoords;\n    }\n    return new MultiPolygon(coordinates);\n}\n/**\n * Create features from a TopoJSON GeometryCollection object.\n *\n * @param {TopoJSONGeometryCollection} collection TopoJSON Geometry\n *     object.\n * @param {Array<Array<import(\"../coordinate.js\").Coordinate>>} arcs Array of arcs.\n * @param {Array<number>} scale Scale for each dimension.\n * @param {Array<number>} translate Translation for each dimension.\n * @param {string|undefined} property Property to set the `GeometryCollection`'s parent\n *     object to.\n * @param {string} name Name of the `Topology`'s child object.\n * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n * @return {Array<Feature>} Array of features.\n */\nfunction readFeaturesFromGeometryCollection(collection, arcs, scale, translate, property, name, opt_options) {\n    var geometries = collection['geometries'];\n    var features = [];\n    for (var i = 0, ii = geometries.length; i < ii; ++i) {\n        features[i] = readFeatureFromGeometry(geometries[i], arcs, scale, translate, property, name, opt_options);\n    }\n    return features;\n}\n/**\n * Create a feature from a TopoJSON geometry object.\n *\n * @param {TopoJSONGeometry} object TopoJSON geometry object.\n * @param {Array<Array<import(\"../coordinate.js\").Coordinate>>} arcs Array of arcs.\n * @param {Array<number>} scale Scale for each dimension.\n * @param {Array<number>} translate Translation for each dimension.\n * @param {string|undefined} property Property to set the `GeometryCollection`'s parent\n *     object to.\n * @param {string} name Name of the `Topology`'s child object.\n * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n * @return {Feature} Feature.\n */\nfunction readFeatureFromGeometry(object, arcs, scale, translate, property, name, opt_options) {\n    var geometry;\n    var type = object.type;\n    var geometryReader = GEOMETRY_READERS[type];\n    if ((type === 'Point') || (type === 'MultiPoint')) {\n        geometry = geometryReader(object, scale, translate);\n    }\n    else {\n        geometry = geometryReader(object, arcs);\n    }\n    var feature = new Feature();\n    feature.setGeometry(transformGeometryWithOptions(geometry, false, opt_options));\n    if (object.id !== undefined) {\n        feature.setId(object.id);\n    }\n    var properties = object.properties;\n    if (property) {\n        if (!properties) {\n            properties = {};\n        }\n        properties[property] = name;\n    }\n    if (properties) {\n        feature.setProperties(properties, true);\n    }\n    return feature;\n}\n/**\n * Apply a linear transform to array of arcs.  The provided array of arcs is\n * modified in place.\n *\n * @param {Array<Array<import(\"../coordinate.js\").Coordinate>>} arcs Array of arcs.\n * @param {Array<number>} scale Scale for each dimension.\n * @param {Array<number>} translate Translation for each dimension.\n */\nfunction transformArcs(arcs, scale, translate) {\n    for (var i = 0, ii = arcs.length; i < ii; ++i) {\n        transformArc(arcs[i], scale, translate);\n    }\n}\n/**\n * Apply a linear transform to an arc.  The provided arc is modified in place.\n *\n * @param {Array<import(\"../coordinate.js\").Coordinate>} arc Arc.\n * @param {Array<number>} scale Scale for each dimension.\n * @param {Array<number>} translate Translation for each dimension.\n */\nfunction transformArc(arc, scale, translate) {\n    var x = 0;\n    var y = 0;\n    for (var i = 0, ii = arc.length; i < ii; ++i) {\n        var vertex = arc[i];\n        x += vertex[0];\n        y += vertex[1];\n        vertex[0] = x;\n        vertex[1] = y;\n        transformVertex(vertex, scale, translate);\n    }\n}\n/**\n * Apply a linear transform to a vertex.  The provided vertex is modified in\n * place.\n *\n * @param {import(\"../coordinate.js\").Coordinate} vertex Vertex.\n * @param {Array<number>} scale Scale for each dimension.\n * @param {Array<number>} translate Translation for each dimension.\n */\nfunction transformVertex(vertex, scale, translate) {\n    vertex[0] = vertex[0] * scale[0] + translate[0];\n    vertex[1] = vertex[1] * scale[1] + translate[1];\n}\nexport default TopoJSON;\n//# sourceMappingURL=TopoJSON.js.map","/**\n * @module ol/format/filter/Filter\n */\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Base class for WFS GetFeature filters.\n *\n * @abstract\n */\nvar Filter = /** @class */ (function () {\n    /**\n     * @param {!string} tagName The XML tag name for this filter.\n     */\n    function Filter(tagName) {\n        /**\n         * @private\n         * @type {!string}\n         */\n        this.tagName_ = tagName;\n    }\n    /**\n     * The XML tag name for a filter.\n     * @returns {!string} Name.\n     */\n    Filter.prototype.getTagName = function () {\n        return this.tagName_;\n    };\n    return Filter;\n}());\nexport default Filter;\n//# sourceMappingURL=Filter.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/format/filter/LogicalNary\n */\nimport { assert } from '../../asserts.js';\nimport Filter from './Filter.js';\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Base class for WFS GetFeature n-ary logical filters.\n *\n * @abstract\n */\nvar LogicalNary = /** @class */ (function (_super) {\n    __extends(LogicalNary, _super);\n    /**\n     * @param {!string} tagName The XML tag name for this filter.\n     * @param {Array<import(\"./Filter.js\").default>} conditions Conditions.\n     */\n    function LogicalNary(tagName, conditions) {\n        var _this = _super.call(this, tagName) || this;\n        /**\n         * @type {Array<import(\"./Filter.js\").default>}\n         */\n        _this.conditions = conditions;\n        assert(_this.conditions.length >= 2, 57); // At least 2 conditions are required.\n        return _this;\n    }\n    return LogicalNary;\n}(Filter));\nexport default LogicalNary;\n//# sourceMappingURL=LogicalNary.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/format/filter/And\n */\nimport LogicalNary from './LogicalNary.js';\n/**\n * @classdesc\n * Represents a logical `<And>` operator between two or more filter conditions.\n *\n * @abstract\n */\nvar And = /** @class */ (function (_super) {\n    __extends(And, _super);\n    /**\n     * @param {...import(\"./Filter.js\").default} conditions Conditions.\n     */\n    function And(conditions) {\n        return _super.call(this, 'And', Array.prototype.slice.call(arguments)) || this;\n    }\n    return And;\n}(LogicalNary));\nexport default And;\n//# sourceMappingURL=And.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/format/filter/Bbox\n */\nimport Filter from './Filter.js';\n/**\n * @classdesc\n * Represents a `<BBOX>` operator to test whether a geometry-valued property\n * intersects a fixed bounding box\n *\n * @api\n */\nvar Bbox = /** @class */ (function (_super) {\n    __extends(Bbox, _super);\n    /**\n     * @param {!string} geometryName Geometry name to use.\n     * @param {!import(\"../../extent.js\").Extent} extent Extent.\n     * @param {string=} opt_srsName SRS name. No srsName attribute will be set\n     * on geometries when this is not provided.\n     */\n    function Bbox(geometryName, extent, opt_srsName) {\n        var _this = _super.call(this, 'BBOX') || this;\n        /**\n         * @type {!string}\n         */\n        _this.geometryName = geometryName;\n        /**\n         * @type {import(\"../../extent.js\").Extent}\n         */\n        _this.extent = extent;\n        /**\n         * @type {string|undefined}\n         */\n        _this.srsName = opt_srsName;\n        return _this;\n    }\n    return Bbox;\n}(Filter));\nexport default Bbox;\n//# sourceMappingURL=Bbox.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/format/filter/Spatial\n */\nimport Filter from './Filter.js';\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Represents a spatial operator to test whether a geometry-valued property\n * relates to a given geometry.\n *\n * @abstract\n */\nvar Spatial = /** @class */ (function (_super) {\n    __extends(Spatial, _super);\n    /**\n     * @param {!string} tagName The XML tag name for this filter.\n     * @param {!string} geometryName Geometry name to use.\n     * @param {!import(\"../../geom/Geometry.js\").default} geometry Geometry.\n     * @param {string=} opt_srsName SRS name. No srsName attribute will be\n     *    set on geometries when this is not provided.\n     */\n    function Spatial(tagName, geometryName, geometry, opt_srsName) {\n        var _this = _super.call(this, tagName) || this;\n        /**\n         * @type {!string}\n         */\n        _this.geometryName = geometryName || 'the_geom';\n        /**\n         * @type {import(\"../../geom/Geometry.js\").default}\n         */\n        _this.geometry = geometry;\n        /**\n         * @type {string|undefined}\n         */\n        _this.srsName = opt_srsName;\n        return _this;\n    }\n    return Spatial;\n}(Filter));\nexport default Spatial;\n//# sourceMappingURL=Spatial.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/format/filter/Contains\n */\nimport Spatial from './Spatial.js';\n/**\n * @classdesc\n * Represents a `<Contains>` operator to test whether a geometry-valued property\n * contains a given geometry.\n * @api\n */\nvar Contains = /** @class */ (function (_super) {\n    __extends(Contains, _super);\n    /**\n     * @param {!string} geometryName Geometry name to use.\n     * @param {!import(\"../../geom/Geometry.js\").default} geometry Geometry.\n     * @param {string=} opt_srsName SRS name. No srsName attribute will be\n     *    set on geometries when this is not provided.\n     */\n    function Contains(geometryName, geometry, opt_srsName) {\n        return _super.call(this, 'Contains', geometryName, geometry, opt_srsName) || this;\n    }\n    return Contains;\n}(Spatial));\nexport default Contains;\n//# sourceMappingURL=Contains.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/format/filter/Comparison\n */\nimport Filter from './Filter.js';\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Base class for WFS GetFeature property comparison filters.\n *\n * @abstract\n */\nvar Comparison = /** @class */ (function (_super) {\n    __extends(Comparison, _super);\n    /**\n     * @param {!string} tagName The XML tag name for this filter.\n     * @param {!string} propertyName Name of the context property to compare.\n     */\n    function Comparison(tagName, propertyName) {\n        var _this = _super.call(this, tagName) || this;\n        /**\n         * @type {!string}\n         */\n        _this.propertyName = propertyName;\n        return _this;\n    }\n    return Comparison;\n}(Filter));\nexport default Comparison;\n//# sourceMappingURL=Comparison.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/format/filter/During\n */\nimport Comparison from './Comparison.js';\n/**\n * @classdesc\n * Represents a `<During>` comparison operator.\n * @api\n */\nvar During = /** @class */ (function (_super) {\n    __extends(During, _super);\n    /**\n     * @param {!string} propertyName Name of the context property to compare.\n     * @param {!string} begin The begin date in ISO-8601 format.\n     * @param {!string} end The end date in ISO-8601 format.\n     */\n    function During(propertyName, begin, end) {\n        var _this = _super.call(this, 'During', propertyName) || this;\n        /**\n         * @type {!string}\n         */\n        _this.begin = begin;\n        /**\n         * @type {!string}\n         */\n        _this.end = end;\n        return _this;\n    }\n    return During;\n}(Comparison));\nexport default During;\n//# sourceMappingURL=During.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/format/filter/ComparisonBinary\n */\nimport Comparison from './Comparison.js';\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Base class for WFS GetFeature property binary comparison filters.\n *\n * @abstract\n */\nvar ComparisonBinary = /** @class */ (function (_super) {\n    __extends(ComparisonBinary, _super);\n    /**\n     * @param {!string} tagName The XML tag name for this filter.\n     * @param {!string} propertyName Name of the context property to compare.\n     * @param {!(string|number)} expression The value to compare.\n     * @param {boolean=} opt_matchCase Case-sensitive?\n     */\n    function ComparisonBinary(tagName, propertyName, expression, opt_matchCase) {\n        var _this = _super.call(this, tagName, propertyName) || this;\n        /**\n         * @type {!(string|number)}\n         */\n        _this.expression = expression;\n        /**\n         * @type {boolean|undefined}\n         */\n        _this.matchCase = opt_matchCase;\n        return _this;\n    }\n    return ComparisonBinary;\n}(Comparison));\nexport default ComparisonBinary;\n//# sourceMappingURL=ComparisonBinary.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/format/filter/EqualTo\n */\nimport ComparisonBinary from './ComparisonBinary.js';\n/**\n * @classdesc\n * Represents a `<PropertyIsEqualTo>` comparison operator.\n * @api\n */\nvar EqualTo = /** @class */ (function (_super) {\n    __extends(EqualTo, _super);\n    /**\n     * @param {!string} propertyName Name of the context property to compare.\n     * @param {!(string|number)} expression The value to compare.\n     * @param {boolean=} opt_matchCase Case-sensitive?\n     */\n    function EqualTo(propertyName, expression, opt_matchCase) {\n        return _super.call(this, 'PropertyIsEqualTo', propertyName, expression, opt_matchCase) || this;\n    }\n    return EqualTo;\n}(ComparisonBinary));\nexport default EqualTo;\n//# sourceMappingURL=EqualTo.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/format/filter/GreaterThan\n */\nimport ComparisonBinary from './ComparisonBinary.js';\n/**\n * @classdesc\n * Represents a `<PropertyIsGreaterThan>` comparison operator.\n * @api\n */\nvar GreaterThan = /** @class */ (function (_super) {\n    __extends(GreaterThan, _super);\n    /**\n     * @param {!string} propertyName Name of the context property to compare.\n     * @param {!number} expression The value to compare.\n     */\n    function GreaterThan(propertyName, expression) {\n        return _super.call(this, 'PropertyIsGreaterThan', propertyName, expression) || this;\n    }\n    return GreaterThan;\n}(ComparisonBinary));\nexport default GreaterThan;\n//# sourceMappingURL=GreaterThan.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/format/filter/GreaterThanOrEqualTo\n */\nimport ComparisonBinary from './ComparisonBinary.js';\n/**\n * @classdesc\n * Represents a `<PropertyIsGreaterThanOrEqualTo>` comparison operator.\n * @api\n */\nvar GreaterThanOrEqualTo = /** @class */ (function (_super) {\n    __extends(GreaterThanOrEqualTo, _super);\n    /**\n     * @param {!string} propertyName Name of the context property to compare.\n     * @param {!number} expression The value to compare.\n     */\n    function GreaterThanOrEqualTo(propertyName, expression) {\n        return _super.call(this, 'PropertyIsGreaterThanOrEqualTo', propertyName, expression) || this;\n    }\n    return GreaterThanOrEqualTo;\n}(ComparisonBinary));\nexport default GreaterThanOrEqualTo;\n//# sourceMappingURL=GreaterThanOrEqualTo.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/format/filter/Intersects\n */\nimport Spatial from './Spatial.js';\n/**\n * @classdesc\n * Represents a `<Intersects>` operator to test whether a geometry-valued property\n * intersects a given geometry.\n * @api\n */\nvar Intersects = /** @class */ (function (_super) {\n    __extends(Intersects, _super);\n    /**\n     * @param {!string} geometryName Geometry name to use.\n     * @param {!import(\"../../geom/Geometry.js\").default} geometry Geometry.\n     * @param {string=} opt_srsName SRS name. No srsName attribute will be\n     *    set on geometries when this is not provided.\n     */\n    function Intersects(geometryName, geometry, opt_srsName) {\n        return _super.call(this, 'Intersects', geometryName, geometry, opt_srsName) || this;\n    }\n    return Intersects;\n}(Spatial));\nexport default Intersects;\n//# sourceMappingURL=Intersects.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/format/filter/IsBetween\n */\nimport Comparison from './Comparison.js';\n/**\n * @classdesc\n * Represents a `<PropertyIsBetween>` comparison operator.\n * @api\n */\nvar IsBetween = /** @class */ (function (_super) {\n    __extends(IsBetween, _super);\n    /**\n     * @param {!string} propertyName Name of the context property to compare.\n     * @param {!number} lowerBoundary The lower bound of the range.\n     * @param {!number} upperBoundary The upper bound of the range.\n     */\n    function IsBetween(propertyName, lowerBoundary, upperBoundary) {\n        var _this = _super.call(this, 'PropertyIsBetween', propertyName) || this;\n        /**\n         * @type {!number}\n         */\n        _this.lowerBoundary = lowerBoundary;\n        /**\n         * @type {!number}\n         */\n        _this.upperBoundary = upperBoundary;\n        return _this;\n    }\n    return IsBetween;\n}(Comparison));\nexport default IsBetween;\n//# sourceMappingURL=IsBetween.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/format/filter/IsLike\n */\nimport Comparison from './Comparison.js';\n/**\n * @classdesc\n * Represents a `<PropertyIsLike>` comparison operator.\n * @api\n */\nvar IsLike = /** @class */ (function (_super) {\n    __extends(IsLike, _super);\n    /**\n     * [constructor description]\n     * @param {!string} propertyName Name of the context property to compare.\n     * @param {!string} pattern Text pattern.\n     * @param {string=} opt_wildCard Pattern character which matches any sequence of\n     *    zero or more string characters. Default is '*'.\n     * @param {string=} opt_singleChar pattern character which matches any single\n     *    string character. Default is '.'.\n     * @param {string=} opt_escapeChar Escape character which can be used to escape\n     *    the pattern characters. Default is '!'.\n     * @param {boolean=} opt_matchCase Case-sensitive?\n     */\n    function IsLike(propertyName, pattern, opt_wildCard, opt_singleChar, opt_escapeChar, opt_matchCase) {\n        var _this = _super.call(this, 'PropertyIsLike', propertyName) || this;\n        /**\n         * @type {!string}\n         */\n        _this.pattern = pattern;\n        /**\n         * @type {!string}\n         */\n        _this.wildCard = (opt_wildCard !== undefined) ? opt_wildCard : '*';\n        /**\n         * @type {!string}\n         */\n        _this.singleChar = (opt_singleChar !== undefined) ? opt_singleChar : '.';\n        /**\n         * @type {!string}\n         */\n        _this.escapeChar = (opt_escapeChar !== undefined) ? opt_escapeChar : '!';\n        /**\n         * @type {boolean|undefined}\n         */\n        _this.matchCase = opt_matchCase;\n        return _this;\n    }\n    return IsLike;\n}(Comparison));\nexport default IsLike;\n//# sourceMappingURL=IsLike.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/format/filter/IsNull\n */\nimport Comparison from './Comparison.js';\n/**\n * @classdesc\n * Represents a `<PropertyIsNull>` comparison operator.\n * @api\n */\nvar IsNull = /** @class */ (function (_super) {\n    __extends(IsNull, _super);\n    /**\n     * @param {!string} propertyName Name of the context property to compare.\n     */\n    function IsNull(propertyName) {\n        return _super.call(this, 'PropertyIsNull', propertyName) || this;\n    }\n    return IsNull;\n}(Comparison));\nexport default IsNull;\n//# sourceMappingURL=IsNull.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/format/filter/LessThan\n */\nimport ComparisonBinary from './ComparisonBinary.js';\n/**\n * @classdesc\n * Represents a `<PropertyIsLessThan>` comparison operator.\n * @api\n */\nvar LessThan = /** @class */ (function (_super) {\n    __extends(LessThan, _super);\n    /**\n     * @param {!string} propertyName Name of the context property to compare.\n     * @param {!number} expression The value to compare.\n     */\n    function LessThan(propertyName, expression) {\n        return _super.call(this, 'PropertyIsLessThan', propertyName, expression) || this;\n    }\n    return LessThan;\n}(ComparisonBinary));\nexport default LessThan;\n//# sourceMappingURL=LessThan.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/format/filter/LessThanOrEqualTo\n */\nimport ComparisonBinary from './ComparisonBinary.js';\n/**\n * @classdesc\n * Represents a `<PropertyIsLessThanOrEqualTo>` comparison operator.\n * @api\n */\nvar LessThanOrEqualTo = /** @class */ (function (_super) {\n    __extends(LessThanOrEqualTo, _super);\n    /**\n     * @param {!string} propertyName Name of the context property to compare.\n     * @param {!number} expression The value to compare.\n     */\n    function LessThanOrEqualTo(propertyName, expression) {\n        return _super.call(this, 'PropertyIsLessThanOrEqualTo', propertyName, expression) || this;\n    }\n    return LessThanOrEqualTo;\n}(ComparisonBinary));\nexport default LessThanOrEqualTo;\n//# sourceMappingURL=LessThanOrEqualTo.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/format/filter/Not\n */\nimport Filter from './Filter.js';\n/**\n * @classdesc\n * Represents a logical `<Not>` operator for a filter condition.\n * @api\n */\nvar Not = /** @class */ (function (_super) {\n    __extends(Not, _super);\n    /**\n     * @param {!import(\"./Filter.js\").default} condition Filter condition.\n     */\n    function Not(condition) {\n        var _this = _super.call(this, 'Not') || this;\n        /**\n         * @type {!import(\"./Filter.js\").default}\n         */\n        _this.condition = condition;\n        return _this;\n    }\n    return Not;\n}(Filter));\nexport default Not;\n//# sourceMappingURL=Not.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/format/filter/NotEqualTo\n */\nimport ComparisonBinary from './ComparisonBinary.js';\n/**\n * @classdesc\n * Represents a `<PropertyIsNotEqualTo>` comparison operator.\n * @api\n */\nvar NotEqualTo = /** @class */ (function (_super) {\n    __extends(NotEqualTo, _super);\n    /**\n     * @param {!string} propertyName Name of the context property to compare.\n     * @param {!(string|number)} expression The value to compare.\n     * @param {boolean=} opt_matchCase Case-sensitive?\n     */\n    function NotEqualTo(propertyName, expression, opt_matchCase) {\n        return _super.call(this, 'PropertyIsNotEqualTo', propertyName, expression, opt_matchCase) || this;\n    }\n    return NotEqualTo;\n}(ComparisonBinary));\nexport default NotEqualTo;\n//# sourceMappingURL=NotEqualTo.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/format/filter/Or\n */\nimport LogicalNary from './LogicalNary.js';\n/**\n * @classdesc\n * Represents a logical `<Or>` operator between two ore more filter conditions.\n * @api\n */\nvar Or = /** @class */ (function (_super) {\n    __extends(Or, _super);\n    /**\n     * @param {...import(\"./Filter.js\").default} conditions Conditions.\n     */\n    function Or(conditions) {\n        return _super.call(this, 'Or', Array.prototype.slice.call(arguments)) || this;\n    }\n    return Or;\n}(LogicalNary));\nexport default Or;\n//# sourceMappingURL=Or.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/format/filter/Within\n */\nimport Spatial from './Spatial.js';\n/**\n * @classdesc\n * Represents a `<Within>` operator to test whether a geometry-valued property\n * is within a given geometry.\n * @api\n */\nvar Within = /** @class */ (function (_super) {\n    __extends(Within, _super);\n    /**\n     * @param {!string} geometryName Geometry name to use.\n     * @param {!import(\"../../geom/Geometry.js\").default} geometry Geometry.\n     * @param {string=} opt_srsName SRS name. No srsName attribute will be\n     *    set on geometries when this is not provided.\n     */\n    function Within(geometryName, geometry, opt_srsName) {\n        return _super.call(this, 'Within', geometryName, geometry, opt_srsName) || this;\n    }\n    return Within;\n}(Spatial));\nexport default Within;\n//# sourceMappingURL=Within.js.map","/**\n * @module ol/format/filter\n */\nimport And from './filter/And.js';\nimport Bbox from './filter/Bbox.js';\nimport Contains from './filter/Contains.js';\nimport During from './filter/During.js';\nimport EqualTo from './filter/EqualTo.js';\nimport GreaterThan from './filter/GreaterThan.js';\nimport GreaterThanOrEqualTo from './filter/GreaterThanOrEqualTo.js';\nimport Intersects from './filter/Intersects.js';\nimport IsBetween from './filter/IsBetween.js';\nimport IsLike from './filter/IsLike.js';\nimport IsNull from './filter/IsNull.js';\nimport LessThan from './filter/LessThan.js';\nimport LessThanOrEqualTo from './filter/LessThanOrEqualTo.js';\nimport Not from './filter/Not.js';\nimport NotEqualTo from './filter/NotEqualTo.js';\nimport Or from './filter/Or.js';\nimport Within from './filter/Within.js';\n/**\n * Create a logical `<And>` operator between two or more filter conditions.\n *\n * @param {...import(\"./filter/Filter.js\").default} conditions Filter conditions.\n * @returns {!And} `<And>` operator.\n * @api\n */\nexport function and(conditions) {\n    var params = [null].concat(Array.prototype.slice.call(arguments));\n    return new (Function.prototype.bind.apply(And, params));\n}\n/**\n * Create a logical `<Or>` operator between two or more filter conditions.\n *\n * @param {...import(\"./filter/Filter.js\").default} conditions Filter conditions.\n * @returns {!Or} `<Or>` operator.\n * @api\n */\nexport function or(conditions) {\n    var params = [null].concat(Array.prototype.slice.call(arguments));\n    return new (Function.prototype.bind.apply(Or, params));\n}\n/**\n * Represents a logical `<Not>` operator for a filter condition.\n *\n * @param {!import(\"./filter/Filter.js\").default} condition Filter condition.\n * @returns {!Not} `<Not>` operator.\n * @api\n */\nexport function not(condition) {\n    return new Not(condition);\n}\n/**\n * Create a `<BBOX>` operator to test whether a geometry-valued property\n * intersects a fixed bounding box\n *\n * @param {!string} geometryName Geometry name to use.\n * @param {!import(\"../extent.js\").Extent} extent Extent.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @returns {!Bbox} `<BBOX>` operator.\n * @api\n */\nexport function bbox(geometryName, extent, opt_srsName) {\n    return new Bbox(geometryName, extent, opt_srsName);\n}\n/**\n * Create a `<Contains>` operator to test whether a geometry-valued property\n * contains a given geometry.\n *\n * @param {!string} geometryName Geometry name to use.\n * @param {!import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @returns {!Contains} `<Contains>` operator.\n * @api\n */\nexport function contains(geometryName, geometry, opt_srsName) {\n    return new Contains(geometryName, geometry, opt_srsName);\n}\n/**\n * Create a `<Intersects>` operator to test whether a geometry-valued property\n * intersects a given geometry.\n *\n * @param {!string} geometryName Geometry name to use.\n * @param {!import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @returns {!Intersects} `<Intersects>` operator.\n * @api\n */\nexport function intersects(geometryName, geometry, opt_srsName) {\n    return new Intersects(geometryName, geometry, opt_srsName);\n}\n/**\n * Create a `<Within>` operator to test whether a geometry-valued property\n * is within a given geometry.\n *\n * @param {!string} geometryName Geometry name to use.\n * @param {!import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @returns {!Within} `<Within>` operator.\n * @api\n */\nexport function within(geometryName, geometry, opt_srsName) {\n    return new Within(geometryName, geometry, opt_srsName);\n}\n/**\n * Creates a `<PropertyIsEqualTo>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!(string|number)} expression The value to compare.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @returns {!EqualTo} `<PropertyIsEqualTo>` operator.\n * @api\n */\nexport function equalTo(propertyName, expression, opt_matchCase) {\n    return new EqualTo(propertyName, expression, opt_matchCase);\n}\n/**\n * Creates a `<PropertyIsNotEqualTo>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!(string|number)} expression The value to compare.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @returns {!NotEqualTo} `<PropertyIsNotEqualTo>` operator.\n * @api\n */\nexport function notEqualTo(propertyName, expression, opt_matchCase) {\n    return new NotEqualTo(propertyName, expression, opt_matchCase);\n}\n/**\n * Creates a `<PropertyIsLessThan>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @returns {!LessThan} `<PropertyIsLessThan>` operator.\n * @api\n */\nexport function lessThan(propertyName, expression) {\n    return new LessThan(propertyName, expression);\n}\n/**\n * Creates a `<PropertyIsLessThanOrEqualTo>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @returns {!LessThanOrEqualTo} `<PropertyIsLessThanOrEqualTo>` operator.\n * @api\n */\nexport function lessThanOrEqualTo(propertyName, expression) {\n    return new LessThanOrEqualTo(propertyName, expression);\n}\n/**\n * Creates a `<PropertyIsGreaterThan>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @returns {!GreaterThan} `<PropertyIsGreaterThan>` operator.\n * @api\n */\nexport function greaterThan(propertyName, expression) {\n    return new GreaterThan(propertyName, expression);\n}\n/**\n * Creates a `<PropertyIsGreaterThanOrEqualTo>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @returns {!GreaterThanOrEqualTo} `<PropertyIsGreaterThanOrEqualTo>` operator.\n * @api\n */\nexport function greaterThanOrEqualTo(propertyName, expression) {\n    return new GreaterThanOrEqualTo(propertyName, expression);\n}\n/**\n * Creates a `<PropertyIsNull>` comparison operator to test whether a property value\n * is null.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @returns {!IsNull} `<PropertyIsNull>` operator.\n * @api\n */\nexport function isNull(propertyName) {\n    return new IsNull(propertyName);\n}\n/**\n * Creates a `<PropertyIsBetween>` comparison operator to test whether an expression\n * value lies within a range given by a lower and upper bound (inclusive).\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} lowerBoundary The lower bound of the range.\n * @param {!number} upperBoundary The upper bound of the range.\n * @returns {!IsBetween} `<PropertyIsBetween>` operator.\n * @api\n */\nexport function between(propertyName, lowerBoundary, upperBoundary) {\n    return new IsBetween(propertyName, lowerBoundary, upperBoundary);\n}\n/**\n * Represents a `<PropertyIsLike>` comparison operator that matches a string property\n * value against a text pattern.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!string} pattern Text pattern.\n * @param {string=} opt_wildCard Pattern character which matches any sequence of\n *    zero or more string characters. Default is '*'.\n * @param {string=} opt_singleChar pattern character which matches any single\n *    string character. Default is '.'.\n * @param {string=} opt_escapeChar Escape character which can be used to escape\n *    the pattern characters. Default is '!'.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @returns {!IsLike} `<PropertyIsLike>` operator.\n * @api\n */\nexport function like(propertyName, pattern, opt_wildCard, opt_singleChar, opt_escapeChar, opt_matchCase) {\n    return new IsLike(propertyName, pattern, opt_wildCard, opt_singleChar, opt_escapeChar, opt_matchCase);\n}\n/**\n * Create a `<During>` temporal operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!string} begin The begin date in ISO-8601 format.\n * @param {!string} end The end date in ISO-8601 format.\n * @returns {!During} `<During>` operator.\n * @api\n */\nexport function during(propertyName, begin, end) {\n    return new During(propertyName, begin, end);\n}\n//# sourceMappingURL=filter.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/format/WFS\n */\nimport { assert } from '../asserts.js';\nimport GML2 from './GML2.js';\nimport GML3 from './GML3.js';\nimport GMLBase, { GMLNS } from './GMLBase.js';\nimport { and as andFilter, bbox as bboxFilter } from './filter.js';\nimport XMLFeature from './XMLFeature.js';\nimport { readNonNegativeIntegerString, readNonNegativeInteger, writeStringTextNode } from './xsd.js';\nimport { assign } from '../obj.js';\nimport { get as getProjection } from '../proj.js';\nimport { createElementNS, isDocument, makeArrayPusher, makeChildAppender, makeObjectPropertySetter, makeSimpleNodeFactory, parse, parseNode, pushParseAndPop, pushSerializeAndPop, XML_SCHEMA_INSTANCE_URI } from '../xml.js';\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar FEATURE_COLLECTION_PARSERS = {\n    'http://www.opengis.net/gml': {\n        'boundedBy': makeObjectPropertySetter(GMLBase.prototype.readGeometryElement, 'bounds')\n    }\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar TRANSACTION_SUMMARY_PARSERS = {\n    'http://www.opengis.net/wfs': {\n        'totalInserted': makeObjectPropertySetter(readNonNegativeInteger),\n        'totalUpdated': makeObjectPropertySetter(readNonNegativeInteger),\n        'totalDeleted': makeObjectPropertySetter(readNonNegativeInteger)\n    }\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar TRANSACTION_RESPONSE_PARSERS = {\n    'http://www.opengis.net/wfs': {\n        'TransactionSummary': makeObjectPropertySetter(readTransactionSummary, 'transactionSummary'),\n        'InsertResults': makeObjectPropertySetter(readInsertResults, 'insertIds')\n    }\n};\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nvar QUERY_SERIALIZERS = {\n    'http://www.opengis.net/wfs': {\n        'PropertyName': makeChildAppender(writeStringTextNode)\n    }\n};\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nvar TRANSACTION_SERIALIZERS = {\n    'http://www.opengis.net/wfs': {\n        'Insert': makeChildAppender(writeFeature),\n        'Update': makeChildAppender(writeUpdate),\n        'Delete': makeChildAppender(writeDelete),\n        'Property': makeChildAppender(writeProperty),\n        'Native': makeChildAppender(writeNative)\n    }\n};\n/**\n * @typedef {Object} Options\n * @property {Object<string, string>|string} [featureNS] The namespace URI used for features.\n * @property {Array<string>|string} [featureType] The feature type to parse. Only used for read operations.\n * @property {GMLBase} [gmlFormat] The GML format to use to parse the response. Default is `ol/format/GML3`.\n * @property {string} [schemaLocation] Optional schemaLocation to use for serialization, this will override the default.\n */\n/**\n * @typedef {Object} WriteGetFeatureOptions\n * @property {string} featureNS The namespace URI used for features.\n * @property {string} featurePrefix The prefix for the feature namespace.\n * @property {Array<string>} featureTypes The feature type names.\n * @property {string} [srsName] SRS name. No srsName attribute will be set on\n * geometries when this is not provided.\n * @property {string} [handle] Handle.\n * @property {string} [outputFormat] Output format.\n * @property {number} [maxFeatures] Maximum number of features to fetch.\n * @property {string} [geometryName] Geometry name to use in a BBOX filter.\n * @property {Array<string>} [propertyNames] Optional list of property names to serialize.\n * @property {string} [viewParams] viewParams GeoServer vendor parameter.\n * @property {number} [startIndex] Start index to use for WFS paging. This is a\n * WFS 2.0 feature backported to WFS 1.1.0 by some Web Feature Services.\n * @property {number} [count] Number of features to retrieve when paging. This is a\n * WFS 2.0 feature backported to WFS 1.1.0 by some Web Feature Services. Please note that some\n * Web Feature Services have repurposed `maxfeatures` instead.\n * @property {import(\"../extent.js\").Extent} [bbox] Extent to use for the BBOX filter.\n * @property {import(\"./filter/Filter.js\").default} [filter] Filter condition. See\n * {@link module:ol/format/Filter} for more information.\n * @property {string} [resultType] Indicates what response should be returned,\n * E.g. `hits` only includes the `numberOfFeatures` attribute in the response and no features.\n */\n/**\n * @typedef {Object} WriteTransactionOptions\n * @property {string} featureNS The namespace URI used for features.\n * @property {string} featurePrefix The prefix for the feature namespace.\n * @property {string} featureType The feature type name.\n * @property {string} [srsName] SRS name. No srsName attribute will be set on\n * geometries when this is not provided.\n * @property {string} [handle] Handle.\n * @property {boolean} [hasZ] Must be set to true if the transaction is for\n * a 3D layer. This will allow the Z coordinate to be included in the transaction.\n * @property {Array<Object>} nativeElements Native elements. Currently not supported.\n * @property {import(\"./GMLBase.js\").Options} [gmlOptions] GML options for the WFS transaction writer.\n * @property {string} [version='1.1.0'] WFS version to use for the transaction. Can be either `1.0.0` or `1.1.0`.\n */\n/**\n * Number of features; bounds/extent.\n * @typedef {Object} FeatureCollectionMetadata\n * @property {number} numberOfFeatures\n * @property {import(\"../extent.js\").Extent} bounds\n */\n/**\n * Total deleted; total inserted; total updated; array of insert ids.\n * @typedef {Object} TransactionResponse\n * @property {number} totalDeleted\n * @property {number} totalInserted\n * @property {number} totalUpdated\n * @property {Array<string>} insertIds\n */\n/**\n * @type {string}\n */\nvar FEATURE_PREFIX = 'feature';\n/**\n * @type {string}\n */\nvar XMLNS = 'http://www.w3.org/2000/xmlns/';\n/**\n * @type {string}\n */\nvar OGCNS = 'http://www.opengis.net/ogc';\n/**\n * @type {string}\n */\nvar WFSNS = 'http://www.opengis.net/wfs';\n/**\n * @type {string}\n */\nvar FESNS = 'http://www.opengis.net/fes';\n/**\n * @type {Object<string, string>}\n */\nvar SCHEMA_LOCATIONS = {\n    '1.1.0': 'http://www.opengis.net/wfs http://schemas.opengis.net/wfs/1.1.0/wfs.xsd',\n    '1.0.0': 'http://www.opengis.net/wfs http://schemas.opengis.net/wfs/1.0.0/wfs.xsd'\n};\n/**\n * @const\n * @type {string}\n */\nvar DEFAULT_VERSION = '1.1.0';\n/**\n * @classdesc\n * Feature format for reading and writing data in the WFS format.\n * By default, supports WFS version 1.1.0. You can pass a GML format\n * as option if you want to read a WFS that contains GML2 (WFS 1.0.0).\n * Also see {@link module:ol/format/GMLBase~GMLBase} which is used by this format.\n *\n * @api\n */\nvar WFS = /** @class */ (function (_super) {\n    __extends(WFS, _super);\n    /**\n     * @param {Options=} opt_options Optional configuration object.\n     */\n    function WFS(opt_options) {\n        var _this = _super.call(this) || this;\n        var options = opt_options ? opt_options : {};\n        /**\n         * @private\n         * @type {Array<string>|string|undefined}\n         */\n        _this.featureType_ = options.featureType;\n        /**\n         * @private\n         * @type {Object<string, string>|string|undefined}\n         */\n        _this.featureNS_ = options.featureNS;\n        /**\n         * @private\n         * @type {GMLBase}\n         */\n        _this.gmlFormat_ = options.gmlFormat ?\n            options.gmlFormat : new GML3();\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.schemaLocation_ = options.schemaLocation ?\n            options.schemaLocation : SCHEMA_LOCATIONS[DEFAULT_VERSION];\n        return _this;\n    }\n    /**\n     * @return {Array<string>|string|undefined} featureType\n     */\n    WFS.prototype.getFeatureType = function () {\n        return this.featureType_;\n    };\n    /**\n     * @param {Array<string>|string|undefined} featureType Feature type(s) to parse.\n     */\n    WFS.prototype.setFeatureType = function (featureType) {\n        this.featureType_ = featureType;\n    };\n    /**\n     * @inheritDoc\n     */\n    WFS.prototype.readFeaturesFromNode = function (node, opt_options) {\n        /** @type {import(\"../xml.js\").NodeStackItem} */\n        var context = {\n            node: node\n        };\n        assign(context, {\n            'featureType': this.featureType_,\n            'featureNS': this.featureNS_\n        });\n        assign(context, this.getReadOptions(node, opt_options ? opt_options : {}));\n        var objectStack = [context];\n        this.gmlFormat_.FEATURE_COLLECTION_PARSERS[GMLNS]['featureMember'] =\n            makeArrayPusher(GMLBase.prototype.readFeaturesInternal);\n        var features = pushParseAndPop([], this.gmlFormat_.FEATURE_COLLECTION_PARSERS, node, objectStack, this.gmlFormat_);\n        if (!features) {\n            features = [];\n        }\n        return features;\n    };\n    /**\n     * Read transaction response of the source.\n     *\n     * @param {Document|Element|Object|string} source Source.\n     * @return {TransactionResponse|undefined} Transaction response.\n     * @api\n     */\n    WFS.prototype.readTransactionResponse = function (source) {\n        if (!source) {\n            return undefined;\n        }\n        else if (typeof source === 'string') {\n            var doc = parse(source);\n            return this.readTransactionResponseFromDocument(doc);\n        }\n        else if (isDocument(source)) {\n            return this.readTransactionResponseFromDocument(\n            /** @type {Document} */ (source));\n        }\n        else {\n            return this.readTransactionResponseFromNode(/** @type {Element} */ (source));\n        }\n    };\n    /**\n     * Read feature collection metadata of the source.\n     *\n     * @param {Document|Element|Object|string} source Source.\n     * @return {FeatureCollectionMetadata|undefined}\n     *     FeatureCollection metadata.\n     * @api\n     */\n    WFS.prototype.readFeatureCollectionMetadata = function (source) {\n        if (!source) {\n            return undefined;\n        }\n        else if (typeof source === 'string') {\n            var doc = parse(source);\n            return this.readFeatureCollectionMetadataFromDocument(doc);\n        }\n        else if (isDocument(source)) {\n            return this.readFeatureCollectionMetadataFromDocument(\n            /** @type {Document} */ (source));\n        }\n        else {\n            return this.readFeatureCollectionMetadataFromNode(\n            /** @type {Element} */ (source));\n        }\n    };\n    /**\n     * @param {Document} doc Document.\n     * @return {FeatureCollectionMetadata|undefined}\n     *     FeatureCollection metadata.\n     */\n    WFS.prototype.readFeatureCollectionMetadataFromDocument = function (doc) {\n        for (var n = /** @type {Node} */ (doc.firstChild); n; n = n.nextSibling) {\n            if (n.nodeType == Node.ELEMENT_NODE) {\n                return this.readFeatureCollectionMetadataFromNode(/** @type {Element} */ (n));\n            }\n        }\n        return undefined;\n    };\n    /**\n     * @param {Element} node Node.\n     * @return {FeatureCollectionMetadata|undefined}\n     *     FeatureCollection metadata.\n     */\n    WFS.prototype.readFeatureCollectionMetadataFromNode = function (node) {\n        var result = {};\n        var value = readNonNegativeIntegerString(node.getAttribute('numberOfFeatures'));\n        result['numberOfFeatures'] = value;\n        return pushParseAndPop(\n        /** @type {FeatureCollectionMetadata} */ (result), FEATURE_COLLECTION_PARSERS, node, [], this.gmlFormat_);\n    };\n    /**\n     * @param {Document} doc Document.\n     * @return {TransactionResponse|undefined} Transaction response.\n     */\n    WFS.prototype.readTransactionResponseFromDocument = function (doc) {\n        for (var n = /** @type {Node} */ (doc.firstChild); n; n = n.nextSibling) {\n            if (n.nodeType == Node.ELEMENT_NODE) {\n                return this.readTransactionResponseFromNode(/** @type {Element} */ (n));\n            }\n        }\n        return undefined;\n    };\n    /**\n     * @param {Element} node Node.\n     * @return {TransactionResponse|undefined} Transaction response.\n     */\n    WFS.prototype.readTransactionResponseFromNode = function (node) {\n        return pushParseAndPop(\n        /** @type {TransactionResponse} */ ({}), TRANSACTION_RESPONSE_PARSERS, node, []);\n    };\n    /**\n     * Encode format as WFS `GetFeature` and return the Node.\n     *\n     * @param {WriteGetFeatureOptions} options Options.\n     * @return {Node} Result.\n     * @api\n     */\n    WFS.prototype.writeGetFeature = function (options) {\n        var node = createElementNS(WFSNS, 'GetFeature');\n        node.setAttribute('service', 'WFS');\n        node.setAttribute('version', '1.1.0');\n        var filter;\n        if (options) {\n            if (options.handle) {\n                node.setAttribute('handle', options.handle);\n            }\n            if (options.outputFormat) {\n                node.setAttribute('outputFormat', options.outputFormat);\n            }\n            if (options.maxFeatures !== undefined) {\n                node.setAttribute('maxFeatures', String(options.maxFeatures));\n            }\n            if (options.resultType) {\n                node.setAttribute('resultType', options.resultType);\n            }\n            if (options.startIndex !== undefined) {\n                node.setAttribute('startIndex', String(options.startIndex));\n            }\n            if (options.count !== undefined) {\n                node.setAttribute('count', String(options.count));\n            }\n            if (options.viewParams !== undefined) {\n                node.setAttribute('viewParams ', options.viewParams);\n            }\n            filter = options.filter;\n            if (options.bbox) {\n                assert(options.geometryName, 12); // `options.geometryName` must also be provided when `options.bbox` is set\n                var bbox = bboxFilter(\n                /** @type {string} */ (options.geometryName), options.bbox, options.srsName);\n                if (filter) {\n                    // if bbox and filter are both set, combine the two into a single filter\n                    filter = andFilter(filter, bbox);\n                }\n                else {\n                    filter = bbox;\n                }\n            }\n        }\n        node.setAttributeNS(XML_SCHEMA_INSTANCE_URI, 'xsi:schemaLocation', this.schemaLocation_);\n        /** @type {import(\"../xml.js\").NodeStackItem} */\n        var context = {\n            node: node\n        };\n        assign(context, {\n            'srsName': options.srsName,\n            'featureNS': options.featureNS ? options.featureNS : this.featureNS_,\n            'featurePrefix': options.featurePrefix,\n            'geometryName': options.geometryName,\n            'filter': filter,\n            'propertyNames': options.propertyNames ? options.propertyNames : []\n        });\n        assert(Array.isArray(options.featureTypes), 11); // `options.featureTypes` should be an Array\n        writeGetFeature(node, /** @type {!Array<string>} */ (options.featureTypes), [context]);\n        return node;\n    };\n    /**\n     * Encode format as WFS `Transaction` and return the Node.\n     *\n     * @param {Array<import(\"../Feature.js\").default>} inserts The features to insert.\n     * @param {Array<import(\"../Feature.js\").default>} updates The features to update.\n     * @param {Array<import(\"../Feature.js\").default>} deletes The features to delete.\n     * @param {WriteTransactionOptions} options Write options.\n     * @return {Node} Result.\n     * @api\n     */\n    WFS.prototype.writeTransaction = function (inserts, updates, deletes, options) {\n        var objectStack = [];\n        var node = createElementNS(WFSNS, 'Transaction');\n        var version = options.version ? options.version : DEFAULT_VERSION;\n        var gmlVersion = version === '1.0.0' ? 2 : 3;\n        node.setAttribute('service', 'WFS');\n        node.setAttribute('version', version);\n        var baseObj;\n        /** @type {import(\"../xml.js\").NodeStackItem} */\n        var obj;\n        if (options) {\n            baseObj = options.gmlOptions ? options.gmlOptions : {};\n            if (options.handle) {\n                node.setAttribute('handle', options.handle);\n            }\n        }\n        var schemaLocation = SCHEMA_LOCATIONS[version];\n        node.setAttributeNS(XML_SCHEMA_INSTANCE_URI, 'xsi:schemaLocation', schemaLocation);\n        var featurePrefix = options.featurePrefix ? options.featurePrefix : FEATURE_PREFIX;\n        if (inserts) {\n            obj = assign({ node: node }, { 'featureNS': options.featureNS,\n                'featureType': options.featureType, 'featurePrefix': featurePrefix,\n                'gmlVersion': gmlVersion, 'hasZ': options.hasZ, 'srsName': options.srsName });\n            assign(obj, baseObj);\n            pushSerializeAndPop(obj, TRANSACTION_SERIALIZERS, makeSimpleNodeFactory('Insert'), inserts, objectStack);\n        }\n        if (updates) {\n            obj = assign({ node: node }, { 'featureNS': options.featureNS,\n                'featureType': options.featureType, 'featurePrefix': featurePrefix,\n                'gmlVersion': gmlVersion, 'hasZ': options.hasZ, 'srsName': options.srsName });\n            assign(obj, baseObj);\n            pushSerializeAndPop(obj, TRANSACTION_SERIALIZERS, makeSimpleNodeFactory('Update'), updates, objectStack);\n        }\n        if (deletes) {\n            pushSerializeAndPop({ node: node, 'featureNS': options.featureNS,\n                'featureType': options.featureType, 'featurePrefix': featurePrefix,\n                'gmlVersion': gmlVersion, 'srsName': options.srsName }, TRANSACTION_SERIALIZERS, makeSimpleNodeFactory('Delete'), deletes, objectStack);\n        }\n        if (options.nativeElements) {\n            pushSerializeAndPop({ node: node, 'featureNS': options.featureNS,\n                'featureType': options.featureType, 'featurePrefix': featurePrefix,\n                'gmlVersion': gmlVersion, 'srsName': options.srsName }, TRANSACTION_SERIALIZERS, makeSimpleNodeFactory('Native'), options.nativeElements, objectStack);\n        }\n        return node;\n    };\n    /**\n     * @inheritDoc\n     */\n    WFS.prototype.readProjectionFromDocument = function (doc) {\n        for (var n = /** @type {Node} */ (doc.firstChild); n; n = n.nextSibling) {\n            if (n.nodeType == Node.ELEMENT_NODE) {\n                return this.readProjectionFromNode(n);\n            }\n        }\n        return null;\n    };\n    /**\n     * @inheritDoc\n     */\n    WFS.prototype.readProjectionFromNode = function (node) {\n        if (node.firstElementChild &&\n            node.firstElementChild.firstElementChild) {\n            node = node.firstElementChild.firstElementChild;\n            for (var n = node.firstElementChild; n; n = n.nextElementSibling) {\n                if (!(n.childNodes.length === 0 ||\n                    (n.childNodes.length === 1 &&\n                        n.firstChild.nodeType === 3))) {\n                    var objectStack = [{}];\n                    this.gmlFormat_.readGeometryElement(n, objectStack);\n                    return getProjection(objectStack.pop().srsName);\n                }\n            }\n        }\n        return null;\n    };\n    return WFS;\n}(XMLFeature));\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Transaction Summary.\n */\nfunction readTransactionSummary(node, objectStack) {\n    return pushParseAndPop({}, TRANSACTION_SUMMARY_PARSERS, node, objectStack);\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar OGC_FID_PARSERS = {\n    'http://www.opengis.net/ogc': {\n        'FeatureId': makeArrayPusher(function (node, objectStack) {\n            return node.getAttribute('fid');\n        })\n    }\n};\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction fidParser(node, objectStack) {\n    parseNode(OGC_FID_PARSERS, node, objectStack);\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar INSERT_RESULTS_PARSERS = {\n    'http://www.opengis.net/wfs': {\n        'Feature': fidParser\n    }\n};\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Array<string>|undefined} Insert results.\n */\nfunction readInsertResults(node, objectStack) {\n    return pushParseAndPop([], INSERT_RESULTS_PARSERS, node, objectStack);\n}\n/**\n * @param {Element} node Node.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeFeature(node, feature, objectStack) {\n    var context = objectStack[objectStack.length - 1];\n    var featureType = context['featureType'];\n    var featureNS = context['featureNS'];\n    var gmlVersion = context['gmlVersion'];\n    var child = createElementNS(featureNS, featureType);\n    node.appendChild(child);\n    if (gmlVersion === 2) {\n        GML2.prototype.writeFeatureElement(child, feature, objectStack);\n    }\n    else {\n        GML3.prototype.writeFeatureElement(child, feature, objectStack);\n    }\n}\n/**\n * @param {Node} node Node.\n * @param {number|string} fid Feature identifier.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeOgcFidFilter(node, fid, objectStack) {\n    var filter = createElementNS(OGCNS, 'Filter');\n    var child = createElementNS(OGCNS, 'FeatureId');\n    filter.appendChild(child);\n    child.setAttribute('fid', /** @type {string} */ (fid));\n    node.appendChild(filter);\n}\n/**\n * @param {string|undefined} featurePrefix The prefix of the feature.\n * @param {string} featureType The type of the feature.\n * @returns {string} The value of the typeName property.\n */\nfunction getTypeName(featurePrefix, featureType) {\n    featurePrefix = featurePrefix ? featurePrefix : FEATURE_PREFIX;\n    var prefix = featurePrefix + ':';\n    // The featureType already contains the prefix.\n    if (featureType.indexOf(prefix) === 0) {\n        return featureType;\n    }\n    else {\n        return prefix + featureType;\n    }\n}\n/**\n * @param {Element} node Node.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeDelete(node, feature, objectStack) {\n    var context = objectStack[objectStack.length - 1];\n    assert(feature.getId() !== undefined, 26); // Features must have an id set\n    var featureType = context['featureType'];\n    var featurePrefix = context['featurePrefix'];\n    var featureNS = context['featureNS'];\n    var typeName = getTypeName(featurePrefix, featureType);\n    node.setAttribute('typeName', typeName);\n    node.setAttributeNS(XMLNS, 'xmlns:' + featurePrefix, featureNS);\n    var fid = feature.getId();\n    if (fid !== undefined) {\n        writeOgcFidFilter(node, fid, objectStack);\n    }\n}\n/**\n * @param {Element} node Node.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeUpdate(node, feature, objectStack) {\n    var context = objectStack[objectStack.length - 1];\n    assert(feature.getId() !== undefined, 27); // Features must have an id set\n    var featureType = context['featureType'];\n    var featurePrefix = context['featurePrefix'];\n    var featureNS = context['featureNS'];\n    var typeName = getTypeName(featurePrefix, featureType);\n    var geometryName = feature.getGeometryName();\n    node.setAttribute('typeName', typeName);\n    node.setAttributeNS(XMLNS, 'xmlns:' + featurePrefix, featureNS);\n    var fid = feature.getId();\n    if (fid !== undefined) {\n        var keys = feature.getKeys();\n        var values = [];\n        for (var i = 0, ii = keys.length; i < ii; i++) {\n            var value = feature.get(keys[i]);\n            if (value !== undefined) {\n                var name_1 = keys[i];\n                if (value && typeof /** @type {?} */ (value).getSimplifiedGeometry === 'function') {\n                    name_1 = geometryName;\n                }\n                values.push({ name: name_1, value: value });\n            }\n        }\n        pushSerializeAndPop(/** @type {import(\"../xml.js\").NodeStackItem} */ ({ 'gmlVersion': context['gmlVersion'], node: node,\n            'hasZ': context['hasZ'], 'srsName': context['srsName'] }), TRANSACTION_SERIALIZERS, makeSimpleNodeFactory('Property'), values, objectStack);\n        writeOgcFidFilter(node, fid, objectStack);\n    }\n}\n/**\n * @param {Node} node Node.\n * @param {Object} pair Property name and value.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeProperty(node, pair, objectStack) {\n    var name = createElementNS(WFSNS, 'Name');\n    var context = objectStack[objectStack.length - 1];\n    var gmlVersion = context['gmlVersion'];\n    node.appendChild(name);\n    writeStringTextNode(name, pair.name);\n    if (pair.value !== undefined && pair.value !== null) {\n        var value = createElementNS(WFSNS, 'Value');\n        node.appendChild(value);\n        if (pair.value && typeof /** @type {?} */ (pair.value).getSimplifiedGeometry === 'function') {\n            if (gmlVersion === 2) {\n                GML2.prototype.writeGeometryElement(value, pair.value, objectStack);\n            }\n            else {\n                GML3.prototype.writeGeometryElement(value, pair.value, objectStack);\n            }\n        }\n        else {\n            writeStringTextNode(value, pair.value);\n        }\n    }\n}\n/**\n * @param {Element} node Node.\n * @param {{vendorId: string, safeToIgnore: boolean, value: string}} nativeElement The native element.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeNative(node, nativeElement, objectStack) {\n    if (nativeElement.vendorId) {\n        node.setAttribute('vendorId', nativeElement.vendorId);\n    }\n    if (nativeElement.safeToIgnore !== undefined) {\n        node.setAttribute('safeToIgnore', String(nativeElement.safeToIgnore));\n    }\n    if (nativeElement.value !== undefined) {\n        writeStringTextNode(node, nativeElement.value);\n    }\n}\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nvar GETFEATURE_SERIALIZERS = {\n    'http://www.opengis.net/wfs': {\n        'Query': makeChildAppender(writeQuery)\n    },\n    'http://www.opengis.net/ogc': {\n        'During': makeChildAppender(writeDuringFilter),\n        'And': makeChildAppender(writeLogicalFilter),\n        'Or': makeChildAppender(writeLogicalFilter),\n        'Not': makeChildAppender(writeNotFilter),\n        'BBOX': makeChildAppender(writeBboxFilter),\n        'Contains': makeChildAppender(writeContainsFilter),\n        'Intersects': makeChildAppender(writeIntersectsFilter),\n        'Within': makeChildAppender(writeWithinFilter),\n        'PropertyIsEqualTo': makeChildAppender(writeComparisonFilter),\n        'PropertyIsNotEqualTo': makeChildAppender(writeComparisonFilter),\n        'PropertyIsLessThan': makeChildAppender(writeComparisonFilter),\n        'PropertyIsLessThanOrEqualTo': makeChildAppender(writeComparisonFilter),\n        'PropertyIsGreaterThan': makeChildAppender(writeComparisonFilter),\n        'PropertyIsGreaterThanOrEqualTo': makeChildAppender(writeComparisonFilter),\n        'PropertyIsNull': makeChildAppender(writeIsNullFilter),\n        'PropertyIsBetween': makeChildAppender(writeIsBetweenFilter),\n        'PropertyIsLike': makeChildAppender(writeIsLikeFilter)\n    }\n};\n/**\n * @param {Element} node Node.\n * @param {string} featureType Feature type.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeQuery(node, featureType, objectStack) {\n    var context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n    var featurePrefix = context['featurePrefix'];\n    var featureNS = context['featureNS'];\n    var propertyNames = context['propertyNames'];\n    var srsName = context['srsName'];\n    var typeName;\n    // If feature prefix is not defined, we must not use the default prefix.\n    if (featurePrefix) {\n        typeName = getTypeName(featurePrefix, featureType);\n    }\n    else {\n        typeName = featureType;\n    }\n    node.setAttribute('typeName', typeName);\n    if (srsName) {\n        node.setAttribute('srsName', srsName);\n    }\n    if (featureNS) {\n        node.setAttributeNS(XMLNS, 'xmlns:' + featurePrefix, featureNS);\n    }\n    var item = /** @type {import(\"../xml.js\").NodeStackItem} */ (assign({}, context));\n    item.node = node;\n    pushSerializeAndPop(item, QUERY_SERIALIZERS, makeSimpleNodeFactory('PropertyName'), propertyNames, objectStack);\n    var filter = context['filter'];\n    if (filter) {\n        var child = createElementNS(OGCNS, 'Filter');\n        node.appendChild(child);\n        writeFilterCondition(child, filter, objectStack);\n    }\n}\n/**\n * @param {Node} node Node.\n * @param {import(\"./filter/Filter.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeFilterCondition(node, filter, objectStack) {\n    /** @type {import(\"../xml.js\").NodeStackItem} */\n    var item = { node: node };\n    pushSerializeAndPop(item, GETFEATURE_SERIALIZERS, makeSimpleNodeFactory(filter.getTagName()), [filter], objectStack);\n}\n/**\n * @param {Node} node Node.\n * @param {import(\"./filter/Bbox.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeBboxFilter(node, filter, objectStack) {\n    var context = objectStack[objectStack.length - 1];\n    context['srsName'] = filter.srsName;\n    writeOgcPropertyName(node, filter.geometryName);\n    GML3.prototype.writeGeometryElement(node, filter.extent, objectStack);\n}\n/**\n * @param {Node} node Node.\n * @param {import(\"./filter/Contains.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeContainsFilter(node, filter, objectStack) {\n    var context = objectStack[objectStack.length - 1];\n    context['srsName'] = filter.srsName;\n    writeOgcPropertyName(node, filter.geometryName);\n    GML3.prototype.writeGeometryElement(node, filter.geometry, objectStack);\n}\n/**\n * @param {Node} node Node.\n * @param {import(\"./filter/Intersects.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeIntersectsFilter(node, filter, objectStack) {\n    var context = objectStack[objectStack.length - 1];\n    context['srsName'] = filter.srsName;\n    writeOgcPropertyName(node, filter.geometryName);\n    GML3.prototype.writeGeometryElement(node, filter.geometry, objectStack);\n}\n/**\n * @param {Node} node Node.\n * @param {import(\"./filter/Within.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeWithinFilter(node, filter, objectStack) {\n    var context = objectStack[objectStack.length - 1];\n    context['srsName'] = filter.srsName;\n    writeOgcPropertyName(node, filter.geometryName);\n    GML3.prototype.writeGeometryElement(node, filter.geometry, objectStack);\n}\n/**\n * @param {Node} node Node.\n * @param {import(\"./filter/During.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeDuringFilter(node, filter, objectStack) {\n    var valueReference = createElementNS(FESNS, 'ValueReference');\n    writeStringTextNode(valueReference, filter.propertyName);\n    node.appendChild(valueReference);\n    var timePeriod = createElementNS(GMLNS, 'TimePeriod');\n    node.appendChild(timePeriod);\n    var begin = createElementNS(GMLNS, 'begin');\n    timePeriod.appendChild(begin);\n    writeTimeInstant(begin, filter.begin);\n    var end = createElementNS(GMLNS, 'end');\n    timePeriod.appendChild(end);\n    writeTimeInstant(end, filter.end);\n}\n/**\n * @param {Node} node Node.\n * @param {import(\"./filter/LogicalNary.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeLogicalFilter(node, filter, objectStack) {\n    /** @type {import(\"../xml.js\").NodeStackItem} */\n    var item = { node: node };\n    var conditions = filter.conditions;\n    for (var i = 0, ii = conditions.length; i < ii; ++i) {\n        var condition = conditions[i];\n        pushSerializeAndPop(item, GETFEATURE_SERIALIZERS, makeSimpleNodeFactory(condition.getTagName()), [condition], objectStack);\n    }\n}\n/**\n * @param {Node} node Node.\n * @param {import(\"./filter/Not.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeNotFilter(node, filter, objectStack) {\n    /** @type {import(\"../xml.js\").NodeStackItem} */\n    var item = { node: node };\n    var condition = filter.condition;\n    pushSerializeAndPop(item, GETFEATURE_SERIALIZERS, makeSimpleNodeFactory(condition.getTagName()), [condition], objectStack);\n}\n/**\n * @param {Element} node Node.\n * @param {import(\"./filter/ComparisonBinary.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeComparisonFilter(node, filter, objectStack) {\n    if (filter.matchCase !== undefined) {\n        node.setAttribute('matchCase', filter.matchCase.toString());\n    }\n    writeOgcPropertyName(node, filter.propertyName);\n    writeOgcLiteral(node, '' + filter.expression);\n}\n/**\n * @param {Node} node Node.\n * @param {import(\"./filter/IsNull.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeIsNullFilter(node, filter, objectStack) {\n    writeOgcPropertyName(node, filter.propertyName);\n}\n/**\n * @param {Node} node Node.\n * @param {import(\"./filter/IsBetween.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeIsBetweenFilter(node, filter, objectStack) {\n    writeOgcPropertyName(node, filter.propertyName);\n    var lowerBoundary = createElementNS(OGCNS, 'LowerBoundary');\n    node.appendChild(lowerBoundary);\n    writeOgcLiteral(lowerBoundary, '' + filter.lowerBoundary);\n    var upperBoundary = createElementNS(OGCNS, 'UpperBoundary');\n    node.appendChild(upperBoundary);\n    writeOgcLiteral(upperBoundary, '' + filter.upperBoundary);\n}\n/**\n * @param {Element} node Node.\n * @param {import(\"./filter/IsLike.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeIsLikeFilter(node, filter, objectStack) {\n    node.setAttribute('wildCard', filter.wildCard);\n    node.setAttribute('singleChar', filter.singleChar);\n    node.setAttribute('escapeChar', filter.escapeChar);\n    if (filter.matchCase !== undefined) {\n        node.setAttribute('matchCase', filter.matchCase.toString());\n    }\n    writeOgcPropertyName(node, filter.propertyName);\n    writeOgcLiteral(node, '' + filter.pattern);\n}\n/**\n * @param {string} tagName Tag name.\n * @param {Node} node Node.\n * @param {string} value Value.\n */\nfunction writeOgcExpression(tagName, node, value) {\n    var property = createElementNS(OGCNS, tagName);\n    writeStringTextNode(property, value);\n    node.appendChild(property);\n}\n/**\n * @param {Node} node Node.\n * @param {string} value PropertyName value.\n */\nfunction writeOgcPropertyName(node, value) {\n    writeOgcExpression('PropertyName', node, value);\n}\n/**\n * @param {Node} node Node.\n * @param {string} value PropertyName value.\n */\nfunction writeOgcLiteral(node, value) {\n    writeOgcExpression('Literal', node, value);\n}\n/**\n * @param {Node} node Node.\n * @param {string} time PropertyName value.\n */\nfunction writeTimeInstant(node, time) {\n    var timeInstant = createElementNS(GMLNS, 'TimeInstant');\n    node.appendChild(timeInstant);\n    var timePosition = createElementNS(GMLNS, 'timePosition');\n    timeInstant.appendChild(timePosition);\n    writeStringTextNode(timePosition, time);\n}\n/**\n * Encode filter as WFS `Filter` and return the Node.\n *\n * @param {import(\"./filter/Filter.js\").default} filter Filter.\n * @return {Node} Result.\n * @api\n */\nexport function writeFilter(filter) {\n    var child = createElementNS(OGCNS, 'Filter');\n    writeFilterCondition(child, filter, []);\n    return child;\n}\n/**\n * @param {Node} node Node.\n * @param {Array<string>} featureTypes Feature types.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeGetFeature(node, featureTypes, objectStack) {\n    var context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n    var item = /** @type {import(\"../xml.js\").NodeStackItem} */ (assign({}, context));\n    item.node = node;\n    pushSerializeAndPop(item, GETFEATURE_SERIALIZERS, makeSimpleNodeFactory('Query'), featureTypes, objectStack);\n}\nexport default WFS;\n//# sourceMappingURL=WFS.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/format/WKT\n */\nimport Feature from '../Feature.js';\nimport { transformGeometryWithOptions } from './Feature.js';\nimport TextFeature from './TextFeature.js';\nimport GeometryCollection from '../geom/GeometryCollection.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\n/**\n * Geometry constructors\n * @enum {function (new:import(\"../geom/Geometry.js\").default, Array, GeometryLayout)}\n */\nvar GeometryConstructor = {\n    'POINT': Point,\n    'LINESTRING': LineString,\n    'POLYGON': Polygon,\n    'MULTIPOINT': MultiPoint,\n    'MULTILINESTRING': MultiLineString,\n    'MULTIPOLYGON': MultiPolygon\n};\n/**\n * @typedef {Object} Options\n * @property {boolean} [splitCollection=false] Whether to split GeometryCollections into\n * multiple features on reading.\n */\n/**\n * @typedef {Object} Token\n * @property {number} type\n * @property {number|string} [value]\n * @property {number} position\n */\n/**\n * @const\n * @type {string}\n */\nvar EMPTY = 'EMPTY';\n/**\n * @const\n * @type {string}\n */\nvar Z = 'Z';\n/**\n * @const\n * @type {string}\n */\nvar M = 'M';\n/**\n * @const\n * @type {string}\n */\nvar ZM = 'ZM';\n/**\n * @const\n * @enum {number}\n */\nvar TokenType = {\n    TEXT: 1,\n    LEFT_PAREN: 2,\n    RIGHT_PAREN: 3,\n    NUMBER: 4,\n    COMMA: 5,\n    EOF: 6\n};\n/**\n * @const\n * @type {Object<string, string>}\n */\nvar WKTGeometryType = {};\nfor (var type in GeometryType) {\n    WKTGeometryType[type] = GeometryType[type].toUpperCase();\n}\n/**\n * Class to tokenize a WKT string.\n */\nvar Lexer = /** @class */ (function () {\n    /**\n     * @param {string} wkt WKT string.\n     */\n    function Lexer(wkt) {\n        /**\n         * @type {string}\n         */\n        this.wkt = wkt;\n        /**\n         * @type {number}\n         * @private\n         */\n        this.index_ = -1;\n    }\n    /**\n     * @param {string} c Character.\n     * @return {boolean} Whether the character is alphabetic.\n     * @private\n     */\n    Lexer.prototype.isAlpha_ = function (c) {\n        return c >= 'a' && c <= 'z' || c >= 'A' && c <= 'Z';\n    };\n    /**\n     * @param {string} c Character.\n     * @param {boolean=} opt_decimal Whether the string number\n     *     contains a dot, i.e. is a decimal number.\n     * @return {boolean} Whether the character is numeric.\n     * @private\n     */\n    Lexer.prototype.isNumeric_ = function (c, opt_decimal) {\n        var decimal = opt_decimal !== undefined ? opt_decimal : false;\n        return c >= '0' && c <= '9' || c == '.' && !decimal;\n    };\n    /**\n     * @param {string} c Character.\n     * @return {boolean} Whether the character is whitespace.\n     * @private\n     */\n    Lexer.prototype.isWhiteSpace_ = function (c) {\n        return c == ' ' || c == '\\t' || c == '\\r' || c == '\\n';\n    };\n    /**\n     * @return {string} Next string character.\n     * @private\n     */\n    Lexer.prototype.nextChar_ = function () {\n        return this.wkt.charAt(++this.index_);\n    };\n    /**\n     * Fetch and return the next token.\n     * @return {!Token} Next string token.\n     */\n    Lexer.prototype.nextToken = function () {\n        var c = this.nextChar_();\n        var position = this.index_;\n        /** @type {number|string} */\n        var value = c;\n        var type;\n        if (c == '(') {\n            type = TokenType.LEFT_PAREN;\n        }\n        else if (c == ',') {\n            type = TokenType.COMMA;\n        }\n        else if (c == ')') {\n            type = TokenType.RIGHT_PAREN;\n        }\n        else if (this.isNumeric_(c) || c == '-') {\n            type = TokenType.NUMBER;\n            value = this.readNumber_();\n        }\n        else if (this.isAlpha_(c)) {\n            type = TokenType.TEXT;\n            value = this.readText_();\n        }\n        else if (this.isWhiteSpace_(c)) {\n            return this.nextToken();\n        }\n        else if (c === '') {\n            type = TokenType.EOF;\n        }\n        else {\n            throw new Error('Unexpected character: ' + c);\n        }\n        return { position: position, value: value, type: type };\n    };\n    /**\n     * @return {number} Numeric token value.\n     * @private\n     */\n    Lexer.prototype.readNumber_ = function () {\n        var c;\n        var index = this.index_;\n        var decimal = false;\n        var scientificNotation = false;\n        do {\n            if (c == '.') {\n                decimal = true;\n            }\n            else if (c == 'e' || c == 'E') {\n                scientificNotation = true;\n            }\n            c = this.nextChar_();\n        } while (this.isNumeric_(c, decimal) ||\n            // if we haven't detected a scientific number before, 'e' or 'E'\n            // hint that we should continue to read\n            !scientificNotation && (c == 'e' || c == 'E') ||\n            // once we know that we have a scientific number, both '-' and '+'\n            // are allowed\n            scientificNotation && (c == '-' || c == '+'));\n        return parseFloat(this.wkt.substring(index, this.index_--));\n    };\n    /**\n     * @return {string} String token value.\n     * @private\n     */\n    Lexer.prototype.readText_ = function () {\n        var c;\n        var index = this.index_;\n        do {\n            c = this.nextChar_();\n        } while (this.isAlpha_(c));\n        return this.wkt.substring(index, this.index_--).toUpperCase();\n    };\n    return Lexer;\n}());\n/**\n * Class to parse the tokens from the WKT string.\n */\nvar Parser = /** @class */ (function () {\n    /**\n     * @param {Lexer} lexer The lexer.\n     */\n    function Parser(lexer) {\n        /**\n         * @type {Lexer}\n         * @private\n         */\n        this.lexer_ = lexer;\n        /**\n         * @type {Token}\n         * @private\n         */\n        this.token_;\n        /**\n         * @type {GeometryLayout}\n         * @private\n         */\n        this.layout_ = GeometryLayout.XY;\n    }\n    /**\n     * Fetch the next token form the lexer and replace the active token.\n     * @private\n     */\n    Parser.prototype.consume_ = function () {\n        this.token_ = this.lexer_.nextToken();\n    };\n    /**\n     * Tests if the given type matches the type of the current token.\n     * @param {TokenType} type Token type.\n     * @return {boolean} Whether the token matches the given type.\n     */\n    Parser.prototype.isTokenType = function (type) {\n        var isMatch = this.token_.type == type;\n        return isMatch;\n    };\n    /**\n     * If the given type matches the current token, consume it.\n     * @param {TokenType} type Token type.\n     * @return {boolean} Whether the token matches the given type.\n     */\n    Parser.prototype.match = function (type) {\n        var isMatch = this.isTokenType(type);\n        if (isMatch) {\n            this.consume_();\n        }\n        return isMatch;\n    };\n    /**\n     * Try to parse the tokens provided by the lexer.\n     * @return {import(\"../geom/Geometry.js\").default} The geometry.\n     */\n    Parser.prototype.parse = function () {\n        this.consume_();\n        var geometry = this.parseGeometry_();\n        return geometry;\n    };\n    /**\n     * Try to parse the dimensional info.\n     * @return {GeometryLayout} The layout.\n     * @private\n     */\n    Parser.prototype.parseGeometryLayout_ = function () {\n        var layout = GeometryLayout.XY;\n        var dimToken = this.token_;\n        if (this.isTokenType(TokenType.TEXT)) {\n            var dimInfo = dimToken.value;\n            if (dimInfo === Z) {\n                layout = GeometryLayout.XYZ;\n            }\n            else if (dimInfo === M) {\n                layout = GeometryLayout.XYM;\n            }\n            else if (dimInfo === ZM) {\n                layout = GeometryLayout.XYZM;\n            }\n            if (layout !== GeometryLayout.XY) {\n                this.consume_();\n            }\n        }\n        return layout;\n    };\n    /**\n     * @return {!Array<import(\"../geom/Geometry.js\").default>} A collection of geometries.\n     * @private\n     */\n    Parser.prototype.parseGeometryCollectionText_ = function () {\n        if (this.match(TokenType.LEFT_PAREN)) {\n            var geometries = [];\n            do {\n                geometries.push(this.parseGeometry_());\n            } while (this.match(TokenType.COMMA));\n            if (this.match(TokenType.RIGHT_PAREN)) {\n                return geometries;\n            }\n        }\n        else if (this.isEmptyGeometry_()) {\n            return [];\n        }\n        throw new Error(this.formatErrorMessage_());\n    };\n    /**\n     * @return {Array<number>} All values in a point.\n     * @private\n     */\n    Parser.prototype.parsePointText_ = function () {\n        if (this.match(TokenType.LEFT_PAREN)) {\n            var coordinates = this.parsePoint_();\n            if (this.match(TokenType.RIGHT_PAREN)) {\n                return coordinates;\n            }\n        }\n        else if (this.isEmptyGeometry_()) {\n            return null;\n        }\n        throw new Error(this.formatErrorMessage_());\n    };\n    /**\n     * @return {!Array<!Array<number>>} All points in a linestring.\n     * @private\n     */\n    Parser.prototype.parseLineStringText_ = function () {\n        if (this.match(TokenType.LEFT_PAREN)) {\n            var coordinates = this.parsePointList_();\n            if (this.match(TokenType.RIGHT_PAREN)) {\n                return coordinates;\n            }\n        }\n        else if (this.isEmptyGeometry_()) {\n            return [];\n        }\n        throw new Error(this.formatErrorMessage_());\n    };\n    /**\n     * @return {!Array<!Array<!Array<number>>>} All points in a polygon.\n     * @private\n     */\n    Parser.prototype.parsePolygonText_ = function () {\n        if (this.match(TokenType.LEFT_PAREN)) {\n            var coordinates = this.parseLineStringTextList_();\n            if (this.match(TokenType.RIGHT_PAREN)) {\n                return coordinates;\n            }\n        }\n        else if (this.isEmptyGeometry_()) {\n            return [];\n        }\n        throw new Error(this.formatErrorMessage_());\n    };\n    /**\n     * @return {!Array<!Array<number>>} All points in a multipoint.\n     * @private\n     */\n    Parser.prototype.parseMultiPointText_ = function () {\n        if (this.match(TokenType.LEFT_PAREN)) {\n            var coordinates = void 0;\n            if (this.token_.type == TokenType.LEFT_PAREN) {\n                coordinates = this.parsePointTextList_();\n            }\n            else {\n                coordinates = this.parsePointList_();\n            }\n            if (this.match(TokenType.RIGHT_PAREN)) {\n                return coordinates;\n            }\n        }\n        else if (this.isEmptyGeometry_()) {\n            return [];\n        }\n        throw new Error(this.formatErrorMessage_());\n    };\n    /**\n     * @return {!Array<!Array<!Array<number>>>} All linestring points\n     *                                          in a multilinestring.\n     * @private\n     */\n    Parser.prototype.parseMultiLineStringText_ = function () {\n        if (this.match(TokenType.LEFT_PAREN)) {\n            var coordinates = this.parseLineStringTextList_();\n            if (this.match(TokenType.RIGHT_PAREN)) {\n                return coordinates;\n            }\n        }\n        else if (this.isEmptyGeometry_()) {\n            return [];\n        }\n        throw new Error(this.formatErrorMessage_());\n    };\n    /**\n     * @return {!Array<!Array<!Array<!Array<number>>>>} All polygon points in a multipolygon.\n     * @private\n     */\n    Parser.prototype.parseMultiPolygonText_ = function () {\n        if (this.match(TokenType.LEFT_PAREN)) {\n            var coordinates = this.parsePolygonTextList_();\n            if (this.match(TokenType.RIGHT_PAREN)) {\n                return coordinates;\n            }\n        }\n        else if (this.isEmptyGeometry_()) {\n            return [];\n        }\n        throw new Error(this.formatErrorMessage_());\n    };\n    /**\n     * @return {!Array<number>} A point.\n     * @private\n     */\n    Parser.prototype.parsePoint_ = function () {\n        var coordinates = [];\n        var dimensions = this.layout_.length;\n        for (var i = 0; i < dimensions; ++i) {\n            var token = this.token_;\n            if (this.match(TokenType.NUMBER)) {\n                coordinates.push(/** @type {number} */ (token.value));\n            }\n            else {\n                break;\n            }\n        }\n        if (coordinates.length == dimensions) {\n            return coordinates;\n        }\n        throw new Error(this.formatErrorMessage_());\n    };\n    /**\n     * @return {!Array<!Array<number>>} An array of points.\n     * @private\n     */\n    Parser.prototype.parsePointList_ = function () {\n        var coordinates = [this.parsePoint_()];\n        while (this.match(TokenType.COMMA)) {\n            coordinates.push(this.parsePoint_());\n        }\n        return coordinates;\n    };\n    /**\n     * @return {!Array<!Array<number>>} An array of points.\n     * @private\n     */\n    Parser.prototype.parsePointTextList_ = function () {\n        var coordinates = [this.parsePointText_()];\n        while (this.match(TokenType.COMMA)) {\n            coordinates.push(this.parsePointText_());\n        }\n        return coordinates;\n    };\n    /**\n     * @return {!Array<!Array<!Array<number>>>} An array of points.\n     * @private\n     */\n    Parser.prototype.parseLineStringTextList_ = function () {\n        var coordinates = [this.parseLineStringText_()];\n        while (this.match(TokenType.COMMA)) {\n            coordinates.push(this.parseLineStringText_());\n        }\n        return coordinates;\n    };\n    /**\n     * @return {!Array<!Array<!Array<!Array<number>>>>} An array of points.\n     * @private\n     */\n    Parser.prototype.parsePolygonTextList_ = function () {\n        var coordinates = [this.parsePolygonText_()];\n        while (this.match(TokenType.COMMA)) {\n            coordinates.push(this.parsePolygonText_());\n        }\n        return coordinates;\n    };\n    /**\n     * @return {boolean} Whether the token implies an empty geometry.\n     * @private\n     */\n    Parser.prototype.isEmptyGeometry_ = function () {\n        var isEmpty = this.isTokenType(TokenType.TEXT) &&\n            this.token_.value == EMPTY;\n        if (isEmpty) {\n            this.consume_();\n        }\n        return isEmpty;\n    };\n    /**\n     * Create an error message for an unexpected token error.\n     * @return {string} Error message.\n     * @private\n     */\n    Parser.prototype.formatErrorMessage_ = function () {\n        return 'Unexpected `' + this.token_.value + '` at position ' +\n            this.token_.position + ' in `' + this.lexer_.wkt + '`';\n    };\n    /**\n     * @return {!import(\"../geom/Geometry.js\").default} The geometry.\n     * @private\n     */\n    Parser.prototype.parseGeometry_ = function () {\n        var token = this.token_;\n        if (this.match(TokenType.TEXT)) {\n            var geomType = token.value;\n            this.layout_ = this.parseGeometryLayout_();\n            if (geomType == 'GEOMETRYCOLLECTION') {\n                var geometries = this.parseGeometryCollectionText_();\n                return new GeometryCollection(geometries);\n            }\n            else {\n                var ctor = GeometryConstructor[geomType];\n                if (!ctor) {\n                    throw new Error('Invalid geometry type: ' + geomType);\n                }\n                var coordinates = void 0;\n                switch (geomType) {\n                    case 'POINT': {\n                        coordinates = this.parsePointText_();\n                        break;\n                    }\n                    case 'LINESTRING': {\n                        coordinates = this.parseLineStringText_();\n                        break;\n                    }\n                    case 'POLYGON': {\n                        coordinates = this.parsePolygonText_();\n                        break;\n                    }\n                    case 'MULTIPOINT': {\n                        coordinates = this.parseMultiPointText_();\n                        break;\n                    }\n                    case 'MULTILINESTRING': {\n                        coordinates = this.parseMultiLineStringText_();\n                        break;\n                    }\n                    case 'MULTIPOLYGON': {\n                        coordinates = this.parseMultiPolygonText_();\n                        break;\n                    }\n                    default: {\n                        throw new Error('Invalid geometry type: ' + geomType);\n                    }\n                }\n                if (!coordinates) {\n                    if (ctor === GeometryConstructor['POINT']) {\n                        coordinates = [NaN, NaN];\n                    }\n                    else {\n                        coordinates = [];\n                    }\n                }\n                return new ctor(coordinates, this.layout_);\n            }\n        }\n        throw new Error(this.formatErrorMessage_());\n    };\n    return Parser;\n}());\n/**\n * @classdesc\n * Geometry format for reading and writing data in the `WellKnownText` (WKT)\n * format.\n *\n * @api\n */\nvar WKT = /** @class */ (function (_super) {\n    __extends(WKT, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function WKT(opt_options) {\n        var _this = _super.call(this) || this;\n        var options = opt_options ? opt_options : {};\n        /**\n         * Split GeometryCollection into multiple features.\n         * @type {boolean}\n         * @private\n         */\n        _this.splitCollection_ = options.splitCollection !== undefined ?\n            options.splitCollection : false;\n        return _this;\n    }\n    /**\n     * Parse a WKT string.\n     * @param {string} wkt WKT string.\n     * @return {import(\"../geom/Geometry.js\").default|undefined}\n     *     The geometry created.\n     * @private\n     */\n    WKT.prototype.parse_ = function (wkt) {\n        var lexer = new Lexer(wkt);\n        var parser = new Parser(lexer);\n        return parser.parse();\n    };\n    /**\n     * @inheritDoc\n     */\n    WKT.prototype.readFeatureFromText = function (text, opt_options) {\n        var geom = this.readGeometryFromText(text, opt_options);\n        if (geom) {\n            var feature = new Feature();\n            feature.setGeometry(geom);\n            return feature;\n        }\n        return null;\n    };\n    /**\n     * @inheritDoc\n     */\n    WKT.prototype.readFeaturesFromText = function (text, opt_options) {\n        var geometries = [];\n        var geometry = this.readGeometryFromText(text, opt_options);\n        if (this.splitCollection_ &&\n            geometry.getType() == GeometryType.GEOMETRY_COLLECTION) {\n            geometries = ( /** @type {GeometryCollection} */(geometry))\n                .getGeometriesArray();\n        }\n        else {\n            geometries = [geometry];\n        }\n        var features = [];\n        for (var i = 0, ii = geometries.length; i < ii; ++i) {\n            var feature = new Feature();\n            feature.setGeometry(geometries[i]);\n            features.push(feature);\n        }\n        return features;\n    };\n    /**\n     * @inheritDoc\n     */\n    WKT.prototype.readGeometryFromText = function (text, opt_options) {\n        var geometry = this.parse_(text);\n        if (geometry) {\n            return transformGeometryWithOptions(geometry, false, opt_options);\n        }\n        else {\n            return null;\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    WKT.prototype.writeFeatureText = function (feature, opt_options) {\n        var geometry = feature.getGeometry();\n        if (geometry) {\n            return this.writeGeometryText(geometry, opt_options);\n        }\n        return '';\n    };\n    /**\n     * @inheritDoc\n     */\n    WKT.prototype.writeFeaturesText = function (features, opt_options) {\n        if (features.length == 1) {\n            return this.writeFeatureText(features[0], opt_options);\n        }\n        var geometries = [];\n        for (var i = 0, ii = features.length; i < ii; ++i) {\n            geometries.push(features[i].getGeometry());\n        }\n        var collection = new GeometryCollection(geometries);\n        return this.writeGeometryText(collection, opt_options);\n    };\n    /**\n     * @inheritDoc\n     */\n    WKT.prototype.writeGeometryText = function (geometry, opt_options) {\n        return encode(transformGeometryWithOptions(geometry, true, opt_options));\n    };\n    return WKT;\n}(TextFeature));\n/**\n * @param {Point} geom Point geometry.\n * @return {string} Coordinates part of Point as WKT.\n */\nfunction encodePointGeometry(geom) {\n    var coordinates = geom.getCoordinates();\n    if (coordinates.length === 0) {\n        return '';\n    }\n    return coordinates.join(' ');\n}\n/**\n * @param {MultiPoint} geom MultiPoint geometry.\n * @return {string} Coordinates part of MultiPoint as WKT.\n */\nfunction encodeMultiPointGeometry(geom) {\n    var array = [];\n    var components = geom.getPoints();\n    for (var i = 0, ii = components.length; i < ii; ++i) {\n        array.push('(' + encodePointGeometry(components[i]) + ')');\n    }\n    return array.join(',');\n}\n/**\n * @param {GeometryCollection} geom GeometryCollection geometry.\n * @return {string} Coordinates part of GeometryCollection as WKT.\n */\nfunction encodeGeometryCollectionGeometry(geom) {\n    var array = [];\n    var geoms = geom.getGeometries();\n    for (var i = 0, ii = geoms.length; i < ii; ++i) {\n        array.push(encode(geoms[i]));\n    }\n    return array.join(',');\n}\n/**\n * @param {LineString|import(\"../geom/LinearRing.js\").default} geom LineString geometry.\n * @return {string} Coordinates part of LineString as WKT.\n */\nfunction encodeLineStringGeometry(geom) {\n    var coordinates = geom.getCoordinates();\n    var array = [];\n    for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n        array.push(coordinates[i].join(' '));\n    }\n    return array.join(',');\n}\n/**\n * @param {MultiLineString} geom MultiLineString geometry.\n * @return {string} Coordinates part of MultiLineString as WKT.\n */\nfunction encodeMultiLineStringGeometry(geom) {\n    var array = [];\n    var components = geom.getLineStrings();\n    for (var i = 0, ii = components.length; i < ii; ++i) {\n        array.push('(' + encodeLineStringGeometry(components[i]) + ')');\n    }\n    return array.join(',');\n}\n/**\n * @param {Polygon} geom Polygon geometry.\n * @return {string} Coordinates part of Polygon as WKT.\n */\nfunction encodePolygonGeometry(geom) {\n    var array = [];\n    var rings = geom.getLinearRings();\n    for (var i = 0, ii = rings.length; i < ii; ++i) {\n        array.push('(' + encodeLineStringGeometry(rings[i]) + ')');\n    }\n    return array.join(',');\n}\n/**\n * @param {MultiPolygon} geom MultiPolygon geometry.\n * @return {string} Coordinates part of MultiPolygon as WKT.\n */\nfunction encodeMultiPolygonGeometry(geom) {\n    var array = [];\n    var components = geom.getPolygons();\n    for (var i = 0, ii = components.length; i < ii; ++i) {\n        array.push('(' + encodePolygonGeometry(components[i]) + ')');\n    }\n    return array.join(',');\n}\n/**\n * @param {import(\"../geom/SimpleGeometry.js\").default} geom SimpleGeometry geometry.\n * @return {string} Potential dimensional information for WKT type.\n */\nfunction encodeGeometryLayout(geom) {\n    var layout = geom.getLayout();\n    var dimInfo = '';\n    if (layout === GeometryLayout.XYZ || layout === GeometryLayout.XYZM) {\n        dimInfo += Z;\n    }\n    if (layout === GeometryLayout.XYM || layout === GeometryLayout.XYZM) {\n        dimInfo += M;\n    }\n    return dimInfo;\n}\n/**\n * @const\n * @type {Object<string, function(import(\"../geom/Geometry.js\").default): string>}\n */\nvar GeometryEncoder = {\n    'Point': encodePointGeometry,\n    'LineString': encodeLineStringGeometry,\n    'Polygon': encodePolygonGeometry,\n    'MultiPoint': encodeMultiPointGeometry,\n    'MultiLineString': encodeMultiLineStringGeometry,\n    'MultiPolygon': encodeMultiPolygonGeometry,\n    'GeometryCollection': encodeGeometryCollectionGeometry\n};\n/**\n * Encode a geometry as WKT.\n * @param {!import(\"../geom/Geometry.js\").default} geom The geometry to encode.\n * @return {string} WKT string for the geometry.\n */\nfunction encode(geom) {\n    var type = geom.getType();\n    var geometryEncoder = GeometryEncoder[type];\n    var enc = geometryEncoder(geom);\n    type = type.toUpperCase();\n    if (typeof /** @type {?} */ (geom).getFlatCoordinates === 'function') {\n        var dimInfo = encodeGeometryLayout(/** @type {import(\"../geom/SimpleGeometry.js\").default} */ (geom));\n        if (dimInfo.length > 0) {\n            type += ' ' + dimInfo;\n        }\n    }\n    if (enc.length === 0) {\n        return type + ' ' + EMPTY;\n    }\n    return type + '(' + enc + ')';\n}\nexport default WKT;\n//# sourceMappingURL=WKT.js.map","/**\n * @module ol/format/XLink\n */\n/**\n * @const\n * @type {string}\n */\nvar NAMESPACE_URI = 'http://www.w3.org/1999/xlink';\n/**\n * @param {Element} node Node.\n * @return {string|undefined} href.\n */\nexport function readHref(node) {\n    return node.getAttributeNS(NAMESPACE_URI, 'href');\n}\n//# sourceMappingURL=XLink.js.map","/**\n * @module ol/format/XML\n */\nimport { isDocument, parse } from '../xml.js';\n/**\n * @classdesc\n * Generic format for reading non-feature XML data\n *\n * @abstract\n */\nvar XML = /** @class */ (function () {\n    function XML() {\n    }\n    /**\n     * Read the source document.\n     *\n     * @param {Document|Element|string} source The XML source.\n     * @return {Object} An object representing the source.\n     * @api\n     */\n    XML.prototype.read = function (source) {\n        if (!source) {\n            return null;\n        }\n        else if (typeof source === 'string') {\n            var doc = parse(source);\n            return this.readFromDocument(doc);\n        }\n        else if (isDocument(source)) {\n            return this.readFromDocument(/** @type {Document} */ (source));\n        }\n        else {\n            return this.readFromNode(/** @type {Element} */ (source));\n        }\n    };\n    /**\n     * @abstract\n     * @param {Document} doc Document.\n     * @return {Object} Object\n     */\n    XML.prototype.readFromDocument = function (doc) { };\n    /**\n     * @abstract\n     * @param {Element} node Node.\n     * @return {Object} Object\n     */\n    XML.prototype.readFromNode = function (node) { };\n    return XML;\n}());\nexport default XML;\n//# sourceMappingURL=XML.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/format/WMSCapabilities\n */\nimport { readHref } from './XLink.js';\nimport XML from './XML.js';\nimport { readDecimalString, readString, readNonNegativeInteger, readDecimal, readBooleanString, readNonNegativeIntegerString } from './xsd.js';\nimport { makeArrayPusher, makeObjectPropertyPusher, makeObjectPropertySetter, makeStructureNS, pushParseAndPop } from '../xml.js';\n/**\n * @const\n * @type {Array<null|string>}\n */\nvar NAMESPACE_URIS = [\n    null,\n    'http://www.opengis.net/wms'\n];\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'Service': makeObjectPropertySetter(readService),\n    'Capability': makeObjectPropertySetter(readCapability)\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar CAPABILITY_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'Request': makeObjectPropertySetter(readRequest),\n    'Exception': makeObjectPropertySetter(readException),\n    'Layer': makeObjectPropertySetter(readCapabilityLayer)\n});\n/**\n * @classdesc\n * Format for reading WMS capabilities data\n *\n * @api\n */\nvar WMSCapabilities = /** @class */ (function (_super) {\n    __extends(WMSCapabilities, _super);\n    function WMSCapabilities() {\n        var _this = _super.call(this) || this;\n        /**\n         * @type {string|undefined}\n         */\n        _this.version = undefined;\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    WMSCapabilities.prototype.readFromDocument = function (doc) {\n        for (var n = doc.firstChild; n; n = n.nextSibling) {\n            if (n.nodeType == Node.ELEMENT_NODE) {\n                return this.readFromNode(n);\n            }\n        }\n        return null;\n    };\n    /**\n     * @inheritDoc\n     */\n    WMSCapabilities.prototype.readFromNode = function (node) {\n        this.version = node.getAttribute('version').trim();\n        var wmsCapabilityObject = pushParseAndPop({\n            'version': this.version\n        }, PARSERS, node, []);\n        return wmsCapabilityObject ? wmsCapabilityObject : null;\n    };\n    return WMSCapabilities;\n}(XML));\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar SERVICE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'Name': makeObjectPropertySetter(readString),\n    'Title': makeObjectPropertySetter(readString),\n    'Abstract': makeObjectPropertySetter(readString),\n    'KeywordList': makeObjectPropertySetter(readKeywordList),\n    'OnlineResource': makeObjectPropertySetter(readHref),\n    'ContactInformation': makeObjectPropertySetter(readContactInformation),\n    'Fees': makeObjectPropertySetter(readString),\n    'AccessConstraints': makeObjectPropertySetter(readString),\n    'LayerLimit': makeObjectPropertySetter(readNonNegativeInteger),\n    'MaxWidth': makeObjectPropertySetter(readNonNegativeInteger),\n    'MaxHeight': makeObjectPropertySetter(readNonNegativeInteger)\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar CONTACT_INFORMATION_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'ContactPersonPrimary': makeObjectPropertySetter(readContactPersonPrimary),\n    'ContactPosition': makeObjectPropertySetter(readString),\n    'ContactAddress': makeObjectPropertySetter(readContactAddress),\n    'ContactVoiceTelephone': makeObjectPropertySetter(readString),\n    'ContactFacsimileTelephone': makeObjectPropertySetter(readString),\n    'ContactElectronicMailAddress': makeObjectPropertySetter(readString)\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar CONTACT_PERSON_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'ContactPerson': makeObjectPropertySetter(readString),\n    'ContactOrganization': makeObjectPropertySetter(readString)\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar CONTACT_ADDRESS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'AddressType': makeObjectPropertySetter(readString),\n    'Address': makeObjectPropertySetter(readString),\n    'City': makeObjectPropertySetter(readString),\n    'StateOrProvince': makeObjectPropertySetter(readString),\n    'PostCode': makeObjectPropertySetter(readString),\n    'Country': makeObjectPropertySetter(readString)\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar EXCEPTION_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'Format': makeArrayPusher(readString)\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar LAYER_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'Name': makeObjectPropertySetter(readString),\n    'Title': makeObjectPropertySetter(readString),\n    'Abstract': makeObjectPropertySetter(readString),\n    'KeywordList': makeObjectPropertySetter(readKeywordList),\n    'CRS': makeObjectPropertyPusher(readString),\n    'EX_GeographicBoundingBox': makeObjectPropertySetter(readEXGeographicBoundingBox),\n    'BoundingBox': makeObjectPropertyPusher(readBoundingBox),\n    'Dimension': makeObjectPropertyPusher(readDimension),\n    'Attribution': makeObjectPropertySetter(readAttribution),\n    'AuthorityURL': makeObjectPropertyPusher(readAuthorityURL),\n    'Identifier': makeObjectPropertyPusher(readString),\n    'MetadataURL': makeObjectPropertyPusher(readMetadataURL),\n    'DataURL': makeObjectPropertyPusher(readFormatOnlineresource),\n    'FeatureListURL': makeObjectPropertyPusher(readFormatOnlineresource),\n    'Style': makeObjectPropertyPusher(readStyle),\n    'MinScaleDenominator': makeObjectPropertySetter(readDecimal),\n    'MaxScaleDenominator': makeObjectPropertySetter(readDecimal),\n    'Layer': makeObjectPropertyPusher(readLayer)\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar ATTRIBUTION_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'Title': makeObjectPropertySetter(readString),\n    'OnlineResource': makeObjectPropertySetter(readHref),\n    'LogoURL': makeObjectPropertySetter(readSizedFormatOnlineresource)\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar EX_GEOGRAPHIC_BOUNDING_BOX_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'westBoundLongitude': makeObjectPropertySetter(readDecimal),\n    'eastBoundLongitude': makeObjectPropertySetter(readDecimal),\n    'southBoundLatitude': makeObjectPropertySetter(readDecimal),\n    'northBoundLatitude': makeObjectPropertySetter(readDecimal)\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar REQUEST_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'GetCapabilities': makeObjectPropertySetter(readOperationType),\n    'GetMap': makeObjectPropertySetter(readOperationType),\n    'GetFeatureInfo': makeObjectPropertySetter(readOperationType)\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar OPERATIONTYPE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'Format': makeObjectPropertyPusher(readString),\n    'DCPType': makeObjectPropertyPusher(readDCPType)\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar DCPTYPE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'HTTP': makeObjectPropertySetter(readHTTP)\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar HTTP_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'Get': makeObjectPropertySetter(readFormatOnlineresource),\n    'Post': makeObjectPropertySetter(readFormatOnlineresource)\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar STYLE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'Name': makeObjectPropertySetter(readString),\n    'Title': makeObjectPropertySetter(readString),\n    'Abstract': makeObjectPropertySetter(readString),\n    'LegendURL': makeObjectPropertyPusher(readSizedFormatOnlineresource),\n    'StyleSheetURL': makeObjectPropertySetter(readFormatOnlineresource),\n    'StyleURL': makeObjectPropertySetter(readFormatOnlineresource)\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar FORMAT_ONLINERESOURCE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'Format': makeObjectPropertySetter(readString),\n    'OnlineResource': makeObjectPropertySetter(readHref)\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar KEYWORDLIST_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'Keyword': makeArrayPusher(readString)\n});\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Attribution object.\n */\nfunction readAttribution(node, objectStack) {\n    return pushParseAndPop({}, ATTRIBUTION_PARSERS, node, objectStack);\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object} Bounding box object.\n */\nfunction readBoundingBox(node, objectStack) {\n    var extent = [\n        readDecimalString(node.getAttribute('minx')),\n        readDecimalString(node.getAttribute('miny')),\n        readDecimalString(node.getAttribute('maxx')),\n        readDecimalString(node.getAttribute('maxy'))\n    ];\n    var resolutions = [\n        readDecimalString(node.getAttribute('resx')),\n        readDecimalString(node.getAttribute('resy'))\n    ];\n    return {\n        'crs': node.getAttribute('CRS'),\n        'extent': extent,\n        'res': resolutions\n    };\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {import(\"../extent.js\").Extent|undefined} Bounding box object.\n */\nfunction readEXGeographicBoundingBox(node, objectStack) {\n    var geographicBoundingBox = pushParseAndPop({}, EX_GEOGRAPHIC_BOUNDING_BOX_PARSERS, node, objectStack);\n    if (!geographicBoundingBox) {\n        return undefined;\n    }\n    var westBoundLongitude = /** @type {number|undefined} */ (geographicBoundingBox['westBoundLongitude']);\n    var southBoundLatitude = /** @type {number|undefined} */ (geographicBoundingBox['southBoundLatitude']);\n    var eastBoundLongitude = /** @type {number|undefined} */ (geographicBoundingBox['eastBoundLongitude']);\n    var northBoundLatitude = /** @type {number|undefined} */ (geographicBoundingBox['northBoundLatitude']);\n    if (westBoundLongitude === undefined || southBoundLatitude === undefined ||\n        eastBoundLongitude === undefined || northBoundLatitude === undefined) {\n        return undefined;\n    }\n    return [\n        westBoundLongitude, southBoundLatitude,\n        eastBoundLongitude, northBoundLatitude\n    ];\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Capability object.\n */\nfunction readCapability(node, objectStack) {\n    return pushParseAndPop({}, CAPABILITY_PARSERS, node, objectStack);\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Service object.\n */\nfunction readService(node, objectStack) {\n    return pushParseAndPop({}, SERVICE_PARSERS, node, objectStack);\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Contact information object.\n */\nfunction readContactInformation(node, objectStack) {\n    return pushParseAndPop({}, CONTACT_INFORMATION_PARSERS, node, objectStack);\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Contact person object.\n */\nfunction readContactPersonPrimary(node, objectStack) {\n    return pushParseAndPop({}, CONTACT_PERSON_PARSERS, node, objectStack);\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Contact address object.\n */\nfunction readContactAddress(node, objectStack) {\n    return pushParseAndPop({}, CONTACT_ADDRESS_PARSERS, node, objectStack);\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Array<string>|undefined} Format array.\n */\nfunction readException(node, objectStack) {\n    return pushParseAndPop([], EXCEPTION_PARSERS, node, objectStack);\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Layer object.\n */\nfunction readCapabilityLayer(node, objectStack) {\n    return pushParseAndPop({}, LAYER_PARSERS, node, objectStack);\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Layer object.\n */\nfunction readLayer(node, objectStack) {\n    var parentLayerObject = /**  @type {!Object<string,*>} */ (objectStack[objectStack.length - 1]);\n    var layerObject = pushParseAndPop({}, LAYER_PARSERS, node, objectStack);\n    if (!layerObject) {\n        return undefined;\n    }\n    var queryable = readBooleanString(node.getAttribute('queryable'));\n    if (queryable === undefined) {\n        queryable = parentLayerObject['queryable'];\n    }\n    layerObject['queryable'] = queryable !== undefined ? queryable : false;\n    var cascaded = readNonNegativeIntegerString(node.getAttribute('cascaded'));\n    if (cascaded === undefined) {\n        cascaded = parentLayerObject['cascaded'];\n    }\n    layerObject['cascaded'] = cascaded;\n    var opaque = readBooleanString(node.getAttribute('opaque'));\n    if (opaque === undefined) {\n        opaque = parentLayerObject['opaque'];\n    }\n    layerObject['opaque'] = opaque !== undefined ? opaque : false;\n    var noSubsets = readBooleanString(node.getAttribute('noSubsets'));\n    if (noSubsets === undefined) {\n        noSubsets = parentLayerObject['noSubsets'];\n    }\n    layerObject['noSubsets'] = noSubsets !== undefined ? noSubsets : false;\n    var fixedWidth = readDecimalString(node.getAttribute('fixedWidth'));\n    if (!fixedWidth) {\n        fixedWidth = parentLayerObject['fixedWidth'];\n    }\n    layerObject['fixedWidth'] = fixedWidth;\n    var fixedHeight = readDecimalString(node.getAttribute('fixedHeight'));\n    if (!fixedHeight) {\n        fixedHeight = parentLayerObject['fixedHeight'];\n    }\n    layerObject['fixedHeight'] = fixedHeight;\n    // See 7.2.4.8\n    var addKeys = ['Style', 'CRS', 'AuthorityURL'];\n    addKeys.forEach(function (key) {\n        if (key in parentLayerObject) {\n            var childValue = layerObject[key] || [];\n            layerObject[key] = childValue.concat(parentLayerObject[key]);\n        }\n    });\n    var replaceKeys = ['EX_GeographicBoundingBox', 'BoundingBox', 'Dimension',\n        'Attribution', 'MinScaleDenominator', 'MaxScaleDenominator'];\n    replaceKeys.forEach(function (key) {\n        if (!(key in layerObject)) {\n            var parentValue = parentLayerObject[key];\n            layerObject[key] = parentValue;\n        }\n    });\n    return layerObject;\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object} Dimension object.\n */\nfunction readDimension(node, objectStack) {\n    var dimensionObject = {\n        'name': node.getAttribute('name'),\n        'units': node.getAttribute('units'),\n        'unitSymbol': node.getAttribute('unitSymbol'),\n        'default': node.getAttribute('default'),\n        'multipleValues': readBooleanString(node.getAttribute('multipleValues')),\n        'nearestValue': readBooleanString(node.getAttribute('nearestValue')),\n        'current': readBooleanString(node.getAttribute('current')),\n        'values': readString(node)\n    };\n    return dimensionObject;\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Online resource object.\n */\nfunction readFormatOnlineresource(node, objectStack) {\n    return pushParseAndPop({}, FORMAT_ONLINERESOURCE_PARSERS, node, objectStack);\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Request object.\n */\nfunction readRequest(node, objectStack) {\n    return pushParseAndPop({}, REQUEST_PARSERS, node, objectStack);\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} DCP type object.\n */\nfunction readDCPType(node, objectStack) {\n    return pushParseAndPop({}, DCPTYPE_PARSERS, node, objectStack);\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} HTTP object.\n */\nfunction readHTTP(node, objectStack) {\n    return pushParseAndPop({}, HTTP_PARSERS, node, objectStack);\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Operation type object.\n */\nfunction readOperationType(node, objectStack) {\n    return pushParseAndPop({}, OPERATIONTYPE_PARSERS, node, objectStack);\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Online resource object.\n */\nfunction readSizedFormatOnlineresource(node, objectStack) {\n    var formatOnlineresource = readFormatOnlineresource(node, objectStack);\n    if (formatOnlineresource) {\n        var size = [\n            readNonNegativeIntegerString(node.getAttribute('width')),\n            readNonNegativeIntegerString(node.getAttribute('height'))\n        ];\n        formatOnlineresource['size'] = size;\n        return formatOnlineresource;\n    }\n    return undefined;\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Authority URL object.\n */\nfunction readAuthorityURL(node, objectStack) {\n    var authorityObject = readFormatOnlineresource(node, objectStack);\n    if (authorityObject) {\n        authorityObject['name'] = node.getAttribute('name');\n        return authorityObject;\n    }\n    return undefined;\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Metadata URL object.\n */\nfunction readMetadataURL(node, objectStack) {\n    var metadataObject = readFormatOnlineresource(node, objectStack);\n    if (metadataObject) {\n        metadataObject['type'] = node.getAttribute('type');\n        return metadataObject;\n    }\n    return undefined;\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Style object.\n */\nfunction readStyle(node, objectStack) {\n    return pushParseAndPop({}, STYLE_PARSERS, node, objectStack);\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Array<string>|undefined} Keyword list.\n */\nfunction readKeywordList(node, objectStack) {\n    return pushParseAndPop([], KEYWORDLIST_PARSERS, node, objectStack);\n}\nexport default WMSCapabilities;\n//# sourceMappingURL=WMSCapabilities.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/format/WMSGetFeatureInfo\n */\nimport { extend, includes } from '../array.js';\nimport GML2 from './GML2.js';\nimport XMLFeature from './XMLFeature.js';\nimport { assign } from '../obj.js';\nimport { makeArrayPusher, makeStructureNS, pushParseAndPop } from '../xml.js';\n/**\n * @typedef {Object} Options\n * @property {Array<string>} [layers] If set, only features of the given layers will be returned by the format when read.\n */\n/**\n * @const\n * @type {string}\n */\nvar featureIdentifier = '_feature';\n/**\n * @const\n * @type {string}\n */\nvar layerIdentifier = '_layer';\n/**\n * @classdesc\n * Format for reading WMSGetFeatureInfo format. It uses\n * {@link module:ol/format/GML2~GML2} to read features.\n *\n * @api\n */\nvar WMSGetFeatureInfo = /** @class */ (function (_super) {\n    __extends(WMSGetFeatureInfo, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function WMSGetFeatureInfo(opt_options) {\n        var _this = _super.call(this) || this;\n        var options = opt_options ? opt_options : {};\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.featureNS_ = 'http://mapserver.gis.umn.edu/mapserver';\n        /**\n         * @private\n         * @type {GML2}\n         */\n        _this.gmlFormat_ = new GML2();\n        /**\n         * @private\n         * @type {Array<string>}\n         */\n        _this.layers_ = options.layers ? options.layers : null;\n        return _this;\n    }\n    /**\n     * @return {Array<string>} layers\n     */\n    WMSGetFeatureInfo.prototype.getLayers = function () {\n        return this.layers_;\n    };\n    /**\n     * @param {Array<string>} layers Layers to parse.\n     */\n    WMSGetFeatureInfo.prototype.setLayers = function (layers) {\n        this.layers_ = layers;\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     * @return {Array<import(\"../Feature.js\").default>} Features.\n     * @private\n     */\n    WMSGetFeatureInfo.prototype.readFeatures_ = function (node, objectStack) {\n        node.setAttribute('namespaceURI', this.featureNS_);\n        var localName = node.localName;\n        /** @type {Array<import(\"../Feature.js\").default>} */\n        var features = [];\n        if (node.childNodes.length === 0) {\n            return features;\n        }\n        if (localName == 'msGMLOutput') {\n            for (var i = 0, ii = node.childNodes.length; i < ii; i++) {\n                var layer = node.childNodes[i];\n                if (layer.nodeType !== Node.ELEMENT_NODE) {\n                    continue;\n                }\n                var layerElement = /** @type {Element} */ (layer);\n                var context = objectStack[0];\n                var toRemove = layerIdentifier;\n                var layerName = layerElement.localName.replace(toRemove, '');\n                if (this.layers_ && !includes(this.layers_, layerName)) {\n                    continue;\n                }\n                var featureType = layerName +\n                    featureIdentifier;\n                context['featureType'] = featureType;\n                context['featureNS'] = this.featureNS_;\n                /** @type {Object<string, import(\"../xml.js\").Parser>} */\n                var parsers = {};\n                parsers[featureType] = makeArrayPusher(this.gmlFormat_.readFeatureElement, this.gmlFormat_);\n                var parsersNS = makeStructureNS([context['featureNS'], null], parsers);\n                layerElement.setAttribute('namespaceURI', this.featureNS_);\n                var layerFeatures = pushParseAndPop([], parsersNS, layerElement, objectStack, this.gmlFormat_);\n                if (layerFeatures) {\n                    extend(features, layerFeatures);\n                }\n            }\n        }\n        if (localName == 'FeatureCollection') {\n            var gmlFeatures = pushParseAndPop([], this.gmlFormat_.FEATURE_COLLECTION_PARSERS, node, [{}], this.gmlFormat_);\n            if (gmlFeatures) {\n                features = gmlFeatures;\n            }\n        }\n        return features;\n    };\n    /**\n     * @inheritDoc\n     */\n    WMSGetFeatureInfo.prototype.readFeaturesFromNode = function (node, opt_options) {\n        var options = {};\n        if (opt_options) {\n            assign(options, this.getReadOptions(node, opt_options));\n        }\n        return this.readFeatures_(node, [options]);\n    };\n    return WMSGetFeatureInfo;\n}(XMLFeature));\nexport default WMSGetFeatureInfo;\n//# sourceMappingURL=WMSGetFeatureInfo.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/format/OWS\n */\nimport { readHref } from './XLink.js';\nimport XML from './XML.js';\nimport { readString } from './xsd.js';\nimport { makeObjectPropertyPusher, makeObjectPropertySetter, makeStructureNS, pushParseAndPop } from '../xml.js';\n/**\n * @const\n * @type {Array<null|string>}\n */\nvar NAMESPACE_URIS = [null, 'http://www.opengis.net/ows/1.1'];\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'ServiceIdentification': makeObjectPropertySetter(readServiceIdentification),\n    'ServiceProvider': makeObjectPropertySetter(readServiceProvider),\n    'OperationsMetadata': makeObjectPropertySetter(readOperationsMetadata)\n});\nvar OWS = /** @class */ (function (_super) {\n    __extends(OWS, _super);\n    function OWS() {\n        return _super.call(this) || this;\n    }\n    /**\n     * @inheritDoc\n     */\n    OWS.prototype.readFromDocument = function (doc) {\n        for (var n = doc.firstChild; n; n = n.nextSibling) {\n            if (n.nodeType == Node.ELEMENT_NODE) {\n                return this.readFromNode(n);\n            }\n        }\n        return null;\n    };\n    /**\n     * @inheritDoc\n     */\n    OWS.prototype.readFromNode = function (node) {\n        var owsObject = pushParseAndPop({}, PARSERS, node, []);\n        return owsObject ? owsObject : null;\n    };\n    return OWS;\n}(XML));\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar ADDRESS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'DeliveryPoint': makeObjectPropertySetter(readString),\n    'City': makeObjectPropertySetter(readString),\n    'AdministrativeArea': makeObjectPropertySetter(readString),\n    'PostalCode': makeObjectPropertySetter(readString),\n    'Country': makeObjectPropertySetter(readString),\n    'ElectronicMailAddress': makeObjectPropertySetter(readString)\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar ALLOWED_VALUES_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'Value': makeObjectPropertyPusher(readValue)\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar CONSTRAINT_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'AllowedValues': makeObjectPropertySetter(readAllowedValues)\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar CONTACT_INFO_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'Phone': makeObjectPropertySetter(readPhone),\n    'Address': makeObjectPropertySetter(readAddress)\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar DCP_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'HTTP': makeObjectPropertySetter(readHttp)\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar HTTP_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'Get': makeObjectPropertyPusher(readGet),\n    'Post': undefined // TODO\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar OPERATION_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'DCP': makeObjectPropertySetter(readDcp)\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar OPERATIONS_METADATA_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'Operation': readOperation\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar PHONE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'Voice': makeObjectPropertySetter(readString),\n    'Facsimile': makeObjectPropertySetter(readString)\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar REQUEST_METHOD_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'Constraint': makeObjectPropertyPusher(readConstraint)\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar SERVICE_CONTACT_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'IndividualName': makeObjectPropertySetter(readString),\n    'PositionName': makeObjectPropertySetter(readString),\n    'ContactInfo': makeObjectPropertySetter(readContactInfo)\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar SERVICE_IDENTIFICATION_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'Abstract': makeObjectPropertySetter(readString),\n    'AccessConstraints': makeObjectPropertySetter(readString),\n    'Fees': makeObjectPropertySetter(readString),\n    'Title': makeObjectPropertySetter(readString),\n    'ServiceTypeVersion': makeObjectPropertySetter(readString),\n    'ServiceType': makeObjectPropertySetter(readString)\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar SERVICE_PROVIDER_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'ProviderName': makeObjectPropertySetter(readString),\n    'ProviderSite': makeObjectPropertySetter(readHref),\n    'ServiceContact': makeObjectPropertySetter(readServiceContact)\n});\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The address.\n */\nfunction readAddress(node, objectStack) {\n    return pushParseAndPop({}, ADDRESS_PARSERS, node, objectStack);\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The values.\n */\nfunction readAllowedValues(node, objectStack) {\n    return pushParseAndPop({}, ALLOWED_VALUES_PARSERS, node, objectStack);\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The constraint.\n */\nfunction readConstraint(node, objectStack) {\n    var name = node.getAttribute('name');\n    if (!name) {\n        return undefined;\n    }\n    return pushParseAndPop({ 'name': name }, CONSTRAINT_PARSERS, node, objectStack);\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The contact info.\n */\nfunction readContactInfo(node, objectStack) {\n    return pushParseAndPop({}, CONTACT_INFO_PARSERS, node, objectStack);\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The DCP.\n */\nfunction readDcp(node, objectStack) {\n    return pushParseAndPop({}, DCP_PARSERS, node, objectStack);\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The GET object.\n */\nfunction readGet(node, objectStack) {\n    var href = readHref(node);\n    if (!href) {\n        return undefined;\n    }\n    return pushParseAndPop({ 'href': href }, REQUEST_METHOD_PARSERS, node, objectStack);\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The HTTP object.\n */\nfunction readHttp(node, objectStack) {\n    return pushParseAndPop({}, HTTP_PARSERS, node, objectStack);\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The operation.\n */\nfunction readOperation(node, objectStack) {\n    var name = node.getAttribute('name');\n    var value = pushParseAndPop({}, OPERATION_PARSERS, node, objectStack);\n    if (!value) {\n        return undefined;\n    }\n    var object = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n    object[name] = value;\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The operations metadata.\n */\nfunction readOperationsMetadata(node, objectStack) {\n    return pushParseAndPop({}, OPERATIONS_METADATA_PARSERS, node, objectStack);\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The phone.\n */\nfunction readPhone(node, objectStack) {\n    return pushParseAndPop({}, PHONE_PARSERS, node, objectStack);\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The service identification.\n */\nfunction readServiceIdentification(node, objectStack) {\n    return pushParseAndPop({}, SERVICE_IDENTIFICATION_PARSERS, node, objectStack);\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The service contact.\n */\nfunction readServiceContact(node, objectStack) {\n    return pushParseAndPop({}, SERVICE_CONTACT_PARSERS, node, objectStack);\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The service provider.\n */\nfunction readServiceProvider(node, objectStack) {\n    return pushParseAndPop({}, SERVICE_PROVIDER_PARSERS, node, objectStack);\n}\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {string|undefined} The value.\n */\nfunction readValue(node, objectStack) {\n    return readString(node);\n}\nexport default OWS;\n//# sourceMappingURL=OWS.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/format/WMTSCapabilities\n */\nimport { boundingExtent } from '../extent.js';\nimport OWS from './OWS.js';\nimport { readHref } from './XLink.js';\nimport XML from './XML.js';\nimport { readString, readNonNegativeInteger, readDecimal } from './xsd.js';\nimport { pushParseAndPop, makeStructureNS, makeObjectPropertySetter, makeObjectPropertyPusher, makeArrayPusher } from '../xml.js';\n/**\n * @const\n * @type {Array<null|string>}\n */\nvar NAMESPACE_URIS = [\n    null,\n    'http://www.opengis.net/wmts/1.0'\n];\n/**\n * @const\n * @type {Array<null|string>}\n */\nvar OWS_NAMESPACE_URIS = [\n    null,\n    'http://www.opengis.net/ows/1.1'\n];\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'Contents': makeObjectPropertySetter(readContents)\n});\n/**\n * @classdesc\n * Format for reading WMTS capabilities data.\n *\n * @api\n */\nvar WMTSCapabilities = /** @class */ (function (_super) {\n    __extends(WMTSCapabilities, _super);\n    function WMTSCapabilities() {\n        var _this = _super.call(this) || this;\n        /**\n         * @type {OWS}\n         * @private\n         */\n        _this.owsParser_ = new OWS();\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    WMTSCapabilities.prototype.readFromDocument = function (doc) {\n        for (var n = doc.firstChild; n; n = n.nextSibling) {\n            if (n.nodeType == Node.ELEMENT_NODE) {\n                return this.readFromNode(n);\n            }\n        }\n        return null;\n    };\n    /**\n     * @inheritDoc\n     */\n    WMTSCapabilities.prototype.readFromNode = function (node) {\n        var version = node.getAttribute('version').trim();\n        var WMTSCapabilityObject = this.owsParser_.readFromNode(node);\n        if (!WMTSCapabilityObject) {\n            return null;\n        }\n        WMTSCapabilityObject['version'] = version;\n        WMTSCapabilityObject = pushParseAndPop(WMTSCapabilityObject, PARSERS, node, []);\n        return WMTSCapabilityObject ? WMTSCapabilityObject : null;\n    };\n    return WMTSCapabilities;\n}(XML));\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar CONTENTS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'Layer': makeObjectPropertyPusher(readLayer),\n    'TileMatrixSet': makeObjectPropertyPusher(readTileMatrixSet)\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar LAYER_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'Style': makeObjectPropertyPusher(readStyle),\n    'Format': makeObjectPropertyPusher(readString),\n    'TileMatrixSetLink': makeObjectPropertyPusher(readTileMatrixSetLink),\n    'Dimension': makeObjectPropertyPusher(readDimensions),\n    'ResourceURL': makeObjectPropertyPusher(readResourceUrl)\n}, makeStructureNS(OWS_NAMESPACE_URIS, {\n    'Title': makeObjectPropertySetter(readString),\n    'Abstract': makeObjectPropertySetter(readString),\n    'WGS84BoundingBox': makeObjectPropertySetter(readWgs84BoundingBox),\n    'Identifier': makeObjectPropertySetter(readString)\n}));\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar STYLE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'LegendURL': makeObjectPropertyPusher(readLegendUrl)\n}, makeStructureNS(OWS_NAMESPACE_URIS, {\n    'Title': makeObjectPropertySetter(readString),\n    'Identifier': makeObjectPropertySetter(readString)\n}));\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar TMS_LINKS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'TileMatrixSet': makeObjectPropertySetter(readString),\n    'TileMatrixSetLimits': makeObjectPropertySetter(readTileMatrixLimitsList)\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar TMS_LIMITS_LIST_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'TileMatrixLimits': makeArrayPusher(readTileMatrixLimits)\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar TMS_LIMITS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'TileMatrix': makeObjectPropertySetter(readString),\n    'MinTileRow': makeObjectPropertySetter(readNonNegativeInteger),\n    'MaxTileRow': makeObjectPropertySetter(readNonNegativeInteger),\n    'MinTileCol': makeObjectPropertySetter(readNonNegativeInteger),\n    'MaxTileCol': makeObjectPropertySetter(readNonNegativeInteger)\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar DIMENSION_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'Default': makeObjectPropertySetter(readString),\n    'Value': makeObjectPropertyPusher(readString)\n}, makeStructureNS(OWS_NAMESPACE_URIS, {\n    'Identifier': makeObjectPropertySetter(readString)\n}));\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar WGS84_BBOX_READERS = makeStructureNS(OWS_NAMESPACE_URIS, {\n    'LowerCorner': makeArrayPusher(readCoordinates),\n    'UpperCorner': makeArrayPusher(readCoordinates)\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar TMS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'WellKnownScaleSet': makeObjectPropertySetter(readString),\n    'TileMatrix': makeObjectPropertyPusher(readTileMatrix)\n}, makeStructureNS(OWS_NAMESPACE_URIS, {\n    'SupportedCRS': makeObjectPropertySetter(readString),\n    'Identifier': makeObjectPropertySetter(readString)\n}));\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar TM_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'TopLeftCorner': makeObjectPropertySetter(readCoordinates),\n    'ScaleDenominator': makeObjectPropertySetter(readDecimal),\n    'TileWidth': makeObjectPropertySetter(readNonNegativeInteger),\n    'TileHeight': makeObjectPropertySetter(readNonNegativeInteger),\n    'MatrixWidth': makeObjectPropertySetter(readNonNegativeInteger),\n    'MatrixHeight': makeObjectPropertySetter(readNonNegativeInteger)\n}, makeStructureNS(OWS_NAMESPACE_URIS, {\n    'Identifier': makeObjectPropertySetter(readString)\n}));\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Attribution object.\n */\nfunction readContents(node, objectStack) {\n    return pushParseAndPop({}, CONTENTS_PARSERS, node, objectStack);\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Layers object.\n */\nfunction readLayer(node, objectStack) {\n    return pushParseAndPop({}, LAYER_PARSERS, node, objectStack);\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Tile Matrix Set object.\n */\nfunction readTileMatrixSet(node, objectStack) {\n    return pushParseAndPop({}, TMS_PARSERS, node, objectStack);\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Style object.\n */\nfunction readStyle(node, objectStack) {\n    var style = pushParseAndPop({}, STYLE_PARSERS, node, objectStack);\n    if (!style) {\n        return undefined;\n    }\n    var isDefault = node.getAttribute('isDefault') === 'true';\n    style['isDefault'] = isDefault;\n    return style;\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Tile Matrix Set Link object.\n */\nfunction readTileMatrixSetLink(node, objectStack) {\n    return pushParseAndPop({}, TMS_LINKS_PARSERS, node, objectStack);\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Dimension object.\n */\nfunction readDimensions(node, objectStack) {\n    return pushParseAndPop({}, DIMENSION_PARSERS, node, objectStack);\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Resource URL object.\n */\nfunction readResourceUrl(node, objectStack) {\n    var format = node.getAttribute('format');\n    var template = node.getAttribute('template');\n    var resourceType = node.getAttribute('resourceType');\n    var resource = {};\n    if (format) {\n        resource['format'] = format;\n    }\n    if (template) {\n        resource['template'] = template;\n    }\n    if (resourceType) {\n        resource['resourceType'] = resourceType;\n    }\n    return resource;\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} WGS84 BBox object.\n */\nfunction readWgs84BoundingBox(node, objectStack) {\n    var coordinates = pushParseAndPop([], WGS84_BBOX_READERS, node, objectStack);\n    if (coordinates.length != 2) {\n        return undefined;\n    }\n    return boundingExtent(coordinates);\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Legend object.\n */\nfunction readLegendUrl(node, objectStack) {\n    var legend = {};\n    legend['format'] = node.getAttribute('format');\n    legend['href'] = readHref(node);\n    return legend;\n}\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Coordinates object.\n */\nfunction readCoordinates(node, objectStack) {\n    var coordinates = readString(node).split(/\\s+/);\n    if (!coordinates || coordinates.length != 2) {\n        return undefined;\n    }\n    var x = +coordinates[0];\n    var y = +coordinates[1];\n    if (isNaN(x) || isNaN(y)) {\n        return undefined;\n    }\n    return [x, y];\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} TileMatrix object.\n */\nfunction readTileMatrix(node, objectStack) {\n    return pushParseAndPop({}, TM_PARSERS, node, objectStack);\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} TileMatrixSetLimits Object.\n */\nfunction readTileMatrixLimitsList(node, objectStack) {\n    return pushParseAndPop([], TMS_LIMITS_LIST_PARSERS, node, objectStack);\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} TileMatrixLimits Array.\n */\nfunction readTileMatrixLimits(node, objectStack) {\n    return pushParseAndPop({}, TMS_LIMITS_PARSERS, node, objectStack);\n}\nexport default WMTSCapabilities;\n//# sourceMappingURL=WMTSCapabilities.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/control/FullScreen\n */\nimport Control from './Control.js';\nimport { CLASS_CONTROL, CLASS_UNSELECTABLE, CLASS_UNSUPPORTED } from '../css.js';\nimport { replaceNode } from '../dom.js';\nimport { listen } from '../events.js';\nimport EventType from '../events/EventType.js';\nvar events = ['fullscreenchange', 'webkitfullscreenchange', 'MSFullscreenChange'];\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-full-screen'] CSS class name.\n * @property {string|Text} [label='\\u2922'] Text label to use for the button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|Text} [labelActive='\\u00d7'] Text label to use for the\n * button when full-screen is active.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Toggle full-screen'] Text label to use for the button tip.\n * @property {boolean} [keys=false] Full keyboard access.\n * @property {HTMLElement|string} [target] Specify a target if you want the\n * control to be rendered outside of the map's viewport.\n * @property {HTMLElement|string} [source] The element to be displayed\n * fullscreen. When not provided, the element containing the map viewport will\n * be displayed fullscreen.\n */\n/**\n * @classdesc\n * Provides a button that when clicked fills up the full screen with the map.\n * The full screen source element is by default the element containing the map viewport unless\n * overridden by providing the `source` option. In which case, the dom\n * element introduced using this parameter will be displayed in full screen.\n *\n * When in full screen mode, a close button is shown to exit full screen mode.\n * The [Fullscreen API](http://www.w3.org/TR/fullscreen/) is used to\n * toggle the map in full screen mode.\n *\n * @api\n */\nvar FullScreen = /** @class */ (function (_super) {\n    __extends(FullScreen, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function FullScreen(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, {\n            element: document.createElement('div'),\n            target: options.target\n        }) || this;\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.cssClassName_ = options.className !== undefined ? options.className :\n            'ol-full-screen';\n        var label = options.label !== undefined ? options.label : '\\u2922';\n        /**\n         * @private\n         * @type {Text}\n         */\n        _this.labelNode_ = typeof label === 'string' ?\n            document.createTextNode(label) : label;\n        var labelActive = options.labelActive !== undefined ? options.labelActive : '\\u00d7';\n        /**\n         * @private\n         * @type {Text}\n         */\n        _this.labelActiveNode_ = typeof labelActive === 'string' ?\n            document.createTextNode(labelActive) : labelActive;\n        /**\n         * @private\n         * @type {HTMLElement}\n         */\n        _this.button_ = document.createElement('button');\n        var tipLabel = options.tipLabel ? options.tipLabel : 'Toggle full-screen';\n        _this.setClassName_(_this.button_, isFullScreen());\n        _this.button_.setAttribute('type', 'button');\n        _this.button_.title = tipLabel;\n        _this.button_.appendChild(_this.labelNode_);\n        listen(_this.button_, EventType.CLICK, _this.handleClick_, _this);\n        var cssClasses = _this.cssClassName_ + ' ' + CLASS_UNSELECTABLE +\n            ' ' + CLASS_CONTROL + ' ' +\n            (!isFullScreenSupported() ? CLASS_UNSUPPORTED : '');\n        var element = _this.element;\n        element.className = cssClasses;\n        element.appendChild(_this.button_);\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.keys_ = options.keys !== undefined ? options.keys : false;\n        /**\n         * @private\n         * @type {HTMLElement|string|undefined}\n         */\n        _this.source_ = options.source;\n        return _this;\n    }\n    /**\n     * @param {MouseEvent} event The event to handle\n     * @private\n     */\n    FullScreen.prototype.handleClick_ = function (event) {\n        event.preventDefault();\n        this.handleFullScreen_();\n    };\n    /**\n     * @private\n     */\n    FullScreen.prototype.handleFullScreen_ = function () {\n        if (!isFullScreenSupported()) {\n            return;\n        }\n        var map = this.getMap();\n        if (!map) {\n            return;\n        }\n        if (isFullScreen()) {\n            exitFullScreen();\n        }\n        else {\n            var element = void 0;\n            if (this.source_) {\n                element = typeof this.source_ === 'string' ?\n                    document.getElementById(this.source_) :\n                    this.source_;\n            }\n            else {\n                element = map.getTargetElement();\n            }\n            if (this.keys_) {\n                requestFullScreenWithKeys(element);\n            }\n            else {\n                requestFullScreen(element);\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    FullScreen.prototype.handleFullScreenChange_ = function () {\n        var map = this.getMap();\n        if (isFullScreen()) {\n            this.setClassName_(this.button_, true);\n            replaceNode(this.labelActiveNode_, this.labelNode_);\n        }\n        else {\n            this.setClassName_(this.button_, false);\n            replaceNode(this.labelNode_, this.labelActiveNode_);\n        }\n        if (map) {\n            map.updateSize();\n        }\n    };\n    /**\n     * @param {HTMLElement} element Target element\n     * @param {boolean} fullscreen True if fullscreen class name should be active\n     * @private\n     */\n    FullScreen.prototype.setClassName_ = function (element, fullscreen) {\n        var activeClassName = this.cssClassName_ + '-true';\n        var inactiveClassName = this.cssClassName_ + '-false';\n        var nextClassName = fullscreen ? activeClassName : inactiveClassName;\n        element.classList.remove(activeClassName);\n        element.classList.remove(inactiveClassName);\n        element.classList.add(nextClassName);\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    FullScreen.prototype.setMap = function (map) {\n        _super.prototype.setMap.call(this, map);\n        if (map) {\n            for (var i = 0, ii = events.length; i < ii; ++i) {\n                this.listenerKeys.push(listen(document, events[i], this.handleFullScreenChange_, this));\n            }\n        }\n    };\n    return FullScreen;\n}(Control));\n/**\n * @return {boolean} Fullscreen is supported by the current platform.\n */\nfunction isFullScreenSupported() {\n    var body = document.body;\n    return !!(body.webkitRequestFullscreen ||\n        (body.msRequestFullscreen && document.msFullscreenEnabled) ||\n        (body.requestFullscreen && document.fullscreenEnabled));\n}\n/**\n * @return {boolean} Element is currently in fullscreen.\n */\nfunction isFullScreen() {\n    return !!(document.webkitIsFullScreen || document.msFullscreenElement || document.fullscreenElement);\n}\n/**\n * Request to fullscreen an element.\n * @param {HTMLElement} element Element to request fullscreen\n */\nfunction requestFullScreen(element) {\n    if (element.requestFullscreen) {\n        element.requestFullscreen();\n    }\n    else if (element.msRequestFullscreen) {\n        element.msRequestFullscreen();\n    }\n    else if (element.webkitRequestFullscreen) {\n        element.webkitRequestFullscreen();\n    }\n}\n/**\n * Request to fullscreen an element with keyboard input.\n * @param {HTMLElement} element Element to request fullscreen\n */\nfunction requestFullScreenWithKeys(element) {\n    if (element.webkitRequestFullscreen) {\n        element.webkitRequestFullscreen();\n    }\n    else {\n        requestFullScreen(element);\n    }\n}\n/**\n * Exit fullscreen.\n */\nfunction exitFullScreen() {\n    if (document.exitFullscreen) {\n        document.exitFullscreen();\n    }\n    else if (document.msExitFullscreen) {\n        document.msExitFullscreen();\n    }\n    else if (document.webkitExitFullscreen) {\n        document.webkitExitFullscreen();\n    }\n}\nexport default FullScreen;\n//# sourceMappingURL=FullScreen.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/control/MousePosition\n */\nimport { listen } from '../events.js';\nimport EventType from '../events/EventType.js';\nimport { getChangeEventType } from '../Object.js';\nimport Control from './Control.js';\nimport { getTransformFromProjections, identityTransform, get as getProjection } from '../proj.js';\n/**\n * @type {string}\n */\nvar PROJECTION = 'projection';\n/**\n * @type {string}\n */\nvar COORDINATE_FORMAT = 'coordinateFormat';\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-mouse-position'] CSS class name.\n * @property {import(\"../coordinate.js\").CoordinateFormat} [coordinateFormat] Coordinate format.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {function(import(\"../MapEvent.js\").default)} [render] Function called when the\n * control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {HTMLElement|string} [target] Specify a target if you want the\n * control to be rendered outside of the map's viewport.\n * @property {string} [undefinedHTML='&#160;'] Markup to show when coordinates are not\n * available (e.g. when the pointer leaves the map viewport).  By default, the last position\n * will be replaced with `'&#160;'` (`&nbsp;`) when the pointer leaves the viewport.  To\n * retain the last rendered position, set this option to something falsey (like an empty\n * string `''`).\n */\n/**\n * @classdesc\n * A control to show the 2D coordinates of the mouse cursor. By default, these\n * are in the view projection, but can be in any supported projection.\n * By default the control is shown in the top right corner of the map, but this\n * can be changed by using the css selector `.ol-mouse-position`.\n *\n * On touch devices, which usually do not have a mouse cursor, the coordinates\n * of the currently touched position are shown.\n *\n * @api\n */\nvar MousePosition = /** @class */ (function (_super) {\n    __extends(MousePosition, _super);\n    /**\n     * @param {Options=} opt_options Mouse position options.\n     */\n    function MousePosition(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        var element = document.createElement('div');\n        element.className = options.className !== undefined ? options.className : 'ol-mouse-position';\n        _this = _super.call(this, {\n            element: element,\n            render: options.render || render,\n            target: options.target\n        }) || this;\n        listen(_this, getChangeEventType(PROJECTION), _this.handleProjectionChanged_, _this);\n        if (options.coordinateFormat) {\n            _this.setCoordinateFormat(options.coordinateFormat);\n        }\n        if (options.projection) {\n            _this.setProjection(options.projection);\n        }\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.undefinedHTML_ = options.undefinedHTML !== undefined ? options.undefinedHTML : '&#160;';\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.renderOnMouseOut_ = !!_this.undefinedHTML_;\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.renderedHTML_ = element.innerHTML;\n        /**\n         * @private\n         * @type {import(\"../proj/Projection.js\").default}\n         */\n        _this.mapProjection_ = null;\n        /**\n         * @private\n         * @type {?import(\"../proj.js\").TransformFunction}\n         */\n        _this.transform_ = null;\n        /**\n         * @private\n         * @type {import(\"../pixel.js\").Pixel}\n         */\n        _this.lastMouseMovePixel_ = null;\n        return _this;\n    }\n    /**\n     * @private\n     */\n    MousePosition.prototype.handleProjectionChanged_ = function () {\n        this.transform_ = null;\n    };\n    /**\n     * Return the coordinate format type used to render the current position or\n     * undefined.\n     * @return {import(\"../coordinate.js\").CoordinateFormat|undefined} The format to render the current\n     *     position in.\n     * @observable\n     * @api\n     */\n    MousePosition.prototype.getCoordinateFormat = function () {\n        return (\n        /** @type {import(\"../coordinate.js\").CoordinateFormat|undefined} */ (this.get(COORDINATE_FORMAT)));\n    };\n    /**\n     * Return the projection that is used to report the mouse position.\n     * @return {import(\"../proj/Projection.js\").default|undefined} The projection to report mouse\n     *     position in.\n     * @observable\n     * @api\n     */\n    MousePosition.prototype.getProjection = function () {\n        return (\n        /** @type {import(\"../proj/Projection.js\").default|undefined} */ (this.get(PROJECTION)));\n    };\n    /**\n     * @param {Event} event Browser event.\n     * @protected\n     */\n    MousePosition.prototype.handleMouseMove = function (event) {\n        var map = this.getMap();\n        this.lastMouseMovePixel_ = map.getEventPixel(event);\n        this.updateHTML_(this.lastMouseMovePixel_);\n    };\n    /**\n     * @param {Event} event Browser event.\n     * @protected\n     */\n    MousePosition.prototype.handleMouseOut = function (event) {\n        this.updateHTML_(null);\n        this.lastMouseMovePixel_ = null;\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    MousePosition.prototype.setMap = function (map) {\n        _super.prototype.setMap.call(this, map);\n        if (map) {\n            var viewport = map.getViewport();\n            this.listenerKeys.push(listen(viewport, EventType.MOUSEMOVE, this.handleMouseMove, this), listen(viewport, EventType.TOUCHSTART, this.handleMouseMove, this));\n            if (this.renderOnMouseOut_) {\n                this.listenerKeys.push(listen(viewport, EventType.MOUSEOUT, this.handleMouseOut, this), listen(viewport, EventType.TOUCHEND, this.handleMouseOut, this));\n            }\n        }\n    };\n    /**\n     * Set the coordinate format type used to render the current position.\n     * @param {import(\"../coordinate.js\").CoordinateFormat} format The format to render the current\n     *     position in.\n     * @observable\n     * @api\n     */\n    MousePosition.prototype.setCoordinateFormat = function (format) {\n        this.set(COORDINATE_FORMAT, format);\n    };\n    /**\n     * Set the projection that is used to report the mouse position.\n     * @param {import(\"../proj.js\").ProjectionLike} projection The projection to report mouse\n     *     position in.\n     * @observable\n     * @api\n     */\n    MousePosition.prototype.setProjection = function (projection) {\n        this.set(PROJECTION, getProjection(projection));\n    };\n    /**\n     * @param {?import(\"../pixel.js\").Pixel} pixel Pixel.\n     * @private\n     */\n    MousePosition.prototype.updateHTML_ = function (pixel) {\n        var html = this.undefinedHTML_;\n        if (pixel && this.mapProjection_) {\n            if (!this.transform_) {\n                var projection = this.getProjection();\n                if (projection) {\n                    this.transform_ = getTransformFromProjections(this.mapProjection_, projection);\n                }\n                else {\n                    this.transform_ = identityTransform;\n                }\n            }\n            var map = this.getMap();\n            var coordinate = map.getCoordinateFromPixel(pixel);\n            if (coordinate) {\n                this.transform_(coordinate, coordinate);\n                var coordinateFormat = this.getCoordinateFormat();\n                if (coordinateFormat) {\n                    html = coordinateFormat(coordinate);\n                }\n                else {\n                    html = coordinate.toString();\n                }\n            }\n        }\n        if (!this.renderedHTML_ || html !== this.renderedHTML_) {\n            this.element.innerHTML = html;\n            this.renderedHTML_ = html;\n        }\n    };\n    return MousePosition;\n}(Control));\n/**\n * Update the projection. Rendering of the coordinates is done in\n * `handleMouseMove` and `handleMouseUp`.\n * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n * @this {MousePosition}\n * @api\n */\nexport function render(mapEvent) {\n    var frameState = mapEvent.frameState;\n    if (!frameState) {\n        this.mapProjection_ = null;\n    }\n    else {\n        if (this.mapProjection_ != frameState.viewState.projection) {\n            this.mapProjection_ = frameState.viewState.projection;\n            this.transform_ = null;\n        }\n    }\n}\nexport default MousePosition;\n//# sourceMappingURL=MousePosition.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/control/OverviewMap\n */\nimport Collection from '../Collection.js';\nimport Map from '../Map.js';\nimport MapEventType from '../MapEventType.js';\nimport MapProperty from '../MapProperty.js';\nimport { getChangeEventType } from '../Object.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport Overlay from '../Overlay.js';\nimport OverlayPositioning from '../OverlayPositioning.js';\nimport ViewProperty from '../ViewProperty.js';\nimport Control from './Control.js';\nimport { rotate as rotateCoordinate, add as addCoordinate } from '../coordinate.js';\nimport { CLASS_CONTROL, CLASS_UNSELECTABLE, CLASS_COLLAPSED } from '../css.js';\nimport { replaceNode } from '../dom.js';\nimport { listen, listenOnce, unlisten } from '../events.js';\nimport EventType from '../events/EventType.js';\nimport { containsExtent, getBottomLeft, getBottomRight, getTopLeft, getTopRight, scaleFromCenter } from '../extent.js';\n/**\n * Maximum width and/or height extent ratio that determines when the overview\n * map should be zoomed out.\n * @type {number}\n */\nvar MAX_RATIO = 0.75;\n/**\n * Minimum width and/or height extent ratio that determines when the overview\n * map should be zoomed in.\n * @type {number}\n */\nvar MIN_RATIO = 0.1;\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-overviewmap'] CSS class name.\n * @property {boolean} [collapsed=true] Whether the control should start collapsed or not (expanded).\n * @property {string|HTMLElement} [collapseLabel='«'] Text label to use for the\n * expanded overviewmap button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {boolean} [collapsible=true] Whether the control can be collapsed or not.\n * @property {string|HTMLElement} [label='»'] Text label to use for the collapsed\n * overviewmap button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {Array<import(\"../layer/Layer.js\").default>|import(\"../Collection.js\").default<import(\"../layer/Layer.js\").default>} layers\n * Layers for the overview map (mandatory).\n * @property {function(import(\"../MapEvent.js\").default)} [render] Function called when the control\n * should be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {HTMLElement|string} [target] Specify a target if you want the control\n * to be rendered outside of the map's viewport.\n * @property {string} [tipLabel='Overview map'] Text label to use for the button tip.\n * @property {import(\"../View.js\").default} [view] Custom view for the overview map. If not provided,\n * a default view with an EPSG:3857 projection will be used.\n */\n/**\n * Create a new control with a map acting as an overview map for an other\n * defined map.\n *\n * @api\n */\nvar OverviewMap = /** @class */ (function (_super) {\n    __extends(OverviewMap, _super);\n    /**\n     * @param {Options=} opt_options OverviewMap options.\n     */\n    function OverviewMap(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, {\n            element: document.createElement('div'),\n            render: options.render || render,\n            target: options.target\n        }) || this;\n        /**\n         * @type {boolean}\n         * @private\n         */\n        _this.collapsed_ = options.collapsed !== undefined ? options.collapsed : true;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.collapsible_ = options.collapsible !== undefined ?\n            options.collapsible : true;\n        if (!_this.collapsible_) {\n            _this.collapsed_ = false;\n        }\n        var className = options.className !== undefined ? options.className : 'ol-overviewmap';\n        var tipLabel = options.tipLabel !== undefined ? options.tipLabel : 'Overview map';\n        var collapseLabel = options.collapseLabel !== undefined ? options.collapseLabel : '\\u00AB';\n        if (typeof collapseLabel === 'string') {\n            /**\n             * @private\n             * @type {HTMLElement}\n             */\n            _this.collapseLabel_ = document.createElement('span');\n            _this.collapseLabel_.textContent = collapseLabel;\n        }\n        else {\n            _this.collapseLabel_ = collapseLabel;\n        }\n        var label = options.label !== undefined ? options.label : '\\u00BB';\n        if (typeof label === 'string') {\n            /**\n             * @private\n             * @type {HTMLElement}\n             */\n            _this.label_ = document.createElement('span');\n            _this.label_.textContent = label;\n        }\n        else {\n            _this.label_ = label;\n        }\n        var activeLabel = (_this.collapsible_ && !_this.collapsed_) ?\n            _this.collapseLabel_ : _this.label_;\n        var button = document.createElement('button');\n        button.setAttribute('type', 'button');\n        button.title = tipLabel;\n        button.appendChild(activeLabel);\n        listen(button, EventType.CLICK, _this.handleClick_, _this);\n        /**\n         * @type {HTMLElement}\n         * @private\n         */\n        _this.ovmapDiv_ = document.createElement('div');\n        _this.ovmapDiv_.className = 'ol-overviewmap-map';\n        /**\n         * @type {import(\"../Map.js\").default}\n         * @private\n         */\n        _this.ovmap_ = new Map({\n            controls: new Collection(),\n            interactions: new Collection(),\n            view: options.view\n        });\n        var ovmap = _this.ovmap_;\n        if (options.layers) {\n            /** @type {Array<import(\"../layer/Layer.js\").default>} */ (options.layers).forEach(\n            /**\n             * @param {import(\"../layer/Layer.js\").default} layer Layer.\n             */\n            (function (layer) {\n                ovmap.addLayer(layer);\n            }).bind(_this));\n        }\n        var box = document.createElement('div');\n        box.className = 'ol-overviewmap-box';\n        box.style.boxSizing = 'border-box';\n        /**\n         * @type {import(\"../Overlay.js\").default}\n         * @private\n         */\n        _this.boxOverlay_ = new Overlay({\n            position: [0, 0],\n            positioning: OverlayPositioning.BOTTOM_LEFT,\n            element: box\n        });\n        _this.ovmap_.addOverlay(_this.boxOverlay_);\n        var cssClasses = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL +\n            (_this.collapsed_ && _this.collapsible_ ? ' ' + CLASS_COLLAPSED : '') +\n            (_this.collapsible_ ? '' : ' ol-uncollapsible');\n        var element = _this.element;\n        element.className = cssClasses;\n        element.appendChild(_this.ovmapDiv_);\n        element.appendChild(button);\n        /* Interactive map */\n        var scope = _this;\n        var overlay = _this.boxOverlay_;\n        var overlayBox = _this.boxOverlay_.getElement();\n        /* Functions definition */\n        var computeDesiredMousePosition = function (mousePosition) {\n            return {\n                clientX: mousePosition.clientX - (overlayBox.offsetWidth / 2),\n                clientY: mousePosition.clientY + (overlayBox.offsetHeight / 2)\n            };\n        };\n        var move = function (event) {\n            var position = /** @type {?} */ (computeDesiredMousePosition(event));\n            var coordinates = ovmap.getEventCoordinate(/** @type {Event} */ (position));\n            overlay.setPosition(coordinates);\n        };\n        var endMoving = function (event) {\n            var coordinates = ovmap.getEventCoordinate(event);\n            scope.getMap().getView().setCenter(coordinates);\n            window.removeEventListener('mousemove', move);\n            window.removeEventListener('mouseup', endMoving);\n        };\n        /* Binding */\n        overlayBox.addEventListener('mousedown', function () {\n            window.addEventListener('mousemove', move);\n            window.addEventListener('mouseup', endMoving);\n        });\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     * @api\n     */\n    OverviewMap.prototype.setMap = function (map) {\n        var oldMap = this.getMap();\n        if (map === oldMap) {\n            return;\n        }\n        if (oldMap) {\n            var oldView = oldMap.getView();\n            if (oldView) {\n                this.unbindView_(oldView);\n            }\n            this.ovmap_.setTarget(null);\n        }\n        _super.prototype.setMap.call(this, map);\n        if (map) {\n            this.ovmap_.setTarget(this.ovmapDiv_);\n            this.listenerKeys.push(listen(map, ObjectEventType.PROPERTYCHANGE, this.handleMapPropertyChange_, this));\n            var view = map.getView();\n            if (view) {\n                this.bindView_(view);\n                if (view.isDef()) {\n                    this.ovmap_.updateSize();\n                    this.resetExtent_();\n                }\n            }\n        }\n    };\n    /**\n     * Handle map property changes.  This only deals with changes to the map's view.\n     * @param {import(\"../Object.js\").ObjectEvent} event The propertychange event.\n     * @private\n     */\n    OverviewMap.prototype.handleMapPropertyChange_ = function (event) {\n        if (event.key === MapProperty.VIEW) {\n            var oldView = /** @type {import(\"../View.js\").default} */ (event.oldValue);\n            if (oldView) {\n                this.unbindView_(oldView);\n            }\n            var newView = this.getMap().getView();\n            this.bindView_(newView);\n        }\n    };\n    /**\n     * Register listeners for view property changes.\n     * @param {import(\"../View.js\").default} view The view.\n     * @private\n     */\n    OverviewMap.prototype.bindView_ = function (view) {\n        listen(view, getChangeEventType(ViewProperty.ROTATION), this.handleRotationChanged_, this);\n    };\n    /**\n     * Unregister listeners for view property changes.\n     * @param {import(\"../View.js\").default} view The view.\n     * @private\n     */\n    OverviewMap.prototype.unbindView_ = function (view) {\n        unlisten(view, getChangeEventType(ViewProperty.ROTATION), this.handleRotationChanged_, this);\n    };\n    /**\n     * Handle rotation changes to the main map.\n     * TODO: This should rotate the extent rectrangle instead of the\n     * overview map's view.\n     * @private\n     */\n    OverviewMap.prototype.handleRotationChanged_ = function () {\n        this.ovmap_.getView().setRotation(this.getMap().getView().getRotation());\n    };\n    /**\n     * Reset the overview map extent if the box size (width or\n     * height) is less than the size of the overview map size times minRatio\n     * or is greater than the size of the overview size times maxRatio.\n     *\n     * If the map extent was not reset, the box size can fits in the defined\n     * ratio sizes. This method then checks if is contained inside the overview\n     * map current extent. If not, recenter the overview map to the current\n     * main map center location.\n     * @private\n     */\n    OverviewMap.prototype.validateExtent_ = function () {\n        var map = this.getMap();\n        var ovmap = this.ovmap_;\n        if (!map.isRendered() || !ovmap.isRendered()) {\n            return;\n        }\n        var mapSize = /** @type {import(\"../size.js\").Size} */ (map.getSize());\n        var view = map.getView();\n        var extent = view.calculateExtent(mapSize);\n        var ovmapSize = /** @type {import(\"../size.js\").Size} */ (ovmap.getSize());\n        var ovview = ovmap.getView();\n        var ovextent = ovview.calculateExtent(ovmapSize);\n        var topLeftPixel = ovmap.getPixelFromCoordinate(getTopLeft(extent));\n        var bottomRightPixel = ovmap.getPixelFromCoordinate(getBottomRight(extent));\n        var boxWidth = Math.abs(topLeftPixel[0] - bottomRightPixel[0]);\n        var boxHeight = Math.abs(topLeftPixel[1] - bottomRightPixel[1]);\n        var ovmapWidth = ovmapSize[0];\n        var ovmapHeight = ovmapSize[1];\n        if (boxWidth < ovmapWidth * MIN_RATIO ||\n            boxHeight < ovmapHeight * MIN_RATIO ||\n            boxWidth > ovmapWidth * MAX_RATIO ||\n            boxHeight > ovmapHeight * MAX_RATIO) {\n            this.resetExtent_();\n        }\n        else if (!containsExtent(ovextent, extent)) {\n            this.recenter_();\n        }\n    };\n    /**\n     * Reset the overview map extent to half calculated min and max ratio times\n     * the extent of the main map.\n     * @private\n     */\n    OverviewMap.prototype.resetExtent_ = function () {\n        if (MAX_RATIO === 0 || MIN_RATIO === 0) {\n            return;\n        }\n        var map = this.getMap();\n        var ovmap = this.ovmap_;\n        var mapSize = /** @type {import(\"../size.js\").Size} */ (map.getSize());\n        var view = map.getView();\n        var extent = view.calculateExtent(mapSize);\n        var ovview = ovmap.getView();\n        // get how many times the current map overview could hold different\n        // box sizes using the min and max ratio, pick the step in the middle used\n        // to calculate the extent from the main map to set it to the overview map,\n        var steps = Math.log(MAX_RATIO / MIN_RATIO) / Math.LN2;\n        var ratio = 1 / (Math.pow(2, steps / 2) * MIN_RATIO);\n        scaleFromCenter(extent, ratio);\n        ovview.fit(extent);\n    };\n    /**\n     * Set the center of the overview map to the map center without changing its\n     * resolution.\n     * @private\n     */\n    OverviewMap.prototype.recenter_ = function () {\n        var map = this.getMap();\n        var ovmap = this.ovmap_;\n        var view = map.getView();\n        var ovview = ovmap.getView();\n        ovview.setCenter(view.getCenter());\n    };\n    /**\n     * Update the box using the main map extent\n     * @private\n     */\n    OverviewMap.prototype.updateBox_ = function () {\n        var map = this.getMap();\n        var ovmap = this.ovmap_;\n        if (!map.isRendered() || !ovmap.isRendered()) {\n            return;\n        }\n        var mapSize = /** @type {import(\"../size.js\").Size} */ (map.getSize());\n        var view = map.getView();\n        var ovview = ovmap.getView();\n        var rotation = view.getRotation();\n        var overlay = this.boxOverlay_;\n        var box = this.boxOverlay_.getElement();\n        var extent = view.calculateExtent(mapSize);\n        var ovresolution = ovview.getResolution();\n        var bottomLeft = getBottomLeft(extent);\n        var topRight = getTopRight(extent);\n        // set position using bottom left coordinates\n        var rotateBottomLeft = this.calculateCoordinateRotate_(rotation, bottomLeft);\n        overlay.setPosition(rotateBottomLeft);\n        // set box size calculated from map extent size and overview map resolution\n        if (box) {\n            box.style.width = Math.abs((bottomLeft[0] - topRight[0]) / ovresolution) + 'px';\n            box.style.height = Math.abs((topRight[1] - bottomLeft[1]) / ovresolution) + 'px';\n        }\n    };\n    /**\n     * @param {number} rotation Target rotation.\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {import(\"../coordinate.js\").Coordinate|undefined} Coordinate for rotation and center anchor.\n     * @private\n     */\n    OverviewMap.prototype.calculateCoordinateRotate_ = function (rotation, coordinate) {\n        var coordinateRotate;\n        var map = this.getMap();\n        var view = map.getView();\n        var currentCenter = view.getCenter();\n        if (currentCenter) {\n            coordinateRotate = [\n                coordinate[0] - currentCenter[0],\n                coordinate[1] - currentCenter[1]\n            ];\n            rotateCoordinate(coordinateRotate, rotation);\n            addCoordinate(coordinateRotate, currentCenter);\n        }\n        return coordinateRotate;\n    };\n    /**\n     * @param {MouseEvent} event The event to handle\n     * @private\n     */\n    OverviewMap.prototype.handleClick_ = function (event) {\n        event.preventDefault();\n        this.handleToggle_();\n    };\n    /**\n     * @private\n     */\n    OverviewMap.prototype.handleToggle_ = function () {\n        this.element.classList.toggle(CLASS_COLLAPSED);\n        if (this.collapsed_) {\n            replaceNode(this.collapseLabel_, this.label_);\n        }\n        else {\n            replaceNode(this.label_, this.collapseLabel_);\n        }\n        this.collapsed_ = !this.collapsed_;\n        // manage overview map if it had not been rendered before and control\n        // is expanded\n        var ovmap = this.ovmap_;\n        if (!this.collapsed_ && !ovmap.isRendered()) {\n            ovmap.updateSize();\n            this.resetExtent_();\n            listenOnce(ovmap, MapEventType.POSTRENDER, function (event) {\n                this.updateBox_();\n            }, this);\n        }\n    };\n    /**\n     * Return `true` if the overview map is collapsible, `false` otherwise.\n     * @return {boolean} True if the widget is collapsible.\n     * @api\n     */\n    OverviewMap.prototype.getCollapsible = function () {\n        return this.collapsible_;\n    };\n    /**\n     * Set whether the overview map should be collapsible.\n     * @param {boolean} collapsible True if the widget is collapsible.\n     * @api\n     */\n    OverviewMap.prototype.setCollapsible = function (collapsible) {\n        if (this.collapsible_ === collapsible) {\n            return;\n        }\n        this.collapsible_ = collapsible;\n        this.element.classList.toggle('ol-uncollapsible');\n        if (!collapsible && this.collapsed_) {\n            this.handleToggle_();\n        }\n    };\n    /**\n     * Collapse or expand the overview map according to the passed parameter. Will\n     * not do anything if the overview map isn't collapsible or if the current\n     * collapsed state is already the one requested.\n     * @param {boolean} collapsed True if the widget is collapsed.\n     * @api\n     */\n    OverviewMap.prototype.setCollapsed = function (collapsed) {\n        if (!this.collapsible_ || this.collapsed_ === collapsed) {\n            return;\n        }\n        this.handleToggle_();\n    };\n    /**\n     * Determine if the overview map is collapsed.\n     * @return {boolean} The overview map is collapsed.\n     * @api\n     */\n    OverviewMap.prototype.getCollapsed = function () {\n        return this.collapsed_;\n    };\n    /**\n     * Return the overview map.\n     * @return {import(\"../PluggableMap.js\").default} Overview map.\n     * @api\n     */\n    OverviewMap.prototype.getOverviewMap = function () {\n        return this.ovmap_;\n    };\n    return OverviewMap;\n}(Control));\n/**\n * Update the overview map element.\n * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n * @this {OverviewMap}\n * @api\n */\nexport function render(mapEvent) {\n    this.validateExtent_();\n    this.updateBox_();\n}\nexport default OverviewMap;\n//# sourceMappingURL=OverviewMap.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/control/ScaleLine\n */\nimport { getChangeEventType } from '../Object.js';\nimport { assert } from '../asserts.js';\nimport Control from './Control.js';\nimport { CLASS_UNSELECTABLE } from '../css.js';\nimport { listen } from '../events.js';\nimport { getPointResolution, METERS_PER_UNIT } from '../proj.js';\nimport ProjUnits from '../proj/Units.js';\n/**\n * @type {string}\n */\nvar UNITS_PROP = 'units';\n/**\n * Units for the scale line. Supported values are `'degrees'`, `'imperial'`,\n * `'nautical'`, `'metric'`, `'us'`.\n * @enum {string}\n */\nexport var Units = {\n    DEGREES: 'degrees',\n    IMPERIAL: 'imperial',\n    NAUTICAL: 'nautical',\n    METRIC: 'metric',\n    US: 'us'\n};\n/**\n * @const\n * @type {Array<number>}\n */\nvar LEADING_DIGITS = [1, 2, 5];\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-scale-line'] CSS Class name.\n * @property {number} [minWidth=64] Minimum width in pixels.\n * @property {function(import(\"../MapEvent.js\").default)} [render] Function called when the control\n * should be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {HTMLElement|string} [target] Specify a target if you want the control\n * to be rendered outside of the map's viewport.\n * @property {Units|string} [units='metric'] Units.\n * @property {boolean} [bar=false] Render scalebars instead of a line.\n * @property {number} [steps=4] Number of steps the scalebar should use. Use even numbers\n * for best results. Only applies when `bar` is `true`.\n * @property {boolean} [text=false] Render the text scale above of the scalebar. Only applies\n * when `bar` is `true`.\n */\n/**\n * @classdesc\n * A control displaying rough y-axis distances, calculated for the center of the\n * viewport. For conformal projections (e.g. EPSG:3857, the default view\n * projection in OpenLayers), the scale is valid for all directions.\n * No scale line will be shown when the y-axis distance of a pixel at the\n * viewport center cannot be calculated in the view projection.\n * By default the scale line will show in the bottom left portion of the map,\n * but this can be changed by using the css selector `.ol-scale-line`.\n * When specifying `bar` as `true`, a scalebar will be rendered instead\n * of a scaleline.\n *\n * @api\n */\nvar ScaleLine = /** @class */ (function (_super) {\n    __extends(ScaleLine, _super);\n    /**\n     * @param {Options=} opt_options Scale line options.\n     */\n    function ScaleLine(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        var className = options.className !== undefined ? options.className :\n            options.bar ? 'ol-scale-bar' : 'ol-scale-line';\n        _this = _super.call(this, {\n            element: document.createElement('div'),\n            render: options.render || render,\n            target: options.target\n        }) || this;\n        /**\n         * @private\n         * @type {HTMLElement}\n         */\n        _this.innerElement_ = document.createElement('div');\n        _this.innerElement_.className = className + '-inner';\n        _this.element.className = className + ' ' + CLASS_UNSELECTABLE;\n        _this.element.appendChild(_this.innerElement_);\n        /**\n         * @private\n         * @type {?import(\"../View.js\").State}\n         */\n        _this.viewState_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.minWidth_ = options.minWidth !== undefined ? options.minWidth : 64;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.renderedVisible_ = false;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.renderedWidth_ = undefined;\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.renderedHTML_ = '';\n        listen(_this, getChangeEventType(UNITS_PROP), _this.handleUnitsChanged_, _this);\n        _this.setUnits(/** @type {Units} */ (options.units) || Units.METRIC);\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.scaleBar_ = options.bar || false;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.scaleBarSteps_ = options.steps || 4;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.scaleBarText_ = options.text || false;\n        return _this;\n    }\n    /**\n     * Return the units to use in the scale line.\n     * @return {Units} The units\n     * to use in the scale line.\n     * @observable\n     * @api\n     */\n    ScaleLine.prototype.getUnits = function () {\n        return this.get(UNITS_PROP);\n    };\n    /**\n     * @private\n     */\n    ScaleLine.prototype.handleUnitsChanged_ = function () {\n        this.updateElement_();\n    };\n    /**\n     * Set the units to use in the scale line.\n     * @param {Units} units The units to use in the scale line.\n     * @observable\n     * @api\n     */\n    ScaleLine.prototype.setUnits = function (units) {\n        this.set(UNITS_PROP, units);\n    };\n    /**\n     * @private\n     */\n    ScaleLine.prototype.updateElement_ = function () {\n        var viewState = this.viewState_;\n        if (!viewState) {\n            if (this.renderedVisible_) {\n                this.element.style.display = 'none';\n                this.renderedVisible_ = false;\n            }\n            return;\n        }\n        var center = viewState.center;\n        var projection = viewState.projection;\n        var units = this.getUnits();\n        var pointResolutionUnits = units == Units.DEGREES ?\n            ProjUnits.DEGREES :\n            ProjUnits.METERS;\n        var pointResolution = getPointResolution(projection, viewState.resolution, center, pointResolutionUnits);\n        var nominalCount = this.minWidth_ * pointResolution;\n        var suffix = '';\n        if (units == Units.DEGREES) {\n            var metersPerDegree = METERS_PER_UNIT[ProjUnits.DEGREES];\n            nominalCount *= metersPerDegree;\n            if (nominalCount < metersPerDegree / 60) {\n                suffix = '\\u2033'; // seconds\n                pointResolution *= 3600;\n            }\n            else if (nominalCount < metersPerDegree) {\n                suffix = '\\u2032'; // minutes\n                pointResolution *= 60;\n            }\n            else {\n                suffix = '\\u00b0'; // degrees\n            }\n        }\n        else if (units == Units.IMPERIAL) {\n            if (nominalCount < 0.9144) {\n                suffix = 'in';\n                pointResolution /= 0.0254;\n            }\n            else if (nominalCount < 1609.344) {\n                suffix = 'ft';\n                pointResolution /= 0.3048;\n            }\n            else {\n                suffix = 'mi';\n                pointResolution /= 1609.344;\n            }\n        }\n        else if (units == Units.NAUTICAL) {\n            pointResolution /= 1852;\n            suffix = 'nm';\n        }\n        else if (units == Units.METRIC) {\n            if (nominalCount < 0.001) {\n                suffix = 'μm';\n                pointResolution *= 1000000;\n            }\n            else if (nominalCount < 1) {\n                suffix = 'mm';\n                pointResolution *= 1000;\n            }\n            else if (nominalCount < 1000) {\n                suffix = 'm';\n            }\n            else {\n                suffix = 'km';\n                pointResolution /= 1000;\n            }\n        }\n        else if (units == Units.US) {\n            if (nominalCount < 0.9144) {\n                suffix = 'in';\n                pointResolution *= 39.37;\n            }\n            else if (nominalCount < 1609.344) {\n                suffix = 'ft';\n                pointResolution /= 0.30480061;\n            }\n            else {\n                suffix = 'mi';\n                pointResolution /= 1609.3472;\n            }\n        }\n        else {\n            assert(false, 33); // Invalid units\n        }\n        var i = 3 * Math.floor(Math.log(this.minWidth_ * pointResolution) / Math.log(10));\n        var count, width, decimalCount;\n        while (true) {\n            decimalCount = Math.floor(i / 3);\n            var decimal = Math.pow(10, decimalCount);\n            count = LEADING_DIGITS[((i % 3) + 3) % 3] * decimal;\n            width = Math.round(count / pointResolution);\n            if (isNaN(width)) {\n                this.element.style.display = 'none';\n                this.renderedVisible_ = false;\n                return;\n            }\n            else if (width >= this.minWidth_) {\n                break;\n            }\n            ++i;\n        }\n        var html;\n        if (this.scaleBar_) {\n            html = this.createScaleBar(width, count, suffix);\n        }\n        else {\n            html = count.toFixed(decimalCount < 0 ? -decimalCount : 0) + ' ' + suffix;\n        }\n        if (this.renderedHTML_ != html) {\n            this.innerElement_.innerHTML = html;\n            this.renderedHTML_ = html;\n        }\n        if (this.renderedWidth_ != width) {\n            this.innerElement_.style.width = width + 'px';\n            this.renderedWidth_ = width;\n        }\n        if (!this.renderedVisible_) {\n            this.element.style.display = '';\n            this.renderedVisible_ = true;\n        }\n    };\n    /**\n     * @private\n     * @param {number} width The current width of the scalebar.\n     * @param {number} scale The current scale.\n     * @param {string} suffix The suffix to append to the scale text.\n     * @returns {string} The stringified HTML of the scalebar.\n     */\n    ScaleLine.prototype.createScaleBar = function (width, scale, suffix) {\n        var mapScale = '1 : ' + Math.round(this.getScaleForResolution()).toLocaleString();\n        var scaleSteps = [];\n        var stepWidth = width / this.scaleBarSteps_;\n        var backgroundColor = '#ffffff';\n        for (var i = 0; i < this.scaleBarSteps_; i++) {\n            if (i === 0) {\n                // create the first marker at position 0\n                scaleSteps.push(this.createMarker('absolute', i));\n            }\n            scaleSteps.push('<div>' +\n                '<div ' +\n                'class=\"ol-scale-singlebar\" ' +\n                'style=' +\n                '\"width: ' + stepWidth + 'px;' +\n                'background-color: ' + backgroundColor + ';\"' +\n                '>' +\n                '</div>' +\n                this.createMarker('relative', i) +\n                /*render text every second step, except when only 2 steps */\n                (i % 2 === 0 || this.scaleBarSteps_ === 2 ?\n                    this.createStepText(i, width, false, scale, suffix) :\n                    '') +\n                '</div>');\n            if (i === this.scaleBarSteps_ - 1) {\n                { /*render text at the end */ }\n                scaleSteps.push(this.createStepText(i + 1, width, true, scale, suffix));\n            }\n            // switch colors of steps between black and white\n            if (backgroundColor === '#ffffff') {\n                backgroundColor = '#000000';\n            }\n            else {\n                backgroundColor = '#ffffff';\n            }\n        }\n        var scaleBarText;\n        if (this.scaleBarText_) {\n            scaleBarText = '<div ' +\n                'class=\"ol-scale-text\" ' +\n                'style=\"width: ' + width + 'px;\">' +\n                mapScale +\n                '</div>';\n        }\n        else {\n            scaleBarText = '';\n        }\n        var container = '<div ' +\n            'style=\"display: flex;\">' +\n            scaleBarText +\n            scaleSteps.join('') +\n            '</div>';\n        return container;\n    };\n    /**\n     * Creates a marker at given position\n     * @param {string} position - The position, absolute or relative\n     * @param {number} i - The iterator\n     * @returns {string} The stringified div containing the marker\n     */\n    ScaleLine.prototype.createMarker = function (position, i) {\n        var top = position === 'absolute' ? 3 : -10;\n        return '<div ' +\n            'class=\"ol-scale-step-marker\" ' +\n            'style=\"position: ' + position + ';' +\n            'top: ' + top + 'px;\"' +\n            '></div>';\n    };\n    /**\n     * Creates the label for a marker marker at given position\n     * @param {number} i - The iterator\n     * @param {number} width - The width the scalebar will currently use\n     * @param {boolean} isLast - Flag indicating if we add the last step text\n     * @param {number} scale - The current scale for the whole scalebar\n     * @param {string} suffix - The suffix for the scale\n     * @returns {string} The stringified div containing the step text\n     */\n    ScaleLine.prototype.createStepText = function (i, width, isLast, scale, suffix) {\n        var length = i === 0 ? 0 : Math.round((scale / this.scaleBarSteps_ * i) * 100) / 100;\n        var lengthString = length + (i === 0 ? '' : ' ' + suffix);\n        var margin = i === 0 ? -3 : width / this.scaleBarSteps_ * -1;\n        var minWidth = i === 0 ? 0 : width / this.scaleBarSteps_ * 2;\n        return '<div ' +\n            'class=\"ol-scale-step-text\" ' +\n            'style=\"' +\n            'margin-left: ' + margin + 'px;' +\n            'text-align: ' + (i === 0 ? 'left' : 'center') + '; ' +\n            'min-width: ' + minWidth + 'px;' +\n            'left: ' + (isLast ? width + 'px' : 'unset') + ';\"' +\n            '>' +\n            lengthString +\n            '</div>';\n    };\n    /**\n     * Returns the appropriate scale for the given resolution and units.\n     * @return {number} The appropriate scale.\n     */\n    ScaleLine.prototype.getScaleForResolution = function () {\n        var resolution = this.getMap().getView().getResolution();\n        var dpi = 25.4 / 0.28;\n        var mpu = this.viewState_.projection.getMetersPerUnit();\n        var inchesPerMeter = 39.37;\n        return parseFloat(resolution.toString()) * mpu * inchesPerMeter * dpi;\n    };\n    return ScaleLine;\n}(Control));\n/**\n * Update the scale line element.\n * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n * @this {ScaleLine}\n * @api\n */\nexport function render(mapEvent) {\n    var frameState = mapEvent.frameState;\n    if (!frameState) {\n        this.viewState_ = null;\n    }\n    else {\n        this.viewState_ = frameState.viewState;\n    }\n    this.updateElement_();\n}\nexport default ScaleLine;\n//# sourceMappingURL=ScaleLine.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/control/ZoomSlider\n */\nimport Control from './Control.js';\nimport { CLASS_CONTROL, CLASS_UNSELECTABLE } from '../css.js';\nimport { easeOut } from '../easing.js';\nimport { listen, unlistenByKey } from '../events.js';\nimport { stopPropagation } from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport { clamp } from '../math.js';\nimport PointerEventType from '../pointer/EventType.js';\nimport PointerEventHandler from '../pointer/PointerEventHandler.js';\n/**\n * The enum for available directions.\n *\n * @enum {number}\n */\nvar Direction = {\n    VERTICAL: 0,\n    HORIZONTAL: 1\n};\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-zoomslider'] CSS class name.\n * @property {number} [duration=200] Animation duration in milliseconds.\n * @property {function(import(\"../MapEvent.js\").default)} [render] Function called when the control\n * should be re-rendered. This is called in a `requestAnimationFrame` callback.\n */\n/**\n * @classdesc\n * A slider type of control for zooming.\n *\n * Example:\n *\n *     map.addControl(new ZoomSlider());\n *\n * @api\n */\nvar ZoomSlider = /** @class */ (function (_super) {\n    __extends(ZoomSlider, _super);\n    /**\n     * @param {Options=} opt_options Zoom slider options.\n     */\n    function ZoomSlider(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, {\n            element: document.createElement('div'),\n            render: options.render || render\n        }) || this;\n        /**\n          * @type {!Array.<import(\"../events.js\").EventsKey>}\n          * @private\n          */\n        _this.dragListenerKeys_ = [];\n        /**\n         * Will hold the current resolution of the view.\n         *\n         * @type {number|undefined}\n         * @private\n         */\n        _this.currentResolution_ = undefined;\n        /**\n         * The direction of the slider. Will be determined from actual display of the\n         * container and defaults to Direction.VERTICAL.\n         *\n         * @type {Direction}\n         * @private\n         */\n        _this.direction_ = Direction.VERTICAL;\n        /**\n         * @type {boolean}\n         * @private\n         */\n        _this.dragging_;\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.heightLimit_ = 0;\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.widthLimit_ = 0;\n        /**\n         * @type {number|undefined}\n         * @private\n         */\n        _this.startX_;\n        /**\n         * @type {number|undefined}\n         * @private\n         */\n        _this.startY_;\n        /**\n         * The calculated thumb size (border box plus margins).  Set when initSlider_\n         * is called.\n         * @type {import(\"../size.js\").Size}\n         * @private\n         */\n        _this.thumbSize_ = null;\n        /**\n         * Whether the slider is initialized.\n         * @type {boolean}\n         * @private\n         */\n        _this.sliderInitialized_ = false;\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 200;\n        var className = options.className !== undefined ? options.className : 'ol-zoomslider';\n        var thumbElement = document.createElement('button');\n        thumbElement.setAttribute('type', 'button');\n        thumbElement.className = className + '-thumb ' + CLASS_UNSELECTABLE;\n        var containerElement = _this.element;\n        containerElement.className = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n        containerElement.appendChild(thumbElement);\n        /**\n         * @type {PointerEventHandler}\n         * @private\n         */\n        _this.dragger_ = new PointerEventHandler(containerElement);\n        listen(_this.dragger_, PointerEventType.POINTERDOWN, _this.handleDraggerStart_, _this);\n        listen(_this.dragger_, PointerEventType.POINTERMOVE, _this.handleDraggerDrag_, _this);\n        listen(_this.dragger_, PointerEventType.POINTERUP, _this.handleDraggerEnd_, _this);\n        listen(containerElement, EventType.CLICK, _this.handleContainerClick_, _this);\n        listen(thumbElement, EventType.CLICK, stopPropagation);\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    ZoomSlider.prototype.disposeInternal = function () {\n        this.dragger_.dispose();\n        _super.prototype.disposeInternal.call(this);\n    };\n    /**\n     * @inheritDoc\n     */\n    ZoomSlider.prototype.setMap = function (map) {\n        _super.prototype.setMap.call(this, map);\n        if (map) {\n            map.render();\n        }\n    };\n    /**\n     * Initializes the slider element. This will determine and set this controls\n     * direction_ and also constrain the dragging of the thumb to always be within\n     * the bounds of the container.\n     *\n     * @private\n     */\n    ZoomSlider.prototype.initSlider_ = function () {\n        var container = this.element;\n        var containerSize = {\n            width: container.offsetWidth, height: container.offsetHeight\n        };\n        var thumb = /** @type {HTMLElement} */ (container.firstElementChild);\n        var computedStyle = getComputedStyle(thumb);\n        var thumbWidth = thumb.offsetWidth +\n            parseFloat(computedStyle['marginRight']) +\n            parseFloat(computedStyle['marginLeft']);\n        var thumbHeight = thumb.offsetHeight +\n            parseFloat(computedStyle['marginTop']) +\n            parseFloat(computedStyle['marginBottom']);\n        this.thumbSize_ = [thumbWidth, thumbHeight];\n        if (containerSize.width > containerSize.height) {\n            this.direction_ = Direction.HORIZONTAL;\n            this.widthLimit_ = containerSize.width - thumbWidth;\n        }\n        else {\n            this.direction_ = Direction.VERTICAL;\n            this.heightLimit_ = containerSize.height - thumbHeight;\n        }\n        this.sliderInitialized_ = true;\n    };\n    /**\n     * @param {MouseEvent} event The browser event to handle.\n     * @private\n     */\n    ZoomSlider.prototype.handleContainerClick_ = function (event) {\n        var view = this.getMap().getView();\n        var relativePosition = this.getRelativePosition_(event.offsetX - this.thumbSize_[0] / 2, event.offsetY - this.thumbSize_[1] / 2);\n        var resolution = this.getResolutionForPosition_(relativePosition);\n        var zoom = view.getConstrainedZoom(view.getZoomForResolution(resolution));\n        view.animate({\n            zoom: zoom,\n            duration: this.duration_,\n            easing: easeOut\n        });\n    };\n    /**\n     * Handle dragger start events.\n     * @param {import(\"../pointer/PointerEvent.js\").default} event The drag event.\n     * @private\n     */\n    ZoomSlider.prototype.handleDraggerStart_ = function (event) {\n        if (!this.dragging_ && event.originalEvent.target === this.element.firstElementChild) {\n            var element = /** @type {HTMLElement} */ (this.element.firstElementChild);\n            this.getMap().getView().beginInteraction();\n            this.startX_ = event.clientX - parseFloat(element.style.left);\n            this.startY_ = event.clientY - parseFloat(element.style.top);\n            this.dragging_ = true;\n            if (this.dragListenerKeys_.length === 0) {\n                var drag = this.handleDraggerDrag_;\n                var end = this.handleDraggerEnd_;\n                this.dragListenerKeys_.push(listen(document, EventType.MOUSEMOVE, drag, this), listen(document, PointerEventType.POINTERMOVE, drag, this), listen(document, EventType.MOUSEUP, end, this), listen(document, PointerEventType.POINTERUP, end, this));\n            }\n        }\n    };\n    /**\n     * Handle dragger drag events.\n     *\n     * @param {import(\"../pointer/PointerEvent.js\").default} event The drag event.\n     * @private\n     */\n    ZoomSlider.prototype.handleDraggerDrag_ = function (event) {\n        if (this.dragging_) {\n            var deltaX = event.clientX - this.startX_;\n            var deltaY = event.clientY - this.startY_;\n            var relativePosition = this.getRelativePosition_(deltaX, deltaY);\n            this.currentResolution_ = this.getResolutionForPosition_(relativePosition);\n            this.getMap().getView().setResolution(this.currentResolution_);\n        }\n    };\n    /**\n     * Handle dragger end events.\n     * @param {import(\"../pointer/PointerEvent.js\").default} event The drag event.\n     * @private\n     */\n    ZoomSlider.prototype.handleDraggerEnd_ = function (event) {\n        if (this.dragging_) {\n            var view = this.getMap().getView();\n            view.endInteraction();\n            this.dragging_ = false;\n            this.startX_ = undefined;\n            this.startY_ = undefined;\n            this.dragListenerKeys_.forEach(unlistenByKey);\n            this.dragListenerKeys_.length = 0;\n        }\n    };\n    /**\n     * Positions the thumb inside its container according to the given resolution.\n     *\n     * @param {number} res The res.\n     * @private\n     */\n    ZoomSlider.prototype.setThumbPosition_ = function (res) {\n        var position = this.getPositionForResolution_(res);\n        var thumb = /** @type {HTMLElement} */ (this.element.firstElementChild);\n        if (this.direction_ == Direction.HORIZONTAL) {\n            thumb.style.left = this.widthLimit_ * position + 'px';\n        }\n        else {\n            thumb.style.top = this.heightLimit_ * position + 'px';\n        }\n    };\n    /**\n     * Calculates the relative position of the thumb given x and y offsets.  The\n     * relative position scales from 0 to 1.  The x and y offsets are assumed to be\n     * in pixel units within the dragger limits.\n     *\n     * @param {number} x Pixel position relative to the left of the slider.\n     * @param {number} y Pixel position relative to the top of the slider.\n     * @return {number} The relative position of the thumb.\n     * @private\n     */\n    ZoomSlider.prototype.getRelativePosition_ = function (x, y) {\n        var amount;\n        if (this.direction_ === Direction.HORIZONTAL) {\n            amount = x / this.widthLimit_;\n        }\n        else {\n            amount = y / this.heightLimit_;\n        }\n        return clamp(amount, 0, 1);\n    };\n    /**\n     * Calculates the corresponding resolution of the thumb given its relative\n     * position (where 0 is the minimum and 1 is the maximum).\n     *\n     * @param {number} position The relative position of the thumb.\n     * @return {number} The corresponding resolution.\n     * @private\n     */\n    ZoomSlider.prototype.getResolutionForPosition_ = function (position) {\n        var fn = this.getMap().getView().getResolutionForValueFunction();\n        return fn(1 - position);\n    };\n    /**\n     * Determines the relative position of the slider for the given resolution.  A\n     * relative position of 0 corresponds to the minimum view resolution.  A\n     * relative position of 1 corresponds to the maximum view resolution.\n     *\n     * @param {number} res The resolution.\n     * @return {number} The relative position value (between 0 and 1).\n     * @private\n     */\n    ZoomSlider.prototype.getPositionForResolution_ = function (res) {\n        var fn = this.getMap().getView().getValueForResolutionFunction();\n        return clamp(1 - fn(res), 0, 1);\n    };\n    return ZoomSlider;\n}(Control));\n/**\n * Update the zoomslider element.\n * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n * @this {ZoomSlider}\n * @api\n */\nexport function render(mapEvent) {\n    if (!mapEvent.frameState) {\n        return;\n    }\n    if (!this.sliderInitialized_) {\n        this.initSlider_();\n    }\n    var res = mapEvent.frameState.viewState.resolution;\n    this.currentResolution_ = res;\n    this.setThumbPosition_(res);\n}\nexport default ZoomSlider;\n//# sourceMappingURL=ZoomSlider.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/control/ZoomToExtent\n */\nimport { listen } from '../events.js';\nimport EventType from '../events/EventType.js';\nimport Control from './Control.js';\nimport { CLASS_CONTROL, CLASS_UNSELECTABLE } from '../css.js';\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-zoom-extent'] Class name.\n * @property {HTMLElement|string} [target] Specify a target if you want the control\n * to be rendered outside of the map's viewport.\n * @property {string|HTMLElement} [label='E'] Text label to use for the button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Fit to extent'] Text label to use for the button tip.\n * @property {import(\"../extent.js\").Extent} [extent] The extent to zoom to. If undefined the validity\n * extent of the view projection is used.\n */\n/**\n * @classdesc\n * A button control which, when pressed, changes the map view to a specific\n * extent. To style this control use the css selector `.ol-zoom-extent`.\n *\n * @api\n */\nvar ZoomToExtent = /** @class */ (function (_super) {\n    __extends(ZoomToExtent, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function ZoomToExtent(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, {\n            element: document.createElement('div'),\n            target: options.target\n        }) || this;\n        /**\n         * @type {import(\"../extent.js\").Extent}\n         * @protected\n         */\n        _this.extent = options.extent ? options.extent : null;\n        var className = options.className !== undefined ? options.className : 'ol-zoom-extent';\n        var label = options.label !== undefined ? options.label : 'E';\n        var tipLabel = options.tipLabel !== undefined ? options.tipLabel : 'Fit to extent';\n        var button = document.createElement('button');\n        button.setAttribute('type', 'button');\n        button.title = tipLabel;\n        button.appendChild(typeof label === 'string' ? document.createTextNode(label) : label);\n        listen(button, EventType.CLICK, _this.handleClick_, _this);\n        var cssClasses = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n        var element = _this.element;\n        element.className = cssClasses;\n        element.appendChild(button);\n        return _this;\n    }\n    /**\n     * @param {MouseEvent} event The event to handle\n     * @private\n     */\n    ZoomToExtent.prototype.handleClick_ = function (event) {\n        event.preventDefault();\n        this.handleZoomToExtent();\n    };\n    /**\n     * @protected\n     */\n    ZoomToExtent.prototype.handleZoomToExtent = function () {\n        var map = this.getMap();\n        var view = map.getView();\n        var extent = !this.extent ? view.getProjection().getExtent() : this.extent;\n        view.fit(extent);\n    };\n    return ZoomToExtent;\n}(Control));\nexport default ZoomToExtent;\n//# sourceMappingURL=ZoomToExtent.js.map","import $ol$Collection from './ol/Collection';\nimport $ol$Feature from './ol/Feature';\nimport $ol$Geolocation from './ol/Geolocation';\nimport $ol$Kinetic from './ol/Kinetic';\nimport $ol$Map from './ol/Map';\nimport $ol$Object from './ol/Object';\nimport $ol$Observable from './ol/Observable';\nimport {unByKey as _ol_Observable$unByKey} from './ol/Observable';\nimport $ol$Overlay from './ol/Overlay';\nimport $ol$PluggableMap from './ol/PluggableMap';\nimport $ol$View from './ol/View';\nimport {stableSort as _ol_array$stableSort} from './ol/array';\nimport {asString as _ol_color$asString} from './ol/color';\nimport {asArray as _ol_color$asArray} from './ol/color';\nimport {asColorLike as _ol_colorlike$asColorLike} from './ol/colorlike';\nimport {add as _ol_coordinate$add} from './ol/coordinate';\nimport {createStringXY as _ol_coordinate$createStringXY} from './ol/coordinate';\nimport {format as _ol_coordinate$format} from './ol/coordinate';\nimport {rotate as _ol_coordinate$rotate} from './ol/coordinate';\nimport {toStringHDMS as _ol_coordinate$toStringHDMS} from './ol/coordinate';\nimport {toStringXY as _ol_coordinate$toStringXY} from './ol/coordinate';\nimport {easeIn as _ol_easing$easeIn} from './ol/easing';\nimport {easeOut as _ol_easing$easeOut} from './ol/easing';\nimport {inAndOut as _ol_easing$inAndOut} from './ol/easing';\nimport {linear as _ol_easing$linear} from './ol/easing';\nimport {upAndDown as _ol_easing$upAndDown} from './ol/easing';\nimport {boundingExtent as _ol_extent$boundingExtent} from './ol/extent';\nimport {buffer as _ol_extent$buffer} from './ol/extent';\nimport {containsCoordinate as _ol_extent$containsCoordinate} from './ol/extent';\nimport {containsExtent as _ol_extent$containsExtent} from './ol/extent';\nimport {containsXY as _ol_extent$containsXY} from './ol/extent';\nimport {createEmpty as _ol_extent$createEmpty} from './ol/extent';\nimport {equals as _ol_extent$equals} from './ol/extent';\nimport {extend as _ol_extent$extend} from './ol/extent';\nimport {getArea as _ol_extent$getArea} from './ol/extent';\nimport {getBottomLeft as _ol_extent$getBottomLeft} from './ol/extent';\nimport {getBottomRight as _ol_extent$getBottomRight} from './ol/extent';\nimport {getCenter as _ol_extent$getCenter} from './ol/extent';\nimport {getHeight as _ol_extent$getHeight} from './ol/extent';\nimport {getIntersection as _ol_extent$getIntersection} from './ol/extent';\nimport {getSize as _ol_extent$getSize} from './ol/extent';\nimport {getTopLeft as _ol_extent$getTopLeft} from './ol/extent';\nimport {getTopRight as _ol_extent$getTopRight} from './ol/extent';\nimport {getWidth as _ol_extent$getWidth} from './ol/extent';\nimport {intersects as _ol_extent$intersects} from './ol/extent';\nimport {isEmpty as _ol_extent$isEmpty} from './ol/extent';\nimport {applyTransform as _ol_extent$applyTransform} from './ol/extent';\nimport {xhr as _ol_featureloader$xhr} from './ol/featureloader';\nimport {DEVICE_PIXEL_RATIO as _ol_has$DEVICE_PIXEL_RATIO} from './ol/has';\nimport {GEOLOCATION as _ol_has$GEOLOCATION} from './ol/has';\nimport {TOUCH as _ol_has$TOUCH} from './ol/has';\nimport {defaults as _ol_interaction$defaults} from './ol/interaction';\nimport {all as _ol_loadingstrategy$all} from './ol/loadingstrategy';\nimport {bbox as _ol_loadingstrategy$bbox} from './ol/loadingstrategy';\nimport {tile as _ol_loadingstrategy$tile} from './ol/loadingstrategy';\nimport {addProjection as _ol_proj$addProjection} from './ol/proj';\nimport {get as _ol_proj$get} from './ol/proj';\nimport {getPointResolution as _ol_proj$getPointResolution} from './ol/proj';\nimport {addEquivalentProjections as _ol_proj$addEquivalentProjections} from './ol/proj';\nimport {addCoordinateTransforms as _ol_proj$addCoordinateTransforms} from './ol/proj';\nimport {fromLonLat as _ol_proj$fromLonLat} from './ol/proj';\nimport {toLonLat as _ol_proj$toLonLat} from './ol/proj';\nimport {equivalent as _ol_proj$equivalent} from './ol/proj';\nimport {getTransform as _ol_proj$getTransform} from './ol/proj';\nimport {transform as _ol_proj$transform} from './ol/proj';\nimport {transformExtent as _ol_proj$transformExtent} from './ol/proj';\nimport {toContext as _ol_render$toContext} from './ol/render';\nimport {getVectorContext as _ol_render$getVectorContext} from './ol/render';\nimport {getRenderPixel as _ol_render$getRenderPixel} from './ol/render';\nimport {toSize as _ol_size$toSize} from './ol/size';\nimport {getDistance as _ol_sphere$getDistance} from './ol/sphere';\nimport {getLength as _ol_sphere$getLength} from './ol/sphere';\nimport {getArea as _ol_sphere$getArea} from './ol/sphere';\nimport {createXYZ as _ol_tilegrid$createXYZ} from './ol/tilegrid';\nimport {getUid as _ol$getUid} from './ol';\nimport {ARRAY_BUFFER as _ol_webgl$ARRAY_BUFFER} from './ol/webgl';\nimport {ELEMENT_ARRAY_BUFFER as _ol_webgl$ELEMENT_ARRAY_BUFFER} from './ol/webgl';\nimport {STREAM_DRAW as _ol_webgl$STREAM_DRAW} from './ol/webgl';\nimport {STATIC_DRAW as _ol_webgl$STATIC_DRAW} from './ol/webgl';\nimport {DYNAMIC_DRAW as _ol_webgl$DYNAMIC_DRAW} from './ol/webgl';\nimport {getAllTextContent as _ol_xml$getAllTextContent} from './ol/xml';\nimport {parse as _ol_xml$parse} from './ol/xml';\nimport $ol$webgl$Buffer from './ol/webgl/Buffer';\nimport $ol$webgl$Helper from './ol/webgl/Helper';\nimport $ol$webgl$PostProcessingPass from './ol/webgl/PostProcessingPass';\nimport $ol$tilegrid$TileGrid from './ol/tilegrid/TileGrid';\nimport $ol$tilegrid$WMTS from './ol/tilegrid/WMTS';\nimport {createFromCapabilitiesMatrixSet as _ol_tilegrid_WMTS$createFromCapabilitiesMatrixSet} from './ol/tilegrid/WMTS';\nimport $ol$style$Circle from './ol/style/Circle';\nimport $ol$style$Fill from './ol/style/Fill';\nimport $ol$style$Icon from './ol/style/Icon';\nimport {shared as _ol_style_IconImageCache$shared} from './ol/style/IconImageCache';\nimport $ol$style$Image from './ol/style/Image';\nimport $ol$style$RegularShape from './ol/style/RegularShape';\nimport $ol$style$Stroke from './ol/style/Stroke';\nimport $ol$style$Style from './ol/style/Style';\nimport $ol$style$Text from './ol/style/Text';\nimport $ol$source$BingMaps from './ol/source/BingMaps';\nimport $ol$source$CartoDB from './ol/source/CartoDB';\nimport $ol$source$Cluster from './ol/source/Cluster';\nimport $ol$source$IIIF from './ol/source/IIIF';\nimport $ol$source$Image from './ol/source/Image';\nimport $ol$source$ImageArcGISRest from './ol/source/ImageArcGISRest';\nimport $ol$source$ImageCanvas from './ol/source/ImageCanvas';\nimport $ol$source$ImageMapGuide from './ol/source/ImageMapGuide';\nimport $ol$source$ImageStatic from './ol/source/ImageStatic';\nimport $ol$source$ImageWMS from './ol/source/ImageWMS';\nimport {ATTRIBUTION as _ol_source_OSM$ATTRIBUTION} from './ol/source/OSM';\nimport $ol$source$OSM from './ol/source/OSM';\nimport $ol$source$Raster from './ol/source/Raster';\nimport $ol$source$Source from './ol/source/Source';\nimport $ol$source$Stamen from './ol/source/Stamen';\nimport $ol$source$Tile from './ol/source/Tile';\nimport $ol$source$TileArcGISRest from './ol/source/TileArcGISRest';\nimport $ol$source$TileDebug from './ol/source/TileDebug';\nimport $ol$source$TileImage from './ol/source/TileImage';\nimport $ol$source$TileJSON from './ol/source/TileJSON';\nimport $ol$source$TileWMS from './ol/source/TileWMS';\nimport $ol$source$UTFGrid from './ol/source/UTFGrid';\nimport $ol$source$Vector from './ol/source/Vector';\nimport $ol$source$VectorTile from './ol/source/VectorTile';\nimport $ol$source$WMTS from './ol/source/WMTS';\nimport {optionsFromCapabilities as _ol_source_WMTS$optionsFromCapabilities} from './ol/source/WMTS';\nimport $ol$source$XYZ from './ol/source/XYZ';\nimport $ol$source$Zoomify from './ol/source/Zoomify';\nimport $ol$renderer$Composite from './ol/renderer/Composite';\nimport $ol$renderer$webgl$PointsLayer from './ol/renderer/webgl/PointsLayer';\nimport $ol$renderer$canvas$ImageLayer from './ol/renderer/canvas/ImageLayer';\nimport $ol$renderer$canvas$TileLayer from './ol/renderer/canvas/TileLayer';\nimport $ol$renderer$canvas$VectorLayer from './ol/renderer/canvas/VectorLayer';\nimport $ol$renderer$canvas$VectorTileLayer from './ol/renderer/canvas/VectorTileLayer';\nimport $ol$render$VectorContext from './ol/render/VectorContext';\nimport {labelCache as _ol_render_canvas$labelCache} from './ol/render/canvas';\nimport $ol$proj$Projection from './ol/proj/Projection';\nimport {METERS_PER_UNIT as _ol_proj_Units$METERS_PER_UNIT} from './ol/proj/Units';\nimport {register as _ol_proj_proj4$register} from './ol/proj/proj4';\nimport $ol$layer$Base from './ol/layer/Base';\nimport $ol$layer$BaseImage from './ol/layer/BaseImage';\nimport $ol$layer$BaseTile from './ol/layer/BaseTile';\nimport $ol$layer$BaseVector from './ol/layer/BaseVector';\nimport $ol$layer$Graticule from './ol/layer/Graticule';\nimport $ol$layer$Group from './ol/layer/Group';\nimport $ol$layer$Heatmap from './ol/layer/Heatmap';\nimport $ol$layer$Image from './ol/layer/Image';\nimport $ol$layer$Tile from './ol/layer/Tile';\nimport $ol$layer$Vector from './ol/layer/Vector';\nimport $ol$layer$VectorImage from './ol/layer/VectorImage';\nimport $ol$layer$VectorTile from './ol/layer/VectorTile';\nimport $ol$interaction$DoubleClickZoom from './ol/interaction/DoubleClickZoom';\nimport $ol$interaction$DragAndDrop from './ol/interaction/DragAndDrop';\nimport $ol$interaction$DragBox from './ol/interaction/DragBox';\nimport $ol$interaction$DragPan from './ol/interaction/DragPan';\nimport $ol$interaction$DragRotate from './ol/interaction/DragRotate';\nimport $ol$interaction$DragRotateAndZoom from './ol/interaction/DragRotateAndZoom';\nimport $ol$interaction$DragZoom from './ol/interaction/DragZoom';\nimport $ol$interaction$Draw from './ol/interaction/Draw';\nimport {createRegularPolygon as _ol_interaction_Draw$createRegularPolygon} from './ol/interaction/Draw';\nimport {createBox as _ol_interaction_Draw$createBox} from './ol/interaction/Draw';\nimport $ol$interaction$Extent from './ol/interaction/Extent';\nimport $ol$interaction$Interaction from './ol/interaction/Interaction';\nimport $ol$interaction$KeyboardPan from './ol/interaction/KeyboardPan';\nimport $ol$interaction$KeyboardZoom from './ol/interaction/KeyboardZoom';\nimport $ol$interaction$Modify from './ol/interaction/Modify';\nimport $ol$interaction$MouseWheelZoom from './ol/interaction/MouseWheelZoom';\nimport $ol$interaction$PinchRotate from './ol/interaction/PinchRotate';\nimport $ol$interaction$PinchZoom from './ol/interaction/PinchZoom';\nimport $ol$interaction$Pointer from './ol/interaction/Pointer';\nimport $ol$interaction$Select from './ol/interaction/Select';\nimport $ol$interaction$Snap from './ol/interaction/Snap';\nimport $ol$interaction$Translate from './ol/interaction/Translate';\nimport $ol$geom$Circle from './ol/geom/Circle';\nimport $ol$geom$Geometry from './ol/geom/Geometry';\nimport $ol$geom$GeometryCollection from './ol/geom/GeometryCollection';\nimport $ol$geom$LineString from './ol/geom/LineString';\nimport $ol$geom$LinearRing from './ol/geom/LinearRing';\nimport $ol$geom$MultiLineString from './ol/geom/MultiLineString';\nimport $ol$geom$MultiPoint from './ol/geom/MultiPoint';\nimport $ol$geom$MultiPolygon from './ol/geom/MultiPolygon';\nimport $ol$geom$Point from './ol/geom/Point';\nimport $ol$geom$Polygon from './ol/geom/Polygon';\nimport {circular as _ol_geom_Polygon$circular} from './ol/geom/Polygon';\nimport {fromExtent as _ol_geom_Polygon$fromExtent} from './ol/geom/Polygon';\nimport {fromCircle as _ol_geom_Polygon$fromCircle} from './ol/geom/Polygon';\nimport $ol$geom$SimpleGeometry from './ol/geom/SimpleGeometry';\nimport $ol$format$EsriJSON from './ol/format/EsriJSON';\nimport $ol$format$Feature from './ol/format/Feature';\nimport $ol$format$GML from './ol/format/GML';\nimport $ol$format$GML2 from './ol/format/GML2';\nimport $ol$format$GML3 from './ol/format/GML3';\nimport $ol$format$GML32 from './ol/format/GML32';\nimport $ol$format$GPX from './ol/format/GPX';\nimport $ol$format$GeoJSON from './ol/format/GeoJSON';\nimport $ol$format$IGC from './ol/format/IGC';\nimport $ol$format$IIIFInfo from './ol/format/IIIFInfo';\nimport $ol$format$KML from './ol/format/KML';\nimport $ol$format$MVT from './ol/format/MVT';\nimport $ol$format$OSMXML from './ol/format/OSMXML';\nimport $ol$format$Polyline from './ol/format/Polyline';\nimport {encodeDeltas as _ol_format_Polyline$encodeDeltas} from './ol/format/Polyline';\nimport {decodeDeltas as _ol_format_Polyline$decodeDeltas} from './ol/format/Polyline';\nimport {encodeFloats as _ol_format_Polyline$encodeFloats} from './ol/format/Polyline';\nimport {decodeFloats as _ol_format_Polyline$decodeFloats} from './ol/format/Polyline';\nimport $ol$format$TopoJSON from './ol/format/TopoJSON';\nimport $ol$format$WFS from './ol/format/WFS';\nimport {writeFilter as _ol_format_WFS$writeFilter} from './ol/format/WFS';\nimport $ol$format$WKT from './ol/format/WKT';\nimport $ol$format$WMSCapabilities from './ol/format/WMSCapabilities';\nimport $ol$format$WMSGetFeatureInfo from './ol/format/WMSGetFeatureInfo';\nimport $ol$format$WMTSCapabilities from './ol/format/WMTSCapabilities';\nimport {and as _ol_format_filter$and} from './ol/format/filter';\nimport {or as _ol_format_filter$or} from './ol/format/filter';\nimport {not as _ol_format_filter$not} from './ol/format/filter';\nimport {bbox as _ol_format_filter$bbox} from './ol/format/filter';\nimport {contains as _ol_format_filter$contains} from './ol/format/filter';\nimport {intersects as _ol_format_filter$intersects} from './ol/format/filter';\nimport {within as _ol_format_filter$within} from './ol/format/filter';\nimport {equalTo as _ol_format_filter$equalTo} from './ol/format/filter';\nimport {notEqualTo as _ol_format_filter$notEqualTo} from './ol/format/filter';\nimport {lessThan as _ol_format_filter$lessThan} from './ol/format/filter';\nimport {lessThanOrEqualTo as _ol_format_filter$lessThanOrEqualTo} from './ol/format/filter';\nimport {greaterThan as _ol_format_filter$greaterThan} from './ol/format/filter';\nimport {greaterThanOrEqualTo as _ol_format_filter$greaterThanOrEqualTo} from './ol/format/filter';\nimport {isNull as _ol_format_filter$isNull} from './ol/format/filter';\nimport {between as _ol_format_filter$between} from './ol/format/filter';\nimport {like as _ol_format_filter$like} from './ol/format/filter';\nimport {during as _ol_format_filter$during} from './ol/format/filter';\nimport $ol$format$filter$Bbox from './ol/format/filter/Bbox';\nimport $ol$format$filter$Contains from './ol/format/filter/Contains';\nimport $ol$format$filter$During from './ol/format/filter/During';\nimport $ol$format$filter$EqualTo from './ol/format/filter/EqualTo';\nimport $ol$format$filter$GreaterThan from './ol/format/filter/GreaterThan';\nimport $ol$format$filter$GreaterThanOrEqualTo from './ol/format/filter/GreaterThanOrEqualTo';\nimport $ol$format$filter$Intersects from './ol/format/filter/Intersects';\nimport $ol$format$filter$IsBetween from './ol/format/filter/IsBetween';\nimport $ol$format$filter$IsLike from './ol/format/filter/IsLike';\nimport $ol$format$filter$IsNull from './ol/format/filter/IsNull';\nimport $ol$format$filter$LessThan from './ol/format/filter/LessThan';\nimport $ol$format$filter$LessThanOrEqualTo from './ol/format/filter/LessThanOrEqualTo';\nimport $ol$format$filter$Not from './ol/format/filter/Not';\nimport $ol$format$filter$NotEqualTo from './ol/format/filter/NotEqualTo';\nimport $ol$format$filter$Or from './ol/format/filter/Or';\nimport $ol$format$filter$Within from './ol/format/filter/Within';\nimport {altKeyOnly as _ol_events_condition$altKeyOnly} from './ol/events/condition';\nimport {altShiftKeysOnly as _ol_events_condition$altShiftKeysOnly} from './ol/events/condition';\nimport {focus as _ol_events_condition$focus} from './ol/events/condition';\nimport {always as _ol_events_condition$always} from './ol/events/condition';\nimport {click as _ol_events_condition$click} from './ol/events/condition';\nimport {never as _ol_events_condition$never} from './ol/events/condition';\nimport {pointerMove as _ol_events_condition$pointerMove} from './ol/events/condition';\nimport {singleClick as _ol_events_condition$singleClick} from './ol/events/condition';\nimport {doubleClick as _ol_events_condition$doubleClick} from './ol/events/condition';\nimport {noModifierKeys as _ol_events_condition$noModifierKeys} from './ol/events/condition';\nimport {platformModifierKeyOnly as _ol_events_condition$platformModifierKeyOnly} from './ol/events/condition';\nimport {shiftKeyOnly as _ol_events_condition$shiftKeyOnly} from './ol/events/condition';\nimport {targetNotEditable as _ol_events_condition$targetNotEditable} from './ol/events/condition';\nimport {mouseOnly as _ol_events_condition$mouseOnly} from './ol/events/condition';\nimport {touchOnly as _ol_events_condition$touchOnly} from './ol/events/condition';\nimport {penOnly as _ol_events_condition$penOnly} from './ol/events/condition';\nimport {primaryAction as _ol_events_condition$primaryAction} from './ol/events/condition';\nimport $ol$control$Attribution from './ol/control/Attribution';\nimport {render as _ol_control_Attribution$render} from './ol/control/Attribution';\nimport $ol$control$Control from './ol/control/Control';\nimport $ol$control$FullScreen from './ol/control/FullScreen';\nimport $ol$control$MousePosition from './ol/control/MousePosition';\nimport {render as _ol_control_MousePosition$render} from './ol/control/MousePosition';\nimport $ol$control$OverviewMap from './ol/control/OverviewMap';\nimport {render as _ol_control_OverviewMap$render} from './ol/control/OverviewMap';\nimport $ol$control$Rotate from './ol/control/Rotate';\nimport {render as _ol_control_Rotate$render} from './ol/control/Rotate';\nimport $ol$control$ScaleLine from './ol/control/ScaleLine';\nimport {render as _ol_control_ScaleLine$render} from './ol/control/ScaleLine';\nimport $ol$control$Zoom from './ol/control/Zoom';\nimport $ol$control$ZoomSlider from './ol/control/ZoomSlider';\nimport {render as _ol_control_ZoomSlider$render} from './ol/control/ZoomSlider';\nimport $ol$control$ZoomToExtent from './ol/control/ZoomToExtent';\nimport {defaults as _ol_control$defaults} from './ol/control';\n\nvar ol = {};\n\nol.array = {};\nol.color = {};\nol.colorlike = {};\nol.control = {};\nol.coordinate = {};\nol.easing = {};\nol.events = {};\nol.events.condition = {};\nol.extent = {};\nol.featureloader = {};\nol.format = {};\nol.format.filter = {};\nol.geom = {};\nol.has = {};\nol.interaction = {};\nol.layer = {};\nol.loadingstrategy = {};\nol.proj = {};\nol.proj.Units = {};\nol.proj.proj4 = {};\nol.render = {};\nol.render.canvas = {};\nol.renderer = {};\nol.renderer.canvas = {};\nol.renderer.webgl = {};\nol.size = {};\nol.source = {};\nol.sphere = {};\nol.style = {};\nol.style.IconImageCache = {};\nol.tilegrid = {};\nol.webgl = {};\nol.xml = {};\nol.Collection = $ol$Collection;\nol.Feature = $ol$Feature;\nol.Geolocation = $ol$Geolocation;\nol.Kinetic = $ol$Kinetic;\nol.Map = $ol$Map;\nol.Object = $ol$Object;\nol.Observable = $ol$Observable;\nol.Observable.unByKey = _ol_Observable$unByKey;\nol.Overlay = $ol$Overlay;\nol.PluggableMap = $ol$PluggableMap;\nol.View = $ol$View;\nol.array.stableSort = _ol_array$stableSort;\nol.color.asArray = _ol_color$asArray;\nol.color.asString = _ol_color$asString;\nol.colorlike.asColorLike = _ol_colorlike$asColorLike;\nol.control.Attribution = $ol$control$Attribution;\nol.control.Attribution.render = _ol_control_Attribution$render;\nol.control.Control = $ol$control$Control;\nol.control.FullScreen = $ol$control$FullScreen;\nol.control.MousePosition = $ol$control$MousePosition;\nol.control.MousePosition.render = _ol_control_MousePosition$render;\nol.control.OverviewMap = $ol$control$OverviewMap;\nol.control.OverviewMap.render = _ol_control_OverviewMap$render;\nol.control.Rotate = $ol$control$Rotate;\nol.control.Rotate.render = _ol_control_Rotate$render;\nol.control.ScaleLine = $ol$control$ScaleLine;\nol.control.ScaleLine.render = _ol_control_ScaleLine$render;\nol.control.Zoom = $ol$control$Zoom;\nol.control.ZoomSlider = $ol$control$ZoomSlider;\nol.control.ZoomSlider.render = _ol_control_ZoomSlider$render;\nol.control.ZoomToExtent = $ol$control$ZoomToExtent;\nol.control.defaults = _ol_control$defaults;\nol.coordinate.add = _ol_coordinate$add;\nol.coordinate.createStringXY = _ol_coordinate$createStringXY;\nol.coordinate.format = _ol_coordinate$format;\nol.coordinate.rotate = _ol_coordinate$rotate;\nol.coordinate.toStringHDMS = _ol_coordinate$toStringHDMS;\nol.coordinate.toStringXY = _ol_coordinate$toStringXY;\nol.easing.easeIn = _ol_easing$easeIn;\nol.easing.easeOut = _ol_easing$easeOut;\nol.easing.inAndOut = _ol_easing$inAndOut;\nol.easing.linear = _ol_easing$linear;\nol.easing.upAndDown = _ol_easing$upAndDown;\nol.events.condition.altKeyOnly = _ol_events_condition$altKeyOnly;\nol.events.condition.altShiftKeysOnly = _ol_events_condition$altShiftKeysOnly;\nol.events.condition.always = _ol_events_condition$always;\nol.events.condition.click = _ol_events_condition$click;\nol.events.condition.doubleClick = _ol_events_condition$doubleClick;\nol.events.condition.focus = _ol_events_condition$focus;\nol.events.condition.mouseOnly = _ol_events_condition$mouseOnly;\nol.events.condition.never = _ol_events_condition$never;\nol.events.condition.noModifierKeys = _ol_events_condition$noModifierKeys;\nol.events.condition.penOnly = _ol_events_condition$penOnly;\nol.events.condition.platformModifierKeyOnly = _ol_events_condition$platformModifierKeyOnly;\nol.events.condition.pointerMove = _ol_events_condition$pointerMove;\nol.events.condition.primaryAction = _ol_events_condition$primaryAction;\nol.events.condition.shiftKeyOnly = _ol_events_condition$shiftKeyOnly;\nol.events.condition.singleClick = _ol_events_condition$singleClick;\nol.events.condition.targetNotEditable = _ol_events_condition$targetNotEditable;\nol.events.condition.touchOnly = _ol_events_condition$touchOnly;\nol.extent.applyTransform = _ol_extent$applyTransform;\nol.extent.boundingExtent = _ol_extent$boundingExtent;\nol.extent.buffer = _ol_extent$buffer;\nol.extent.containsCoordinate = _ol_extent$containsCoordinate;\nol.extent.containsExtent = _ol_extent$containsExtent;\nol.extent.containsXY = _ol_extent$containsXY;\nol.extent.createEmpty = _ol_extent$createEmpty;\nol.extent.equals = _ol_extent$equals;\nol.extent.extend = _ol_extent$extend;\nol.extent.getArea = _ol_extent$getArea;\nol.extent.getBottomLeft = _ol_extent$getBottomLeft;\nol.extent.getBottomRight = _ol_extent$getBottomRight;\nol.extent.getCenter = _ol_extent$getCenter;\nol.extent.getHeight = _ol_extent$getHeight;\nol.extent.getIntersection = _ol_extent$getIntersection;\nol.extent.getSize = _ol_extent$getSize;\nol.extent.getTopLeft = _ol_extent$getTopLeft;\nol.extent.getTopRight = _ol_extent$getTopRight;\nol.extent.getWidth = _ol_extent$getWidth;\nol.extent.intersects = _ol_extent$intersects;\nol.extent.isEmpty = _ol_extent$isEmpty;\nol.featureloader.xhr = _ol_featureloader$xhr;\nol.format.EsriJSON = $ol$format$EsriJSON;\nol.format.Feature = $ol$format$Feature;\nol.format.GML = $ol$format$GML;\nol.format.GML2 = $ol$format$GML2;\nol.format.GML3 = $ol$format$GML3;\nol.format.GML32 = $ol$format$GML32;\nol.format.GPX = $ol$format$GPX;\nol.format.GeoJSON = $ol$format$GeoJSON;\nol.format.IGC = $ol$format$IGC;\nol.format.IIIFInfo = $ol$format$IIIFInfo;\nol.format.KML = $ol$format$KML;\nol.format.MVT = $ol$format$MVT;\nol.format.OSMXML = $ol$format$OSMXML;\nol.format.Polyline = $ol$format$Polyline;\nol.format.Polyline.decodeDeltas = _ol_format_Polyline$decodeDeltas;\nol.format.Polyline.decodeFloats = _ol_format_Polyline$decodeFloats;\nol.format.Polyline.encodeDeltas = _ol_format_Polyline$encodeDeltas;\nol.format.Polyline.encodeFloats = _ol_format_Polyline$encodeFloats;\nol.format.TopoJSON = $ol$format$TopoJSON;\nol.format.WFS = $ol$format$WFS;\nol.format.WFS.writeFilter = _ol_format_WFS$writeFilter;\nol.format.WKT = $ol$format$WKT;\nol.format.WMSCapabilities = $ol$format$WMSCapabilities;\nol.format.WMSGetFeatureInfo = $ol$format$WMSGetFeatureInfo;\nol.format.WMTSCapabilities = $ol$format$WMTSCapabilities;\nol.format.filter.Bbox = $ol$format$filter$Bbox;\nol.format.filter.Contains = $ol$format$filter$Contains;\nol.format.filter.During = $ol$format$filter$During;\nol.format.filter.EqualTo = $ol$format$filter$EqualTo;\nol.format.filter.GreaterThan = $ol$format$filter$GreaterThan;\nol.format.filter.GreaterThanOrEqualTo = $ol$format$filter$GreaterThanOrEqualTo;\nol.format.filter.Intersects = $ol$format$filter$Intersects;\nol.format.filter.IsBetween = $ol$format$filter$IsBetween;\nol.format.filter.IsLike = $ol$format$filter$IsLike;\nol.format.filter.IsNull = $ol$format$filter$IsNull;\nol.format.filter.LessThan = $ol$format$filter$LessThan;\nol.format.filter.LessThanOrEqualTo = $ol$format$filter$LessThanOrEqualTo;\nol.format.filter.Not = $ol$format$filter$Not;\nol.format.filter.NotEqualTo = $ol$format$filter$NotEqualTo;\nol.format.filter.Or = $ol$format$filter$Or;\nol.format.filter.Within = $ol$format$filter$Within;\nol.format.filter.and = _ol_format_filter$and;\nol.format.filter.bbox = _ol_format_filter$bbox;\nol.format.filter.between = _ol_format_filter$between;\nol.format.filter.contains = _ol_format_filter$contains;\nol.format.filter.during = _ol_format_filter$during;\nol.format.filter.equalTo = _ol_format_filter$equalTo;\nol.format.filter.greaterThan = _ol_format_filter$greaterThan;\nol.format.filter.greaterThanOrEqualTo = _ol_format_filter$greaterThanOrEqualTo;\nol.format.filter.intersects = _ol_format_filter$intersects;\nol.format.filter.isNull = _ol_format_filter$isNull;\nol.format.filter.lessThan = _ol_format_filter$lessThan;\nol.format.filter.lessThanOrEqualTo = _ol_format_filter$lessThanOrEqualTo;\nol.format.filter.like = _ol_format_filter$like;\nol.format.filter.not = _ol_format_filter$not;\nol.format.filter.notEqualTo = _ol_format_filter$notEqualTo;\nol.format.filter.or = _ol_format_filter$or;\nol.format.filter.within = _ol_format_filter$within;\nol.geom.Circle = $ol$geom$Circle;\nol.geom.Geometry = $ol$geom$Geometry;\nol.geom.GeometryCollection = $ol$geom$GeometryCollection;\nol.geom.LineString = $ol$geom$LineString;\nol.geom.LinearRing = $ol$geom$LinearRing;\nol.geom.MultiLineString = $ol$geom$MultiLineString;\nol.geom.MultiPoint = $ol$geom$MultiPoint;\nol.geom.MultiPolygon = $ol$geom$MultiPolygon;\nol.geom.Point = $ol$geom$Point;\nol.geom.Polygon = $ol$geom$Polygon;\nol.geom.Polygon.circular = _ol_geom_Polygon$circular;\nol.geom.Polygon.fromCircle = _ol_geom_Polygon$fromCircle;\nol.geom.Polygon.fromExtent = _ol_geom_Polygon$fromExtent;\nol.geom.SimpleGeometry = $ol$geom$SimpleGeometry;\nol.getUid = _ol$getUid;\nol.has.DEVICE_PIXEL_RATIO = _ol_has$DEVICE_PIXEL_RATIO;\nol.has.GEOLOCATION = _ol_has$GEOLOCATION;\nol.has.TOUCH = _ol_has$TOUCH;\nol.interaction.DoubleClickZoom = $ol$interaction$DoubleClickZoom;\nol.interaction.DragAndDrop = $ol$interaction$DragAndDrop;\nol.interaction.DragBox = $ol$interaction$DragBox;\nol.interaction.DragPan = $ol$interaction$DragPan;\nol.interaction.DragRotate = $ol$interaction$DragRotate;\nol.interaction.DragRotateAndZoom = $ol$interaction$DragRotateAndZoom;\nol.interaction.DragZoom = $ol$interaction$DragZoom;\nol.interaction.Draw = $ol$interaction$Draw;\nol.interaction.Draw.createBox = _ol_interaction_Draw$createBox;\nol.interaction.Draw.createRegularPolygon = _ol_interaction_Draw$createRegularPolygon;\nol.interaction.Extent = $ol$interaction$Extent;\nol.interaction.Interaction = $ol$interaction$Interaction;\nol.interaction.KeyboardPan = $ol$interaction$KeyboardPan;\nol.interaction.KeyboardZoom = $ol$interaction$KeyboardZoom;\nol.interaction.Modify = $ol$interaction$Modify;\nol.interaction.MouseWheelZoom = $ol$interaction$MouseWheelZoom;\nol.interaction.PinchRotate = $ol$interaction$PinchRotate;\nol.interaction.PinchZoom = $ol$interaction$PinchZoom;\nol.interaction.Pointer = $ol$interaction$Pointer;\nol.interaction.Select = $ol$interaction$Select;\nol.interaction.Snap = $ol$interaction$Snap;\nol.interaction.Translate = $ol$interaction$Translate;\nol.interaction.defaults = _ol_interaction$defaults;\nol.layer.Base = $ol$layer$Base;\nol.layer.BaseImage = $ol$layer$BaseImage;\nol.layer.BaseTile = $ol$layer$BaseTile;\nol.layer.BaseVector = $ol$layer$BaseVector;\nol.layer.Graticule = $ol$layer$Graticule;\nol.layer.Group = $ol$layer$Group;\nol.layer.Heatmap = $ol$layer$Heatmap;\nol.layer.Image = $ol$layer$Image;\nol.layer.Tile = $ol$layer$Tile;\nol.layer.Vector = $ol$layer$Vector;\nol.layer.VectorImage = $ol$layer$VectorImage;\nol.layer.VectorTile = $ol$layer$VectorTile;\nol.loadingstrategy.all = _ol_loadingstrategy$all;\nol.loadingstrategy.bbox = _ol_loadingstrategy$bbox;\nol.loadingstrategy.tile = _ol_loadingstrategy$tile;\nol.proj.Projection = $ol$proj$Projection;\nol.proj.Units.METERS_PER_UNIT = _ol_proj_Units$METERS_PER_UNIT;\nol.proj.addCoordinateTransforms = _ol_proj$addCoordinateTransforms;\nol.proj.addEquivalentProjections = _ol_proj$addEquivalentProjections;\nol.proj.addProjection = _ol_proj$addProjection;\nol.proj.equivalent = _ol_proj$equivalent;\nol.proj.fromLonLat = _ol_proj$fromLonLat;\nol.proj.get = _ol_proj$get;\nol.proj.getPointResolution = _ol_proj$getPointResolution;\nol.proj.getTransform = _ol_proj$getTransform;\nol.proj.proj4.register = _ol_proj_proj4$register;\nol.proj.toLonLat = _ol_proj$toLonLat;\nol.proj.transform = _ol_proj$transform;\nol.proj.transformExtent = _ol_proj$transformExtent;\nol.render.VectorContext = $ol$render$VectorContext;\nol.render.canvas.labelCache = _ol_render_canvas$labelCache;\nol.render.getRenderPixel = _ol_render$getRenderPixel;\nol.render.getVectorContext = _ol_render$getVectorContext;\nol.render.toContext = _ol_render$toContext;\nol.renderer.Composite = $ol$renderer$Composite;\nol.renderer.canvas.ImageLayer = $ol$renderer$canvas$ImageLayer;\nol.renderer.canvas.ImageLayer = $ol$renderer$canvas$ImageLayer;\nol.renderer.canvas.TileLayer = $ol$renderer$canvas$TileLayer;\nol.renderer.canvas.VectorLayer = $ol$renderer$canvas$VectorLayer;\nol.renderer.canvas.VectorTileLayer = $ol$renderer$canvas$VectorTileLayer;\nol.renderer.webgl.PointsLayer = $ol$renderer$webgl$PointsLayer;\nol.size.toSize = _ol_size$toSize;\nol.source.BingMaps = $ol$source$BingMaps;\nol.source.CartoDB = $ol$source$CartoDB;\nol.source.Cluster = $ol$source$Cluster;\nol.source.IIIF = $ol$source$IIIF;\nol.source.Image = $ol$source$Image;\nol.source.ImageArcGISRest = $ol$source$ImageArcGISRest;\nol.source.ImageCanvas = $ol$source$ImageCanvas;\nol.source.ImageMapGuide = $ol$source$ImageMapGuide;\nol.source.ImageStatic = $ol$source$ImageStatic;\nol.source.ImageWMS = $ol$source$ImageWMS;\nol.source.OSM = $ol$source$OSM;\nol.source.OSM.ATTRIBUTION = _ol_source_OSM$ATTRIBUTION;\nol.source.Raster = $ol$source$Raster;\nol.source.Source = $ol$source$Source;\nol.source.Stamen = $ol$source$Stamen;\nol.source.Tile = $ol$source$Tile;\nol.source.TileArcGISRest = $ol$source$TileArcGISRest;\nol.source.TileDebug = $ol$source$TileDebug;\nol.source.TileImage = $ol$source$TileImage;\nol.source.TileJSON = $ol$source$TileJSON;\nol.source.TileWMS = $ol$source$TileWMS;\nol.source.UTFGrid = $ol$source$UTFGrid;\nol.source.Vector = $ol$source$Vector;\nol.source.VectorTile = $ol$source$VectorTile;\nol.source.WMTS = $ol$source$WMTS;\nol.source.WMTS.optionsFromCapabilities = _ol_source_WMTS$optionsFromCapabilities;\nol.source.XYZ = $ol$source$XYZ;\nol.source.Zoomify = $ol$source$Zoomify;\nol.sphere.getArea = _ol_sphere$getArea;\nol.sphere.getDistance = _ol_sphere$getDistance;\nol.sphere.getLength = _ol_sphere$getLength;\nol.style.Circle = $ol$style$Circle;\nol.style.Fill = $ol$style$Fill;\nol.style.Icon = $ol$style$Icon;\nol.style.IconImageCache.shared = _ol_style_IconImageCache$shared;\nol.style.Image = $ol$style$Image;\nol.style.RegularShape = $ol$style$RegularShape;\nol.style.Stroke = $ol$style$Stroke;\nol.style.Style = $ol$style$Style;\nol.style.Text = $ol$style$Text;\nol.tilegrid.TileGrid = $ol$tilegrid$TileGrid;\nol.tilegrid.WMTS = $ol$tilegrid$WMTS;\nol.tilegrid.WMTS.createFromCapabilitiesMatrixSet = _ol_tilegrid_WMTS$createFromCapabilitiesMatrixSet;\nol.tilegrid.createXYZ = _ol_tilegrid$createXYZ;\nol.webgl.ARRAY_BUFFER = _ol_webgl$ARRAY_BUFFER;\nol.webgl.Buffer = $ol$webgl$Buffer;\nol.webgl.DYNAMIC_DRAW = _ol_webgl$DYNAMIC_DRAW;\nol.webgl.ELEMENT_ARRAY_BUFFER = _ol_webgl$ELEMENT_ARRAY_BUFFER;\nol.webgl.Helper = $ol$webgl$Helper;\nol.webgl.PostProcessingPass = $ol$webgl$PostProcessingPass;\nol.webgl.STATIC_DRAW = _ol_webgl$STATIC_DRAW;\nol.webgl.STREAM_DRAW = _ol_webgl$STREAM_DRAW;\nol.xml.getAllTextContent = _ol_xml$getAllTextContent;\nol.xml.parse = _ol_xml$parse;\n\nexport default ol;","/**\n * @module ol/proj/proj4\n */\nimport { addCoordinateTransforms, addProjection, addEquivalentProjections, get } from '../proj.js';\nimport { get as getTransform } from './transforms.js';\nimport Projection from './Projection.js';\n/**\n * Make projections defined in proj4 (with `proj4.defs()`) available in\n * OpenLayers.\n *\n * This function should be called whenever changes are made to the proj4\n * registry, e.g. after calling `proj4.defs()`. Existing transforms will not be\n * modified by this function.\n *\n * @param {?} proj4 Proj4.\n * @api\n */\nexport function register(proj4) {\n    var projCodes = Object.keys(proj4.defs);\n    var len = projCodes.length;\n    var i, j;\n    for (i = 0; i < len; ++i) {\n        var code = projCodes[i];\n        if (!get(code)) {\n            var def = proj4.defs(code);\n            addProjection(new Projection({\n                code: code,\n                axisOrientation: def.axis,\n                metersPerUnit: def.to_meter,\n                units: def.units\n            }));\n        }\n    }\n    for (i = 0; i < len; ++i) {\n        var code1 = projCodes[i];\n        var proj1 = get(code1);\n        for (j = 0; j < len; ++j) {\n            var code2 = projCodes[j];\n            var proj2 = get(code2);\n            if (!getTransform(code1, code2)) {\n                if (proj4.defs[code1] === proj4.defs[code2]) {\n                    addEquivalentProjections([proj1, proj2]);\n                }\n                else {\n                    var transform = proj4(code1, code2);\n                    addCoordinateTransforms(proj1, proj2, transform.forward, transform.inverse);\n                }\n            }\n        }\n    }\n}\n//# sourceMappingURL=proj4.js.map"],"sourceRoot":""}